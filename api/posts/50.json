{"total":667,"pageSize":12,"pageCount":56,"data":[{"title":"Openresty定时器ngx.timer通过Redis的pubsub进行通信","uid":"9e3061a0f19c04425ccac351efe5e0da","slug":"old_topic/2016-09-17-345","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.166Z","comments":true,"path":"api/articles/old_topic/2016-09-17-345.json","cover":null,"text":"做一个小实验： 先打开一个redis-cli, 监听所有事件： 12127.0.0.1:6379&gt; config set notify-keyspace-events KEA 127.0.0.1:6379&gt; psubscribe __key*@0__:* 再开一个re...","link":"","photos":[],"count_time":{"symbolsCount":951,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"MoonScript与Redis客户端","uid":"55c8ceefd620d530c7de11d61153ba84","slug":"old_topic/2016-09-17-346","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.233Z","comments":true,"path":"api/articles/old_topic/2016-09-17-346.json","cover":[],"text":"所谓的Redis LUA客户端有两种版本，一种就是本地可运行版本，还有一个版本是OpenResty的版本，下面介绍的这段Moonscript段代码是本地版的。 作者：糖果 candylab.moon 123456789redis = require &quot;redis&quo...","link":"","photos":[],"count_time":{"symbolsCount":675,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"从实现角度看Openresty + LUA = WAF","uid":"4b277b3bf21c49d9a15db633f740d15e","slug":"old_topic/2016-09-17-347","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.211Z","comments":true,"path":"api/articles/old_topic/2016-09-17-347.json","cover":[],"text":"作者：糖果 1.WAF存在形态 WAF就是WEB防火墙，Nginx Lua和Openresty的出现，让基于LUA开发的WAF更有可能。对所有会造成安全威胁的HTTP请求数据，都应该成为安全检查策略应该关注的内容，笼统上来讲OR WAF的式样要求的输入数据，就是可以在WEB服务器...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"用RESTY-HTTP实现Graylog的Widget更新与查询","uid":"07e149df00baf09dc3d8d5e82a638745","slug":"old_topic/2016-09-17-350","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.177Z","comments":true,"path":"api/articles/old_topic/2016-09-17-350.json","cover":null,"text":"作者：糖果 MoonScript for GrayLog是之前写的一个基于Lapis与Simple HTTP的Graylog日志查询SDK，支持Stream查询，最近为了做自动化分析，加入了新的接口中调用功能，加入了对Dashboard widgets和更新与查询，通过这个程序，...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lapis框架的基本库模板","uid":"35d8b592c5b982bc1f18037d6c818306","slug":"old_topic/2016-09-17-352","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.223Z","comments":true,"path":"api/articles/old_topic/2016-09-17-352.json","cover":null,"text":"作者：糖果 MoonScript库模板代码： 1234567891011121314local *configs = &#123;&#125;config = (env, fn) -&gt; print(env, fn) return 1setmetatable &#123; :...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lapis框架的常用处理方法","uid":"193d30d1b1f932871a7703a692d3a8f9","slug":"old_topic/2016-09-17-351","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.152Z","comments":true,"path":"api/articles/old_topic/2016-09-17-351.json","cover":null,"text":"作者：糖果 在Lapis中处理GET、POST、PUT。 1234567891011import respond_to from require &quot;lapis.application&quot;class App extends lapis.Application @e...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"MoonScript实现选择排序","uid":"bde2d986b961652c5b4dbeefb6342f0a","slug":"old_topic/2016-09-17-354","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.167Z","comments":true,"path":"api/articles/old_topic/2016-09-17-354.json","cover":null,"text":"作者：糖果 LUA代码： 1234567891011121314list = &#123;1,5,3,2,9,3,6&#125;len=#listfor i=1,len max = list[i] for j=i+1, len do if list[j]&gt;max then ...","link":"","photos":[],"count_time":{"symbolsCount":638,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"MoonScript调用LUA-CJSON","uid":"76c3bd62c0bfebefa8d37c47bf8fd902","slug":"old_topic/2016-09-17-355","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.159Z","comments":true,"path":"api/articles/old_topic/2016-09-17-355.json","cover":null,"text":"作者：糖果 Lapis的util库有对cjson封装，而我们想更直接的调用CJSON的方法，而不想依赖的封装。 我们首先实现一个MoonScript写文件的代码： 写文件： 12345678910write_data = (var, rule)-&gt; path = &quot...","link":"","photos":[],"count_time":{"symbolsCount":689,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"MoonScript实现Map按值排序","uid":"8df307659316a77ab2a33659c2147085","slug":"old_topic/2016-09-17-353","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.217Z","comments":true,"path":"api/articles/old_topic/2016-09-17-353.json","cover":null,"text":"作者：糖果 MoonScript代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051board = &#123; [&#x27;0.0.0...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"MoonScript如何使用RESTY-HTTP","uid":"f1a8029c8728847e5961c7e694008279","slug":"old_topic/2016-09-17-356","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.229Z","comments":true,"path":"api/articles/old_topic/2016-09-17-356.json","cover":null,"text":"作者：糖果 在OpenResty中发起HTTP请求，一般情况下，有两种方式： 1.通过内部Proxy。 2.使用RESTY-HTTP库发起访问。 Lapis使用的是interal proxy,之前文章有提到，下面提到的是RESTY-HTTP的MoonScript调用实现。 RES...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"关于Lua的LazyTable的实现","uid":"a345db901c4262d0d7e3998d536c82d4","slug":"old_topic/2016-09-17-357","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.207Z","comments":true,"path":"api/articles/old_topic/2016-09-17-357.json","cover":null,"text":"作者：糖果 LazyTable源码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465l...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"LUA遍历所有Table变量元素与cjson.null的意义","uid":"49340cb296849c990c24a5280443ee37","slug":"old_topic/2016-09-17-359","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.195Z","comments":true,"path":"api/articles/old_topic/2016-09-17-359.json","cover":null,"text":"作者：糖果 Lapis使用JSON解析的代层库就是CJSON。 遍历Table变量的所有元素。 util.moon 12345678910111213json_encodable = (obj, seen=&#123;&#125;) -&gt; switch type obj w...","link":"","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}