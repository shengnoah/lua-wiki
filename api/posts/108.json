{"total":1769,"pageSize":12,"pageCount":148,"data":[{"title":"2016-06-01-TOC","uid":"d774f91f96abd1bb1c7fd97a15cf6621","slug":"lua/2016-06-01-TOC","date":"2024-03-14T07:45:09.088Z","updated":"2024-03-14T07:45:09.088Z","comments":true,"path":"api/articles/lua/2016-06-01-TOC.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 2016-06-01-TOC lua 基础 概述 permalink: /lua_guide/TOC/ 运行环境 基本语法 变量 日期类型 操作符 循环 决策 函数 字符串 数组 迭代器 表 模块 元表 协程 文件 I/O 错误处理 lua 进阶 调试 垃圾回收机制 面向对象 ...","link":"","photos":[],"count_time":{"symbolsCount":170,"symbolsTime":"1 mins."},"categories":[{"name":"教程","slug":"教程","count":1,"path":"api/categories/教程.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua模块","uid":"795dd91f8815508a13e65b7151fdf68c","slug":"lua/2016-06-01-modules","date":"2024-03-14T07:45:09.088Z","updated":"2024-03-27T03:20:50.401Z","comments":true,"path":"api/articles/lua/2016-06-01-modules.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Lua 模块 什么是模块？ Lua 中的模块与库的概念相似，每个模块都有一个全局唯一名字，并且每个模块都包含一个表。使用一个模块时，可以使用 require 加载模块。模块中可以包括函数和变量，所有这些函数和变量被表存储于模块的表中。模块中的表的功能类似于命名空间，用于隔离不同...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"repeat...until 循环","uid":"17f717e08ff041fef49c1fa8a71c5669","slug":"lua/2016-06-01-repeat-until","date":"2024-03-14T07:45:09.088Z","updated":"2024-03-27T04:05:41.060Z","comments":true,"path":"api/articles/lua/2016-06-01-repeat-until.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" repeat…until 循环 与 for 和 while 循环中先检测条件再决定是否执行循环不同，repeat…until 先执行循环再检测条件判断是否再次执行。 除了 repeat…until 循环一定会执行一次之外，repeat…until 与 while 循环很相似。 ...","link":"","photos":[],"count_time":{"symbolsCount":541,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua的while循环","uid":"7132dce4b61373adb37dd9650b6cc624","slug":"lua/2016-06-01-while","date":"2024-03-14T07:45:09.088Z","updated":"2024-03-27T04:06:57.462Z","comments":true,"path":"api/articles/lua/2016-06-01-while.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Lua while 循环 在 Lua 语言中，只要 while 循环条件为真，while 语句就会一直执行，直到 while 循环条件为假为止。 语法 Lua 语言中 while 循环的语法如下所示： while(condition) do statement(s) end 其...","link":"","photos":[],"count_time":{"symbolsCount":562,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"},{"name":"LUA教程","slug":"lua-guide/LUA教程","count":2,"path":"api/categories/lua-guide/LUA教程.json"}],"tags":[{"name":"LUA教程","slug":"LUA教程","count":4,"path":"api/tags/LUA教程.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua判断","uid":"d6286a3606fee451e0f5f2e41e7f6205","slug":"lua/2016-06-01-decision-making","date":"2024-03-14T07:45:09.087Z","updated":"2024-03-14T07:45:09.087Z","comments":true,"path":"api/articles/lua/2016-06-01-decision-making.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 决策 决策结构要求程序开发人员设置一个或多测试或计算条件。如果条件计算结果为真，则执行一个或多个语句；如果条件为假，则执行另外的语句。 下面是大多数程序语言中的决策结构的一般形式： Lua 语言中所有布尔真和非 nil 值都当作真；把所有的布尔假和 nil 作为假。请注意，Lu...","link":"","photos":[],"count_time":{"symbolsCount":376,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua中的if语句","uid":"15a63bcbcc45ec73313b8b26fa940570","slug":"lua/2016-06-01-if-statement","date":"2024-03-14T07:45:09.087Z","updated":"2024-03-14T07:45:09.087Z","comments":true,"path":"api/articles/lua/2016-06-01-if-statement.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"#Lua 中的 if 语句 if 语句包括一个布尔表达式和一个或多个语句。 ##语法 Lua 语言 if 语句的语法如下： if(boolean_expression) then --[如果布尔表达式为真，statement(s) 执行。--] end &#96;&#96;&#9...","link":"","photos":[],"count_time":{"symbolsCount":622,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua迭代器","uid":"eacf32e453764fca08d4d96ce1e78183","slug":"lua/2016-06-01-iterators","date":"2024-03-14T07:45:09.087Z","updated":"2024-03-27T04:09:26.767Z","comments":true,"path":"api/articles/lua/2016-06-01-iterators.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Lua 迭代器 迭代器是用于遍历集合或容器中元素的一种结构。在 Lua 语言中，集合往往指的是可以用来创建各种数据结构的表。比如，数组就是用表来创建的。 通用迭代器 通用迭代器可以访问集合中的键值对。下面是通用迭代器的一个简单例子： array = &#123;\"Lua\", \"...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"LUA的Loop循环","uid":"50b76913de0a7e15924d6b0f0dac6bf2","slug":"lua/2016-06-01-loop","date":"2024-03-14T07:45:09.087Z","updated":"2024-03-27T04:04:39.900Z","comments":true,"path":"api/articles/lua/2016-06-01-loop.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 循环 虽然一般情况下，语句都是顺序执行的：函数内的第一条语句先执行，然后是第二条，依次类推。 但是还是可能存在需要执行一段代码多次的情况。 为此编程语言提供各式各样的控制结构实现复杂的程序执行路径。 其中，循环语句可以让我们可以执行一条或一组语句多次。下图中所描述的是大多数语言...","link":"","photos":[],"count_time":{"symbolsCount":727,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"LUA教程","slug":"LUA教程","count":4,"path":"api/tags/LUA教程.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua中的for循环","uid":"26bfa2ece82537ab5f6962e2d31968f1","slug":"lua/2016-06-11-for","date":"2024-03-14T07:45:09.087Z","updated":"2024-03-27T04:08:32.674Z","comments":true,"path":"api/articles/lua/2016-06-11-for.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Lua 中的 for 循环 for 循环控制结构可以让你高效地写出需要执行特定次数的循环代码。 语法 Lua 语言中 for 循环的语法如下： for init,max/min value, increment do statement(s) end 下面是 for 循环执行的...","link":"","photos":[],"count_time":{"symbolsCount":476,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"},{"name":"lua教程","slug":"lua-guide/lua教程","count":2,"path":"api/categories/lua-guide/lua教程.json"}],"tags":[{"name":"LUA","slug":"LUA","count":1,"path":"api/tags/LUA.json"},{"name":"abc","slug":"abc","count":1,"path":"api/tags/abc.json"},{"name":"basic","slug":"basic","count":1,"path":"api/tags/basic.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua元表","uid":"0498ed7eca93166bac9cec9951eb31df","slug":"lua/2016-06-01-metatables","date":"2024-03-14T07:45:09.086Z","updated":"2024-03-27T04:13:10.462Z","comments":true,"path":"api/articles/lua/2016-06-01-metatables.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Lua 元表 正如其名，元表也是表。不过，将元表与表相关联后，我们就可以通过设置元表的键和相关方法来改变表的行为。元方法的功能十分强大，使用元方法可以实现很多的功能，比如： 修改表的操作符功能或为操作符添加新功能（译注：如果您学过 C++ 之类的面向对象的语言，应该比较好理解，...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"LUA教程","slug":"LUA教程","count":4,"path":"api/tags/LUA教程.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua表","uid":"038bf88a1c7598385fc79ad2a48f60ba","slug":"lua/2016-06-01-tables","date":"2024-03-14T07:45:09.086Z","updated":"2024-03-27T03:27:00.412Z","comments":true,"path":"api/articles/lua/2016-06-01-tables.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Lua 表 在 Lua 语言中，表是唯一可以用来创建不同数据类型的数据结构，比如常见的数组和字典都是用表来创建的。 Lua 语言中经常到关联数组这种数据类型，它不仅可以用数值作为索引值，除了 nil 以外的字符串同样可以作为其索引。表没有固定的大小，当数据量增加时表会自动增大。...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Table复制","uid":"f35637f6fb4f2abf97cdd32ce0593fe7","slug":"lua/luatest/Table复制","date":"2024-03-14T07:45:09.086Z","updated":"2024-03-14T07:45:09.086Z","comments":true,"path":"api/articles/lua/luatest/Table复制.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Table复制 构造一个lua table变量，然后对这个变量在调用函数进行制和专递。 可以使用以下代码构造一个Lua table变量，并调用函数进行传递： -- 构造一个Lua table变量 local myTable = &#123; name = \"John\", age...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"Lua","slug":"Lua","count":2,"path":"api/categories/Lua.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}