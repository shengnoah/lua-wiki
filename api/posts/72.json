{"total":1769,"pageSize":12,"pageCount":148,"data":[{"title":"EmmyLua 学习使用","uid":"376015f4c2dda13cf46623a4606c4c88","slug":"zl/2016-01-01-202_EmmyLua 学习使用 ","date":"2024-04-03T03:47:33.083Z","updated":"2024-04-03T03:47:33.083Z","comments":true,"path":"api/articles/zl/2016-01-01-202_EmmyLua 学习使用 .json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;h3 id=&quot;目录&quot;&gt;目录&lt;/h3&gt; lua元表 class的探索 要想对lua有更加深入的了解，不深入的了解lua的元表是不行的，在lua中元表是你构建一个复杂的数据结构的基础，所以需要对元表有非常深入的了解。 元表允许改变tab...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua 学习 chapter1","uid":"cd04cd520881c58ef4730cf0178f2ca0","slug":"zl/2016-01-01-203_Lua 学习 chapter1 ","date":"2024-04-03T03:47:33.083Z","updated":"2024-04-03T03:47:33.083Z","comments":true,"path":"api/articles/zl/2016-01-01-203_Lua 学习 chapter1 .json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;h3 id=&quot;目录&quot;&gt;目录&lt;/h3&gt; 进程段 一些词法的规范 全局变量 类型的值 进程段 我们将Lua语言执行的每一段代码称为进程段，即一组命令或表达式组成的序列。 一些词法规范 Lua的标识符可以由任意字母、数字和下划线组成，但是...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lua语法","uid":"6fd8143c3b34ef934d677c24fc2719a0","slug":"zl/2016-01-01-204_lua语法","date":"2024-04-03T03:47:33.083Z","updated":"2024-04-03T03:47:33.084Z","comments":true,"path":"api/articles/zl/2016-01-01-204_lua语法.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;h3 id=&quot;lua特性&quot;&gt;&lt;a href=&quot;https://morningLu.github.io/#lua%E7%89%B9%E6%80%A7&quot; class=&quot;headerlink&quot; title...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Model Selection and Evaluation","uid":"7c3ce6de280c0338b827eb9e06e08289","slug":"zl/2016-01-01-19_Model Selection and Evaluation","date":"2024-04-03T03:47:33.082Z","updated":"2024-04-03T03:47:33.082Z","comments":true,"path":"api/articles/zl/2016-01-01-19_Model Selection and Evaluation.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;前面两篇分别写了机器学习的简介和一些必备的基础知识，这一篇打算写下模型评估和选择。&lt;/p&gt; 我们把学习器实际预测输出和样本真实输出之间的差异称为误差。学习器在训练集上的误差称为经验误差；在新样本上的误差称为泛化误差。显然，我们希望得到泛化误差小的学...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua 排序算法","uid":"18c65ae79c1521b9ec150d64b8237a42","slug":"zl/2016-01-01-200_Lua 排序算法 ","date":"2024-04-03T03:47:33.082Z","updated":"2024-04-03T03:47:33.082Z","comments":true,"path":"api/articles/zl/2016-01-01-200_Lua 排序算法 .json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;归并排序（Merge Sort，台湾译作：合并排序）是建立在归并操作上的一种有效的排序算法。该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。&lt;/p&gt; 归并操作(Merge)，也叫归并算法，指的是将两个已经排序的序列合...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"xLua热更新3之生成代码","uid":"dd376855338d26226b310de8b083f6d2","slug":"zl/2016-01-01-195_xLua热更新3之生成代码","date":"2024-04-03T03:47:33.081Z","updated":"2024-04-03T03:47:33.081Z","comments":true,"path":"api/articles/zl/2016-01-01-195_xLua热更新3之生成代码.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;思考并回答以下问题：&lt;br&gt;1.如何创建一个空表？&lt;/p&gt; 之前提到了生成代码的问题，是不是对这个概念很陌生？生成代码从广义上来说就是通过进程来生成代码。在xLua中也是如此，下面来看看在xLua中具体是什么。 什么是生成代码？生成代码...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"欢迎使用LuaPerfect!","uid":"0edcdb943be9e6ad357fd91b21db2f9d","slug":"zl/2016-01-01-197_欢迎使用LuaPerfect!","date":"2024-04-03T03:47:33.081Z","updated":"2024-04-03T03:47:33.081Z","comments":true,"path":"api/articles/zl/2016-01-01-197_欢迎使用LuaPerfect!.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"简介 LuaPerfect是腾讯公司开发的专业级的Lua集成开发环境，致力于为广大Lua开发人员提供免费的专业的Lua编辑调试工具。 LuaPerfect基于纯C++实现了独立的Lua编辑和调试工具： 1、接入方便：接口风格类似VS，符合VS用户习惯，非插件，接入自动化程度高，无...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua 学习 chapter5","uid":"c888a1cf7e4d1c58568bc08fa2b4538e","slug":"zl/2016-01-01-199_Lua 学习 chapter5 ","date":"2024-04-03T03:47:33.081Z","updated":"2024-04-03T03:47:33.082Z","comments":true,"path":"api/articles/zl/2016-01-01-199_Lua 学习 chapter5 .json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;h3 id=&quot;目录&quot;&gt;目录&lt;/h3&gt; 表索引 表构造器 数组、列表和序列 遍历表 安全访问 表标准库 练习 表索引 a.x 表示的意思和a[“x”]一样，所以前者的可读性更高。 1 2 3 4 5 local a = &#123;&...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua编程7之metatable","uid":"4a86ff56596654fd5f385162dfeb6124","slug":"zl/2016-01-01-194_Lua编程7之metatable","date":"2024-04-03T03:47:33.077Z","updated":"2024-04-03T03:47:33.080Z","comments":true,"path":"api/articles/zl/2016-01-01-194_Lua编程7之metatable.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;思考并回答以下问题：&lt;br&gt;1.如何创建一个空表？&lt;/p&gt; 在 Lua table 中可以访问对应的key来得到value值，但是却无法对两个 table 进行操作。要实现两个table的操作就要使用Lua提供的元表(Metatable...","link":"","photos":[],"count_time":{"symbolsCount":"7.1k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"unity lua －1 最开始调用","uid":"e114d6fc302998111b5c100fb6afbfcb","slug":"zl/2016-01-01-193_unity lua －1 最开始调用","date":"2024-04-03T03:47:33.076Z","updated":"2024-04-03T03:47:33.077Z","comments":true,"path":"api/articles/zl/2016-01-01-193_unity lua －1 最开始调用.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;ul&gt; lua脚本以txt的形式存储在Resources 下面 用LuaSvr svr svr.start调用到脚本 用 svr.luaState.getFunction(“foo”).call 来调用到里面的方法 lua Table – 是一个Key Value...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua 学习 chapter6","uid":"af33457a1ca8da53e4dd258f4137d455","slug":"zl/2016-01-01-191_Lua 学习 chapter6 ","date":"2024-04-03T03:47:33.075Z","updated":"2024-04-03T03:47:33.075Z","comments":true,"path":"api/articles/zl/2016-01-01-191_Lua 学习 chapter6 .json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;h3 id=&quot;目录&quot;&gt;目录&lt;/h3&gt; 函数 多个返回值 可变长函数参数 函数 在lua中，函数是对语句和表达式抽象的主要方式。函数的调用需要一对空括号，里面放着参数。唯一的例外就是当参数只有一个且该参数是字符串或表构造器。 1 2 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"基于XLua的Unity脚本框架的设计与实现","uid":"8912b8abe24cb570896b9c689c6c6d40","slug":"zl/2016-01-01-192_基于XLua的Unity脚本框架的设计与实现","date":"2024-04-03T03:47:33.075Z","updated":"2024-04-03T03:47:33.076Z","comments":true,"path":"api/articles/zl/2016-01-01-192_基于XLua的Unity脚本框架的设计与实现.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;摘 要：&lt;br&gt;Unity技术的迅速崛起, 让3D移动游戏逐渐流行。随着游戏系统的不断丰富, 游戏开发迭代速度迅速加快。但Unity的原生C#开发效率较慢, 而且在部分平台上无法进行热更新, 无法满足[…]&lt;/p&gt; 行游戏内容的更新,由...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}