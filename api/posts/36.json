{"total":667,"pageSize":12,"pageCount":56,"data":[{"title":"Nginx共享内存","uid":"e9cffae5d10e90dbf9fa8da995c5d84e","slug":"old_topic/2016-09-17-166","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.173Z","comments":true,"path":"api/articles/old_topic/2016-09-17-166.json","cover":null,"text":"本文由李航老师创建，李航老师的微博账号是： http://weibo.com/lidaohang ","link":"","photos":[],"count_time":{"symbolsCount":49,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"项目","uid":"ae4d85e0c91441200158f7ee6ba4f723","slug":"old_topic/2016-09-17-173","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.152Z","comments":true,"path":"api/articles/old_topic/2016-09-17-173.json","cover":null,"text":"Java版本的ＨＴＴＰ访问客户端(curl) Nginx NP Dashboard Openresty Windows版 gbc-core","link":"","photos":[],"count_time":{"symbolsCount":100,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"WebSockets with OpenResty","uid":"5dd63397e730372ad714df83ebd3c1b7","slug":"old_topic/2016-09-17-175","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.205Z","comments":true,"path":"api/articles/old_topic/2016-09-17-175.json","cover":null,"text":"WebSockets with OpenResty Lua WebSocket Implementation Installation This blog post is updated for OpenResty 1.4.2.9. 本文适用于OpenResty 1.4.2.9 ...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Vanilla框架静态的路由使用","uid":"1d32e6a3ca5529481390baf7789466f8","slug":"old_topic/2016-09-17-176","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.168Z","comments":true,"path":"api/articles/old_topic/2016-09-17-176.json","cover":null,"text":"作者：糖果 这次我们来看一下，如何在Vanilla下，追加新的路由。 在Vanilla中追加一个新的路由，需要添加两个文件即可完成。 我们进入工程根目录下的application目录，分别在controllers文件夹、views文件夹下肯创建两个文件。 1.创建controll...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"LUA的#操作符,getn,maxn操作table的区别","uid":"4a16c2a8faba18731e43fdbaee33025b","slug":"old_topic/2016-09-17-177","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.160Z","comments":true,"path":"api/articles/old_topic/2016-09-17-177.json","cover":null,"text":"作者：糖果 #操作符与getn 作用是一样的，是取得table，连续数组元素的长度。 12arr = &#123;1, 2, 3, [5]=789&#125;print(#arr) 结果：3 1print(table.getn(arr)) 结果：3 #arr和getn在遇到第一个...","link":"","photos":[],"count_time":{"symbolsCount":213,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"nil、null与ngx.null","uid":"834bce8a4e8450443d18797324bd3ee0","slug":"old_topic/2016-09-17-178","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.189Z","comments":true,"path":"api/articles/old_topic/2016-09-17-178.json","cover":null,"text":"问题概述 今天第一次在nginx+lua架构下，写了个需要操作Redis的后台接口，该接口的功能主要是接受客户端的json格式的post请求，实现对保存在redis中的任务插入、删除、查询等。虽然nginx，lua等都是刚接触，但这几个接口还是顺风顺水的坐下来了，不能忘了感谢春哥...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua源码赏析","uid":"a63cff28e964bdf4acd74377beb1b3f4","slug":"old_topic/2016-09-17-179","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.183Z","comments":true,"path":"api/articles/old_topic/2016-09-17-179.json","cover":null,"text":"Lua源码赏析 ","link":"","photos":[],"count_time":{"symbolsCount":8,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"LUA模拟面向对象：类与对象","uid":"85a31f98ce1faec97b54316baed59b3d","slug":"old_topic/2016-09-17-180","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.151Z","comments":true,"path":"api/articles/old_topic/2016-09-17-180.json","cover":null,"text":"首先还是向大家介绍一下国产LUA框架Vanilla。这次我们来看看Vanilla中如何用Lua 模拟面向对象编程。实现主要是使用lua的setemetatable特性来实现的。下面程序大体的处理流程是： 类和对象创建流程： 1.创建一个Controller在类模板程序。 2.在C...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Tup与Moonscript自动编译","uid":"72fc9906b7ade28d0ec3b847f7af3a98","slug":"old_topic/2016-09-17-183","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.223Z","comments":true,"path":"api/articles/old_topic/2016-09-17-183.json","cover":null,"text":"tup可以监控文件变动的，再执行相应有执行动作。可以设定tupfile规则，当监控目录中的文件发生变化的时候，实时执行编译脚本，只要文件有改动，然后openresty服务会reload文件，刷新一下url就可以看到新的变动结果（LUA）。 安装TUP首先要在Linux上安装FUS...","link":"","photos":[],"count_time":{"symbolsCount":886,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lrexlib安装(Lua PCRE)","uid":"1b3a4d7f131dd65bcee1a16042fe9553","slug":"old_topic/2016-09-17-182","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.216Z","comments":true,"path":"api/articles/old_topic/2016-09-17-182.json","cover":null,"text":"作者：糖果 Lrexlib是PCRE的Lua调用库。在此说一下 Lrexlib的安装过程。 Ubuntu下安装： 1.首先是安装依赖。 12apt-get install libpcre3apt-get install libpcre3-dev 2.建立连接。 Ubuntu安装的...","link":"","photos":[],"count_time":{"symbolsCount":789,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"如何用Lua取得ASCII表中的字符","uid":"4f367eaf18737796ed26e3985923aa72","slug":"old_topic/2016-09-17-181","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.177Z","comments":true,"path":"api/articles/old_topic/2016-09-17-181.json","cover":null,"text":"比如我们要显示ASCII表中的&quot;a&quot;，我们可以使用如下代码： 1print(string.char(97))","link":"","photos":[],"count_time":{"symbolsCount":64,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Moonscript的常用WEB特性","uid":"cc7492c9c593b6abb05073ddf9060cb2","slug":"old_topic/2016-09-17-184","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.159Z","comments":true,"path":"api/articles/old_topic/2016-09-17-184.json","cover":null,"text":"下面是一个简单的moonscript脚本，值得注意的地方有几点。 1.Moonscript如何表示List列比数据结构。 2.Moonscript的路由样式。 3.Moonscript如何取得请求URL中的参数变量值。 4.Moonscript如何遍历List数据结构。（pair...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}