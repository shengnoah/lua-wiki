{"total":1769,"pageSize":12,"pageCount":148,"data":[{"title":"Lua标准库","uid":"fa374b256846497ad36372533ba9888a","slug":"zl/2016-01-01-396_Lua标准库","date":"2024-04-03T03:47:35.684Z","updated":"2024-04-03T03:47:35.685Z","comments":true,"path":"api/articles/zl/2016-01-01-396_Lua标准库.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"lua标准库之table库 table库的概念是由一些操作table的辅助函数组成 作用一：对lua中的表的大小给出一个合理的解释，如getn，#table等 作用二：提供一些插入删除元素以及元素排序的函数，如insert，remove等 Lua5.1中字符串库的所有函数如下表：...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Redis 集群 Lua 操作","uid":"28aef2d24f0f724c3c4aa2b7ec317e06","slug":"zl/2016-01-01-391_Redis 集群 Lua 操作","date":"2024-04-03T03:47:35.683Z","updated":"2024-04-03T03:47:35.683Z","comments":true,"path":"api/articles/zl/2016-01-01-391_Redis 集群 Lua 操作.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"redis 集群的单键操作，基本跟单机版一样，没有太大的区别redis集群的操作相对麻烦一点，由于slot的存在，同一组key可能会被分派到不同的slot中,这会导致lua在执行多键操作时遇到错误 需要使用redis 的hashtag来将一组类似的key分配到同一个slot中，方...","link":"","photos":[],"count_time":{"symbolsCount":341,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lua类机制","uid":"06e23d8cbe40b86c0fe447e69c088be2","slug":"zl/2016-01-01-392_lua类机制","date":"2024-04-03T03:47:35.683Z","updated":"2024-04-03T03:47:35.683Z","comments":true,"path":"api/articles/zl/2016-01-01-392_lua类机制.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"lua类机制的简易实现123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"cocos2dx lua 闭包(匿名函数)入门实战","uid":"3a6e858fce4d017b7e8aa41a71c3f0de","slug":"zl/2016-01-01-393_cocos2dx lua 闭包(匿名函数)入门实战","date":"2024-04-03T03:47:35.683Z","updated":"2024-04-03T03:47:35.684Z","comments":true,"path":"api/articles/zl/2016-01-01-393_cocos2dx lua 闭包(匿名函数)入门实战.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"本文首先通过具体的例子讲解了Lua中闭包的概念，然后总结了闭包的应用场合，最后探讨了Lua中闭包的实现原理。 闭包的概念 在Lua中，闭包（closure）是由一个函数和该函数会访问到的非局部变量（或者是upvalue）组成的，其中非局部变量（non-local variable...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"PIL.9Lua中的闭包","uid":"66065dc59985b4408d9fe81f872d389b","slug":"zl/2016-01-01-390_PIL.9Lua中的闭包","date":"2024-04-03T03:47:35.678Z","updated":"2024-04-03T03:47:35.683Z","comments":true,"path":"api/articles/zl/2016-01-01-390_PIL.9Lua中的闭包.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua中的函数是 第一类的值加上合适的词法域。那么，函数是第一类值意味着什么呢？这是说，在Lua中，一个函数，就是一个和 数字或字符串一样具有某些权限的值。一个程序可以把函数存储在变量中（全局或者局部都可以）和表中，把函数作为参数传递给其他函数，或者以函数作为值返回。 函数具有词...","link":"","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua源码分析 Gc篇（二）数据结构   副本","uid":"3d666de728e3aa931e9232cbab18385f","slug":"zl/2016-01-01-38_Lua源码分析 Gc篇（二）数据结构   副本","date":"2024-04-03T03:47:35.678Z","updated":"2024-04-03T03:47:35.678Z","comments":true,"path":"api/articles/zl/2016-01-01-38_Lua源码分析 Gc篇（二）数据结构   副本.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"[TOC] 这是这个gc系列的第二篇，这一篇主要讲GC用到的数据结构，有助于理解gc的，所以放在前面 栈就是我们平时写代码接触最多的lua_State。在实现上是用一个数组实现的。每个成员类型是TValue，看下文详细介绍。这里不打算详细介绍栈的结构和内容，只会介绍和gc相关的一...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua学习笔记一","uid":"4ff1e2a53b46dffd40e47f7016f14195","slug":"zl/2016-01-01-388_Lua学习笔记一","date":"2024-04-03T03:47:35.676Z","updated":"2024-04-03T03:47:35.676Z","comments":true,"path":"api/articles/zl/2016-01-01-388_Lua学习笔记一.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"PS:由于公司项目中用到Lua,所以准备学习一下，这里做下学习笔记。 Lua 是一种轻量小巧的脚本语言，用标准C语言编写并以源代码形式开放， 其设计目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。 基本语法交互式编程lua -i 进入交互式编程 脚本式编程新建一...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua之Table个人总结","uid":"8e148f7d0ca183bc864d5f807e1a3198","slug":"zl/2016-01-01-389_Lua之Table个人总结","date":"2024-04-03T03:47:35.676Z","updated":"2024-04-03T03:47:35.677Z","comments":true,"path":"api/articles/zl/2016-01-01-389_Lua之Table个人总结.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 在lua中Table是数组和集合的混合物。作为数组时，可以使用除了nil以外的值作为索引。 Table的构造利用下标来标明元素123456local table = {}table[1]=&#39;hello&#39;table[5]=&#39;world&#39;for i,...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua学习笔记(五)","uid":"aa87979226eb6b10ddf77cb719096bc6","slug":"zl/2016-01-01-387_Lua学习笔记(五)","date":"2024-04-03T03:47:35.675Z","updated":"2024-04-03T03:47:35.676Z","comments":true,"path":"api/articles/zl/2016-01-01-387_Lua学习笔记(五).json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 错误处理 assert error pcall xpcall debug 调试 垃圾回收 垃圾回收函数 错误处理平时写代码的时候出现错误其实是一件十分平常的事情，自然，如何处理错误也是需要联系的方法。 一般在Lua中可以使用assert和error来处理错误。 assert简单...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Redis Lua脚本中学教程（下）","uid":"83bf5d539c88e7810a3454ec632f2306","slug":"zl/2016-01-01-385_Redis Lua脚本中学教程（下）","date":"2024-04-03T03:47:35.671Z","updated":"2024-04-03T03:47:35.671Z","comments":true,"path":"api/articles/zl/2016-01-01-385_Redis Lua脚本中学教程（下）.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 在中学教程的上半部分我们介绍了Redis Lua相关的命令，没有看过或者忘记的同学可以步行前往直接使用机票Redis Lua脚本中学教程（上）。今天我们来简单学习一下Lua的语法。 在介绍Lua语法之前，先来介绍一下Lua的身世。Lua是由简称为PUC-Rio的团队设计、开发和...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua","uid":"15b0cdc6d03f6c3f6bf8d3a7ff197317","slug":"zl/2016-01-01-386_Lua","date":"2024-04-03T03:47:35.671Z","updated":"2024-04-03T03:47:35.675Z","comments":true,"path":"api/articles/zl/2016-01-01-386_Lua.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua是一个简洁，轻量，可扩展的脚本语言。其设计目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。 Lua源码结构 虚拟机核心功能lapi.c lctype.c ldebug.c ldo.c lfunc.c lgc.c lmem.c lobject.c lopco...","link":"","photos":[],"count_time":{"symbolsCount":508,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"PIL.33Lua的线程和状态机","uid":"dbee1f249827f70178987b233d7a45a0","slug":"zl/2016-01-01-383_PIL.33Lua的线程和状态机","date":"2024-04-03T03:47:35.670Z","updated":"2024-04-03T03:47:35.670Z","comments":true,"path":"api/articles/zl/2016-01-01-383_PIL.33Lua的线程和状态机.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua并不支持真正的多线程，也就是说，抢先的线程间共享内存。缺乏这个支持有两个原因。一是ISO C不提供，所以没有可移植的方式来实现。第二个原因就是我们不认为多线程对Lua是一件好事。 多线程被开发来针对底层的编程。像信号量和监视器这样的同步算法在操作系统的上下文中被提出。找出并...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}