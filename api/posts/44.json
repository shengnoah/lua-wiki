{"total":665,"pageSize":12,"pageCount":56,"data":[{"title":"OSSEC常用操作","uid":"3a13d5b5280559c0590f0f89fa75e589","slug":"old_topic/2016-09-17-272","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.745Z","comments":true,"path":"api/articles/old_topic/2016-09-17-272.json","cover":null,"text":" 系统类型是 CentOS 修改启动脚本使 OSSEC HIDS 在系统启动时自动运行 已正确完成系统配置. 要启动 OSSEC HIDS: /var/ossec/bin/ossec-control start 要停止 OSSEC HIDS: /var/ossec/bin/oss...","link":"","photos":[],"count_time":{"symbolsCount":429,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"HoneyMap的hpfeeds-cleint命令行使用方法","uid":"0550bcc982fec659342e6f2a412d44ab","slug":"old_topic/2016-09-17-273","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.745Z","comments":true,"path":"api/articles/old_topic/2016-09-17-273.json","cover":null,"text":"作者：糖果 hpfeeds-client是一个Python写的客户端程序。 第一种是在世界地图上，点亮一个点： 1hpfeeds-client --host localhost -p 10000 -i honeymap -s cfdd6a68be69464666ae60b66da...","link":"","photos":[],"count_time":{"symbolsCount":740,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"又见QT","uid":"92cca58992d4502022c1dbbf5585cfdb","slug":"old_topic/2016-09-17-274","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.745Z","comments":true,"path":"api/articles/old_topic/2016-09-17-274.json","cover":null,"text":"MinGW https://sourceforge.net/projects/mingw/?source=top3_dlp_t5 PyQT5 https://riverbankcomputing.com/software/pyqt/download5 PyQT4 https://...","link":"","photos":[],"count_time":{"symbolsCount":512,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua获取网络时间","uid":"ac0402ecf46546727fdbca4cc5ec0bdf","slug":"old_topic/2016-09-17-275","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.745Z","comments":true,"path":"api/articles/old_topic/2016-09-17-275.json","cover":null,"text":"作者：ani_di版权所有，转载务必保留此链接 http://blog.csdn.net/ani_di Lua获取网络时间网络授时服务是一些网络上的时间服务器提供的时间，一般用于本地时钟同步。 授时服务有很多种，一般我们选择RFC-868。这个协议的工作流程是：（S代表Serve...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"微博API发送微博","uid":"a7777311d1e67a84d45b8c65389d0ce5","slug":"old_topic/2016-09-17-276","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.745Z","comments":true,"path":"api/articles/old_topic/2016-09-17-276.json","cover":null,"text":"使用微博的API和SDK的其中的关键一步是取得token. 而取得token是需要通过oauth2认证才可以得到。 下面是一段取得token的代码逻辑： 123456789APP_KEY =&#x27;012345678&#x27;APP_SECRET = &#x27;01234...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"TMUX最常用操作命令","uid":"65ce57f5fdb9c6ca938fd44776fc3ed9","slug":"old_topic/2016-09-17-277","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.745Z","comments":true,"path":"api/articles/old_topic/2016-09-17-277.json","cover":null,"text":"作者：糖果 一般情况下，当你用SSH链接VPS，然后关掉terminal的操作窗口时，所有的当前操作都结束了。而如果用TMUX,当前正在运行的非后台操作会话还会存在，下面是TMUX最常用的操作了。 1.创建新会话tmux new -s candylab 2.选择新会话tmux a...","link":"","photos":[],"count_time":{"symbolsCount":796,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua的Require理解","uid":"f9e8867ab3929a213362390d7a6ff2ff","slug":"old_topic/2016-09-17-278","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.745Z","comments":true,"path":"api/articles/old_topic/2016-09-17-278.json","cover":null,"text":"作者：ms2008 整理编辑：糖果 在 lua 中加载的其他文件的代码，通常可以使用 dofile、loadfile、require 函数等来完成。其中 dofile 每次加载都要编译执行，效率比较低，所以不推荐使用；同样 loadfile 虽然只需编译一次，但是并没有把结果缓存...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Tail Call 到底有啥用？","uid":"d50433282a5b8a29764977173d70c1a2","slug":"old_topic/2016-09-17-279","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.746Z","comments":true,"path":"api/articles/old_topic/2016-09-17-279.json","cover":[],"text":"作者：ms2008 整理编辑：糖果 在聊今天这个话题之前，我们需要知道什么叫 tail call。先来看下，lua 程序设计是怎么定义的： 尾调用是一种类似在函数结尾的 goto 调用，当函数最后一个动作是调用另外一个函数时，我们称这种调用尾调用。例如： function f(x...","link":"","photos":[],"count_time":{"symbolsCount":981,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"OpenResty 中的连接池","uid":"34fb78ae79ed28901f3aef22da440208","slug":"old_topic/2016-09-17-280","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.746Z","comments":true,"path":"api/articles/old_topic/2016-09-17-280.json","cover":null,"text":"OpenResty 中的连接池 作者：ms2008编辑整理：糖果 注：set_keepalive 和 close 互斥(一个 socket 对象不能执行多次 setkeepalive 操作，会报：连接已关闭) 连接池的大小是对每一个 nginx worker 而言的。如果有 N ...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"OpenResty China的登陆处理与发贴限制","uid":"25b1e87350d6efc1b47c2b7e104bcc7d","slug":"old_topic/2016-09-17-282","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.746Z","comments":true,"path":"api/articles/old_topic/2016-09-17-282.json","cover":null,"text":"作者：糖果 Openresty China是饭总之前创建，现在由我来维护一个线上的版本。最开始的时候，对于orchina.org的用户来说的，是有三天内不能发贴的限制的，但之后我们想用一个用户激活的标志来控制是否允许用户发帖，从路由和视图几角度来看，如下： 1.Login登陆模块...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Python的命令行解析工具OptParse","uid":"3d930fa3cf2f5987b2f125f1dac087cf","slug":"old_topic/2016-09-17-283","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.746Z","comments":true,"path":"api/articles/old_topic/2016-09-17-283.json","cover":null,"text":"作者：糖果 无论是用C语言，还是用Java，有时都会写一些命令行的工具，解析用户在命令输入的参数，而Python有自己特色的命令行参数解析库，就是optparse。hpfeed-cli的源码就是用optparse来解析命令行参数的，hpfeed是给威胁地图发送威胁数据的，使用的是...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua判断空表的正确姿势","uid":"713e977b7d1b8fcae8cb4a255a6ea756","slug":"old_topic/2016-09-17-284","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.746Z","comments":true,"path":"api/articles/old_topic/2016-09-17-284.json","cover":null,"text":"作者:ms2008 编辑:糖果 1if t == &#123;&#125; then 这样的结果就是 t == {} 永远返回 false，是一个逻辑错误。因为这里比较的是 table t 和一个匿名 table 的内存地址。 1if table.maxn(t) == 0 the...","link":"","photos":[],"count_time":{"symbolsCount":396,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}