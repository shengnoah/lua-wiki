{"total":1769,"pageSize":12,"pageCount":148,"data":[{"title":"Linux 下 lua 开发环境安装及安装 luafilesystem","uid":"8f4c30a76f8d788c178eb45d61a32358","slug":"zl/2016-01-01-143_Linux 下 lua 开发环境安装及安装 luafilesystem","date":"2024-04-03T03:47:33.039Z","updated":"2024-04-03T03:47:33.039Z","comments":true,"path":"api/articles/zl/2016-01-01-143_Linux 下 lua 开发环境安装及安装 luafilesystem.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"火云邪神语录：天下武功，无坚不破，唯快不破！Nginx 的看家本领就是速度，Lua 的拿手好戏亦是速度，这两者的结合在速度上无疑有基因上的优势。 最近一直再折腾这个，干脆就稍微整理下。以防后面继续跳坑！ 安装： 1.先安装 lua 的相关依赖安装 C 开发环境由于 gcc 包需要...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua 排序算法","uid":"18c65ae79c1521b9ec150d64b8237a42","slug":"zl/2016-01-01-144_Lua 排序算法 ","date":"2024-04-03T03:47:33.039Z","updated":"2024-04-03T03:47:33.039Z","comments":true,"path":"api/articles/zl/2016-01-01-144_Lua 排序算法 .json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"归并排序（Merge Sort，台湾译作：合并排序）是建立在归并操作上的一种有效的排序算法。该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。 归并操作(Merge)，也叫归并算法，指的是将两个已经排序的序列合并成一个序列的操作。归并排序算法依赖归并...","link":"","photos":[],"count_time":{"symbolsCount":"6.6k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Unity中使用sLua的 超丶简单基础教程(二)","uid":"bf541aa57d5643f7179ad07349624c98","slug":"zl/2016-01-01-140_Unity中使用sLua的 超丶简单基础教程(二)","date":"2024-04-03T03:47:33.038Z","updated":"2024-04-03T03:47:33.038Z","comments":true,"path":"api/articles/zl/2016-01-01-140_Unity中使用sLua的 超丶简单基础教程(二).json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 前言Unity中使用sLua的 超丶简单基础教程(一) 上一篇博客讲了一下简单调用LuaState读取Lua代码并执行 本篇要讲一下如何更改路径并使得Lua可以调用UnityEngine代码的方法 虽然简短但也是长时间爬坑试验出来的(因为基础教程真的好少啊….)希望对大家有帮助...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"LUA5.1调用C函数","uid":"c16303c759dd88967615455485b434a3","slug":"zl/2016-01-01-141_LUA5.1调用C函数","date":"2024-04-03T03:47:33.038Z","updated":"2024-04-03T03:47:33.038Z","comments":true,"path":"api/articles/zl/2016-01-01-141_LUA5.1调用C函数.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua利用一个虚拟的栈(stack)来给C传递值或从C获取值。每当Lua调用C函数，都会获得一个新的栈，该栈初始包含所有的调用C函数所需要的参数值（Lua传给C函数的调用实参），并且C函数执行完毕后，会把返回值压入这个栈（Lua从中拿到C函数调用结果）本文展示了如何在lua中调用...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua_Notes","uid":"a21d0e5f84f6851e30a51261b5834ec0","slug":"zl/2016-01-01-142_Lua_Notes","date":"2024-04-03T03:47:33.038Z","updated":"2024-04-03T03:47:33.039Z","comments":true,"path":"api/articles/zl/2016-01-01-142_Lua_Notes.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"lua脚本语言学习记录 Vim下Lua的补全（只能实现到支持Lua标准库）使用Vundle + vim-lua-ftplugin + vim-misc1、安装Vundle2、在命令行输入vim ~/.vimrc对.vimrc文件进行修改3、在My Bundles here：下加入...","link":"","photos":[],"count_time":{"symbolsCount":"7.2k","symbolsTime":"7 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua闭包","uid":"8af19d7fe0a420298158116e9697e3f4","slug":"zl/2016-01-01-138_Lua闭包","date":"2024-04-03T03:47:33.037Z","updated":"2024-04-03T03:47:33.037Z","comments":true,"path":"api/articles/zl/2016-01-01-138_Lua闭包.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua中的闭包 闭包，又称词法闭包或函数闭包，是引用了自由变量的函数。这个被引用的自由变量将和这个函数一同存在，即使已经离开了创造它的环境也不例外。所以，有一种说法认为闭包是由函数和与其相关的引用环境组合而成的实体。闭包在运行时可以有多个实例，不同的引用环境和相同的函数组合可以产...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Evaluation of Word Vector Representations by Subspace Alignment","uid":"59f9f033dad9a77a996d89a673eb4713","slug":"zl/2016-01-01-137_Evaluation of Word Vector Representations by Subsp","date":"2024-04-03T03:47:33.037Z","updated":"2024-04-03T03:47:33.037Z","comments":true,"path":"api/articles/zl/2016-01-01-137_Evaluation of Word Vector Representations by Subsp.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"无监督学习的词向量的评价通常与下游应用没有很大的关联，本文将提出QVEC的评价方法。 Introduction缺乏标准化的对比方式是因为词向量的每个维度依然是无法解释的，如何去给一个无法解释的表示打分依然是不明确的。 本文通过将distribution word vector和人...","link":"","photos":[],"count_time":{"symbolsCount":260,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Towards a Methodology for Experimental Evaluation in Low","uid":"0619ac74faf0d7bb4a8371e7b7ff4263","slug":"zl/2016-01-01-139_Towards a Methodology for Experimental Evaluation ","date":"2024-04-03T03:47:33.037Z","updated":"2024-04-03T03:47:33.037Z","comments":true,"path":"api/articles/zl/2016-01-01-139_Towards a Methodology for Experimental Evaluation .json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Background repeatable, reproducible, and comparable还没实现 低功耗无线的基准测试提高研究成果的重现性和可比性 解决问题的6个部分： 1.描述无线网络实验测试混杂的通用框架 2.一种成熟的实验方法，规定了如何计划、执行和报告实验结...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lua table深拷贝","uid":"edf7212f56a6607561f8cb09a5c0dcb3","slug":"zl/2016-01-01-13_lua table深拷贝","date":"2024-04-03T03:47:33.037Z","updated":"2024-04-03T03:47:33.038Z","comments":true,"path":"api/articles/zl/2016-01-01-13_lua table深拷贝.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;深拷贝，只需要对table类型进行递归拷贝即可，其他类型直接用赋值拷贝或浅拷贝。&lt;/p&gt; 还有，拷贝后的table应与原table具有相同的元表，and元表不需要递归拷贝。 function deepcopy( src ) local lookup...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua table、模块与面向对象","uid":"2c7b59d286ea0f514f3312281292ce52","slug":"zl/2016-01-01-136_Lua table、模块与面向对象","date":"2024-04-03T03:47:33.036Z","updated":"2024-04-03T03:47:33.037Z","comments":true,"path":"api/articles/zl/2016-01-01-136_Lua table、模块与面向对象.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"很久之前接触过lua，最近在工作中又用到了一些，对lua这门语言又有了新的认识和理解。Lua是一门很简洁高效的语言,在openresty项目中大量使用，游戏开发中也使用lua来写一些脚本。在这里记录一下自己对lua中面向对象的理解。 table在lua中是一种kv的数据结构，也指...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua数据结构 — Udata（五）","uid":"ec37326988767d8ca215a346ac676ded","slug":"zl/2016-01-01-135_Lua数据结构 — Udata（五）","date":"2024-04-03T03:47:33.035Z","updated":"2024-04-03T03:47:33.036Z","comments":true,"path":"api/articles/zl/2016-01-01-135_Lua数据结构 — Udata（五）.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 文章目录 &lt;/div&gt; &lt;p&gt;&lt;strong&gt;Udata负责存储userdata的数据&lt;/strong&gt;，这部分其实很简单，但是为了保证系列文章的完整性，还是写一篇出来补全。&lt;/p&gt; 下面是Udata的数据结构： 意义...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua元表","uid":"0498ed7eca93166bac9cec9951eb31df","slug":"zl/2016-01-01-133_Lua元表","date":"2024-04-03T03:47:33.034Z","updated":"2024-04-03T03:47:33.034Z","comments":true,"path":"api/articles/zl/2016-01-01-133_Lua元表.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"javascript语言本身不支持面向对象，ES2015中增加了class关键字，却不过是prototype语法糖而已，本质上prototype形式的面向对象只能算是一种“模拟”，这其中很重要的原因之一是js从来没有一套完美的深拷贝方案，子类只能借助原型链获取父类方法的引用，这不...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}