{"total":667,"pageSize":12,"pageCount":56,"data":[{"title":"如果 LLM 是巫师，那么代码就是魔杖","uid":"9d50f8c4f34c0da73c15fc8ada43970f","slug":"weibo/如果 LLM 是巫师，那么代码就是魔杖","date":"2024-03-14T07:45:09.131Z","updated":"2024-03-14T07:45:09.131Z","comments":true,"path":"api/articles/weibo/如果 LLM 是巫师，那么代码就是魔杖.json","cover":[],"text":"如果 LLM 是巫师，那么代码就是魔杖 如果 LLM 是巫师，那么代码就是魔杖，论文：《If LLM Is the Wizard, Then Code Is the Wand: A Survey on How Code Empowers Large Language Models...","link":"","photos":[],"count_time":{"symbolsCount":652,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"最优秀的员工专注于内容而非流程","uid":"14892301d84b563bc4bbcba4dcec4bc6","slug":"weibo/最优秀的员工专注于内容而非流程","date":"2024-03-14T07:45:09.131Z","updated":"2024-03-14T07:45:09.131Z","comments":true,"path":"api/articles/weibo/最优秀的员工专注于内容而非流程.json","cover":null,"text":"最优秀的员工专注于内容而非流程 27 年前，史蒂夫·乔布斯曾经说过：最优秀的员工专注于内容而非流程。研究证实了他的观点 乔布斯还说过：最优秀的员工通常也是最难管理的。 1979年，史蒂夫·乔布斯和一批苹果的工程师及高层访问了 Xerox PARC（帕洛阿尔托研究中心），这是一个致...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"classical","slug":"classical","count":6,"path":"api/categories/classical.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"WebGPT 的提示词定作技巧","uid":"4f763907b3ffd5e8576adaf054eba892","slug":"weibo/WebGPT 的提示词定作技巧","date":"2024-03-14T07:45:09.130Z","updated":"2024-03-14T07:45:09.130Z","comments":true,"path":"api/articles/weibo/WebGPT 的提示词定作技巧.json","cover":[],"text":"WebGPT 的提示词定作技巧 WebGPT🤖 这个GPT可以访问网络并生成网页代码解决方案 ChatGPT that has access to the Web powered by Web Requests. 地址：网页链接 Prompt 翻译： 你是一位在线上帮助人们的AI...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"小米汽车","uid":"6eb7707e2a80825a705d152f4820fb73","slug":"weibo/小米汽车（上图）","date":"2024-03-14T07:45:09.130Z","updated":"2024-03-14T07:45:09.130Z","comments":true,"path":"api/articles/weibo/小米汽车（上图）.json","cover":[],"text":"小米汽车（上图） ","link":"","photos":[],"count_time":{"symbolsCount":12,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"<% tp.file.title %>","uid":"f3a7a1ae5810a1d115aa263fefb11fd2","slug":"templater/安书模板","date":"2024-03-14T07:45:09.129Z","updated":"2024-03-14T07:45:09.129Z","comments":true,"path":"api/articles/templater/安书模板.json","cover":null,"text":"&lt;% tp.file.title %&gt; ","link":"","photos":[],"count_time":{"symbolsCount":26,"symbolsTime":"1 mins."},"categories":[{"name":"文章","slug":"文章","count":22,"path":"api/categories/文章.json"}],"tags":[{"name":"Ruby","slug":"Ruby","count":5,"path":"api/tags/Ruby.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"C语言实现Basic语言","uid":"99c222df6265914694fe0a0c6fdad83f","slug":"linux/C语言实现Basic语言","date":"2024-03-14T07:45:09.126Z","updated":"2024-03-14T07:45:09.126Z","comments":true,"path":"api/articles/linux/C语言实现Basic语言.json","cover":null,"text":"C语言实现Basic语言 C语言实现Basic语言，给出C语言实现代码 以下是一个简单的C语言实现Basic语言的示例代码： 12345678910111213141516171819202122232425262728293031323334353637383940414243...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Linux下命令工具箱","uid":"1d8bd87db6e909e4afecaef1ed59c41b","slug":"linux/Linux下命令工具箱","date":"2024-03-14T07:45:09.126Z","updated":"2024-03-14T07:45:09.126Z","comments":true,"path":"api/articles/linux/Linux下命令工具箱.json","cover":null,"text":"Linux下命令工具箱 z.lua + ripgrep + fzf + fish shell + starship + exa + lazygit + byobu + spacevim + zed z.lua目录跳转 zsh配置 .zshrc eval &quot;$(lua /...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"linux","slug":"linux","count":7,"path":"api/categories/linux.json"}],"tags":[{"name":"zsh","slug":"zsh","count":1,"path":"api/tags/zsh.json"},{"name":"fishell","slug":"fishell","count":1,"path":"api/tags/fishell.json"},{"name":"fzf","slug":"fzf","count":1,"path":"api/tags/fzf.json"},{"name":"riggrep","slug":"riggrep","count":1,"path":"api/tags/riggrep.json"},{"name":"starship","slug":"starship","count":1,"path":"api/tags/starship.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"查看进程打文件大小","uid":"e91abac01034f4c3267537e7e279ad34","slug":"linux/查看进程打文件大小","date":"2024-03-14T07:45:09.126Z","updated":"2024-03-14T07:45:09.126Z","comments":true,"path":"api/articles/linux/查看进程打文件大小.json","cover":null,"text":"查看进程打文件大小 如何查看Linux那个进程的打开了大文件 要查看Linux中哪个进程打开了大文件，可以使用lsof命令。lsof是一个用于显示已打开的文件的工具。 以下是使用lsof命令来查看Linux中哪个进程打开了大文件的步骤： 打开终端。 输入以下命令并按下Enter键...","link":"","photos":[],"count_time":{"symbolsCount":417,"symbolsTime":"1 mins."},"categories":[{"name":"知识","slug":"知识","count":11,"path":"api/categories/知识.json"}],"tags":[{"name":"心里学","slug":"心里学","count":10,"path":"api/tags/心里学.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Linux查看CPU内存硬盘大小的命令","uid":"0a67ef7b868dad2d1302f7dda41cf2d2","slug":"linux/Linux查看CPU内存硬盘大小的命令","date":"2024-03-14T07:45:09.125Z","updated":"2024-03-14T07:45:09.125Z","comments":true,"path":"api/articles/linux/Linux查看CPU内存硬盘大小的命令.json","cover":null,"text":"Linux查看CPU内存硬盘大小的命令 如何用命令查Linux系统CPU核数、内存大小、磁盘的总容量 要查看Linux系统的CPU核数，可以使用以下命令： 1cat /proc/cpuinfo | grep &quot;processor&quot; | wc -l 要查看Lin...","link":"","photos":[],"count_time":{"symbolsCount":908,"symbolsTime":"1 mins."},"categories":[{"name":"linux","slug":"linux","count":7,"path":"api/categories/linux.json"}],"tags":[{"name":"cpu","slug":"cpu","count":1,"path":"api/tags/cpu.json"},{"name":"内存","slug":"内存","count":1,"path":"api/tags/内存.json"},{"name":"硬盘","slug":"硬盘","count":1,"path":"api/tags/硬盘.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"deb安装包如何在Linux上安装","uid":"f51f6a7100298360c1660abcde8f9070","slug":"linux/deb安装包如何在Linux上安装","date":"2024-03-14T07:45:09.125Z","updated":"2024-03-14T07:45:09.125Z","comments":true,"path":"api/articles/linux/deb安装包如何在Linux上安装.json","cover":null,"text":"deb安装包如何在Linux上安装 deb安装包如何在Linux上安装 deb包是Debian软件包管理系统中的一种二进制软件包格式。在Linux上安装deb包可以通过以下步骤实现： 打开终端，使用以下命令切换到root用户： 1sudo su 使用以下命令安装dpkg软件包管理...","link":"","photos":[],"count_time":{"symbolsCount":501,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lsof命令","uid":"908bb14a39f34acac1b8c6da5e195381","slug":"linux/lsof命令","date":"2024-03-14T07:45:09.125Z","updated":"2024-03-14T07:45:09.125Z","comments":true,"path":"api/articles/linux/lsof命令.json","cover":null,"text":"lsof命令 lsof 除了-i参数，还有那些参数可使用 除了-i参数，lsof命令还有以下常用参数可使用： -p ：显示指定进程ID所打开的文件列表。 -u ：显示指定用户名所打开的文件列表。 -c ：显示指定命令名所打开的文件列表。 -t：仅显示进程ID，不显示其他信息。 -...","link":"","photos":[],"count_time":{"symbolsCount":438,"symbolsTime":"1 mins."},"categories":[{"name":"linux","slug":"linux","count":7,"path":"api/categories/linux.json"},{"name":"lsof","slug":"linux/lsof","count":1,"path":"api/categories/linux/lsof.json"}],"tags":[{"name":"lsof","slug":"lsof","count":1,"path":"api/tags/lsof.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"汇编语言实现Basic","uid":"84194321ed7a1438454fe622f34bf356","slug":"linux/汇编语言实现Basic","date":"2024-03-14T07:45:09.125Z","updated":"2024-03-14T07:45:09.126Z","comments":true,"path":"api/articles/linux/汇编语言实现Basic.json","cover":null,"text":"汇编语言实现Basic 用汇编语言，写一个Basic语言的编译器 编写一个完整的Basic语言编译器需要大量的工作和代码，因此在这里只提供一个简单的示例，以展示如何将Basic语言转换为汇编语言。 12345678910111213141516171819202122232425...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}