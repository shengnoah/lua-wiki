{"total":1769,"pageSize":12,"pageCount":148,"data":[{"title":"Lua strings","uid":"0adc49d28e6e085c65366848d026e74d","slug":"zl/2016-01-01-663_Lua strings","date":"2024-04-03T03:47:35.887Z","updated":"2024-04-03T03:47:35.887Z","comments":true,"path":"api/articles/zl/2016-01-01-663_Lua strings.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"字符串或串(String)是由数字、字母、下划线组成的一串字符。Lua 语言中字符串可以使用以下三种方式来表示： 单引号间的一串字符。 双引号间的一串字符。 [[和]]间的一串字符。 转义字符用于表示不能直接显示的字符，比如后退键，回车键，等。如在字符串转换双引号可以使用 “””...","link":"","photos":[],"count_time":{"symbolsCount":422,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua Future","uid":"22e76e1efe2eb097760450e1c86ac2c2","slug":"zl/2016-01-01-662_Lua Future","date":"2024-04-03T03:47:35.886Z","updated":"2024-04-03T03:47:35.887Z","comments":true,"path":"api/articles/zl/2016-01-01-662_Lua Future.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Future模式：参见http://www.cnblogs.com/zhiranok/archive/2011/03/26/Future_Pattern.html 使用future的好处是即利用了异步的并行能力，又保证主逻辑串行执行，保持简单。 Lua 协程sina Timyan...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Unity3D集成Lua","uid":"1ea5df9307dc634325ed99570e17d366","slug":"zl/2016-01-01-661_Unity3D集成Lua","date":"2024-04-03T03:47:35.885Z","updated":"2024-04-03T03:47:35.886Z","comments":true,"path":"api/articles/zl/2016-01-01-661_Unity3D集成Lua.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" | 分类 &lt;a href=&quot;/categories/#lua之基础&quot; title=&quot;lua之基础&quot;&gt;lua之基础&lt;/a&gt; | 关于Lua、C# 的语法，这里不做介绍，之前有很多文章都有涉及，可以翻看一下（本文参考资...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"16 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua入门教程：编译、执行和错误","uid":"4ae02dbeefb32d47e6d19e874dd82a9f","slug":"zl/2016-01-01-660_Lua入门教程：编译、执行和错误","date":"2024-04-03T03:47:35.884Z","updated":"2024-04-03T03:47:35.885Z","comments":true,"path":"api/articles/zl/2016-01-01-660_Lua入门教程：编译、执行和错误.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"dofile 与 loadfile 函数dofile 是一个辅助函数，函数 loadfile 才完成了真正的核心工作。 两个函数都是从文件中加载 Lua 代码，但它不会运行，只是编译代码，然后把编译后的代码作为函数返回。与 dofile 不同，loadfile 不会抛出异常，只会...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Programming in Lua(Thrid Edition)笔记","uid":"a502732b8dc58224e972b6c53538b8c4","slug":"zl/2016-01-01-65_Programming in Lua(Thrid Edition)笔记","date":"2024-04-03T03:47:35.884Z","updated":"2024-04-03T03:47:35.884Z","comments":true,"path":"api/articles/zl/2016-01-01-65_Programming in Lua(Thrid Edition)笔记.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"4 Statements 多重赋值：先求出所有值，再赋值 交换两值 1x, y = y, x 多余的变量赋nil，多余的值丢弃 用局部变量保护全局变量 1local foo = foo if-then-elseif-else-end充当switch 1234567891011if...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"LUA 与 C","uid":"d2fdb69df2548aac5f06fae8b66d3deb","slug":"zl/2016-01-01-658_LUA 与 C","date":"2024-04-03T03:47:35.879Z","updated":"2024-04-03T03:47:35.879Z","comments":true,"path":"api/articles/zl/2016-01-01-658_LUA 与 C.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"栈 使用栈进行lua和C数据交换 要将一个值传给lua，需要先将该值压入栈，然后调用lua api函数，lua会从栈中获取该值并从栈中弹出 入栈API 123456void lua_pushnil(lua_State *);void lua_pushboolean(lua_Sta...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"高并发抢红包方案－－基于Redis lua方案","uid":"f7b1183de71bcce803607b6784e42ffe","slug":"zl/2016-01-01-659_高并发抢红包方案－－基于Redis lua方案","date":"2024-04-03T03:47:35.879Z","updated":"2024-04-03T03:47:35.883Z","comments":true,"path":"api/articles/zl/2016-01-01-659_高并发抢红包方案－－基于Redis lua方案.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Redis 2.6 内置Lua解释器 Lua由标准C编写而成，代码简洁优美，完整的Lua解释器不过200k，极易嵌入到其他程序。 Lua和C/C++代码交互容易， 性能和灵活性大大提高。 可作为扩展脚本，也可以作为普通的配置文件，实现复杂的配置逻辑，并且容易理解和维护. Red...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Redis实现分布式锁Lua脚本","uid":"856aae23dd974ad10df3608af21dd73a","slug":"zl/2016-01-01-657_Redis实现分布式锁Lua脚本","date":"2024-04-03T03:47:35.878Z","updated":"2024-04-03T03:47:35.879Z","comments":true,"path":"api/articles/zl/2016-01-01-657_Redis实现分布式锁Lua脚本.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"简单锁采用键值对存储，键是锁的标识，值是全局唯一值（如uuid）。 获取锁1234567891011121314local key = KEYS[1] -- 锁标识local value = ARGV[1] -- 全局唯一值local ttl = tonumber(ARGV[2]...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua 的标准输出与缓存","uid":"eb6769635061336dbbe2c0540f762f81","slug":"zl/2016-01-01-655_Lua 的标准输出与缓存 ","date":"2024-04-03T03:47:35.877Z","updated":"2024-04-03T03:47:35.877Z","comments":true,"path":"api/articles/zl/2016-01-01-655_Lua 的标准输出与缓存 .json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"最近我遇到了个奇怪的问题，我的一个Lua脚本需要通过shell的重定向将输出追加到一个日志文件中。但是那个Lua脚本的输出在日志文件里看来却不是实时的，输出的文本直到脚本结束时才能看到。 在shell下运行这个程序，是可以看到实时输出的： -- buffer_test.lua l...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"150. Evaluate Reverse Polish Notation","uid":"a3c66f1145fcdbb9f5cecca2e489dca0","slug":"zl/2016-01-01-656_150. Evaluate Reverse Polish Notation","date":"2024-04-03T03:47:35.877Z","updated":"2024-04-03T03:47:35.878Z","comments":true,"path":"api/articles/zl/2016-01-01-656_150. Evaluate Reverse Polish Notation.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"每日一题 2019 - 05 - 12 题目：Evaluate the value of an arithmetic expression in Reverse Polish Notation. Valid operators are +, -, *, /. Each opera...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"nginx lua 编译安装 « 诗宁","uid":"47d85599ba5132364a2046c6149d4ae7","slug":"zl/2016-01-01-654_nginx lua 编译安装 « 诗宁","date":"2024-04-03T03:47:35.876Z","updated":"2024-04-03T03:47:35.877Z","comments":true,"path":"api/articles/zl/2016-01-01-654_nginx lua 编译安装 « 诗宁.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 编译安装脚本 主配置文件 systemd启动配置 启动脚本 编译安装脚本 nginx-lua-build.sh #!/bin/bash #Date:2018-09-03 #Written by magic5650. #Readme:install nginx + lua. #s...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"基于Nginx Lua 和Netflix Eureka的微服务网关","uid":"8e32dba5b3f21244d1fa5adf8939b7d6","slug":"zl/2016-01-01-653_基于Nginx Lua 和Netflix Eureka的微服务网关","date":"2024-04-03T03:47:35.873Z","updated":"2024-04-03T03:47:35.873Z","comments":true,"path":"api/articles/zl/2016-01-01-653_基于Nginx Lua 和Netflix Eureka的微服务网关.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"依赖：lua-resty-http 基于Nginx&amp;Lua 和Netflix Eureka的微服务网关。 重新架构了内部组件，采用插件模式。 服务发现 Eureka Discovery 抽象discovery，用来支持多种服务发现？规划中… 动态路由 负载均衡 加权轮询 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}