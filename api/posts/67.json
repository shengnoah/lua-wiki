{"total":1769,"pageSize":12,"pageCount":148,"data":[{"title":"lua","uid":"df60e476b394b1dd4755ec96c53302ff","slug":"zl/2016-01-01-258_lua","date":"2024-04-03T03:47:33.121Z","updated":"2024-04-03T03:47:33.121Z","comments":true,"path":"api/articles/zl/2016-01-01-258_lua.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;Lua支持两种形式的函数调用，一种对调用过程的堆栈进行保护，即使中间过程出错，也不至于让进程退出，也就是pcall，一般在使用C调用Lua写的脚本函数时，都采用pcall方式。&lt;/p&gt; 对比起一般的函数调用方式，pcall多做了这些事情： 对函数调...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua 快速入门","uid":"283f8685b3892ee900dfb7aaef57d552","slug":"zl/2016-01-01-259_Lua 快速入门","date":"2024-04-03T03:47:33.121Z","updated":"2024-04-03T03:47:33.122Z","comments":true,"path":"api/articles/zl/2016-01-01-259_Lua 快速入门.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;Lua 是一门强大、快速、轻量的嵌入式脚本语言，那么我们如何才能够快速学习和掌握 Lua 语言呢？在这我将分享一下我的 Lua 快速入门经验，希望对大家有所帮助。&lt;/p&gt; Lua 的安装过程可以参考 Lua 官网 或云风翻译的 Lua 5.3 参考...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lua表的创建和初始化","uid":"1d654bb98ea9599ed499e6335324ac9a","slug":"zl/2016-01-01-257_lua表的创建和初始化","date":"2024-04-03T03:47:33.120Z","updated":"2024-04-03T03:47:33.121Z","comments":true,"path":"api/articles/zl/2016-01-01-257_lua表的创建和初始化.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;h4 id=&quot;表的基本实现&quot;&gt;&lt;a href=&quot;https://chuangyutime.com/#%E8%A1%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E5%AE%9E%E7%8E%B0&quot; cla...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua 排序算法","uid":"18c65ae79c1521b9ec150d64b8237a42","slug":"zl/2016-01-01-256_Lua 排序算法 ","date":"2024-04-03T03:47:33.120Z","updated":"2024-04-03T03:47:33.120Z","comments":true,"path":"api/articles/zl/2016-01-01-256_Lua 排序算法 .json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;冒泡排序（Bubble Sort，台湾译为：泡沫排序或气泡排序）是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来...","link":"","photos":[],"count_time":{"symbolsCount":843,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua源码阅读：数据结构与栈","uid":"9537102a666b3e62277312d5e670a702","slug":"zl/2016-01-01-255_Lua源码阅读：数据结构与栈","date":"2024-04-03T03:47:33.120Z","updated":"2024-04-03T03:47:33.120Z","comments":true,"path":"api/articles/zl/2016-01-01-255_Lua源码阅读：数据结构与栈.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;承接上篇虚拟机概述，解析函数执行流程。&lt;/p&gt; 数据结构与栈：每个Lua 虚拟机对应一个 lua_State 结构体，它使用 TValue 数组来模拟栈，其中包括几个与栈相关的成员： stack：栈数组的起始位置 base：当前函数栈的基地址 to...","link":"","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua中ipairs和pairs的区别与使用","uid":"ee708369e43d7b01905981d2b3485e2f","slug":"zl/2016-01-01-254_Lua中ipairs和pairs的区别与使用","date":"2024-04-03T03:47:33.119Z","updated":"2024-04-03T03:47:33.120Z","comments":true,"path":"api/articles/zl/2016-01-01-254_Lua中ipairs和pairs的区别与使用.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;div class=&quot;post-nav&quot;&gt; &lt;div class=&quot;post-nav-next post-nav-item&quot;&gt; &lt;a href=&quot;https://hulinhong.com/201...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lua学习笔记（一）","uid":"e8058bc58a0d4fd63c47f20b7d5cde34","slug":"zl/2016-01-01-253_lua学习笔记（一）","date":"2024-04-03T03:47:33.119Z","updated":"2024-04-03T03:47:33.119Z","comments":true,"path":"api/articles/zl/2016-01-01-253_lua学习笔记（一）.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;h2 id=&quot;注释&quot;&gt;&lt;a href=&quot;https://Jaxes.github.io/#%E6%B3%A8%E9%87%8A&quot; class=&quot;headerlink&quot; title=&quot;注释&...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"centos下安装openresty+ngx_lua_waf防火墙部署","uid":"0bbecffdbf888a921316fd4ef393eaaa","slug":"zl/2016-01-01-251_centos下安装openresty+ngx_lua_waf防火墙部署","date":"2024-04-03T03:47:33.118Z","updated":"2024-04-03T03:47:33.118Z","comments":true,"path":"api/articles/zl/2016-01-01-251_centos下安装openresty+ngx_lua_waf防火墙部署.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;全文默认安装路径：/usr/local/src&lt;/p&gt; 1、安装Luagit:1234567# cd /usr/local/src# wget http://luajit.org/download/LuaJIT-2.1.0-beta3.tar.gz...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lua c api","uid":"a088e52eeedd5a2e08a78395ae73ef54","slug":"zl/2016-01-01-252_lua c api ","date":"2024-04-03T03:47:33.118Z","updated":"2024-04-03T03:47:33.119Z","comments":true,"path":"api/articles/zl/2016-01-01-252_lua c api .json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 一 概述 在 C 中使用 API 通过栈操作表或数组类型的数据，本篇使用示例来演示如果通过栈来操作表。 二 渠道秘钥更新 set_channel_key 函数接收一个 table 作为参数，从 table 中获取 channel_name 的值作为 key，之后从动态库的全局渠...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lua require机制","uid":"fc07d610e727a4dac9a13d0c264a8534","slug":"zl/2016-01-01-24_lua require机制","date":"2024-04-03T03:47:33.117Z","updated":"2024-04-03T03:47:33.117Z","comments":true,"path":"api/articles/zl/2016-01-01-24_lua require机制.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"require(modname) 加载给定的模块.函数首先检查表package.loaded来判定modname是否已经存在. 如果存在,则require返回package.loaded[modname]所存储的值否则它尝试为模块找到一个加载器(loader). 要找到一个加载器...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua中的深拷贝与浅拷贝","uid":"08ce81cf0af59271fcc247bbc48f18d2","slug":"zl/2016-01-01-250_Lua中的深拷贝与浅拷贝","date":"2024-04-03T03:47:33.117Z","updated":"2024-04-03T03:47:33.118Z","comments":true,"path":"api/articles/zl/2016-01-01-250_Lua中的深拷贝与浅拷贝.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;有关深拷贝、浅拷贝在Lua中的一系列事情。&lt;/p&gt; 为什么要写深拷贝：在《Lua进程设计（第四版）》第五章开头，作者描述了表的性质： 已经描述的很清楚了，对于表的操作，Lua语言不会进行深拷贝（即Lua语言拷贝的是对象的引用而非整个对象本身。） 先...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"浅析android手游lua脚本的加密与解密（后续）","uid":"bd350126d0e97ae395bee5fd654c1540","slug":"zl/2016-01-01-249_浅析android手游lua脚本的加密与解密（后续）","date":"2024-04-03T03:47:33.116Z","updated":"2024-04-03T03:47:33.117Z","comments":true,"path":"api/articles/zl/2016-01-01-249_浅析android手游lua脚本的加密与解密（后续）.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt; 趁着周末，把lua的后续文章也写完了。&lt;/p&gt; 反编译对抗 众所周知，反汇编/反编译 工具在逆向人员工作中第一步被使用，其地位非常之高，而对于软件保护者来说，如何对抗 反汇编/反编译 就显得尤为重要。例如，动态调试中对OD的的检测、内核调试对wi...","link":"","photos":[],"count_time":{"symbolsCount":"7.4k","symbolsTime":"7 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}