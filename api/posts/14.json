{"total":665,"pageSize":12,"pageCount":56,"data":[{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"old-lua/2016-06-01-README","date":"2024-03-14T06:15:59.729Z","updated":"2024-03-14T06:15:59.729Z","comments":true,"path":"api/articles/old-lua/2016-06-01-README.json","cover":null,"text":"Lua 中文指南permalink: /lua_guide/README/Lua 语言是基于 C 语言之上的开源编程语言。它的价值在于其跨平台的特性，从大型服务器系统到小型移动应用都可以看到它的身影。 这篇教程不仅包括 Lua 编程语言的基本知识，还包括 Lua 语言在各类应用场...","link":"","photos":[],"count_time":{"symbolsCount":365,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"数组","uid":"e16187d7a3c490f96b788338bdd79d24","slug":"old-lua/2016-06-01-arrays","date":"2024-03-14T06:15:59.729Z","updated":"2024-03-14T06:15:59.729Z","comments":true,"path":"api/articles/old-lua/2016-06-01-arrays.json","cover":null,"text":"Lua 数组数组是一组有序的对象排列，既可以是一维的也可以是多维的。 在 Lua 语言中，数组是用整数索引表实现的。数组的大小并不固定，随着数组元素的增加，它可以动态地增加内存空间大小。 一维数组一维数组可以使用一个简单的表结构表示。可以通过一个简单循环初始化数组或者读取数组中数...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"Lua","slug":"Lua","count":3,"path":"api/categories/Lua.json"},{"name":"Arrays","slug":"Lua/Arrays","count":1,"path":"api/categories/Lua/Arrays.json"}],"tags":[{"name":"Arrays","slug":"Arrays","count":1,"path":"api/tags/Arrays.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua基本语法","uid":"9b97fd5c58ceb41de2e73474e4dfb1f8","slug":"old-lua/2016-06-01-basic-syntax","date":"2024-03-14T06:15:59.729Z","updated":"2024-03-14T06:15:59.729Z","comments":true,"path":"api/articles/old-lua/2016-06-01-basic-syntax.json","cover":null,"text":"基本语法Lua 学起来非常简单。现在，让我们开始创建我们的第一个 Lua 程序吧！ 第一个 Lua 程序Lua 提供交互式编程模式。在这个模式下，你可以一条一条地输入命令，然后立即就可以得到结果。你可以在 shell 中使用 lua -i 或者 lua 命令启动。输入命令后，按下...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Break语句","uid":"1e07952645adeb0063307933aff99e35","slug":"old-lua/2016-06-01-break","date":"2024-03-14T06:15:59.729Z","updated":"2024-03-14T06:15:59.729Z","comments":true,"path":"api/articles/old-lua/2016-06-01-break.json","cover":null,"text":"break 语句程序在解释执行过程中，在循环内遇到 break 语句时，循环将立即结束。程序将循环语句的下一条语句开始执行。如果你是在嵌套循环（即，一个循环内还有一个循环语句）内使用 break 语句，break 只结束内层循环，并从该代码块后的第一条语句处开始执行。 语法bre...","link":"","photos":[],"count_time":{"symbolsCount":566,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua协程","uid":"bce3027296f15638c976f1ebef15c96b","slug":"old-lua/2016-06-01-coroutines","date":"2024-03-14T06:15:59.729Z","updated":"2024-03-14T06:15:59.729Z","comments":true,"path":"api/articles/old-lua/2016-06-01-coroutines.json","cover":null,"text":"Lua 协程概述协程具有协同的性质，它允许两个或多个方法以某种可控的方式协同工作。在任何一个时刻，都只有一个协程在运行，只有当正在运行的协程主动挂起时它的执行才会被挂起（暂停）。 上面的定义可能看上去比较模糊。接下来让我讲得很清楚一点，假设我们有两个方法，一个是主程序方法，另一个...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua数据库访问","uid":"5593d949c022c9556ceb62d288c587d5","slug":"old-lua/2016-06-01-database-access","date":"2024-03-14T06:15:59.729Z","updated":"2024-03-14T06:15:59.729Z","comments":true,"path":"api/articles/old-lua/2016-06-01-database-access.json","cover":null,"text":"Lua 数据库访问简单的数据操作，我们用文件就可以处理。但是，某些时候文件操作存在性能、扩展性等问题。这时候，我们就需要使用数据库。LuaSQL 是一个提供数据库操作的库，它支持多种 SQL 数据库的操作。包括： SQLite MySQL ODBC 在本教程中，我们会讲解用 Lu...","link":"","photos":[],"count_time":{"symbolsCount":"6.2k","symbolsTime":"6 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua调试","uid":"374513b04e64d95f7bc41ddb08581b8d","slug":"old-lua/2016-06-01-debugging","date":"2024-03-14T06:15:59.729Z","updated":"2024-03-14T06:15:59.729Z","comments":true,"path":"api/articles/old-lua/2016-06-01-debugging.json","cover":null,"text":"Lua 调试Lua 提供一个调试库，这个库中提供了创建自己的调试器所需的所有原语函数。虽然，Lua 没有内置调试器，但是开发者们为 Lua 开发了许多的开源调试器。 Lua 调试库包括的函数如下表所示。 S.N. 方法和描述 1 debug():进入交互式调试模式，在此模式下用户...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"数据类型","uid":"a760ef6d11a2d6078a812f5bc31cf898","slug":"old-lua/2016-06-01-data-types","date":"2024-03-14T06:15:59.729Z","updated":"2024-03-14T06:15:59.729Z","comments":true,"path":"api/articles/old-lua/2016-06-01-data-types.json","cover":null,"text":"数据类型Lua 是动态类型编程语言，变量没有类型，只有值才有类型。值可以存储在变量中，作为参数传递或者作为返回值。尽管在 Lua 中没有变量数据类型，但是值是有类型的。下面的列表中列出了数据类型： 值类型 描述 nil 用于区分值是否有数据，nil 表示没有数据。 boolean...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua判断","uid":"d6286a3606fee451e0f5f2e41e7f6205","slug":"old-lua/2016-06-01-decision-making","date":"2024-03-14T06:15:59.729Z","updated":"2024-03-14T06:15:59.730Z","comments":true,"path":"api/articles/old-lua/2016-06-01-decision-making.json","cover":[],"text":"决策决策结构要求程序开发人员设置一个或多测试或计算条件。如果条件计算结果为真，则执行一个或多个语句；如果条件为假，则执行另外的语句。 下面是大多数程序语言中的决策结构的一般形式： Lua 语言中所有布尔真和非 nil 值都当作真；把所有的布尔假和 nil 作为假。请注意，Lua ...","link":"","photos":[],"count_time":{"symbolsCount":451,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Obsidian插件实现","uid":"5489aee09b1e0d4c387a202c68b698a4","slug":"obsidian/Obsidian插件实现","date":"2024-03-14T06:15:59.728Z","updated":"2024-03-14T06:15:59.728Z","comments":true,"path":"api/articles/obsidian/Obsidian插件实现.json","cover":null,"text":"Obsidian插件实现Obsidian插件是用什么语言编写的 ，如何写一个简单的Obsidian插件? Obsidian插件是用JavaScript编写的。下面是一个简单的Obsidian插件的示例： 创建一个新文件夹，命名为”my-plugin”（你可以使用任何你喜欢的文件夹...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Obsidian的Dataview和Database插件","uid":"5f58f8177c391899cad1f2d5f235d2b7","slug":"obsidian/Obsidian的Dataview和Database插件","date":"2024-03-14T06:15:59.728Z","updated":"2024-03-14T06:15:59.728Z","comments":true,"path":"api/articles/obsidian/Obsidian的Dataview和Database插件.json","cover":"https://s2.loli.net/2024/02/07/Z3D6Et2BkCGpKM4.png","text":"Obsidian的Dataview和Database插件Obsidian的两个很有多的插件：Dataview和Database。 这两个插件可以做相反的两个操作。 A).Dataview插件提供了一种类似SQL的功能，可以用类似SQL语言， 让不是计算机专业的人，通过类似SQL的...","link":"","photos":[],"count_time":{"symbolsCount":567,"symbolsTime":"1 mins."},"categories":[{"name":"obsidian","slug":"obsidian","count":8,"path":"api/categories/obsidian.json"}],"tags":[{"name":"dataview","slug":"dataview","count":1,"path":"api/tags/dataview.json"},{"name":"database","slug":"database","count":1,"path":"api/tags/database.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"将AI功能引入Obsidian：提供强大的语义搜索和生成式问答功能","uid":"211df99c937bc699c0f7bf5b7ef17ea0","slug":"obsidian/将AI功能引入Obsidian：提供强大的语义搜索和生成式问答功能","date":"2024-03-14T06:15:59.728Z","updated":"2024-03-14T06:15:59.728Z","comments":true,"path":"api/articles/obsidian/将AI功能引入Obsidian：提供强大的语义搜索和生成式问答功能.json","cover":null,"text":"将AI功能引入Obsidian：提供强大的语义搜索和生成式问答功能【Obsidian AI：将AI功能引入Obsidian，提供强大的语义搜索和生成式问答功能】’Obsidian AI - Adding powerful semantic search, generative a...","link":"","photos":[],"count_time":{"symbolsCount":433,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}