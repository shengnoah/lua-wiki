{"total":1769,"pageSize":12,"pageCount":148,"data":[{"title":"Lua table、模块与面向对象","uid":"2c7b59d286ea0f514f3312281292ce52","slug":"zl/2016-01-01-988_Lua table、模块与面向对象","date":"2024-04-03T03:47:36.240Z","updated":"2024-04-03T03:47:36.240Z","comments":true,"path":"api/articles/zl/2016-01-01-988_Lua table、模块与面向对象.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"很久之前接触过lua，最近在工作中又用到了一些，对lua这门语言又有了新的认识和理解。Lua是一门很简洁高效的语言,在openresty项目中大量使用，游戏开发中也使用lua来写一些脚本。在这里记录一下自己对lua中面向对象的理解。 table在lua中是一种kv的数据结构，也指...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"OpenWRT路由器设置界面中的Lua填坑","uid":"a8bb653ca9913e2a5fcf9590b1b04c81","slug":"zl/2016-01-01-989_OpenWRT路由器设置界面中的Lua填坑","date":"2024-04-03T03:47:36.240Z","updated":"2024-04-03T03:47:36.240Z","comments":true,"path":"api/articles/zl/2016-01-01-989_OpenWRT路由器设置界面中的Lua填坑.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"刚结束一个急活，主要是整理某个 OpenWRT 路由的设置界面，网页服务主要用的是 Nginx，网页用的是 BackBone 和 jQuery 配合，后端设置服务主要用的是 Lua（由 Nginx 代理）调用 OpenWRT 的 UCI 和 ubus。一开始我以为只需要前端稍微调...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua的and与or","uid":"71cb346a59482d5dd4b066a2de9b0072","slug":"zl/2016-01-01-98_Lua的and与or","date":"2024-04-03T03:47:36.240Z","updated":"2024-04-03T03:47:36.240Z","comments":true,"path":"api/articles/zl/2016-01-01-98_Lua的and与or.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"很早就知道lua的and与or的巧妙用法： local str = num==1 and &#34;one&#34; or &#34;not one&#34; 这句话可以简洁的表达如下意思： local str = &#34;&#34; if num==1 then str = ...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"给 Tengine 加上 lua 拓展","uid":"6224a2d92b8e1402c742058a9d03bd16","slug":"zl/2016-01-01-990_给 Tengine 加上 lua 拓展","date":"2024-04-03T03:47:36.240Z","updated":"2024-04-03T03:47:36.241Z","comments":true,"path":"api/articles/zl/2016-01-01-990_给 Tengine 加上 lua 拓展.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Tengine 能动态加载第三方模块，成为我们青睐的选择，我们可以编译动态链接文件，而不需要重新安装 Nginx, 这对在线增强 webservice 很有帮助.感谢 agentzh, lua-nginx-module, 可以让我们使用 lua 增强nginx的功能, 不言而喻，...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"evaluate(input_sentence)","uid":"a7684d8db99f4a04b496679622ad1b05","slug":"zl/2016-01-01-986_evaluate(input_sentence)","date":"2024-04-03T03:47:36.239Z","updated":"2024-04-03T03:47:36.239Z","comments":true,"path":"api/articles/zl/2016-01-01-986_evaluate(input_sentence).json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"详细的记录 evaluate函数的实现。解决报错 12345678910111213141516171819ValueError Traceback (most recent call last)&lt;ipython-input-44-2ec1176683f0&gt; in &...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lua gc分析","uid":"907fabdd67222b9ee3c6f8c656f559b7","slug":"zl/2016-01-01-983_lua gc分析","date":"2024-04-03T03:47:36.238Z","updated":"2024-04-03T03:47:36.238Z","comments":true,"path":"api/articles/zl/2016-01-01-983_lua gc分析.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"说明分析lua使用的gc算法，如何做到分步gc，以及测试结论 gc算法分析lua gc采用的是标记-清除算法，即一次gc分两步： 从根节点开始遍历gc对象，如果可达，则标记 遍历所有的gc对象，清除没有被标记的对象 二色标记法lua 5.1之前采用的算法，二色回收法是最简单的标记...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua string 哈希碰撞","uid":"238efc63608af17eea7a4ab65a98f6e7","slug":"zl/2016-01-01-984_Lua string 哈希碰撞 ","date":"2024-04-03T03:47:36.238Z","updated":"2024-04-03T03:47:36.238Z","comments":true,"path":"api/articles/zl/2016-01-01-984_Lua string 哈希碰撞 .json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua 中 40 字节以下的字符串会被内部化到一张表中(Lua 5.3)，这张表挂在 global state 结构下。对于短字符串，相同的串在同一虚拟机上只会存在一份，这被称为字符串的内部化。 其实字符串在 Lua VM 中是以两种内部形式保存的：短字符串及长字符串。其界限默认...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"PIL.9Lua中的闭包","uid":"66065dc59985b4408d9fe81f872d389b","slug":"zl/2016-01-01-985_PIL.9Lua中的闭包","date":"2024-04-03T03:47:36.238Z","updated":"2024-04-03T03:47:36.239Z","comments":true,"path":"api/articles/zl/2016-01-01-985_PIL.9Lua中的闭包.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua中的函数是 第一类的值加上合适的词法域。那么，函数是第一类值意味着什么呢？这是说，在Lua中，一个函数，就是一个和 数字或字符串一样具有某些权限的值。一个程序可以把函数存储在变量中（全局或者局部都可以）和表中，把函数作为参数传递给其他函数，或者以函数作为值返回。 函数具有词...","link":"","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lua学习笔记","uid":"329726c67d21b0b62fc4af0c5b68cfed","slug":"zl/2016-01-01-980_lua学习笔记","date":"2024-04-03T03:47:36.237Z","updated":"2024-04-03T03:47:36.237Z","comments":true,"path":"api/articles/zl/2016-01-01-980_lua学习笔记.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 使用命令行参数-i来启动lua解释器，那么解释器就会在运行完指定的程序块后进入交互模式。 12345test.luafunction ( ... ) print(&#34;foo&#34;)end 1234lua -i test.luaLua 5.1.5 Copyright (...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lua语法","uid":"6fd8143c3b34ef934d677c24fc2719a0","slug":"zl/2016-01-01-982_lua语法","date":"2024-04-03T03:47:36.237Z","updated":"2024-04-03T03:47:36.238Z","comments":true,"path":"api/articles/zl/2016-01-01-982_lua语法.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"lua特性开源，轻量级，c语言编写实现，实现面向对象有点绕，执行效率高 lua开发环境 linux 123456789101112131415-- 下载lua包、解压wget -c http://www.lua.org/ftp/lua-5.3.0.tar.gztar zxvf l...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"C++与Lua初探","uid":"cb25719c3491a610b47df036c787cab4","slug":"zl/2016-01-01-981_C++与Lua初探","date":"2024-04-03T03:47:36.237Z","updated":"2024-04-03T03:47:36.237Z","comments":true,"path":"api/articles/zl/2016-01-01-981_C++与Lua初探.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"最近在工作中用到了Lua与C++的相互调用的知识，现在对两者的互相调用进行总结。 我觉得要了解两者之间的调用关系，需要弄清三件事情： lua栈是什么 C++如何调用lua lua如何调用C++ 在弄清这三件事情之前，让我们先来看看怎么讲Lua嵌入到C++程序中。 大致思路就是将L...","link":"","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"基于AndroLua_Pro的Android开发代码示例","uid":"94417dda5756bd306e745ea97ae3cbdc","slug":"zl/2016-01-01-978_基于AndroLua_Pro的Android开发代码示例","date":"2024-04-03T03:47:36.236Z","updated":"2024-04-03T03:47:36.236Z","comments":true,"path":"api/articles/zl/2016-01-01-978_基于AndroLua_Pro的Android开发代码示例.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 温馨提示:请使用电脑浏览器打开,以确保最佳的阅读体验,谢谢.(￣▽￣)” 我希望你有了一些AndroLua_Pro的基础, 如果还没有可以结合这篇文章(基于AndroLua_Pro的Android开发笔记)来看. 其实我代码都放在了GitHub, 可以去看看呗. 缓存 缓存函数...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}