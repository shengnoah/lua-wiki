{"total":665,"pageSize":12,"pageCount":56,"data":[{"title":"Nginx用户权限(文件读写时候应该注意到的问题)","uid":"f92daeec6e530de0b09511ed8dbb5099","slug":"old_topic/2016-09-17-142","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.735Z","comments":true,"path":"api/articles/old_topic/2016-09-17-142.json","cover":null,"text":"Nginx用户权限 Nginx用户权限 有时候当Nginx读取本地目录时会收到403错误，权限问题。先来了解一下Nginx的用户管理，Nginx在以Linux service脚本启动时，通过start-stop-domain启动，会以root权限运行daemon进程。 然后dae...","link":"","photos":[],"count_time":{"symbolsCount":510,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Python FAQ","uid":"a727f439282961c5a114ce0175689f60","slug":"old_topic/2016-09-17-146","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.736Z","comments":true,"path":"api/articles/old_topic/2016-09-17-146.json","cover":null,"text":"Python FAQ Flask 教程，第二部分：模板 Python多分隔符号拆分字符串 ","link":"","photos":[],"count_time":{"symbolsCount":49,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Windows下LUA配置环境变量(LDT)","uid":"7f033721bb83cf2964dc352671260885","slug":"old_topic/2016-09-17-149","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.736Z","comments":true,"path":"api/articles/old_topic/2016-09-17-149.json","cover":null,"text":"下面举个例子，在LDT下，如保设定环境变量，让IDE知道Lua安装的位置。 1LUA_CPATH=/usr/lib64/lua/5.1/?.so;?.so;/home/merge/1209/Core/lua_client/?.so;?.so;/usr/local/lib/lua/...","link":"","photos":[],"count_time":{"symbolsCount":280,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua功能模块之“加密”","uid":"70c113f1b89df0b719f9ae169720a491","slug":"old_topic/2016-09-17-147","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.736Z","comments":true,"path":"api/articles/old_topic/2016-09-17-147.json","cover":null,"text":"作者：糖果 在Lua开发的世界中，有很多开源的模块，分布在一些网站（比如开普勒项目），github上，有的都已经配置好了，可以向python的pip工具一样，只不过在lua世界中使用luarocks安装工具快速的安装。 我们在开发的工作中，难免要对一些数据进行加密处理，而加密模块...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Python多分隔符号拆分字符串","uid":"3988d823db5f3d6aedfba2bc8caffd2b","slug":"old_topic/2016-09-17-148","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.736Z","comments":true,"path":"api/articles/old_topic/2016-09-17-148.json","cover":[],"text":"如下代码，实现python多个分隔符拆分字符串。 1234567891011121314def tsplit(string, delimiters): &quot;&quot;&quot;Behaves str.split but supports multiple delimi...","link":"","photos":[],"count_time":{"symbolsCount":852,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"LUA的WEB开发框架Vanilla","uid":"087f4f77da99a0fec1375818d3495ed6","slug":"old_topic/2016-09-17-153","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.736Z","comments":true,"path":"api/articles/old_topic/2016-09-17-153.json","cover":[],"text":"作者：糖果 图片：vanilla_logo.jpg 这次我们介绍的框架和以往有些不同，最大的不同是，这是介绍的是一个国产Openresty Lua WEB框架，名字叫做Vanilia我们先简单的安装，和创建一个建工的工程，然后分析一下项目的源码。 我们假定用户用系统是centos...","link":"","photos":[],"count_time":{"symbolsCount":557,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"LUA与STOMP协议","uid":"9aeff2cf84352e0facabfc6256b648d7","slug":"old_topic/2016-09-17-152","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.736Z","comments":true,"path":"api/articles/old_topic/2016-09-17-152.json","cover":null,"text":"作者：糖果 STOMP协议是一种简单的消息文本协议。协义本身简单明了，用消息头定义和消息体数据传输。 RabbitMQ做为一种队列中间件，提供了STOMP协议的支持，我们可以通过STOMP协议向队列发送消息。下面的例子中，我们将使用LUA程序向RabbitMQ发送消息， 通过Py...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua的转义符号“%”","uid":"40c3b450ff372f1daa99baee2e917fc2","slug":"old_topic/2016-09-17-150","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.736Z","comments":true,"path":"api/articles/old_topic/2016-09-17-150.json","cover":null,"text":"作者：糖果 Lua有些符号在用户字符替换的时候，可能会发生转义。今天群里的一位小伙伴，就需要到类似的问题，比如说要将字符串中的’（’变成’[‘。 解答问题的伙伴给出如下代码： 123a = &#x27;123.(456)&#x27;c = string.gsub(a, &#x27...","link":"","photos":[],"count_time":{"symbolsCount":282,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua中ipair和pair关键字的区别是什么？","uid":"9898726b61c279db4684cd03b2a439c0","slug":"old_topic/2016-09-17-151","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.736Z","comments":true,"path":"api/articles/old_topic/2016-09-17-151.json","cover":null,"text":"ipair是从key=1，开始累加，遇到val是nil就结束循环。pair输出的结果和table定义的顺序是一致的(非数组不保证与声明的顺序一致)。 pairs()可以遍历整个table，即包括数组及非数组部分。ipairs()函数用于遍历table中的数组部分。 i= inte...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua Curl的一般应用","uid":"85399f84f55b8c1291e5685cda57f473","slug":"old_topic/2016-09-17-154","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.736Z","comments":true,"path":"api/articles/old_topic/2016-09-17-154.json","cover":null,"text":"作者：糖果 Curl是一个WEB开发常用的工具，直接用官网的翻译 curl是一个开源的命令行工具，也是一个库，用于传输URL语法的工具，支持DICT, FILE, FTP, FTPS, Gopher, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, ...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"LUA调用C语言实现的SO库","uid":"41a2ce410f87ba443188f31dccca5c41","slug":"old_topic/2016-09-17-156","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.736Z","comments":true,"path":"api/articles/old_topic/2016-09-17-156.json","cover":null,"text":"作者：糖果 这篇文章归纳lua5.1的C语言模库so的“标准”写法，代码都是编译通过的，可直接参考使用！ tangguo.h 123456789101112131415161718#ifndef __tangguo_h__#define __tangguo_h__#include...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"CSRF攻击预防的Token生成原理","uid":"2caace3339612aabd4a60ee7889dcc5d","slug":"old_topic/2016-09-17-155","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.736Z","comments":true,"path":"api/articles/old_topic/2016-09-17-155.json","cover":null,"text":"作者：糖果 以往我们讲到CSRF，谈及都是CSRF的攻击原理，这次讲一下预防CSRF，生成Token背后的加密原理和具体实现例示。 1.Token构成。 从需求功能上来讲，为了防止CSRF工具，token需要具有不重复，另外，还含有特定的功能信息，比如过期时间戳。 下面的图描述了...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}