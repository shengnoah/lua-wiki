{"total":1769,"pageSize":12,"pageCount":148,"data":[{"title":"Linux 下 lua 开发环境安装及安装 luafilesystem","uid":"8f4c30a76f8d788c178eb45d61a32358","slug":"zl/2016-01-01-683_Linux 下 lua 开发环境安装及安装 luafilesystem","date":"2024-04-03T03:47:35.918Z","updated":"2024-04-03T03:47:35.918Z","comments":true,"path":"api/articles/zl/2016-01-01-683_Linux 下 lua 开发环境安装及安装 luafilesystem.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"火云邪神语录：天下武功，无坚不破，唯快不破！Nginx 的看家本领就是速度，Lua 的拿手好戏亦是速度，这两者的结合在速度上无疑有基因上的优势。 最近一直再折腾这个，干脆就稍微整理下。以防后面继续跳坑！ 安装： 1.先安装 lua 的相关依赖安装 C 开发环境由于 gcc 包需要...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Ngx_lua_waf搭建步骤","uid":"daec95cc6d5bb06273470ed3fafb0d44","slug":"zl/2016-01-01-684_Ngx_lua_waf搭建步骤","date":"2024-04-03T03:47:35.918Z","updated":"2024-04-03T03:47:35.918Z","comments":true,"path":"api/articles/zl/2016-01-01-684_Ngx_lua_waf搭建步骤.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Ngx_lua_waf是一个web防火墙，主要通过lua实现，安装简单，性能优异，由国人loveshell开发。 ngx_lua_waf是我刚入职趣游时候开发的一个基于ngx_lua的web应用防火墙。 代码很简单，开发初衷主要是使用简单，高性能和轻量级。 现在开源出来，遵从MI...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lua基本语法","uid":"aee4e303f65857e7155c42b9b734660e","slug":"zl/2016-01-01-685_lua基本语法","date":"2024-04-03T03:47:35.918Z","updated":"2024-04-03T03:47:35.919Z","comments":true,"path":"api/articles/zl/2016-01-01-685_lua基本语法.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"关键字1234and break do else elseifend false for function ifin local nil not orrepeat return then true until while 运算 数字运算 12支持+，-，*，/，…… 比如2^2 ...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"通过lua栈了解lua与c的交互","uid":"85ff80717730fc6400f5d3d615799d7f","slug":"zl/2016-01-01-682_通过lua栈了解lua与c的交互","date":"2024-04-03T03:47:35.917Z","updated":"2024-04-03T03:47:35.918Z","comments":true,"path":"api/articles/zl/2016-01-01-682_通过lua栈了解lua与c的交互.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"其中分析、执行部分都是c语言实现的。 lua与c的关系lua的虚拟机是用c语言实现的，换句话说一段lua指令最终在执行时都是当作c语言来执行的，lua的global表，函数调用栈也都是存在c语言中的一个叫lua_State的结构体中的。举个例子，来看下lua中的加指令 OP_AD...","link":"","photos":[],"count_time":{"symbolsCount":"8.3k","symbolsTime":"8 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua语言","uid":"f2ad1fdbae5984109e0546da0f31ad6f","slug":"zl/2016-01-01-680_Lua语言","date":"2024-04-03T03:47:35.913Z","updated":"2024-04-03T03:47:35.913Z","comments":true,"path":"api/articles/zl/2016-01-01-680_Lua语言.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 1. 数据类型 数据类型 描述 nil 只有值为 nil 属于该类，表示一个无效值（在条件表达式中相当于 false） boolean false or true number 双精度类型的实浮点数 string 双引号或单引号表示 function 由 C 或 Lua 编写的...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua的元表","uid":"74fdff3e8ba6e278fa488790b194fb21","slug":"zl/2016-01-01-681_Lua的元表","date":"2024-04-03T03:47:35.913Z","updated":"2024-04-03T03:47:35.917Z","comments":true,"path":"api/articles/zl/2016-01-01-681_Lua的元表.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"在 Lua 5.1 语言中，元表 (metatable) 的表现行为类似于 C++ 语言中的操作符重载，例如我们可以重载 “__add” 元方法 (metamethod)，来计算两个 Lua 数组的并集；或者重载 “__index” 方法，来定义我们自己的 Hash 函数。Lua...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"搭建ngx_lua_waf","uid":"5b06da96654ab629a54d2007eebfe28b","slug":"zl/2016-01-01-67_搭建ngx_lua_waf [ Hexo ]","date":"2024-04-03T03:47:35.912Z","updated":"2024-04-03T03:47:35.912Z","comments":true,"path":"api/articles/zl/2016-01-01-67_搭建ngx_lua_waf [ Hexo ].json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Created at 2019-05-26 &lt;span id=&quot;post-title-updated&quot;&gt;Updated at 2019-08-15&lt;/span&gt; &lt;span id=&quot;post-title-categor...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"ulua学习笔记1","uid":"aaff2d552cd8f01832adc372fb61fa84","slug":"zl/2016-01-01-678_ulua学习笔记1","date":"2024-04-03T03:47:35.911Z","updated":"2024-04-03T03:47:35.911Z","comments":true,"path":"api/articles/zl/2016-01-01-678_ulua学习笔记1.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"本文为bbbbbbion（可以叫我六饼）原创总结，如有疏漏请各位拍砖留言。转载请尊重原作者成果，保留出处。这一系列用于记录笔者学习ulua热更新的过程。首先来看Windows下lua环境的搭建。 环境：lua for windows (lfW)主页：http://luaforwi...","link":"","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Redis实现限流器Lua脚本","uid":"204555f630806600c0a1c51fc58d3e02","slug":"zl/2016-01-01-679_Redis实现限流器Lua脚本","date":"2024-04-03T03:47:35.911Z","updated":"2024-04-03T03:47:35.912Z","comments":true,"path":"api/articles/zl/2016-01-01-679_Redis实现限流器Lua脚本.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"算法原理系统以恒定的速率产生令牌，然后把令牌放到令牌桶中，令牌桶有一个容量，当令牌桶满了的时候，再向其中放入的令牌会被丢弃；当想要处理一个请求的时候，需要从令牌桶中取出一个令牌，如果此时令牌桶中没有令牌，则拒绝该请求。 数据结构采用Hash结构存储，字段定义如下： 名称 含义 c...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua垃圾回收","uid":"956cb1692bdff1d5b6d834ddef84f682","slug":"zl/2016-01-01-676_Lua垃圾回收 [ 奔跑的蜗牛 ]","date":"2024-04-03T03:47:35.907Z","updated":"2024-04-03T03:47:35.907Z","comments":true,"path":"api/articles/zl/2016-01-01-676_Lua垃圾回收 [ 奔跑的蜗牛 ].json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 撰写于 2018-05-25 &lt;span id=&quot;post-title-updated&quot;&gt;修改于 2018-05-25&lt;/span&gt; &lt;span id=&quot;post-title-categories&quot;&gt;分...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Unity中的Lua","uid":"c73577aa8658fb5334e391f72e90284c","slug":"zl/2016-01-01-677_Unity中的Lua","date":"2024-04-03T03:47:35.907Z","updated":"2024-04-03T03:47:35.910Z","comments":true,"path":"api/articles/zl/2016-01-01-677_Unity中的Lua.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 文章目錄 &lt;/div&gt; &lt;p&gt;结合以前的初步学习了解，这一次要对Lua进行进一步的深入学习。&lt;/p&gt; 首先我们要知道Lua是脚本语言，是有自己的虚拟机，是解析执行而非像C#,C++,Java这些编译执行。同时Lua是弱类型语言。 这里不更多的...","link":"","photos":[],"count_time":{"symbolsCount":"8.9k","symbolsTime":"8 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"17.Lazy evaluation","uid":"3c7e71c1be82be38b25a9c952e02a32d","slug":"zl/2016-01-01-675_17.Lazy evaluation","date":"2024-04-03T03:47:35.905Z","updated":"2024-04-03T03:47:35.906Z","comments":true,"path":"api/articles/zl/2016-01-01-675_17.Lazy evaluation.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 从效率的角度而言，最好的计算就是不计算。如果必须执行计算，我们可以拖到非计算不可的时候再计算。这种操作广泛适用于各个领域。 引用计数123class { ... };String s1 = &#34;Hello&#34;;String s2 = s1; 一般来说，s2被s1初始...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}