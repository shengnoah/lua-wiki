{"total":1769,"pageSize":12,"pageCount":148,"data":[{"title":"cocos2dx lua注册事件详解","uid":"af9261daf33a3d2b8198b8c9a27ae883","slug":"zl/2016-01-01-426_cocos2dx lua注册事件详解","date":"2024-04-03T03:47:35.717Z","updated":"2024-04-03T03:47:35.718Z","comments":true,"path":"api/articles/zl/2016-01-01-426_cocos2dx lua注册事件详解.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"最近在学习cocos2dx lua的时候，遇到了一些关于事件注册的逻辑！ 结合用户实际操作和游戏的真实需求，关于事件在游戏中还是使用非常多的，所以特此记录一下 事件(源自网络) 事件是可以被控件识别的操作。如按下确定按钮，选择某个单选按钮或者复选框。每一种控件有自己可以识别的事件...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Unity Excel导表工具，导成Lua，支持嵌套结构 木之子南","uid":"637f0a8ba3b17b68093f59de919ea387","slug":"zl/2016-01-01-424_Unity Excel导表工具，导成Lua，支持嵌套结构 木之子南","date":"2024-04-03T03:47:35.713Z","updated":"2024-04-03T03:47:35.713Z","comments":true,"path":"api/articles/zl/2016-01-01-424_Unity Excel导表工具，导成Lua，支持嵌套结构 木之子南.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"为什么要使用导表工具？ 几乎所有游戏公司数据由策划来配置，程序负责逻辑，策划看不懂代码，excel是可以相对具象的让策划了解一个模块的数据配置，起到了策划和程序之间的桥梁作用，也可以方便策划对数据的把控。 根据各个公司各个项目的不同，导表工具的输出形式不同，输出形式有：json，...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Ansible Role 系统环境 之【lua】","uid":"ef55f640f38917f0aaf2475f037677be","slug":"zl/2016-01-01-425_Ansible Role 系统环境 之【lua】","date":"2024-04-03T03:47:35.713Z","updated":"2024-04-03T03:47:35.713Z","comments":true,"path":"api/articles/zl/2016-01-01-425_Ansible Role 系统环境 之【lua】.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Ansible Role: lua 介绍 要求 测试环境 角色变量 依赖 github地址 Example Playbook 添加lua语言环境 介绍 Lua 是一种轻量小巧的脚本语言，用标准C语言编写并以源代码形式开放， 其设计目的是为了嵌入应用程序中，从而为应用程序提供灵活...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"随机取n个不相同的元素（Lua） 木之子南","uid":"bca72b7983592027c66a9f3656ad722b","slug":"zl/2016-01-01-422_随机取n个不相同的元素（Lua） 木之子南","date":"2024-04-03T03:47:35.712Z","updated":"2024-04-03T03:47:35.712Z","comments":true,"path":"api/articles/zl/2016-01-01-422_随机取n个不相同的元素（Lua） 木之子南.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"随机取n个不相同的元素（Lua实现） 一些逻辑逻辑需求要在一个长度为m数组中取出n个不同的元素（m &gt; n），一般第一想法是随机出一个下标，然后删除对应的元素，以此来取出不同的元素。本篇文章介绍一个不需要删除操作的方法。代码如下： -- 假设长度m为10，随机取出个数为n=...","link":"","photos":[],"count_time":{"symbolsCount":481,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"leetcode150.Evaluate Reverse Polish Notation","uid":"ee891655411c520d8650b5b8cf0d510b","slug":"zl/2016-01-01-423_leetcode150.Evaluate Reverse Polish Notation","date":"2024-04-03T03:47:35.712Z","updated":"2024-04-03T03:47:35.712Z","comments":true,"path":"api/articles/zl/2016-01-01-423_leetcode150.Evaluate Reverse Polish Notation.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"题目要求Evaluate the value of an arithmetic expression in Reverse Polish Notation. Valid operators are +, -, *, /. Each operand may be an intege...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"在Lua中使用gettext实现多语言支持","uid":"d485d7ff58a4cae420de4aaaf961115d","slug":"zl/2016-01-01-420_[转]在Lua中使用gettext实现多语言支持","date":"2024-04-03T03:47:35.711Z","updated":"2024-04-03T03:47:35.711Z","comments":true,"path":"api/articles/zl/2016-01-01-420_[转]在Lua中使用gettext实现多语言支持.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"本文系转载，原文链接：http://zengrong.net/post/1986.htm感谢原作者无私分享。 在Lua中使用gettext实现多语言支持 2016-06-07更新：加入gettext包含的工具简介。 GNU gettext 是一套优秀的国际化工具。在 linux ...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lua三种字符串拼接性能分析","uid":"64d3ce23772c06fa9d2f5cc9cddb7b13","slug":"zl/2016-01-01-421_lua三种字符串拼接性能分析","date":"2024-04-03T03:47:35.711Z","updated":"2024-04-03T03:47:35.712Z","comments":true,"path":"api/articles/zl/2016-01-01-421_lua三种字符串拼接性能分析.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"说明lua中提供了3中字符串拼接函数，测试在日常使用情况下，各种拼接字符串的性能对比。 测试环境操作系统：Debian GNU/Linux 8CPU：Intel(R) Xeon(R) CPU E5-2640 v2 @ 2.00GHz内存：64Glua环境：LuaJIT-2.1.0...","link":"","photos":[],"count_time":{"symbolsCount":"7.1k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"深入 Lua Garbage Collector(一)","uid":"ec48293e5d778225a61731bb54ded445","slug":"zl/2016-01-01-41_深入 Lua Garbage Collector(一)","date":"2024-04-03T03:47:35.710Z","updated":"2024-04-03T03:47:35.711Z","comments":true,"path":"api/articles/zl/2016-01-01-41_深入 Lua Garbage Collector(一).json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"看到一个 Bob Nystrom 写的 C 语言实现的 Garbage Collector 借着这个小程序顺便深入地了解一下Lua的垃圾回收机制 Garbage Collector算法小结这是之前做的一点小笔记： C Garbage Collector首先还是先来看看这个 C 的...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"cocos2dx lua 多线程之协成理解与实战","uid":"f51b7c82932d35bf6007762646b46c8a","slug":"zl/2016-01-01-417_cocos2dx lua 多线程之协成理解与实战","date":"2024-04-03T03:47:35.706Z","updated":"2024-04-03T03:47:35.706Z","comments":true,"path":"api/articles/zl/2016-01-01-417_cocos2dx lua 多线程之协成理解与实战.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"lua是不支持多线程的，一般都是协同来调用的。但是lua却可以调用c函数。于是，我们通过lua调用C接口起一个线程，实现lua多线程的使用。子线程再调用lua中的function。就可以通过子线程获取一些数据。单纯的人儿，以为一切都是美好的。 问题就出现C调用lua中的funct...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lua通用数据类型","uid":"a671ff4d1c3c5fadfd8ab3ef296a465f","slug":"zl/2016-01-01-418_lua通用数据类型","date":"2024-04-03T03:47:35.706Z","updated":"2024-04-03T03:47:35.706Z","comments":true,"path":"api/articles/zl/2016-01-01-418_lua通用数据类型.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"TValue结构TValue这个结构体是Lua的通用结构体,,Lua中的所有的数据都可以使用这个结构体来表示.很容易想到,在面向对象中,这个结构体是一个基类,派生出来的都是其他的子类. TValue结构体内部有几个宏, 展开之后就是这样的: typedef struct lua_...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua string hash 算法","uid":"6adde4c0d4219f400e445d71ce124e5c","slug":"zl/2016-01-01-419_Lua string hash 算法 ","date":"2024-04-03T03:47:35.706Z","updated":"2024-04-03T03:47:35.710Z","comments":true,"path":"api/articles/zl/2016-01-01-419_Lua string hash 算法 .json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"我在前一篇文章介绍过下面这 3 个字符串拥有相同的 hash，会导致 Hash Dos 问题： &#34;0000000000000000000000000000000000&#34; &#34;f0l0l0w0m0e0n0t0w0i0t0t0e0r0?0:0)0&#34; &#...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"cocos2dx lua cc  ccs  ccui区别和使用","uid":"773e0dae68e1abbb2429bae454823d25","slug":"zl/2016-01-01-416_cocos2dx lua cc  ccs  ccui区别和使用","date":"2024-04-03T03:47:35.705Z","updated":"2024-04-03T03:47:35.705Z","comments":true,"path":"api/articles/zl/2016-01-01-416_cocos2dx lua cc  ccs  ccui区别和使用.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"最近遇到一个问题，网上一些教程，或者官方的一些教程，在对应使用cc，ccs ,ccui的时候，导致我这边没有提示，开始以为是编辑器的问题，然后硬写上去之后，在调试的时候直接报错，经过多次查看Api文档发现，我使用的Api中，并没有这个方法，那么问题来了！ 我应该怎么去调用这个对应...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}