{"total":1769,"pageSize":12,"pageCount":148,"data":[{"title":"Lua 汉字拼音首字母提取","uid":"7210045a47c00c031b29ac526b186e4c","slug":"zl/2016-01-01-482_Lua 汉字拼音首字母提取 ","date":"2024-04-03T03:47:35.762Z","updated":"2024-04-03T03:47:35.763Z","comments":true,"path":"api/articles/zl/2016-01-01-482_Lua 汉字拼音首字母提取 .json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"最近项目上有个需求，需要将一些联系人数据按照拼音首字母排序。google 了一番，竟然没有找到一个合适的 Lua 解决方案。倒是找到一个 lua-pinyin，粗略翻了下源码发现其是将所有的中文返回全部完整的拼音，原理是将所有汉字对应拼音创建好数据字典，载入 Lua，之后查询这个...","link":"","photos":[],"count_time":{"symbolsCount":598,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"nginx+lua动态改变upstream","uid":"b58a8ea534954f9808bf7947f17026eb","slug":"zl/2016-01-01-47_nginx+lua动态改变upstream","date":"2024-04-03T03:47:35.761Z","updated":"2024-04-03T03:47:35.761Z","comments":true,"path":"api/articles/zl/2016-01-01-47_nginx+lua动态改变upstream.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"在做毕设的时候需要动态改变通过nginx代理的服务器数量。背景大概是我有一个generator不断产生负载打在nginx上，还有一个monitor根据generator生成负载的qps来动态决定需要多少台服务器刚好能够承担这个qps的请求，因此需要动态修改nginx中的upstr...","link":"","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Coroutine协程","uid":"94a6b6597c466125d27dcf26efe96b41","slug":"zl/2016-01-01-480_[Lua] Coroutine协程","date":"2024-04-03T03:47:35.761Z","updated":"2024-04-03T03:47:35.762Z","comments":true,"path":"api/articles/zl/2016-01-01-480_[Lua] Coroutine协程.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Coroutine Manipulation coroutine.create (f) Creates a new coroutine, with body f. f must be a function. Returns this new coroutine, an objec...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua 有趣的语法特性","uid":"84ea8062aa5bfb9f0b90119d5879542b","slug":"zl/2016-01-01-479_Lua 有趣的语法特性","date":"2024-04-03T03:47:35.760Z","updated":"2024-04-03T03:47:35.761Z","comments":true,"path":"api/articles/zl/2016-01-01-479_Lua 有趣的语法特性.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 使用函数作为函数返回 table关联数组的多种访问形式 table计数的问题 函数其实也是变量 local 和 global 函数在调用的时候会有所区别 可变参数（5.1） 参数默认值 三元表达式 不同变量类型比较时不存在自动转换 只有 nil 和 false 是假，0,&#1...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua中关于table对象引用传递的注意事项","uid":"701786e387900af8ad697a179cb3c175","slug":"zl/2016-01-01-478_Lua中关于table对象引用传递的注意事项","date":"2024-04-03T03:47:35.760Z","updated":"2024-04-03T03:47:35.760Z","comments":true,"path":"api/articles/zl/2016-01-01-478_Lua中关于table对象引用传递的注意事项.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"最近写了挺长一段时间的Lua，发现Lua这个语言真的是很随意，产生这种感觉的根本原因应该是它把“函数” 作为了“第一类值”，也就是说函数也可以作为变量的“值”，这使得Lua可以随处定义函数，进而改变逻辑的走向，整个流程任你摆布。 虽说把一个函数来回设置方便了许多，但是同样带来了一...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lua中的表及面向对象","uid":"1ad5c690a0087b80478637ac337433fb","slug":"zl/2016-01-01-475_lua中的表及面向对象","date":"2024-04-03T03:47:35.757Z","updated":"2024-04-03T03:47:35.757Z","comments":true,"path":"api/articles/zl/2016-01-01-475_lua中的表及面向对象.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"在lua中，只有唯一的一种数据结构，表。通过表，却可以用来实现类一样的形式，其关键是对于表的元方法的使用，可以有很多奇妙的用处。 Lua中，所有的值都可以有一个有一个元表(metatable)，元表中的元素定义了对于值特定操作的方法，就叫做元方法。当然，这些元表是有默认值的，但我...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua 学习 chapter22","uid":"4a87df76c39f3f8150fdb435e35555f2","slug":"zl/2016-01-01-477_Lua 学习 chapter22 ","date":"2024-04-03T03:47:35.757Z","updated":"2024-04-03T03:47:35.758Z","comments":true,"path":"api/articles/zl/2016-01-01-477_Lua 学习 chapter22 .json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"目录 具有动态名称的全局变量 非全局环境 环境和模块 只有疯狂过，你才知道自己究竟能不能成功。 具有动态名称的全局变量 在lua中，所有的全局变量都被存在_G中，通过_G[name]可以访问到任意一个全局变量。在lua中，全局变量不需要声明就可以直接使用，但是这个可能会造成非常难...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua中的函数和闭包","uid":"1ee79d4ad61a9c9b3a3d6ebb0e10d2d3","slug":"zl/2016-01-01-476_Lua中的函数和闭包","date":"2024-04-03T03:47:35.757Z","updated":"2024-04-03T03:47:35.757Z","comments":true,"path":"api/articles/zl/2016-01-01-476_Lua中的函数和闭包.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;div class=&quot;wrap-content&quot;&gt; &lt;p&gt;当Lua&lt;strong&gt;编译一个函数的时候，会产生一个prototype&lt;/strong&gt;，这个prototype包含了这个函数的&lt;strong...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua基础","uid":"20b614bdbdbfb7a95408c75ff42d548f","slug":"zl/2016-01-01-474_Lua基础","date":"2024-04-03T03:47:35.756Z","updated":"2024-04-03T03:47:35.756Z","comments":true,"path":"api/articles/zl/2016-01-01-474_Lua基础.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua是一种灵活小巧的脚本语言，可以被嵌入应用程序中，为应用程序提供灵活的扩展和定制功能。 注释单行注释12print(&#34;Hello World!&#34;) -- 另一个单行注释 多行注释1234--[[ 多行注释 另一个多行注释--]] 变量变量标识符Lua的变量标识...","link":"","photos":[],"count_time":{"symbolsCount":"6.6k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua类的实现思路","uid":"4e4ebc3eda806dabbf19b5aaecfdc728","slug":"zl/2016-01-01-472_Lua类的实现思路","date":"2024-04-03T03:47:35.755Z","updated":"2024-04-03T03:47:35.755Z","comments":true,"path":"api/articles/zl/2016-01-01-472_Lua类的实现思路.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"复习下lua的元表元方法，浅尝辄止。 目标是用lua实现以下C++例子的功能。123456789101112131415161718192021222324252627class {public: std::string mName; Anima(){} Anima(const ...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"cocos2dx lua (伪)面向对象理解与实战应用","uid":"9031c35a0fe6df7d970064b52b48b4cb","slug":"zl/2016-01-01-473_cocos2dx lua (伪)面向对象理解与实战应用","date":"2024-04-03T03:47:35.755Z","updated":"2024-04-03T03:47:35.755Z","comments":true,"path":"api/articles/zl/2016-01-01-473_cocos2dx lua (伪)面向对象理解与实战应用.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 面向对象 &gt;&gt; 把一组数据结构和处理它们的方法组成对象（object），把相同行为的对象归纳为类（class） &gt;&gt; 通过类的封装（encapsulation）隐藏内部细节 &gt;&gt; 通过继承（inheritance）实现类的特化（special...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"溪流 WarKey 3.0 论坛预览版 发布，支持Lua脚本","uid":"10b11cff4c48bcbd38346c27bd294825","slug":"zl/2016-01-01-470_溪流 WarKey 3.0 论坛预览版 发布，支持Lua脚本","date":"2024-04-03T03:47:35.751Z","updated":"2024-04-03T03:47:35.751Z","comments":true,"path":"api/articles/zl/2016-01-01-470_溪流 WarKey 3.0 论坛预览版 发布，支持Lua脚本.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"昨晚搞到近 2 点，终于把相关部分搞完了，放出个预览版玩玩。这一版本将支持组合键，比如，可以分别改Q、Ctrl+Q、Alt+Q 等，也将支持所有鼠标操作。此外，增加了一个脚本系统，允许用户进行更大程度上的自定义。 猛击这里下载 脚本使用 lua 语言，格式大致为（正式版出来之前可...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}