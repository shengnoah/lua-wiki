{"total":1769,"pageSize":12,"pageCount":148,"data":[{"title":"Lua 学习 chapter24","uid":"cf5937e763bc5a1dbfc0ffa5262e9048","slug":"zl/2016-01-01-403_Lua 学习 chapter24 ","date":"2024-04-03T03:47:35.693Z","updated":"2024-04-03T03:47:35.693Z","comments":true,"path":"api/articles/zl/2016-01-01-403_Lua 学习 chapter24 .json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"目录 协程 人人真真的生活过，学习过，改变过，努力过，才能创造出一个满意的自己。 协程 协程是一系列的可执行语句，拥有自己的栈、局部变量和指令指针，同时协程又与其他协程共享了全局变量和其他几乎一切资源。线程和协程的主要区别在于，一个线程程序可以并行运行多个线程，而协程却需要彼此协...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua源码阅读：标准库","uid":"1607a98167353110709d7e74e3d69118","slug":"zl/2016-01-01-404_Lua源码阅读：标准库","date":"2024-04-03T03:47:35.693Z","updated":"2024-04-03T03:47:35.697Z","comments":true,"path":"api/articles/zl/2016-01-01-404_Lua源码阅读：标准库.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua标准库中定义的一些函数及其实现方式。 lmathlib.c从一个简单的math.Abs()函数开始： 12345678910static int (lua_State *L) { if (lua_isinteger(L, 1)) { lua_Integer n = lua_...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lua","uid":"df60e476b394b1dd4755ec96c53302ff","slug":"zl/2016-01-01-401_lua","date":"2024-04-03T03:47:35.692Z","updated":"2024-04-03T03:47:35.692Z","comments":true,"path":"api/articles/zl/2016-01-01-401_lua.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"一 概述 lua-upstream 模块提供了对 upstrem 配置的查看，查看所有的 upstream、upstream 内所有的/启用的/备用的 server，当前使用的 upstream 名。虽然有 set_peer_down 指令，但是模块只修改单个 worker 内的...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua函数重载","uid":"3740102d1bd791c516d63239915f958a","slug":"zl/2016-01-01-402_Lua函数重载","date":"2024-04-03T03:47:35.692Z","updated":"2024-04-03T03:47:35.692Z","comments":true,"path":"api/articles/zl/2016-01-01-402_Lua函数重载.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"想法和思路在最近学习lua面向对象的时候，在想可不可以为一个类实现多个构造函数或者是new，也就是传统意义上的函数重载。尽管没有什么没有什么实际用途，毕竟想要实现同名函数的不同入参，只要入参的表内容不同即可。于是，这个问题就变成了有没有什么办法可以在Lua中从形式上实现和静态语言...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Visual Studio 2015 Lua 环境建置","uid":"67ab0c6d237dda8e508c68cde066afaa","slug":"zl/2016-01-01-3_Visual Studio 2015 Lua 环境建置","date":"2024-04-03T03:47:35.691Z","updated":"2024-04-03T03:47:35.691Z","comments":true,"path":"api/articles/zl/2016-01-01-3_Visual Studio 2015 Lua 环境建置.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;Visual Studio 2015 Lua 环境建置 &lt;br /&gt; 2016/05/10 修正内文&lt;br /&gt; 第13步骤 由 “选择数据夹” 改为 “类库名称” 新增红色重点并附上范例项目文件(VS 2016 Project) 环境...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"PIL.17Lua中的模块与包","uid":"dd8e6b2f478189deb85e9904888a8dbd","slug":"zl/2016-01-01-400_PIL.17Lua中的模块与包","date":"2024-04-03T03:47:35.691Z","updated":"2024-04-03T03:47:35.692Z","comments":true,"path":"api/articles/zl/2016-01-01-400_PIL.17Lua中的模块与包.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"通常，Lua并不设置什么规则，而是提供足够的方法给开发者来实现最适合他们自己的规则。然而，这些方法对于模块来说工作得并不好。模块系统的一个重要目的就是允许不同的团队共享代码。通用规则的缺乏阻碍了这个共享的实现。 从 5.1 开始，Lua就定义了一系列关于模块和包的规则（一个包就是...","link":"","photos":[],"count_time":{"symbolsCount":"6.6k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"翻译 《An Empirical Evaluation of In","uid":"bee70cd59c43ec24134e112588576d81","slug":"zl/2016-01-01-39_翻译 《An Empirical Evaluation of In","date":"2024-04-03T03:47:35.690Z","updated":"2024-04-03T03:47:35.691Z","comments":true,"path":"api/articles/zl/2016-01-01-39_翻译 《An Empirical Evaluation of In.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"工作中对于MVCC接触的已经比较多了，但是依然对MVCC的实现细节以及设计思路没有比较清晰的认知，因此在这里翻译一篇关于内存介质的MVCC的整体介绍，也作为笔记。 摘要 MVCC（Multi-version concurrency control多版本并发控制）是现代数据库管理系...","link":"","photos":[],"count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lua","uid":"df60e476b394b1dd4755ec96c53302ff","slug":"zl/2016-01-01-398_lua","date":"2024-04-03T03:47:35.686Z","updated":"2024-04-03T03:47:35.686Z","comments":true,"path":"api/articles/zl/2016-01-01-398_lua.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"介绍 Lua 是一个小巧的脚本语言。openresty采用的是LuaJIT 2 ，而不是标准的lua。 解释下什么是jit LuaJIT 的运行时环境包括一个用手写汇编实现的 Lua 解释器和一个可以直接生成机器代码的 JIT 编译器。 Lua 代码在被执行之前总是会先被 lfn...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Redis Lua脚本大学教程","uid":"f36be8fd948bcb45a1ea541bfea47114","slug":"zl/2016-01-01-399_Redis Lua脚本大学教程","date":"2024-04-03T03:47:35.686Z","updated":"2024-04-03T03:47:35.690Z","comments":true,"path":"api/articles/zl/2016-01-01-399_Redis Lua脚本大学教程.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"前面我们已经把Redis Lua相关的基础都介绍过了，如果你可以编写一些简单的Lua脚本，恭喜你已经可以从Lua中学毕业了。 在大学课程中，我们主要学习Lua脚本调试和Redis中Lua执行原理两部分内容两部分。 Lua脚本调试Redis从3.2版本开始支持Lua脚本调试，调试器...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"LeetCode 150. Evaluate Reverse Polish Notation","uid":"9f85f1e7fd699a9f48cac697ebdd7c0c","slug":"zl/2016-01-01-397_LeetCode 150. Evaluate Reverse Polish Notation","date":"2024-04-03T03:47:35.685Z","updated":"2024-04-03T03:47:35.686Z","comments":true,"path":"api/articles/zl/2016-01-01-397_LeetCode 150. Evaluate Reverse Polish Notation.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"题目描述根据逆波兰表示法（后缀表达式），求表达式的值。 有效的运算符包括 +, -, *, / 。每个运算对象可以是整数，也可以是另一个逆波兰表达式。 说明： 整数除法只保留整数部分。给定逆波兰表达式总是有效的。换句话说，表达式总会得出有效数值且不存在除数为 0 的情况。 tag...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua 汉字拼音首字母提取","uid":"7210045a47c00c031b29ac526b186e4c","slug":"zl/2016-01-01-394_Lua 汉字拼音首字母提取 ","date":"2024-04-03T03:47:35.684Z","updated":"2024-04-03T03:47:35.684Z","comments":true,"path":"api/articles/zl/2016-01-01-394_Lua 汉字拼音首字母提取 .json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"最近项目上有个需求，需要将一些联系人数据按照拼音首字母排序。google 了一番，竟然没有找到一个合适的 Lua 解决方案。倒是找到一个 lua-pinyin，粗略翻了下源码发现其是将所有的中文返回全部完整的拼音，原理是将所有汉字对应拼音创建好数据字典，载入 Lua，之后查询这个...","link":"","photos":[],"count_time":{"symbolsCount":598,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"浅谈 ngx_lua 在 UPYUN 的应用","uid":"0626f334e1e0773ffd33c02e85588fe8","slug":"zl/2016-01-01-395_浅谈 ngx_lua 在 UPYUN 的应用","date":"2024-04-03T03:47:35.684Z","updated":"2024-04-03T03:47:35.684Z","comments":true,"path":"api/articles/zl/2016-01-01-395_浅谈 ngx_lua 在 UPYUN 的应用.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"ngx_lua 是一个 NGINX 的第三方扩展模块，它能够将 Lua 代码嵌入到 NGINX 中来执行。 UPYUN CDN 大量使用了 NGINX 作为反向代理服务器，其中绝大部分的业务逻辑已经由 Lua 来驱动了。 这个主题之前在 OSC 源创会 2014 北京站 和 Se...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}