{"total":1769,"pageSize":12,"pageCount":148,"data":[{"title":"Redis慢查询、Pipeline、事务与Lua、Bitmaps、发布订阅","uid":"2eceeeadcd601ca2a9fee495ed73c176","slug":"zl/2016-01-01-572_Redis慢查询、Pipeline、事务与Lua、Bitmaps、发布订阅","date":"2024-04-03T03:47:35.825Z","updated":"2024-04-03T03:47:35.825Z","comments":true,"path":"api/articles/zl/2016-01-01-572_Redis慢查询、Pipeline、事务与Lua、Bitmaps、发布订阅.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Redis提供的5种数据结构已经足够强大，但除此之外，Redis还提供了诸如慢查询分析、功能强大的Redis Shell、Pipeline、事务与Lua脚本、Bitmaps、HyperLogLog、发布订阅、GEO等附加功能，这些功能可以在某些场景发挥重要的作用。 慢查询分析许...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"cocos2dx lua 热更新原理与实战","uid":"f3d67063cbdd4d9c236062995f15586f","slug":"zl/2016-01-01-56_cocos2dx lua 热更新原理与实战","date":"2024-04-03T03:47:35.824Z","updated":"2024-04-03T03:47:35.824Z","comments":true,"path":"api/articles/zl/2016-01-01-56_cocos2dx lua 热更新原理与实战.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"首先，如果有过cocos2dx lua开发经验的朋友都知道，为什么使用Lua而不是C++,最重要的原因就是因为下面这三个原因 热更新(在线更新代码和资源) 比C++简单很多,入门和实战 轻量级，最小最轻的脚本语言 今天就从Lua热更新，捣鼓一下其中的原理，并具体实战一下！ 什么是...","link":"","photos":[],"count_time":{"symbolsCount":"7.1k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"ulua的简单解析，cs和Lua的相互调用","uid":"793661612b73172fb8f974a4ce18be1f","slug":"zl/2016-01-01-570_ulua的简单解析，cs和Lua的相互调用","date":"2024-04-03T03:47:35.824Z","updated":"2024-04-03T03:47:35.825Z","comments":true,"path":"api/articles/zl/2016-01-01-570_ulua的简单解析，cs和Lua的相互调用.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"热更新是unity一个长久的话题，热更新主要有两部分，一部分就是资源，这个靠u3d的assetbundle就可以做，另一部分就是逻辑了。游戏更新难免会遇到一些流程或者UI的逻辑变动。在PC和Android上可以使用C#的反射来动态的生成代码，而IOS的Full AOT（完全 预先...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"在openresty中是使用lua脚本实现新老路由平滑升级","uid":"151a961eee10fb762ab491ac88468502","slug":"zl/2016-01-01-567_在openresty中是使用lua脚本实现新老路由平滑升级","date":"2024-04-03T03:47:35.823Z","updated":"2024-04-03T03:47:35.823Z","comments":true,"path":"api/articles/zl/2016-01-01-567_在openresty中是使用lua脚本实现新老路由平滑升级.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"想升级PHP框架phalcon到3.x, 但是发现升级后与老版本基本不兼容, 也就意味着代码基本要重写了。考虑到不可能一下把所有的接口切换到新的框架上去（不能短时间内全部迁移所有的接口，新的框架提供的接口需要测试时间）。想到的方案是， 一方面提供新的接口使用新的框架编写，然后网关...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Anguluar的基本基本概念(一)","uid":"0bcef579901b5575dee4343fc86edd46","slug":"zl/2016-01-01-568_Anguluar的基本基本概念(一)","date":"2024-04-03T03:47:35.823Z","updated":"2024-04-03T03:47:35.823Z","comments":true,"path":"api/articles/zl/2016-01-01-568_Anguluar的基本基本概念(一).json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"带着问题学习，效果可能更好一些，本文基于 Angular 1.5.8 版本. 1.AnguluarJS是什么？ AngularJS是一款由Google公司开发维护的前端MVC框架. 作用：克服了HTML在构建应用上的诸多不足，降低开发成本，提升开发效率。 2.AnguluarJS...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua标准库阅读总结（官方文档）","uid":"f898ebac0592fd186e2fa96c1cc03552","slug":"zl/2016-01-01-569_Lua标准库阅读总结（官方文档）","date":"2024-04-03T03:47:35.823Z","updated":"2024-04-03T03:47:35.824Z","comments":true,"path":"api/articles/zl/2016-01-01-569_Lua标准库阅读总结（官方文档）.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Contents &lt;/div&gt; &lt;p&gt;Lua的标准库直接通过C语言的API进行实现的。有一些函数对于这个语言提供的功能是必不可少的（例如getmetatable和type又元表是lua的一个重要语言特性，还会总结哒）其他的提供了一些输出到外部的功能（例如...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"13 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"RedisLua脚本","uid":"bab9b8d672285aed4210fd27a4cf2a1c","slug":"zl/2016-01-01-565_RedisLua脚本","date":"2024-04-03T03:47:35.822Z","updated":"2024-04-03T03:47:35.822Z","comments":true,"path":"api/articles/zl/2016-01-01-565_RedisLua脚本.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua脚本 使用脚本可以直接在服 务器端执行 Redis 命令,一般的数据 处理操作可以直接使用 Lua 语言或者 Lua 解释器提供的函数 库来完成,不必再返回 给客户端进行处理。 所有脚本都是以事 务的形式来执行的,脚本在 执行过程中不会被其他工作打断,也不会引起任何 竞争条...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua远程调用的实现方法","uid":"76e52e8255c32e959dab4087b6cfa1a6","slug":"zl/2016-01-01-564_Lua远程调用的实现方法","date":"2024-04-03T03:47:35.822Z","updated":"2024-04-03T03:47:35.822Z","comments":true,"path":"api/articles/zl/2016-01-01-564_Lua远程调用的实现方法.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"游戏开发中，客户端、服务端之间的交互是很频繁的，尤其是逻辑玩法的实现，需要大量的交互。 如果所有的交互都按功能构建出不同的协议，这样即繁琐又不方便修改。 通过Lua，使用远程调用可以极大的方便客户端、服务器的通信。 在Lua中，通过C++告诉对方，我要调用哪个函数、传递哪些参数，...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"tolua之wrap文件的原理与使用","uid":"99d79527b247d67792c14ab4db2f8700","slug":"zl/2016-01-01-566_tolua之wrap文件的原理与使用","date":"2024-04-03T03:47:35.822Z","updated":"2024-04-03T03:47:35.823Z","comments":true,"path":"api/articles/zl/2016-01-01-566_tolua之wrap文件的原理与使用.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"每个wrap文件都是对一个c#类的包装，在lua中，通过对wrap类中的函数调用，间接的对c#实例进行操作。 wrap类文件生成和使用的总体流程 生成一个wrap文件的流程这部分主要通过分析类的反射信息完成。 wrap文件内容解析使用UnityEngine_GameObjectW...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua封装 [ 奔跑的蜗牛 ]","uid":"3978f4e0c59724fc4edb93b95117c340","slug":"zl/2016-01-01-563_Lua封装 [ 奔跑的蜗牛 ]","date":"2024-04-03T03:47:35.821Z","updated":"2024-04-03T03:47:35.821Z","comments":true,"path":"api/articles/zl/2016-01-01-563_Lua封装 [ 奔跑的蜗牛 ].json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 撰写于 2018-05-25 &lt;span id=&quot;post-title-updated&quot;&gt;修改于 2018-05-25&lt;/span&gt; &lt;span id=&quot;post-title-categories&quot;&gt;分...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"2.1 lua 基本语法","uid":"1340ae4fb138597b85527c5e7390d5ef","slug":"zl/2016-01-01-561_2.1 lua 基本语法","date":"2024-04-03T03:47:35.821Z","updated":"2024-04-03T03:47:35.821Z","comments":true,"path":"api/articles/zl/2016-01-01-561_2.1 lua 基本语法.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"开始C语言之后大多数讲解语言的书籍都会以打印hello world来开始。那么，如何使用lua 打印hello world呢？ 1print(&#34;hello world&#34;) 和python、golang等语言类似，执行这条语句有两种方式： 交互方式尴尬 执行lua脚...","link":"","photos":[],"count_time":{"symbolsCount":954,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"ubuntu安装wireshark报错lua","uid":"677519b39b0b4e6b282272932d84905d","slug":"zl/2016-01-01-562_ubuntu安装wireshark报错lua","date":"2024-04-03T03:47:35.821Z","updated":"2024-04-03T03:47:35.821Z","comments":true,"path":"api/articles/zl/2016-01-01-562_ubuntu安装wireshark报错lua.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"ubuntu: 16.04 打开终端，安装wireshark过程如下：123456# Add the stable official PPA.sudo add-apt-repository ppa:wireshark-dev/stable# Update the reposito...","link":"","photos":[],"count_time":{"symbolsCount":660,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}