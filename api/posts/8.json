{"total":1769,"pageSize":12,"pageCount":148,"data":[{"title":"OpenResty中使用Lua的MongoDB库，使用连接池节省连接认证时间","uid":"026f7effba0678b58fada37bd8a3caf8","slug":"zl/2016-01-01-923_OpenResty中使用Lua的MongoDB库，使用连接池节省连接认证时间","date":"2024-04-03T03:47:36.193Z","updated":"2024-04-03T03:47:36.197Z","comments":true,"path":"api/articles/zl/2016-01-01-923_OpenResty中使用Lua的MongoDB库，使用连接池节省连接认证时间.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"因为服务器的mongodb开启了auth认证的，所以每次连接都要验证密码，测试了下GitHub上面的几个lua的mongodb库，无论是官方的mongorover，还是纯的lua库：lua-resty-mongol3，一个简单的insert操作都比php耗费的时间更长，如果业务用...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Survey of Federated Learning and Idea Evaluation","uid":"fc0a5eb26e10b241ee4c93c1ff1687f1","slug":"zl/2016-01-01-922_Survey of Federated Learning and Idea Evaluation","date":"2024-04-03T03:47:36.192Z","updated":"2024-04-03T03:47:36.193Z","comments":true,"path":"api/articles/zl/2016-01-01-922_Survey of Federated Learning and Idea Evaluation.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"第一类是联邦学习开创者讲述联邦学习problem setting，以及几个常用的算法的文章，这类工作目前显然不能再做了，但需要阅读。 Federated Optimization: Distributed Optimization Beyond the Datacenter这篇文...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua初识","uid":"608573cb0fd3dde7a12fef5738615f88","slug":"zl/2016-01-01-91_Lua初识","date":"2024-04-03T03:47:36.191Z","updated":"2024-04-03T03:47:36.191Z","comments":true,"path":"api/articles/zl/2016-01-01-91_Lua初识.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua初识Lua 数据类型8种基本类型:nil :表示无效值(条件表达式代表false)boolean:布尔 包含两个值:true和falsenumber: 表示双精度类型的实浮点数string: 字符串有””或者’’表示userdata: 任意存储中的C数据结构function...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua 学习 chapter22","uid":"4a87df76c39f3f8150fdb435e35555f2","slug":"zl/2016-01-01-921_Lua 学习 chapter22 ","date":"2024-04-03T03:47:36.191Z","updated":"2024-04-03T03:47:36.192Z","comments":true,"path":"api/articles/zl/2016-01-01-921_Lua 学习 chapter22 .json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"目录 具有动态名称的全局变量 非全局环境 环境和模块 _ENV和load 只有疯狂过，你才知道自己究竟能不能成功。 具有动态名称的全局变量 在lua中，所有的全局变量都被存在_G中，通过_G[name]可以访问到任意一个全局变量。在lua中，全局变量不需要声明就可以直接使用，但是...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"欢迎使用LuaPerfect!","uid":"0edcdb943be9e6ad357fd91b21db2f9d","slug":"zl/2016-01-01-920_欢迎使用LuaPerfect!","date":"2024-04-03T03:47:36.191Z","updated":"2024-04-03T03:47:36.191Z","comments":true,"path":"api/articles/zl/2016-01-01-920_欢迎使用LuaPerfect!.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"简介 LuaPerfect是腾讯公司开发的专业级的Lua集成开发环境，致力于为广大Lua开发人员提供免费的专业的Lua编辑调试工具。 LuaPerfect基于纯C++实现了独立的Lua编辑和调试工具： 1、接入方便：界面风格类似VS，符合VS用户习惯，非插件，接入自动化程度高，无...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"lua","uid":"df60e476b394b1dd4755ec96c53302ff","slug":"zl/2016-01-01-917_lua","date":"2024-04-03T03:47:36.190Z","updated":"2024-04-03T03:47:36.190Z","comments":true,"path":"api/articles/zl/2016-01-01-917_lua.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"LuaInterface 库LuaInterface下载地址 LuaInterface是一个用于在Lua语言和Microsoft .NET平台的公共语言运行时（CLR）之间集成的库。 Lua脚本可以使用它来实例化CLR对象，访问属性，调用方法，甚至使用Lua函数处理事件。 Lua...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Lua的性能优化建议","uid":"bab31c9b02e44acd23daccdbfa9cd0b3","slug":"zl/2016-01-01-918_Lua的性能优化建议","date":"2024-04-03T03:47:36.190Z","updated":"2024-04-03T03:47:36.190Z","comments":true,"path":"api/articles/zl/2016-01-01-918_Lua的性能优化建议.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"多的使用局部变量 在lua中，局部变量的操作相对于全局变量更少。 将用到的外层函数赋值到一个局部变量中也可以大幅度的减少调用开支。 访问外层局部变量（也就是外一层函数的局部变量）并没有访问局部变量快，但是仍然比访问全局变量快。考虑如下代码： function foo(x) for...","link":"","photos":[],"count_time":{"symbolsCount":407,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"浅析android手游lua脚本的加密与解密（前传）","uid":"34c99eebc4a80397f2da445ff1e625fe","slug":"zl/2016-01-01-919_浅析android手游lua脚本的加密与解密（前传）","date":"2024-04-03T03:47:36.190Z","updated":"2024-04-03T03:47:36.190Z","comments":true,"path":"api/articles/zl/2016-01-01-919_浅析android手游lua脚本的加密与解密（前传）.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 为了能让一些同学更好的学习lua的逆向，我把收集的一些资料组合成一篇lua加解密的相关工作给大家参考，当然，看这篇文章之前还是需要一些lua的基础知识，这里推荐云风大佬的《Lua源码欣赏》[19]，建议结合搜索引擎学习之。 文章分2部分介绍，第1部分介绍lua加解密的相关文章介...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"Linux安装ngx_lua_waf实现waf功能","uid":"5429aa38fc7f679f0141d2dbc38516f6","slug":"zl/2016-01-01-916_Linux安装ngx_lua_waf实现waf功能","date":"2024-04-03T03:47:36.186Z","updated":"2024-04-03T03:47:36.189Z","comments":true,"path":"api/articles/zl/2016-01-01-916_Linux安装ngx_lua_waf实现waf功能.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"一、ngx_lua_waf用途 1、防止SQL注入，本地包含，本地溢出，fuzzing测试，XSS，SSRF等web攻击;2、防止SVN/备份之类文件泄漏;3、防止apachebench之类的压力测试工具的攻击;4、屏蔽常见的扫描黑客工具，扫描器;5、屏蔽常见的网络请求;6、屏蔽...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"xLua热更新4之Hotfix（上篇）","uid":"e988662893ced0a5e1e7507e4bbb5a0b","slug":"zl/2016-01-01-915_xLua热更新4之Hotfix（上篇）","date":"2024-04-03T03:47:36.185Z","updated":"2024-04-03T03:47:36.185Z","comments":true,"path":"api/articles/zl/2016-01-01-915_xLua热更新4之Hotfix（上篇）.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"思考并回答以下问题： xLua里面有一个热补丁的功能。就是你有的C#代码不用改，就可以加入热更新的功能。 为什么叫热补丁呢？已有项目中的C#代码只需要增加一些配置，不用做其他任何调整就可使用上类似热更新的功能。由于和热更新也不同，所以叫热补丁。这也是xLua首创的一项功能。 热补...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"redis编写lua脚本","uid":"a628b5f8d3069a00eec61e6c67b75d18","slug":"zl/2016-01-01-912_redis编写lua脚本","date":"2024-04-03T03:47:36.184Z","updated":"2024-04-03T03:47:36.184Z","comments":true,"path":"api/articles/zl/2016-01-01-912_redis编写lua脚本.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"由于redis并没有类似mysql或者mongo的乐观锁机制，并发控制成了一个棘手的问题这块是可以用redis的watch来做，但是如果能实现乐观锁，那就非常方便了 redis使用lua的基础语法12345&gt; eval &#34;return {KEYS[1],KEYS[2...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},{"title":"evaluation","uid":"2b17d93da7fb6e93ab76e5ea1cfffa57","slug":"zl/2016-01-01-913_evaluation","date":"2024-04-03T03:47:36.184Z","updated":"2024-04-03T03:47:36.184Z","comments":true,"path":"api/articles/zl/2016-01-01-913_evaluation.json","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"An Empirical Evaluation of In-Memory Multi-Version Concurrency Control介绍MVCC是目前最流行的并发控制协议，本文是论文原文的翻译，省略掉实验部分，感兴趣的同学可以去参照论文原文。这篇论文从4个方面分析了MVC...","link":"","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}]}