{"title":"概述","uid":"2656993cf43ed1aa35c9954d6baa5550","slug":"old-lua/2016-06-01-overview","date":"2024-03-14T07:45:09.106Z","updated":"2024-03-14T07:45:09.107Z","comments":true,"path":"api/articles/old-lua/2016-06-01-overview.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h1>概述</h1>\n<p>Lua 是用 C 语言开发的可扩展的轻量级编程语言。它起源于 1993 年由 Roberto lerusalimschy,Luiz Henrique de Figueiredo 与 Waddemar Celes 领导的一个内部项目。<br>\n设计者的初衷是希望 Lua 可以成为一款整合 C 语言代码以及其它传统语言代码的软件。这种整合会带来很多好处，它让你不需要重复做 C 语言已经做的很好的工作，而专注于提供那些 C 语言不擅长的特性：提供更高的抽象（离硬件更远）、动态结构、无冗余、易于测试与调试。为了提供这些特性，Lua 提供了安全的环境、动态内存管理，以及擅长处理字符串和其它动态大小数据结构的工具。</p>\n<h2 id=\"特点\">特点</h2>\n<p>Lua 有着许多自身的特点使得它与其它编程语言不同。主要包括：</p>\n<ul>\n<li>可扩展性</li>  \n<li>简单</li>  \n<li>高效</li>  \n<li>跨平台</li>  \n<li>自由与开放</li>  \n</ul>  \n<h2 id=\"示例代码\">示例代码</h2>\n<pre><code>print(&quot;Hello World!&quot;)\n</code></pre>\n<h2 id=\"Lua-是如何实现的\">Lua 是如何实现的</h2>\n<p>Lua 主要包括两个部分：Lua 解释器部分以及运行软件系统。  运行软件系统是真正解释执行由 Lua 语言编写的程序的应用程序（译注：此处 Lua 翻译器部分用于将 Lua　代码编译成中间字节码，运行软件系统指 Lua 虚拟机，而一般我们所说 Lua 解释器包括这两部分）。 Lua 解释器是由 ANSI C 编写的，因此它有很好的可移植性，可以运行各种各运的设备上，无论是大型网络服务器还是小型移动设备。</p>\n<p>无论 Lua 语言还是 Lua 解释器都已经是非常成熟的、同时还兼备体积小，运行速度非常快的特点。小体积的特性也使得 Lua 可以运行在很多只有少量内存的小型设备中。</p>\n<h1>学习 Lua</h1>\n<p>学习 Lua 语言最重要的一点是把注意力放在它的概念上，千万不要迷失在语言的技术细节中。<br>\n学习 Lua 的目的是成为一个更好的程序人员。也就是说，学习 Lua 可以帮助您在设计与实现新系统，或者维护旧系统的时候变得更加的高效。</p>\n<h1>Lua 的应用场景</h1>\n<ul>\n<li>游戏开发</li>  \n<li>开发单机应用</li>  \n<li>网站开发</li>  \n<li>扩展数据库或者为数据库开发插件，比如，MySQL 代理或 MySQL WorkBench</li>  \n<li>开发安全系统，如入侵检测系统（IDS）</li>  \n</ul>  \n","text":"概述 Lua 是用 C 语言开发的可扩展的轻量级编程语言。它起源于 1993 年由 Roberto lerusalimschy,Luiz Henrique de Figueiredo 与 Waddemar Celes 领导的一个内部项目。 设计者的初衷是希望 Lua 可以成为一款...","link":"","photos":[],"count_time":{"symbolsCount":940,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">概述</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">特点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">示例代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Lua-%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84\"><span class=\"toc-text\">Lua 是如何实现的</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">学习 Lua</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">Lua 的应用场景</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"数据类型","uid":"a760ef6d11a2d6078a812f5bc31cf898","slug":"old-lua/2016-06-01-data-types","date":"2024-03-14T07:45:09.106Z","updated":"2024-03-14T07:45:09.106Z","comments":true,"path":"api/articles/old-lua/2016-06-01-data-types.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"数据类型 Lua 是动态类型编程语言，变量没有类型，只有值才有类型。值可以存储在变量中，作为参数传递或者作为返回值。 尽管在 Lua 中没有变量数据类型，但是值是有类型的。下面的列表中列出了数据类型： 值类型 描述 nil 用于区分值是否有数据，nil 表示没有数据。 boole...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"数组","uid":"e16187d7a3c490f96b788338bdd79d24","slug":"old-lua/2016-06-01-arrays","date":"2024-03-14T07:45:09.105Z","updated":"2024-03-14T07:45:09.106Z","comments":true,"path":"api/articles/old-lua/2016-06-01-arrays.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua 数组 数组是一组有序的对象排列，既可以是一维的也可以是多维的。 在 Lua 语言中，数组是用整数索引表实现的。数组的大小并不固定，随着数组元素的增加，它可以动态地增加内存空间大小。 一维数组 一维数组可以使用一个简单的表结构表示。可以通过一个简单循环初始化数组或者读取数组...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"Lua","slug":"Lua","count":3,"path":"api/categories/Lua.json"},{"name":"Arrays","slug":"Lua/Arrays","count":1,"path":"api/categories/Lua/Arrays.json"}],"tags":[{"name":"Arrays","slug":"Arrays","count":1,"path":"api/tags/Arrays.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}