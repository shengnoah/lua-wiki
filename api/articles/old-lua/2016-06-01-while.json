{"title":"Lua的while循环","uid":"7132dce4b61373adb37dd9650b6cc624","slug":"old-lua/2016-06-01-while","date":"2024-03-14T06:15:59.732Z","updated":"2024-03-14T06:15:59.732Z","comments":true,"path":"api/articles/old-lua/2016-06-01-while.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"content":"<h1 id=\"Lua-while-循环\"><a href=\"#Lua-while-循环\" class=\"headerlink\" title=\"Lua while 循环\"></a>Lua while 循环</h1><p>在 Lua 语言中，只要 while 循环条件为真，while 语句就会一直执行，直到 while 循环条件为假为止。  </p>\n<h1 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h1><p>Lua 语言中 while 循环的语法如下所示：  </p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span>(condition)</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">   statement(s)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p>其中，statement(s) 可能只是一条语句也可能是一个语句块。条件可以是任何表达式，若表达式结果为真，则循环继续。<br>循环为假时，程序结束 while 循环，执行 while 后面的代码。  </p>\n<h2 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h2><p><img src=\"images/while_loop.jpg\">  </p>\n<p>请注意，while 循环的关键点在于循环可能根本不会执行。当检测条件为假是，程序会跳过 while 循环体而直接执行 while 后的第一条语句。  </p>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"keyword\">while</span>( a &lt; <span class=\"number\">20</span> )</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">   <span class=\"built_in\">print</span>(<span class=\"string\">&quot;value of a:&quot;</span>, a)</span><br><span class=\"line\">   a = a+<span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p>执行上面的代码，将会得到如下的结果：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">value of a:\t10</span><br><span class=\"line\">value of a:\t11</span><br><span class=\"line\">value of a:\t12</span><br><span class=\"line\">value of a:\t13</span><br><span class=\"line\">value of a:\t14</span><br><span class=\"line\">value of a:\t15</span><br><span class=\"line\">value of a:\t16</span><br><span class=\"line\">value of a:\t17</span><br><span class=\"line\">value of a:\t18</span><br><span class=\"line\">value of a:\t19</span><br></pre></td></tr></table></figure>\n\n\n\n\n","text":"Lua while 循环在 Lua 语言中，只要 while 循环条件为真，while 语句就会一直执行，直到 while 循环条件为假为止。 语法Lua 语言中 while 循环的语法如下所示： 1234while(condition)do statement(s)end 其中...","link":"","photos":[],"count_time":{"symbolsCount":585,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"},{"name":"LUA教程","slug":"lua-guide/LUA教程","count":4,"path":"api/categories/lua-guide/LUA教程.json"}],"tags":[{"name":"LUA教程","slug":"LUA教程","count":8,"path":"api/tags/LUA教程.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Lua-while-%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">Lua while 循环</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B5%81%E7%A8%8B%E5%9B%BE\"><span class=\"toc-text\">流程图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">示例</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua的变量","uid":"00031c756df5944ae03766354a37e479","slug":"old-lua/2016-06-01-variables","date":"2024-03-14T06:15:59.732Z","updated":"2024-03-14T06:15:59.732Z","comments":true,"path":"api/articles/old-lua/2016-06-01-variables.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"变量变量就是给一块内存区域赋予的一个名字。变量使得在程序中就可以修改或读取相应的内存区域中的内容。它可以代表各种不同类型的值，包括函数与表。 变量的名字由字母、数字与下划线组成。它必须是字母或下划线开头。由于 Lua 是字母大小写敏感的，所以大写字母与小写字母是不一样的。Lua ...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"},{"name":"LUA教程","slug":"lua-guide/LUA教程","count":4,"path":"api/categories/lua-guide/LUA教程.json"}],"tags":[{"name":"LUA教程","slug":"LUA教程","count":8,"path":"api/tags/LUA教程.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua中的for循环","uid":"26bfa2ece82537ab5f6962e2d31968f1","slug":"old-lua/2016-06-11-for","date":"2024-03-14T06:15:59.732Z","updated":"2024-03-14T06:15:59.732Z","comments":true,"path":"api/articles/old-lua/2016-06-11-for.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"Lua 中的 for 循环for 循环控制结构可以让你高效地写出需要执行特定次数的循环代码。 语法Lua 语言中 for 循环的语法如下： 1234for init,max/min value, incrementdo statement(s)end 下面是 for 循环执行的流...","link":"","photos":[],"count_time":{"symbolsCount":509,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"},{"name":"lua教程","slug":"lua-guide/lua教程","count":3,"path":"api/categories/lua-guide/lua教程.json"}],"tags":[{"name":"LUA","slug":"LUA","count":2,"path":"api/tags/LUA.json"},{"name":"abc","slug":"abc","count":2,"path":"api/tags/abc.json"},{"name":"basic","slug":"basic","count":2,"path":"api/tags/basic.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}