{"title":"Lua中的for循环","uid":"26bfa2ece82537ab5f6962e2d31968f1","slug":"old-lua/2016-06-11-for","date":"2024-03-14T06:15:59.732Z","updated":"2024-03-14T06:15:59.732Z","comments":true,"path":"api/articles/old-lua/2016-06-11-for.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"content":"<h1 id=\"Lua-中的-for-循环\"><a href=\"#Lua-中的-for-循环\" class=\"headerlink\" title=\"Lua 中的 for 循环\"></a>Lua 中的 for 循环</h1><p>for 循环控制结构可以让你高效地写出需要执行特定次数的循环代码。  </p>\n<h2 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h2><p>Lua 语言中 for 循环的语法如下：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for init,max/min value, increment</span><br><span class=\"line\">do</span><br><span class=\"line\">   statement(s)</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n\n<p>下面是 for 循环执行的流程：  </p>\n<ol>\n    <li>init 首先执行并且只执行一次。在这一步骤中，你需要声明并初始化循环控制变量。\n    </li>\n    <li>接下来，max/min 是循环结束的条件。程序中将 init 与 最大值或最小值进行比较，条件为真则继续执行循环，否则结束循环。\n    </li>\n    <li>循环体执行后，程序跳转至递增或递减语句( increment/descrement )。此语句中，我们可以更新我们的控制变量。\n    </li>\n    <li>再次检查条件。如果条件为真，则执行循环并重复过程（执行循环体，递增运算，再检查条件）。当条件为假时，结束循环。\n    </li>\n</ol>\n\n<h2 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h2><p><img src=\"images/for_loop.jpg\">  </p>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">for i=10,1,-1 </span><br><span class=\"line\">do </span><br><span class=\"line\">   print(i) </span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n\n<p>执行上面的代码后，将得到如下的输出结果：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10</span><br><span class=\"line\">9</span><br><span class=\"line\">8</span><br><span class=\"line\">7</span><br><span class=\"line\">6</span><br><span class=\"line\">5</span><br><span class=\"line\">4</span><br><span class=\"line\">3</span><br><span class=\"line\">2</span><br><span class=\"line\">1</span><br></pre></td></tr></table></figure>\n","text":"Lua 中的 for 循环for 循环控制结构可以让你高效地写出需要执行特定次数的循环代码。 语法Lua 语言中 for 循环的语法如下： 1234for init,max/min value, incrementdo statement(s)end 下面是 for 循环执行的流...","link":"","photos":[],"count_time":{"symbolsCount":509,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"},{"name":"lua教程","slug":"lua-guide/lua教程","count":3,"path":"api/categories/lua-guide/lua教程.json"}],"tags":[{"name":"LUA","slug":"LUA","count":2,"path":"api/tags/LUA.json"},{"name":"abc","slug":"abc","count":2,"path":"api/tags/abc.json"},{"name":"basic","slug":"basic","count":2,"path":"api/tags/basic.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Lua-%E4%B8%AD%E7%9A%84-for-%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">Lua 中的 for 循环</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">语法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B5%81%E7%A8%8B%E5%9B%BE\"><span class=\"toc-text\">流程图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">示例</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua的while循环","uid":"7132dce4b61373adb37dd9650b6cc624","slug":"old-lua/2016-06-01-while","date":"2024-03-14T06:15:59.732Z","updated":"2024-03-14T06:15:59.732Z","comments":true,"path":"api/articles/old-lua/2016-06-01-while.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"Lua while 循环在 Lua 语言中，只要 while 循环条件为真，while 语句就会一直执行，直到 while 循环条件为假为止。 语法Lua 语言中 while 循环的语法如下所示： 1234while(condition)do statement(s)end 其中...","link":"","photos":[],"count_time":{"symbolsCount":585,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"},{"name":"LUA教程","slug":"lua-guide/LUA教程","count":4,"path":"api/categories/lua-guide/LUA教程.json"}],"tags":[{"name":"LUA教程","slug":"LUA教程","count":8,"path":"api/tags/LUA教程.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua元表","uid":"0498ed7eca93166bac9cec9951eb31df","slug":"old-lua/2016-06-01-metatables","date":"2024-03-14T06:15:59.731Z","updated":"2024-03-14T06:15:59.731Z","comments":true,"path":"api/articles/old-lua/2016-06-01-metatables.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"Lua 元表正如其名，元表也是表。不过，将元表与表相关联后，我们就可以通过设置元表的键和相关方法来改变表的行为。元方法的功能十分强大，使用元方法可以实现很多的功能，比如： 修改表的操作符功能或为操作符添加新功能（译注：如果您学过 C++ 之类的面向对象的语言，应该比较好理解，其实...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"LUA教程","slug":"LUA教程","count":8,"path":"api/tags/LUA教程.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}