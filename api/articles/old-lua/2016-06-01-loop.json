{"title":"LUA的Loop循环","uid":"50b76913de0a7e15924d6b0f0dac6bf2","slug":"old-lua/2016-06-01-loop","date":"2024-03-14T07:45:09.102Z","updated":"2024-03-14T07:45:09.102Z","comments":true,"path":"api/articles/old-lua/2016-06-01-loop.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h1>循环</h1>\n<p>虽然一般情况下，语句都是顺序执行的：函数内的第一条语句先执行，然后是第二条，依次类推。  但是还是可能存在需要执行一段代码多次的情况。</p>\n<p>为此编程语言提供各式各样的控制结构实现复杂的程序执行路径。</p>\n<p>其中，循环语句可以让我们可以执行一条或一组语句多次。下图中所描述的是大多数语言中循环语句的形式：</p>\n<p><img src=\"images/loop.jpg\" alt=\"\"></p>\n<p>Lua 语言提供了如下几种循环结构语句。点击链接可查看详细说明。</p>\n<table>\n\t<tr>\n\t\t<th>循环类型</th>\n\t\t<th>描述</th>\n\t</tr>\n\t<tr>\n\t\t<td><a href=\"while.md\">while 循环</a></td>\n\t\t<td>先检测条件，条件为真时再执行循环体，直到条件为假时结束。</td>\n\t</tr>\n\t<tr>\n\t\t<td><a href=\"for.md\">for 循环</a></td>\n\t\t<td>执行一个语句序列多次，可以简化管理循环变量的代码。</td>\n\t</tr>\n\t\t<tr>\n\t\t<td><a href=\"repeat-until.md\">repeat...until 循环</a></td>\n\t\t<td>重复执行一组代码语句，直到 until 条件为真为止。</td>\n\t</tr>\n\t<tr>\n\t\t<td><a href=\"nested-loop.md\">嵌套循环</a></td>\n\t\t<td>可以在一个循环语句中再使用一个循环语句。</td>\n\t</tr>\t\n</table>  \n<h2 id=\"循环控制语句\">循环控制语句</h2>\n<p>循环控制语句改变循环正常的执行顺序。当离开一个作用域时，在该作用域内自动创建的对象都会被自动销毁。</p>\n<p>Lua 支持如下所示的循环控制语句。点击下面的链接查看详细内容：</p>\n<table>\n\t<tr>\n\t\t<th>循环控制语句</th>\n\t\t<th>描述</th>\n\t</tr>\n\t\t<tr>\n\t\t<td><a href=\"break.md\">break</a></td>\n\t\t<td>break 语句结束循环，并立即跳转至循环或 switch 语句后的第一条语句处开始执行。</td>\n\t</tr>\t\n</table>\n<h2 id=\"无限循环\">无限循环</h2>\n<p>如果循环条件永远不可能为假，则此循环为无限循环。while 语句经常被当作无限循环语句使用。因为我们可以直接将其条件设置为真，这样 while 就会一直循环下去。在无限循环中，可以使用 break 跳出循环。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while( true )</span><br><span class=\"line\">do</span><br><span class=\"line\">   print(&quot;This loop will run forever.&quot;)</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n","text":"循环 虽然一般情况下，语句都是顺序执行的：函数内的第一条语句先执行，然后是第二条，依次类推。 但是还是可能存在需要执行一段代码多次的情况。 为此编程语言提供各式各样的控制结构实现复杂的程序执行路径。 其中，循环语句可以让我们可以执行一条或一组语句多次。下图中所描述的是大多数语言中...","link":"","photos":[],"count_time":{"symbolsCount":735,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"LUA教程","slug":"LUA教程","count":8,"path":"api/tags/LUA教程.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">循环</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF%E6%8E%A7%E5%88%B6%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">循环控制语句</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%97%A0%E9%99%90%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">无限循环</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua中的if语句","uid":"15a63bcbcc45ec73313b8b26fa940570","slug":"old-lua/2016-06-01-if-statement","date":"2024-03-14T07:45:09.102Z","updated":"2024-03-14T07:45:09.102Z","comments":true,"path":"api/articles/old-lua/2016-06-01-if-statement.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"#Lua 中的 if 语句 if 语句包括一个布尔表达式和一个或多个语句。 ##语法 Lua 语言 if 语句的语法如下： 123456789101112131415if(boolean_expression)then --[如果布尔表达式为真，statement(s) 执行。-...","link":"","photos":[],"count_time":{"symbolsCount":593,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua的while循环","uid":"7132dce4b61373adb37dd9650b6cc624","slug":"old-lua/2016-06-01-while","date":"2024-03-14T07:45:09.102Z","updated":"2024-03-14T07:45:09.102Z","comments":true,"path":"api/articles/old-lua/2016-06-01-while.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua while 循环 在 Lua 语言中，只要 while 循环条件为真，while 语句就会一直执行，直到 while 循环条件为假为止。 语法 Lua 语言中 while 循环的语法如下所示： 1234while(condition)do statement(s)end ...","link":"","photos":[],"count_time":{"symbolsCount":572,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"},{"name":"LUA教程","slug":"lua-guide/LUA教程","count":4,"path":"api/categories/lua-guide/LUA教程.json"}],"tags":[{"name":"LUA教程","slug":"LUA教程","count":8,"path":"api/tags/LUA教程.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}