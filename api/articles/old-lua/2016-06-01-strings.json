{"title":"Lua字符串","uid":"cedbdf206a63ba0896535fb39f386996","slug":"old-lua/2016-06-01-strings","date":"2024-03-14T06:15:59.731Z","updated":"2024-03-14T06:15:59.731Z","comments":true,"path":"api/articles/old-lua/2016-06-01-strings.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<h1 id=\"Lua-字符串\"><a href=\"#Lua-字符串\" class=\"headerlink\" title=\"Lua 字符串\"></a>Lua 字符串</h1><p>字符串就是一个由字符或控制字符组成的序列。字符串可以用以下三种方式任意一种进行初始化。</p>\n<ul>\n    <li>单引号字符串</li>\n    <li>双引号字符串</li>\n    <li>[[和]]之间的字符串</li>\n</ul>  \n\n<p>上面三种初始化方式的示例如下：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">string1 = &quot;Lua&quot;</span><br><span class=\"line\">print(&quot;\\&quot;String 1 is\\&quot;&quot;,string1)</span><br><span class=\"line\">string2 = &#x27;Tutorial&#x27;</span><br><span class=\"line\">print(&quot;String 2 is&quot;,string2)</span><br><span class=\"line\"></span><br><span class=\"line\">string3 = [[&quot;Lua Tutorial&quot;]]</span><br><span class=\"line\">print(&quot;String 3 is&quot;,string3)</span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\">运行上面的程序，我们可以得到如下的输出结果：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>“String 1” is    Lua<br>String 2 is    Tutorial<br>String 3 is    “Lua Tutorial”</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">字符串中转义字符用于改变字符的一般正常的解释。在上面的例子中，输出双引号（&quot;&quot;）的时候，我们使用的是 \\&quot;。下表列出了转义序列及相应的使用方法：  </span><br><span class=\"line\"></span><br><span class=\"line\">&lt;table&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;th&gt;转义序列&lt;/th&gt;</span><br><span class=\"line\">\t\t&lt;th&gt;用法&lt;/th&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;\\a&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;响铃&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;\\b&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;退格&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;\\f&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;换页&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;\\n&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;换行&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;\\r&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;回车&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;\\t&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;制表符&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;\\v&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;垂直制表符&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;\\\\&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;反斜线&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;\\&quot;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;双引号&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;\\&#x27;&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;单引号&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;\\[&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;左方括号&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;\\]&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;右方括号&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">&lt;/table&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">## 字符串操作  </span><br><span class=\"line\"></span><br><span class=\"line\">Lua 支持如下的字符串操作方法：  </span><br><span class=\"line\"></span><br><span class=\"line\">&lt;table&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;th&gt;S.N.&lt;/th&gt;</span><br><span class=\"line\">\t\t&lt;th&gt;函数及其功能&lt;/th&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;1&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;string.upper(argument):将输入参数全部字符转换为大写并返回。&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;2&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;string.lower(argument):将输入参数全部字符转换为小写并返回。&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;3&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;string.gsub(maingString,findString,replaceString):将 mainString 中的所有 findString 用 replaceString 替换并返回结果。&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;4&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;string.strfind(mainString,findString,optionalStartIndex,optionalEndIndex):在主字符串中查找 findString 并返回 findString 在主字符串中的开始和结束位置，若查找失败则返回 nil。&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;5&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;string.reverse(arg):将输入字符串颠倒并返回。&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;6&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;string.format(...):返回格式化后的字符串。&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;7&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;string.char(arg) 和 string.byte(arg):前者返回输出参数的所代表的字符，后者返回输入参数（字符）的数值。&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;8&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;string.len(arg):返回输入字符串的长度。&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;9&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;string.rep(string,n): 将输入字符串 string 重复 n　次后的新字符串返回。&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;10&lt;/td&gt;</span><br><span class=\"line\">\t\t&lt;td&gt;..:连接两个字符串。&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">&lt;/table&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">接下来我们用一些例子来讲解如何使用上面这些函数。  </span><br><span class=\"line\"></span><br><span class=\"line\">## 大小写操作函数  </span><br><span class=\"line\"></span><br><span class=\"line\">下面的代码将字符串中字符全部转换成大写或小写：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>string1 = “Lua”;<br>print(string.upper(string1))<br>print(string.lower(string1))</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">执行上面的代码可以得到如下的输出结果：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>LUA<br>lua</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 替换子串  </span><br><span class=\"line\"></span><br><span class=\"line\">用一个字符串替换字符串的某子串的示例代码如下：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>string = “Lua Tutorial”<br>– 替换字符串<br>newstring = string.gsub(string,”Tutorial”,”Language”)<br>print(“The new string is”,newstring)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">执行上面的代码可以得到如下的输出结果：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>The new string is    Lua Language</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 查找与颠倒  </span><br><span class=\"line\"></span><br><span class=\"line\">查找一个子串的索引与颠倒一个字符串函数的示例代码如下所示：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>string = “Lua Tutorial”<br>– 替换字符串<br>print(string.find(string,”Tutorial”))<br>reversedString = string.reverse(string)<br>print(“The new string is”,reversedString)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">执行上面的代码可以得到如下的输出结果：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>5    12<br>The new string is    lairotuT auL</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 格式化字符串  </span><br><span class=\"line\"></span><br><span class=\"line\">在编程过程中，我们经常需要将字符串以某种格式输出。此时，你就可以使用 string.format 函数格式化你的输出内容。如下所示：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>string1 = “Lua”<br>string2 = “Tutorial”<br>number1 = 10<br>number2 = 20<br>– 基本字符串格式<br>print(string.format(“Basic formatting %s %s”,string1,string2))<br>– 日期格式化<br>date = 2; month = 1; year = 2014<br>print(string.format(“Date formatting %02d/%02d/%03d”, date, month, year))<br>– 符点数格式化<br>print(string.format(“%.4f”,1/3))</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">执行上面的代码可以得到如下的输出结果：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>Basic formatting Lua Tutorial<br>Date formatting 02/01/2014<br>0.3333</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 字符与字节表示  </span><br><span class=\"line\"></span><br><span class=\"line\">字节表示函数用于将字符的内部表示转换为字符表示，而字符表示函数正好相反。 示例代码如下：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>– 字节转换<br>– 第一个字符<br>print(string.byte(“Lua”))<br>– 第三个字符<br>print(string.byte(“Lua”,3))<br>– 倒数第一个字符<br>print(string.byte(“Lua”,-1))<br>– 第二个字符<br>print(string.byte(“Lua”,2))<br>– 倒数第二个字符<br>print(string.byte(“Lua”,-2))</p>\n<p>– 内部 ASCII 字值转换为字符<br>print(string.char(97))</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">执行上面的代码可以得到如下的输出结果：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>76<br>97<br>97<br>117<br>117<br>a</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 其它常用函数  </span><br><span class=\"line\"></span><br><span class=\"line\">其它常用的字符串处理函数包括字符串连接，字符串长度函数以及重复字符串多次的函数。它们的使用方法示例如下：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>string1 = “Lua”<br>string2 = “Tutorial”<br>– 用 .. 连接两个字符串<br>print(“Concatenated string”,string1..string2)</p>\n<p>– 字符串的长度<br>print(“Length of string1 is “,string.len(string1))</p>\n<p>– 重复字符串<br>repeatedString = string.rep(string1,3)<br>print(repeatedString)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">执行上面的代码可以得到如下的输出结果：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>Concatenated string    LuaTutorial<br>Length of string1 is     3<br>LuaLuaLua<br>``` </p>\n","text":"Lua 字符串字符串就是一个由字符或控制字符组成的序列。字符串可以用以下三种方式任意一种进行初始化。 单引号字符串 双引号字符串 [[和]]之间的字符串 上面三种初始化方式的示例如下： 1234567891011string1 = &quot;Lua&quot;print(&qu...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Lua-%E5%AD%97%E7%AC%A6%E4%B8%B2\"><span class=\"toc-text\">Lua 字符串</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua循环嵌套","uid":"cce4b5e763b43300a4fad206fcb6b9e4","slug":"old-lua/2016-06-01-nested-loop","date":"2024-03-14T06:15:59.731Z","updated":"2024-03-14T06:15:59.731Z","comments":true,"path":"api/articles/old-lua/2016-06-01-nested-loop.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"#Lua 循环嵌套 Lua 编程语言允许使用循环嵌套。接下来这一节中将用例子来说嵌套循环的使用方法： ##语法 for 循环嵌套的语法如下： 1234567891011for init,max/min value, incrementdo for init,max/min val...","link":"","photos":[],"count_time":{"symbolsCount":754,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua表","uid":"038bf88a1c7598385fc79ad2a48f60ba","slug":"old-lua/2016-06-01-tables","date":"2024-03-14T06:15:59.731Z","updated":"2024-03-14T06:15:59.732Z","comments":true,"path":"api/articles/old-lua/2016-06-01-tables.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"Lua 表在 Lua 语言中，表是唯一可以用来创建不同数据类型的数据结构，比如常见的数组和字典都是用表来创建的。 Lua 语言中经常到关联数组这种数据类型，它不仅可以用数值作为索引值，除了 nil 以外的字符串同样可以作为其索引。表没有固定的大小，当数据量增加时表会自动增大。 L...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}