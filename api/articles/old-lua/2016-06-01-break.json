{"title":"Break语句","uid":"1e07952645adeb0063307933aff99e35","slug":"old-lua/2016-06-01-break","date":"2024-03-14T07:45:09.107Z","updated":"2024-03-14T07:45:09.107Z","comments":true,"path":"api/articles/old-lua/2016-06-01-break.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h1>break 语句</h1>\n<p>程序在解释执行过程中，在循环内遇到 break 语句时，循环将立即结束。程序将循环语句的下一条语句开始执行。<br>\n如果你是在嵌套循环（即，一个循环内还有一个循环语句）内使用 break 语句，break 只结束内层循环，并从该代码块后的第一条语句处开始执行。</p>\n<h2 id=\"语法\">语法</h2>\n<p>break 语句的语法如下所示：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">break;</span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\">## 流程图：  </span><br><span class=\"line\">![](images/break.jpg)  </span><br><span class=\"line\"></span><br><span class=\"line\">## 示例  </span><br><span class=\"line\"></span><br><span class=\"line\">```lua</span><br><span class=\"line\">--[ 局部变量定义--]</span><br><span class=\"line\">a = 10</span><br><span class=\"line\"></span><br><span class=\"line\">--[ 执行 while 循环--]</span><br><span class=\"line\">while( a &lt; 20 )</span><br><span class=\"line\">do</span><br><span class=\"line\">   print(&quot;value of a:&quot;, a)</span><br><span class=\"line\">   a=a+1</span><br><span class=\"line\">   if( a &gt; 15)</span><br><span class=\"line\">   then</span><br><span class=\"line\">      --[ terminate the loop using break statement --]</span><br><span class=\"line\">      break</span><br><span class=\"line\">   end</span><br><span class=\"line\">end</span><br></pre></td></tr></table></figure>\n<p>执行上面的代码可以得到如下的结果：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">value of a:\t<span class=\"number\">10</span></span><br><span class=\"line\">value of a:\t<span class=\"number\">11</span></span><br><span class=\"line\">value of a:\t<span class=\"number\">12</span></span><br><span class=\"line\">value of a:\t<span class=\"number\">13</span></span><br><span class=\"line\">value of a:\t<span class=\"number\">14</span></span><br><span class=\"line\">value of a:\t<span class=\"number\">15</span></span><br></pre></td></tr></table></figure>\n","text":"break 语句 程序在解释执行过程中，在循环内遇到 break 语句时，循环将立即结束。程序将循环语句的下一条语句开始执行。 如果你是在嵌套循环（即，一个循环内还有一个循环语句）内使用 break 语句，break 只结束内层循环，并从该代码块后的第一条语句处开始执行。 语法 ...","link":"","photos":[],"count_time":{"symbolsCount":559,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">break 语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">语法</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"HFish蜜罐与SOC安全运营中心","uid":"3e5e0ad875e008f2f5596d741d0ac42f","slug":"candylab/soc","date":"2024-03-14T07:45:09.108Z","updated":"2024-03-14T07:45:09.108Z","comments":true,"path":"api/articles/candylab/soc.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"HFish蜜罐与SOC安全运营中心 Excerpt 作者：糖果 0x01 传统蜜罐 传统蜜罐在安全运营当中，起到防御与威胁发现的作用。蜜罐系统提供Web（WordPress等）服务模拟、及各种主机服务模拟，比如：ElasticSearch、FTP、Telnet、Redis等。 类...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"文章","slug":"文章","count":22,"path":"api/categories/文章.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua游戏开发","uid":"0574a789cafc1558adcaaf40b641bfb0","slug":"old-lua/2016-06-01-game-programming","date":"2024-03-14T07:45:09.107Z","updated":"2024-03-14T07:45:09.107Z","comments":true,"path":"api/articles/old-lua/2016-06-01-game-programming.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua 游戏开发 Lua 语言因其结构和语法的简洁性而在各类游戏引擎中被广泛使用。游戏对图形画面要求非常苛刻，这无疑需消耗大量的内存空间，而这些内存空间的管理是非常棘手的问题。Lua 语言有自动的垃圾回收机制，这种自动化的内存管理机制也使得 Lua 受到游戏引擎开发者的青睐。著名...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}