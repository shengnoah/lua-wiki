{"title":"基于redis+nginx+Lua实现访问白名单黑名单","uid":"9d44387db481356fde5c21f04e842fd5","slug":"zl/2016-01-01-184_基于redis+nginx+Lua实现访问白名单黑名单","date":"2024-04-03T03:47:33.072Z","updated":"2024-04-03T03:47:33.072Z","comments":true,"path":"api/articles/zl/2016-01-01-184_基于redis+nginx+Lua实现访问白名单黑名单.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<pre><code>&lt;span hidden itemprop=&quot;author&quot; itemscope itemtype=&quot;http://schema.org/Person&quot;&gt;\n  &lt;meta itemprop=&quot;name&quot; content=&quot;刘三儿&quot;&gt;\n  &lt;meta itemprop=&quot;description&quot; content=&quot;天道酬勤 自强不息&quot;&gt;\n  &lt;meta itemprop=&quot;image&quot; content=&quot;/images/kid.jpg&quot;&gt;\n&lt;/span&gt;\n\n&lt;span hidden itemprop=&quot;publisher&quot; itemscope itemtype=&quot;http://schema.org/Organization&quot;&gt;\n  &lt;meta itemprop=&quot;name&quot; content=&quot;liusir.me&quot;&gt;\n&lt;/span&gt;\n\n\n  \n\n\n\n\n\n&lt;div class=&quot;post-body&quot; itemprop=&quot;articleBody&quot;&gt;\n</code></pre>\n<ol>\n<li>\n<p>添加<code>echo-nginx-module</code>模块</p>\n<ul>\n<li>git clone <a href=\"https://github.com/openresty/echo-nginx-module.git\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/openresty/echo-nginx-module.git</a> /usr/local/echo-nginx-module</li>\n<li>切换到nginx源码目录 cd /usr/local/src/nginx</li>\n<li>重新执行 ./configure –prefix=/usr/local/nginx –add-module=/usr/local/echo-nginx-module</li>\n<li>\n<p>若提示错误少什么依赖就安装相应的依赖，无提示则执行 make &amp;&amp; make install</p>\n</li>\n<li>\n<p>网上还有另一种方法,同理可以添加别的模块</p>\n</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr>\n<td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td>\n<td class=\"code\"><pre><span class=\"line\">git clone https://github.com/nginx/nginx.git</span><br><span class=\"line\">git submodule add git@github.com:openresty/echo-nginx-module.git</span><br><span class=\"line\">#重新配置nginx,把echo-nginx-module模块编译进nginx可执行文档</span><br><span class=\"line\">sudo ./configure --add-module=echo-nginx-module</span><br></pre></td>\n</tr></table></figure>\n</li>\n<li>\n<p>安装 ngx_devel_kit (NDK) 模块</p>\n<ul>\n<li>cd /usr/local </li>\n<li>git clone <a href=\"https://github.com/simpl/ngx_devel_kit.git\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/simpl/ngx_devel_kit.git</a>  </li>\n</ul>\n</li>\n<li>\n<p>添加<code>lua-nginx-module</code>模块</p>\n<ul>\n<li>cd /usr/local </li>\n<li>git clone <a href=\"https://github.com/chaoslawful/lua-nginx-module.git\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/chaoslawful/lua-nginx-module.git</a>\n</li>\n</ul>\n</li>\n<li>\n<p>重新编译nginx</p>\n<figure class=\"highlight plain\"><table><tr>\n<td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td>\n<td class=\"code\"><pre><span class=\"line\">./configure --prefix=/usr/local/nginx </span><br><span class=\"line\">            --with-ld-opt=\"-Wl,-rpath,$LUAJIT_LIB\" </span><br><span class=\"line\">            --add-module=/usr/local/ngx_devel_kit  </span><br><span class=\"line\">            --add-module=/usr/local/echo-nginx-module </span><br><span class=\"line\">            --add-module=/usr/local/lua-nginx-module </span><br><span class=\"line\">make -j2 </span><br><span class=\"line\">make install</span><br></pre></td>\n</tr></table></figure>\n</li>\n<li>\n<p>重启nginx服务器</p>\n</li>\n<li>\n<p>测试Lua，在nginx.conf配置文档server代码块中加入以下代码：</p>\n <figure class=\"highlight plain\"><table><tr>\n<td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td>\n<td class=\"code\"><pre><span class=\"line\">location /echo { </span><br><span class=\"line\">    default_type 'text/plain'; </span><br><span class=\"line\">    echo 'install echo module success!'; </span><br><span class=\"line\">} </span><br><span class=\"line\">location /lua { </span><br><span class=\"line\">    default_type 'text/plain'; </span><br><span class=\"line\">    content_by_lua 'ngx.say(\"install lua module success!\")'; </span><br><span class=\"line\">}</span><br></pre></td>\n</tr></table></figure>\n</li>\n<li>\n<p>curl <a href=\"https://liusir.me/http://localhost/echo\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost/echo</a>  // 正常的话输出：install echo module success!</p>\n</li>\n<li>curl <a href=\"https://liusir.me/http://localhost/lua\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost/lua</a>   // 正常的话输出：install lua module success!</li>\n</ol>\n<h1 id=\"二、实现\">\n<a href=\"https://liusir.me/#%E4%BA%8C%E3%80%81%E5%AE%9E%E7%8E%B0\" class=\"headerlink\" title=\"二、实现\"></a>二、实现</h1>\n<ol>\n<li>实现原理：通过在nginx上进行访问限制，通过lua来灵活实现业务需求，redis用于存储黑名单列表</li>\n<li>\n<p>具体过程</p>\n<ul>\n<li>step1:lua代码(post请求，ip地址黑名单，请求参数中imsi,tel值和黑名单)</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr>\n<td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td>\n<td class=\"code\"><pre><span class=\"line\">[root@git-server ~]# cat /usr/local/nginx/conf/lua/ipblacklist.lua</span><br><span class=\"line\">ngx.req.read_body()</span><br><span class=\"line\"></span><br><span class=\"line\">local redis = require \"resty.redis\"</span><br><span class=\"line\">local red = redis.new()</span><br><span class=\"line\">red.connect(red, '127.0.0.1', '6379')</span><br><span class=\"line\"></span><br><span class=\"line\">local myIP = ngx.req.get_headers()[\"X-Real-IP\"]</span><br><span class=\"line\">if myIP == nil then</span><br><span class=\"line\">   myIP = ngx.req.get_headers()[\"x_forwarded_for\"]</span><br><span class=\"line\">end</span><br><span class=\"line\">if myIP == nil then</span><br><span class=\"line\">   myIP = ngx.var.remote_addr</span><br><span class=\"line\">end</span><br><span class=\"line\"></span><br><span class=\"line\">if ngx.re.match(ngx.var.uri,\"^(/webapi/).*$\") then</span><br><span class=\"line\">    local method = ngx.var.request_method</span><br><span class=\"line\">    if method == 'POST' then</span><br><span class=\"line\">        local args = ngx.req.get_post_args()</span><br><span class=\"line\"></span><br><span class=\"line\">        local hasIP = red:sismember('black.ip',myIP)</span><br><span class=\"line\">        local hasIMSI = red:sismember('black.imsi',args.imsi)</span><br><span class=\"line\">        local hasTEL = red:sismember('black.tel',args.tel)</span><br><span class=\"line\">        if hasIP==1 or hasIMSI==1 or hasTEL==1 then</span><br><span class=\"line\">            --ngx.say(\"This is 'Black List' request\")</span><br><span class=\"line\">            ngx.exit(ngx.HTTP_FORBIDDEN)</span><br><span class=\"line\">          end</span><br><span class=\"line\">        else</span><br><span class=\"line\">            --ngx.say(\"This is 'POST' request\")</span><br><span class=\"line\">            ngx.exit(ngx.HTTP_FORBIDDEN)</span><br><span class=\"line\">          end</span><br><span class=\"line\">         end</span><br></pre></td>\n</tr></table></figure>\n<ul>\n<li>step2:修改nginx.conf</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr>\n<td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td>\n<td class=\"code\"><pre><span class=\"line\">location / {</span><br><span class=\"line\">root html;</span><br><span class=\"line\">index index.html index.htm;</span><br><span class=\"line\">access_by_lua_file /usr/local/nginx/conf/lua/ipblacklist.lua;</span><br><span class=\"line\">proxy_pass http://127.0.0.1:8080;</span><br><span class=\"line\">   client_max_body_size 1m;</span><br><span class=\"line\">}</span><br></pre></td>\n</tr></table></figure>\n<ul>\n<li>step3:添加黑名单规则数据</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr>\n<td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td>\n<td class=\"code\"><pre><span class=\"line\">redis-cli sadd black.ip '192.160.10.10'</span><br><span class=\"line\">redis-cli sadd black.imsi '460123456789'</span><br><span class=\"line\">redis-cli sadd black.tel '15888888888'</span><br></pre></td>\n</tr></table></figure>\n<ul>\n<li>step4:验证结果</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr>\n<td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td>\n<td class=\"code\"><pre><span class=\"line\">curl -d \"imsi=460123456789&amp;tel=15800000000\" \"http://yourdomain/index.php\"</span><br></pre></td>\n</tr></table></figure>\n</li>\n</ol>\n<pre><code>&lt;/div&gt;\n</code></pre>\n","text":"&lt;span hidden itemprop=&quot;author&quot; itemscope itemtype=&quot;http://schema.org/Person&quot;&gt; &lt;meta itemprop=&quot;name&quot; c...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">\n二、实现</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua lapis安装","uid":"d6f0c9e8d75212b88a18068e0088a2cd","slug":"zl/2016-01-01-187_lua lapis安装","date":"2024-04-03T03:47:33.073Z","updated":"2024-04-03T03:47:33.073Z","comments":true,"path":"api/articles/zl/2016-01-01-187_lua lapis安装.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;section class=&quot;article-body markdown-body&quot;&gt; &lt;h3 id=&quot;lapis安装&quot;&gt; lapis安装 lapis是lua中的web框架，基于openresty,直接和ngin...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua","uid":"15b0cdc6d03f6c3f6bf8d3a7ff197317","slug":"zl/2016-01-01-185_[Lua","date":"2024-04-03T03:47:33.072Z","updated":"2024-04-03T03:47:33.072Z","comments":true,"path":"api/articles/zl/2016-01-01-185_[Lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;h2 id=&quot;介绍&quot;&gt;介绍&lt;/h2&gt; 官网地址： http://www.lua.org/home.html Lua是脚本语言，可以自己运行，可以嵌入C语言运行，也可以把C语言嵌入Lua运行。 Lua全部都是用C语言实现的，可以到官网...","link":"","photos":[],"count_time":{"symbolsCount":981,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}