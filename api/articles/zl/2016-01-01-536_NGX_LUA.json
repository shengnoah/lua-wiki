{"title":"NGX_LUA","uid":"1cb1c66fc18ebaf0b80bde02a3d30c10","slug":"zl/2016-01-01-536_NGX_LUA","date":"2024-04-03T03:47:35.809Z","updated":"2024-04-03T03:47:35.809Z","comments":true,"path":"api/articles/zl/2016-01-01-536_NGX_LUA.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<head>\n  <meta charset=\"utf-8\"/>\n  <title>NGX_LUA | 0neday&#39;s Notes</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\"/>\n<pre><code>&lt;meta name=&quot;keywords&quot; content=&quot;Nginx,&quot;/&gt;\n</code></pre>\n<p>&lt;meta name=“description” content=&quot;&amp;nbsp;<br />\nNginx 是一个高性能，支持高并发的，轻量级的 Web Sever。 Nginx 采用模块化的架构， 可以通过开发 Nginx 的扩展模块 ， 将 Nginx 打造成一个全能的 Web Sever， 即将一些功能在前端 Nginx 反向代理层解决，比如登录校验、js 合并等。</p>\n<ol>\n<li class=\"lvl-3\">\n<p>Nginx 进程模型&quot;/&gt;<br />\n<meta property=\"og:type\" content=\"article\"/><br />\n<meta property=\"og:title\" content=\"NGX_LUA\"/><br />\n<meta property=\"og:url\" content=\"https://blog.coolstar-pc.top/2016/06/10/ngx-lua/index.html\"/><br />\n<meta property=\"og:site_name\" content=\"0neday&#39;s Notes\"/><br />\n&lt;meta property=“og:description” content=&quot;&amp;nbsp;<br />\nNginx 是一个高性能，支持高并发的，轻量级的 Web Sever。 Nginx 采用模块化的架构， 可以通过开发 Nginx 的扩展模块 ， 将 Nginx 打造成一个全能的 Web Sever， 即将一些功能在前端 Nginx 反向代理层解决，比如登录校验、js 合并等。</p>\n</li>\n<li class=\"lvl-3\">\n<p>Nginx 进程模型&quot;/&gt;<br />\n<meta property=\"og:image\" content=\"https://blog.coolstar-pc.tophttps://0neday.github.io//uploads/2016/06/0_1330494922Q49n.gif\"/><br />\n<meta property=\"og:updated_time\" content=\"2016-08-19T03:44:54.467Z\"/><br />\n<meta name=\"twitter:card\" content=\"summary\"/><br />\n<meta name=\"twitter:title\" content=\"NGX_LUA\"/><br />\n&lt;meta name=“twitter:description” content=&quot;&amp;nbsp;<br />\nNginx 是一个高性能，支持高并发的，轻量级的 Web Sever。 Nginx 采用模块化的架构， 可以通过开发 Nginx 的扩展模块 ， 将 Nginx 打造成一个全能的 Web Sever， 即将一些功能在前端 Nginx 反向代理层解决，比如登录校验、js 合并等。</p>\n</li>\n<li class=\"lvl-3\">\n<p>Nginx 进程模型&quot;/&gt;<br />\n<meta name=\"twitter:image\" content=\"https://blog.coolstar-pc.top/uploads/2016/06/0_1330494922Q49n.gif\"/></p>\n <link rel=\"icon\" href=\"/images/favicon.ico\"/>\n</li>\n</ol>\n  <link href=\"/css/styles.css?v=028c63b1\" rel=\"stylesheet\"/>\n<pre><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/personal-style.css&quot;/&gt;\n</code></pre>\n  <script type=\"text/javascript\">\n    var _hmt = _hmt || [];\n    (function() {\n      var hm = document.createElement(\"script\");\n      hm.src = \"//hm.baidu.com/hm.js?1c0822554fbbd4687f461f94328b0284\";\n      var s = document.getElementsByTagName(\"script\")[0];\n      s.parentNode.insertBefore(hm, s);\n    })();\n  </script>\n</head>\n<body>\n<pre><code>&lt;span id=&quot;toolbox-mobile&quot; class=&quot;toolbox-mobile&quot;&gt;导航&lt;/span&gt;\n</code></pre>\n  <div class=\"post-header CENTER\">\n  <div class=\"toolbox\">\n    <a class=\"toolbox-entry\" href=\"/\">\n      <span class=\"toolbox-entry-text\">导航</span>\n      <i class=\"icon-angle-down\"></i>\n      <i class=\"icon-home\"></i>\n    </a>\n    <ul class=\"list-toolbox\">\n<pre><code>    &lt;li class=&quot;item-toolbox&quot;&gt;\n      &lt;a class=&quot;CIRCLE&quot; href=&quot;/archives/&quot; target=&quot;_self&quot; rel=&quot;noopener noreferrer&quot;&gt;\n        博客\n      &lt;/a&gt;\n    &lt;/li&gt;\n  \n    &lt;li class=&quot;item-toolbox&quot;&gt;\n      &lt;a class=&quot;CIRCLE&quot; href=&quot;/category/&quot; target=&quot;_self&quot; rel=&quot;noopener noreferrer&quot;&gt;\n        分类\n      &lt;/a&gt;\n    &lt;/li&gt;\n  \n    &lt;li class=&quot;item-toolbox&quot;&gt;\n      &lt;a class=&quot;CIRCLE&quot; href=&quot;/tag/&quot; target=&quot;_self&quot; rel=&quot;noopener noreferrer&quot;&gt;\n        标签\n      &lt;/a&gt;\n    &lt;/li&gt;\n  \n    &lt;li class=&quot;item-toolbox&quot;&gt;\n      &lt;a class=&quot;CIRCLE&quot; href=&quot;/link/&quot; target=&quot;_self&quot; rel=&quot;noopener noreferrer&quot;&gt;\n        友链\n      &lt;/a&gt;\n    &lt;/li&gt;\n  \n    &lt;li class=&quot;item-toolbox&quot;&gt;\n      &lt;a class=&quot;CIRCLE&quot; href=&quot;/about/&quot; target=&quot;_self&quot; rel=&quot;noopener noreferrer&quot;&gt;\n        关于\n      &lt;/a&gt;\n    &lt;/li&gt;\n  \n    &lt;li class=&quot;item-toolbox&quot;&gt;\n      &lt;a class=&quot;CIRCLE&quot; href=&quot;/search/&quot; target=&quot;_self&quot; rel=&quot;noopener noreferrer&quot;&gt;\n        搜索\n      &lt;/a&gt;\n    &lt;/li&gt;\n  \n&lt;/ul&gt;\n</code></pre>\n  </div>\n</div>\n  <div id=\"toc\" class=\"toc-article\">\n    <strong class=\"toc-title\">文章目录</strong>\n  </div>\n<div class=\"content content-post CENTER\">\n   <article id=\"post-ngx-lua\" class=\"article article-type-post\" itemprop=\"blogPost\">\n  <div class=\"article-content\">\n<pre><code>  &lt;p&gt; &lt;/p&gt;\n</code></pre>\n<p>Nginx 是一个高性能，支持高并发的，轻量级的 Web Sever。 Nginx 采用模块化的架构， 可以通过开发 Nginx 的扩展模块 ， 将 Nginx 打造成一个全能的 Web Sever， 即将一些功能在前端 Nginx 反向代理层解决，比如登录校验、js 合并等。</p>\n<h5 id=\"1-Nginx-进程模型\"><a href=\"#1-Nginx-进程模型\" class=\"headerlink\" title=\"1. Nginx 进程模型\"></a><strong>1. Nginx 进程模型</strong></h5><p><img src=\"/uploads/2016/06/0_1330494922Q49n.gif\" alt=\"0_1330494922Q49n\"/><br/></p>\n<p>Nginx 采用多进程模型，单 Master — 多 Worker，由 Master 处理外部信号、配置文件的读取及 Worker 的初始化，Worker 进程采用 单线程、非阻塞的事件模型（Event Loop，事件循环）来实现端口的监听及客户端请求的处理和响应，同时Worker还要处理来自 Master 的信号。</p>\n<p>表面上看，当 Nginx 处理一个来自客户端的请求时，先根据请求头的host、ip和 port 来确定由哪个 server 处理，确定了 server 之后，再 根据请求的 uri 找到对应的 location，这个请求就由这个location 处理。实际 Nginx 将一个请求的处理划分为若干个不同阶段 （phase），这些阶段按照前后顺序依次执行。<br/></p><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">NGX_HTTP_POST_READ_PHASE,     //0读取请求phase        </div><div class=\"line\">NGX_HTTP_SERVER_REWRITE_PHASE,//1这个阶段主要是处理全局的(server block)的rewrite  </div><div class=\"line\">NGX_HTTP_FIND_CONFIG_PHASE,   //2这个阶段主要是通过uri来查找对应的location，然后根据loc_conf设置r的相应变量    </div><div class=\"line\">NGX_HTTP_REWRITE_PHASE,       //3这个主要处理location的rewrite  </div><div class=\"line\">NGX_HTTP_POST_REWRITE_PHASE,  //4postrewrite，这个主要是进行一些校验以及收尾工作，以便于交给后面的模块。  </div><div class=\"line\">NGX_HTTP_PREACCESS_PHASE,     //5比如流控这种类型的access就放在这个phase，也就是说它主要是进行一些比较粗粒度的access。  </div><div class=\"line\">NGX_HTTP_ACCESS_PHASE,        //6这个比如存取控制，权限验证就放在这个phase，一般来说处理动作是交给下面的模块做的.这个主要是做一些细粒度的access     </div><div class=\"line\">NGX_HTTP_POST_ACCESS_PHASE,   //7一般来说当上面的access模块得到access_code之后就会由这个模块根据access_code来进行操作  </div><div class=\"line\">NGX_HTTP_TRY_FILES_PHASE,     //8try_file模块，就是对应配置文件中的try_files指令，可接收多个路径作为参数，当前一个路径的资源无法找到，则自动查找下一个路径  </div><div class=\"line\">NGX_HTTP_CONTENT_PHASE,       //9内容处理模块  </div><div class=\"line\">NGX_HTTP_LOG_PHASE            //10<span class=\"built_in\">log</span>模块</div></pre></td></tr></tbody></table></figure><p></p>\n<h5 id=\"2-ngx-lua\"><a href=\"#2-ngx-lua\" class=\"headerlink\" title=\"2. ngx_lua\"></a>2. ngx_lua</h5><p> </p>\n<p>waiting for update……</p>\n  </div>\n</article>\n</div>\n  <a id=\"backTop\" class=\"back-top\">\n    <i class=\"icon-angle-up\"></i>\n  </a>\n  <div class=\"modal\" id=\"modal\">\n  <span id=\"cover\" class=\"cover hide\"></span>\n  <div id=\"modal-dialog\" class=\"modal-dialog hide-dialog\">\n    <div class=\"modal-header\">\n      <span id=\"close\" class=\"btn-close\">关闭</span>\n    </div>\n    <hr/>\n    <div class=\"modal-body\">\n      <ul class=\"list-toolbox\">\n<pre><code>      &lt;li class=&quot;item-toolbox&quot;&gt;\n        &lt;a class=&quot;CIRCLE&quot; href=&quot;/archives/&quot; target=&quot;_self&quot; rel=&quot;noopener noreferrer&quot;&gt;\n          博客\n        &lt;/a&gt;\n      &lt;/li&gt;\n    \n      &lt;li class=&quot;item-toolbox&quot;&gt;\n        &lt;a class=&quot;CIRCLE&quot; href=&quot;/category/&quot; target=&quot;_self&quot; rel=&quot;noopener noreferrer&quot;&gt;\n          分类\n        &lt;/a&gt;\n      &lt;/li&gt;\n    \n      &lt;li class=&quot;item-toolbox&quot;&gt;\n        &lt;a class=&quot;CIRCLE&quot; href=&quot;/tag/&quot; target=&quot;_self&quot; rel=&quot;noopener noreferrer&quot;&gt;\n          标签\n        &lt;/a&gt;\n      &lt;/li&gt;\n    \n      &lt;li class=&quot;item-toolbox&quot;&gt;\n        &lt;a class=&quot;CIRCLE&quot; href=&quot;/link/&quot; target=&quot;_self&quot; rel=&quot;noopener noreferrer&quot;&gt;\n          友链\n        &lt;/a&gt;\n      &lt;/li&gt;\n    \n      &lt;li class=&quot;item-toolbox&quot;&gt;\n        &lt;a class=&quot;CIRCLE&quot; href=&quot;/about/&quot; target=&quot;_self&quot; rel=&quot;noopener noreferrer&quot;&gt;\n          关于\n        &lt;/a&gt;\n      &lt;/li&gt;\n    \n      &lt;li class=&quot;item-toolbox&quot;&gt;\n        &lt;a class=&quot;CIRCLE&quot; href=&quot;/search/&quot; target=&quot;_self&quot; rel=&quot;noopener noreferrer&quot;&gt;\n          搜索\n        &lt;/a&gt;\n      &lt;/li&gt;\n    \n  &lt;/ul&gt;\n\n&lt;/div&gt;\n</code></pre>\n  </div>\n</div>\n<pre><code>  &lt;div class=&quot;fexo-comments comments-post&quot;&gt;\n</code></pre>\n  </div>\n  <script type=\"text/javascript\">\n  function loadScript(url, callback) {\n    var script = document.createElement('script')\n    script.type = 'text/javascript';\n\n    if (script.readyState) { //IE\n      script.onreadystatechange = function() {\n        if (script.readyState == 'loaded' ||\n          script.readyState == 'complete') {\n          script.onreadystatechange = null;\n          callback();\n        }\n      };\n    } else { //Others\n      script.onload = function() {\n        callback();\n      };\n    }\n\n    script.src = url;\n    document.getElementsByTagName('head')[0].appendChild(script);\n  }\n\n  window.onload = function() {\n    loadScript('/js/bundle.js?235683', function() {\n      // load success\n    });\n  }\n</script>\n</body>","text":" NGX_LUA | 0neday&#39;s Notes &lt;meta name=&quot;keywords&quot; content=&quot;Nginx,&quot;/&gt; &lt;meta name=“description” content=&quot;&...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1-Nginx-%E8%BF%9B%E7%A8%8B%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">1. Nginx 进程模型</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2-ngx-lua\"><span class=\"toc-text\">2. ngx_lua</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"cocos2dx lua 安全之加密与解密实现","uid":"0449c27d381d6b17b917926d1d3ef356","slug":"zl/2016-01-01-537_cocos2dx lua 安全之加密与解密实现","date":"2024-04-03T03:47:35.809Z","updated":"2024-04-03T03:47:35.809Z","comments":true,"path":"api/articles/zl/2016-01-01-537_cocos2dx lua 安全之加密与解密实现.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"非常多使用cocos2dx+lua做游戏的同学。都会想到一个问题，我的游戏一旦公布，如何才干保证的我脚本代码不被破解。不泄露代码。尽管这和开源、共享的原则不合。可是代码也是coder的劳动成果，理应得到保护。 特别是商业游戏更是如此，不希望被别人破解掉源代码而且进行改动。 今天的...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Offline Evaluation in Recommendation System调研","uid":"7025a8ff34d0745a533eed02f3038109","slug":"zl/2016-01-01-539_Offline Evaluation in Recommendation System调研","date":"2024-04-03T03:47:35.809Z","updated":"2024-04-03T03:47:35.810Z","comments":true,"path":"api/articles/zl/2016-01-01-539_Offline Evaluation in Recommendation System调研.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"推荐系统中的评测大致分为三类：离线评测、在线评测、用户调研。在线评测通常将流量随机分配到不同策略下下比较不同策略的优劣（又称A/B test或bucket test），操作简单，效果准确直观，但代价昂贵，可能伤害部分用户的体验；离线评测使用模拟器模拟线上环境获取结果，对线上几乎没...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}