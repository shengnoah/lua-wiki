{"title":"lua-面向对象模拟","uid":"12b5912f323e3811fe32064355bba3b9","slug":"zl/2016-01-01-1184_lua-面向对象模拟","date":"2024-04-03T03:47:33.027Z","updated":"2024-04-03T03:47:33.027Z","comments":true,"path":"api/articles/zl/2016-01-01-1184_lua-面向对象模拟.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>Lua 语言本身是非常简单的（相对于 C#，C++，Java …）,由于 Lua 语言的创始人的初衷，就是设计一款简单而又小巧的语言，所以说 Lua语言本身是没有“类和对象”的概念的。</p>\n<h2 id=\"类定义模拟\"><a href=\"#类定义模拟\" class=\"headerlink\" title=\"类定义模拟\"></a>类定义模拟</h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\">Person = {name, age, gender}\t<span class=\"comment\">-- 模拟字段</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">&lt;!<span class=\"comment\">-- more --&gt;</span></span><br/><span class=\"line\">Person.Id = <span class=\"number\">1</span>\t\t\t<span class=\"comment\">-- 模拟静态变量</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span></span>\t<span class=\"comment\">-- 模拟构造函数，通过设置元表的方式</span></span><br/><span class=\"line\">4<span class=\"keyword\">local</span> object = {}</span><br/><span class=\"line\">4<span class=\"built_in\">setmetatable</span>(object, Person)</span><br/><span class=\"line\">4self.<span class=\"built_in\">__index</span> = Person</span><br/><span class=\"line\">4<span class=\"keyword\">return</span> object</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person.Print</span><span class=\"params\">()</span></span>\t<span class=\"comment\">-- 模拟类方法</span></span><br/><span class=\"line\">4<span class=\"built_in\">print</span>(<span class=\"string\">&#34;Print something&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Person:Show</span><span class=\"params\">()</span></span>\t<span class=\"comment\">-- 模拟成员方法</span></span><br/><span class=\"line\">4<span class=\"built_in\">print</span>(self.name, self.age, self.gender)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"类调用模拟\"><a href=\"#类调用模拟\" class=\"headerlink\" title=\"类调用模拟\"></a>类调用模拟</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">zak = Person:New()  <span class=\"comment\">-- 创建对象</span></span><br/><span class=\"line\">zak.name = <span class=\"string\">&#34;zak&#34;</span>    <span class=\"comment\">-- 字段使用</span></span><br/><span class=\"line\">zak.age = <span class=\"number\">18</span></span><br/><span class=\"line\">zak.gender = <span class=\"string\">&#34;男&#34;</span></span><br/><span class=\"line\">kyle = Person:New()  <span class=\"comment\">-- 创建对象</span></span><br/><span class=\"line\">kyle.name = <span class=\"string\">&#34;kyle&#34;</span>    <span class=\"comment\">-- 字段使用</span></span><br/><span class=\"line\">kyle.age = <span class=\"number\">16</span></span><br/><span class=\"line\">kyle.gender = <span class=\"string\">&#34;男&#34;</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(Person.Id)    <span class=\"comment\">-- 静态字段使用</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(zak.Id)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(kyle.Id)</span><br/><span class=\"line\"></span><br/><span class=\"line\">Person.Print()\t    <span class=\"comment\">-- 类方法调用</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">zak:Show()\t        <span class=\"comment\">-- 成员方法调用</span></span><br/><span class=\"line\">kyle:Show()</span><br/></pre></td></tr></tbody></table></figure>\n<h2 id=\"继承模拟\"><a href=\"#继承模拟\" class=\"headerlink\" title=\"继承模拟\"></a>继承模拟</h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">Programer = Person:New()\t<span class=\"comment\">-- 模拟继承父类</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Programer:New</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">4<span class=\"keyword\">local</span> object = Person:New()</span><br/><span class=\"line\">4<span class=\"built_in\">setmetatable</span>(object, Programer)</span><br/><span class=\"line\">4self.<span class=\"built_in\">__index</span> = Programer</span><br/><span class=\"line\">4<span class=\"keyword\">return</span> object</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Programer:Code</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">4<span class=\"built_in\">print</span>(self.name..<span class=\"string\">&#34; is coding&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"调用\"><a href=\"#调用\" class=\"headerlink\" title=\"调用\"></a>调用</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">zac = Programer:New()</span><br/><span class=\"line\">zac.name = <span class=\"string\">&#34;zac&#34;</span>\t<span class=\"comment\">-- 调用父类成员</span></span><br/><span class=\"line\">zac.age = <span class=\"number\">20</span></span><br/><span class=\"line\">zac.gender = <span class=\"string\">&#34;男&#34;</span></span><br/><span class=\"line\">zac:Show()</span><br/><span class=\"line\">zac:Code()\t\t\t<span class=\"comment\">-- 调用子类自己成员</span></span><br/></pre></td></tr></tbody></table></figure>\n<h2 id=\"代码分离\"><a href=\"#代码分离\" class=\"headerlink\" title=\"代码分离\"></a>代码分离</h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/><span class=\"line\">29</span><br/><span class=\"line\">30</span><br/><span class=\"line\">31</span><br/><span class=\"line\">32</span><br/><span class=\"line\">33</span><br/><span class=\"line\">34</span><br/><span class=\"line\">35</span><br/><span class=\"line\">36</span><br/><span class=\"line\">37</span><br/><span class=\"line\">38</span><br/><span class=\"line\">39</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- Hero.lua</span></span><br/><span class=\"line\">Hero = {name}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Hero:New</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">4<span class=\"keyword\">local</span> object = {}</span><br/><span class=\"line\">4<span class=\"built_in\">setmetatable</span>(object, self)</span><br/><span class=\"line\">4self.<span class=\"built_in\">__index</span> = self</span><br/><span class=\"line\">4<span class=\"keyword\">return</span> object</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Hero:Info</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">4<span class=\"built_in\">print</span>(<span class=\"string\">&#34;Hero&#39;s name : &#34;</span> .. self.name)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- Enemy.lua</span></span><br/><span class=\"line\">Enemy = {name}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Enemy:New</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">4<span class=\"keyword\">local</span> object = {}</span><br/><span class=\"line\">4<span class=\"built_in\">setmetatable</span>(object, self)</span><br/><span class=\"line\">4self.<span class=\"built_in\">__index</span> = self</span><br/><span class=\"line\">4<span class=\"keyword\">return</span> object</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Enemy:Info</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">4<span class=\"built_in\">print</span>(<span class=\"string\">&#34;Enemy&#39;s name : &#34;</span> .. self.name)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- main.lua</span></span><br/><span class=\"line\"><span class=\"built_in\">dofile</span>(<span class=\"string\">&#34;Hero.lua&#34;</span>)\t<span class=\"comment\">-- 引用类，参数为类文件路径</span></span><br/><span class=\"line\"><span class=\"built_in\">dofile</span>(<span class=\"string\">&#34;.\\Enemy.lua&#34;</span>)</span><br/><span class=\"line\"></span><br/><span class=\"line\">hero = Hero:New()</span><br/><span class=\"line\">hero.name = <span class=\"string\">&#34;a&#34;</span></span><br/><span class=\"line\">hero:Info()</span><br/><span class=\"line\"></span><br/><span class=\"line\">enemy = Enemy:New()</span><br/><span class=\"line\">enemy.name = <span class=\"string\">&#34;b&#34;</span></span><br/><span class=\"line\">enemy:Info()</span><br/></pre></td></tr></tbody></table></figure>","text":"Lua 语言本身是非常简单的（相对于 C#，C++，Java …）,由于 Lua 语言的创始人的初衷，就是设计一款简单而又小巧的语言，所以说 Lua语言本身是没有“类和对象”的概念的。 类定义模拟1234567891011121314151617181920Person = {n...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E5%AE%9A%E4%B9%89%E6%A8%A1%E6%8B%9F\"><span class=\"toc-text\">类定义模拟</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%B1%BB%E8%B0%83%E7%94%A8%E6%A8%A1%E6%8B%9F\"><span class=\"toc-text\">类调用模拟</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%A7%E6%89%BF%E6%A8%A1%E6%8B%9F\"><span class=\"toc-text\">继承模拟</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">调用</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%88%86%E7%A6%BB\"><span class=\"toc-text\">代码分离</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua table.sort方法","uid":"01c9d92af8932c90299e16dc08da6f69","slug":"zl/2016-01-01-1182_lua table.sort方法","date":"2024-04-03T03:47:33.027Z","updated":"2024-04-03T03:47:33.027Z","comments":true,"path":"api/articles/zl/2016-01-01-1182_lua table.sort方法.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 排序出现报错 排序顺序不正确的现象 报错1invalid order function for sorting出现了一次报错，但是在测试过程中没有复现，之后项目中出现了相同报错导致场景打不开。顺序不正确例子（功能：对一系列名称进行排序）：1234567891011121314l...","link":"","photos":[],"count_time":{"symbolsCount":"8.8k","symbolsTime":"8 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Suricata + Lua实现本地情报对接","uid":"94e8799293f23bf3d1d402dedb7a30a0","slug":"zl/2016-01-01-118_Suricata + Lua实现本地情报对接","date":"2024-04-03T03:47:33.027Z","updated":"2024-04-03T03:47:33.028Z","comments":true,"path":"api/articles/zl/2016-01-01-118_Suricata + Lua实现本地情报对接.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"​ 由于近期网站遭受恶意攻击, 通过对于登录接口的审计与分析, 现已确定了一批可疑账号。既然之前写过一个登录接口的审计脚本, 那么完全可以通过扩展这个脚本来实现对于可疑账号的比对。主要思路: 通过将可疑账号存进Redis中, 再利用Lua脚本调用Redis接口进行账号的比对。 先...","link":"","photos":[],"count_time":{"symbolsCount":"7.9k","symbolsTime":"7 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}