{"title":"OpenResty运行Lua示例","uid":"bec11e447246adaa267aa86f2f6057b4","slug":"zl/2016-01-01-317_OpenResty运行Lua示例","date":"2024-04-03T03:47:35.597Z","updated":"2024-04-03T03:47:35.598Z","comments":true,"path":"api/articles/zl/2016-01-01-317_OpenResty运行Lua示例.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>OpenResty 是一个基于 Nginx 与 Lua 的高性能 Web 平台。</p>\n<p>更多信息，参考 <a href=\"http://openresty.org/\" target=\"_blank\" rel=\"noopener noreferrer\">OpenResty 官网</a>。</p>\n<p>安装过程跟 Nginx 基本相同，区别在于安装完成之后，默认安装了很多 Module。</p>\n<p>安装完成后，执行 ./nginx -V 的结果</p>\n<figure class=\"highlight oxygene\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">nginx version: openresty/<span class=\"number\">1.13</span>.<span class=\"number\">6.2</span></span><br/><span class=\"line\">built <span class=\"keyword\">by</span> gcc <span class=\"number\">4.8</span>.<span class=\"number\">5</span> <span class=\"number\">20150623</span> (Red Hat <span class=\"number\">4.8</span>.<span class=\"number\">5</span>-<span class=\"number\">28</span>) (GCC) </span><br/><span class=\"line\">built <span class=\"keyword\">with</span> OpenSSL <span class=\"number\">1.0</span>.<span class=\"number\">2</span>k-fips  <span class=\"number\">26</span> Jan <span class=\"number\">2017</span></span><br/><span class=\"line\">TLS SNI support enabled</span><br/><span class=\"line\">configure arguments: --prefix=/work/admin/openresty/nginx --<span class=\"keyword\">with</span>-cc-opt=-O2 --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../ngx_devel_kit-<span class=\"number\">0.3</span>.<span class=\"number\">0</span> --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../echo-nginx-<span class=\"keyword\">module</span>-<span class=\"number\">0.61</span> --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../xss-nginx-<span class=\"keyword\">module</span>-<span class=\"number\">0.06</span> --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../ngx_coolkit-<span class=\"number\">0.2</span>rc3 --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../<span class=\"keyword\">set</span>-misc-nginx-<span class=\"keyword\">module</span>-<span class=\"number\">0.32</span> --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../form-input-nginx-<span class=\"keyword\">module</span>-<span class=\"number\">0.12</span> --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../encrypted-session-nginx-<span class=\"keyword\">module</span>-<span class=\"number\">0.08</span> --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../srcache-nginx-<span class=\"keyword\">module</span>-<span class=\"number\">0.31</span> --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../ngx_lua-<span class=\"number\">0.10</span>.<span class=\"number\">13</span> --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../ngx_lua_upstream-<span class=\"number\">0.07</span> --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../headers-more-nginx-<span class=\"keyword\">module</span>-<span class=\"number\">0.33</span> --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../<span class=\"keyword\">array</span>-<span class=\"keyword\">var</span>-nginx-<span class=\"keyword\">module</span>-<span class=\"number\">0.05</span> --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../memc-nginx-<span class=\"keyword\">module</span>-<span class=\"number\">0.19</span> --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../redis2-nginx-<span class=\"keyword\">module</span>-<span class=\"number\">0.15</span> --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../redis-nginx-<span class=\"keyword\">module</span>-<span class=\"number\">0.3</span>.<span class=\"number\">7</span> --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../rds-json-nginx-<span class=\"keyword\">module</span>-<span class=\"number\">0.15</span> --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../rds-csv-nginx-<span class=\"keyword\">module</span>-<span class=\"number\">0.09</span> --<span class=\"keyword\">add</span>-<span class=\"keyword\">module</span>=../ngx_stream_lua-<span class=\"number\">0.0</span>.<span class=\"number\">5</span> --<span class=\"keyword\">with</span>-ld-opt=-Wl,-rpath,/work/admin/openresty/luajit/lib --<span class=\"keyword\">with</span>-stream --<span class=\"keyword\">with</span>-stream_ssl_module --<span class=\"keyword\">with</span>-http_ssl_module</span><br/></pre></td></tr></tbody></table></figure>\n<p>OpenResty 配置文件格式同 Nginx 完全兼容，区别在于可在各个处理阶段中，嵌入 Lua 代码。</p>\n<p>下面是一个示例，在 rewrite 阶段，读取 Post 包请求体中的 JSON 字段，将请求重定向到不同的后端服务上去。</p>\n<figure class=\"highlight nginx\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> {</span><br/><span class=\"line\">    <span class=\"attribute\">listen</span>       <span class=\"number\">8080</span>;</span><br/><span class=\"line\">    <span class=\"attribute\">server_name</span>  localhost;</span><br/><span class=\"line\"></span><br/><span class=\"line\">    </span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"comment\">#access_log  logs/myweb.log  access;</span></span><br/><span class=\"line\">    <span class=\"attribute\">access_log</span>  <span class=\"literal\">off</span>;</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"attribute\">location</span> / {</span><br/><span class=\"line\"></span><br/><span class=\"line\">        <span class=\"attribute\">set</span> <span class=\"variable\">$backend</span> <span class=\"string\">&#39;&#39;</span>;</span><br/><span class=\"line\"></span><br/><span class=\"line\">        <span class=\"section\">rewrite_by_lua_block</span> {</span><br/><span class=\"line\"></span><br/><span class=\"line\">            <span class=\"attribute\">local</span> json = require(<span class=\"string\">&#34;cjson.safe&#34;</span>)</span><br/><span class=\"line\"></span><br/><span class=\"line\">            ngx.req.read_body()</span><br/><span class=\"line\"></span><br/><span class=\"line\">            local body_data = ngx.req.get_body_data()</span><br/><span class=\"line\">            local body_data_json = json.decode(body_data)</span><br/><span class=\"line\"></span><br/><span class=\"line\">            if string.find(body_data_json[<span class=\"string\">&#34;key&#34;</span>],<span class=\"string\">&#34;value&#34;</span>) then</span><br/><span class=\"line\">                back = <span class=\"string\">&#34;127.0.0.1:10000&#34;</span></span><br/><span class=\"line\">            else</span><br/><span class=\"line\">                back = <span class=\"string\">&#34;myweb&#34;</span></span><br/><span class=\"line\">            end</span><br/><span class=\"line\"></span><br/><span class=\"line\">            ngx.var.backend = back</span><br/><span class=\"line\"></span><br/><span class=\"line\">        }</span><br/><span class=\"line\"></span><br/><span class=\"line\">        proxy_pass http://<span class=\"variable\">$backend</span>;</span><br/><span class=\"line\"></span><br/><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> Host <span class=\"variable\">$host</span>;</span><br/><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X_Real_IP <span class=\"variable\">$remote_addr</span>;</span><br/><span class=\"line\">        <span class=\"attribute\">proxy_set_header</span> X_Forwarded_For <span class=\"variable\">$proxy_add_x_forwarded_for</span>;</span><br/><span class=\"line\"></span><br/><span class=\"line\">        <span class=\"attribute\">proxy_next_upstream</span> <span class=\"literal\">error</span> timeout invalid_header http_404 http_500 http_502 http_503;</span><br/><span class=\"line\"></span><br/><span class=\"line\">    }</span><br/><span class=\"line\"></span><br/><span class=\"line\">}</span><br/></pre></td></tr></tbody></table></figure>","text":"OpenResty 是一个基于 Nginx 与 Lua 的高性能 Web 平台。 更多信息，参考 OpenResty 官网。 安装过程跟 Nginx 基本相同，区别在于安装完成之后，默认安装了很多 Module。 安装完成后，执行 ./nginx -V 的结果 nginx ver...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua c api","uid":"a088e52eeedd5a2e08a78395ae73ef54","slug":"zl/2016-01-01-318_lua c api ","date":"2024-04-03T03:47:35.598Z","updated":"2024-04-03T03:47:35.598Z","comments":true,"path":"api/articles/zl/2016-01-01-318_lua c api .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"一 registry registry 是一个单独的表，用来保存 lua 中的全局变量，同时 lua 代码不能直接访问（只能通过 c 函数接口访问）。registry 通过伪索引（LUA_REGISTRYINDEX）访问，伪索引类似于栈上的索引，但是它的关联数据并未在栈中。 re...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua编程5之函数","uid":"3de999cece84151e04fc2fbf7bda0ea9","slug":"zl/2016-01-01-315_Lua编程5之函数","date":"2024-04-03T03:47:35.596Z","updated":"2024-04-03T03:47:35.596Z","comments":true,"path":"api/articles/zl/2016-01-01-315_Lua编程5之函数.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"思考并回答以下问题：1.编程中最重要的是什么？2.描述一下函数的两种用途。3.如何指定为局部函数？4.函数可以返回多个值吗？如何返回？5.foo = function(x) return 2 * x end 如何调用？6.Lua中实参和形参的数量不一致如何处理？7.可变参数是什么...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}