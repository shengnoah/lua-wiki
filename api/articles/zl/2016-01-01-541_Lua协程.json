{"title":"Lua协程","uid":"bce3027296f15638c976f1ebef15c96b","slug":"zl/2016-01-01-541_Lua协程","date":"2024-04-03T03:47:35.810Z","updated":"2024-04-03T03:47:35.810Z","comments":true,"path":"api/articles/zl/2016-01-01-541_Lua协程.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<ul id=\"markdown-toc\">\n  <li><a href=\"#lua的协程\" id=\"markdown-toc-lua的协程\">Lua的协程</a></li>\n</ul>\n<h3 id=\"lua的协程\">Lua的协程</h3>\n<ul>\n  <li>定义\n    <ul>\n      <li>两个子过程通过相互协作完成某个任务，用它可以实现协作式多任务，</li>\n      <li>协程(coroutine)技术本质上是一种程序控制机制</li>\n    </ul>\n  </li>\n  <li>分类\n    <ul>\n      <li>对称协程(asymmetric)\n        <ul>\n          <li>当前协程将控制权让给另外一个协程，协程之间的优先级是平等的</li>\n        </ul>\n      </li>\n      <li>非对称协程(symmetric)\n        <ul>\n          <li>当前协程将控制权让给当前调用者</li>\n          <li>lua采用此类协程</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>\n<ul>\n  <li>范例\n    <div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>local co = coroutine.create( \n  function( first_param )\n      local result = &#34;ok&#34;\n      print( &#34;first_param = &#34;, first_param )\n      local second_param = coroutine.yield( result )\n      print( &#34;second_param = &#34;,second_param )\n      return 1024\n  end   \n)\nprint( &#34;coroutine status = &#34;, coroutine.status(co) )\nlocal i, j = coroutine.resume( co, 1 )\nprint( i, j )\nprint( &#34;coroutine status = &#34;, coroutine.status(co) )\ni, j = coroutine.resume( co, 2 )\nprint( i, j )\nprint( &#34;coroutine status = &#34;, coroutine.status(co) )\n</code></pre></div>    </div>\n  </li>\n  <li>输出结果\n    <div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>coroutine status =  suspended\nfirst_param =   1\ntrue    ok\ncoroutine status =  suspended\nsecond_param =  2\ntrue    1024\ncoroutine status =  dead\n</code></pre></div>    </div>\n  </li>\n  <li>逻辑梳理\n    <ul>\n      <li>一个协程需要一个闭包（匿名函数）</li>\n      <li>create后的协程状态为suspended</li>\n      <li>第一次唤醒协程时候传递的参数将作为匿名函数的入参</li>\n      <li>yield第一次交出控制权，yield的参数作为当前协程的输出传递出来</li>\n      <li>第二次唤醒协程时候传递的参数，将通过yield的返回值作为协程的数据\n        <ul>\n          <li>在第一次调用了yield后，协程被挂起，类似阻塞</li>\n          <li>第二次调用resume后，放开阻塞，继续执行yield，并将外部传入参数作为yield返回值</li>\n        </ul>\n      </li>\n      <li>当闭包完成时，协程状态变为dead</li>\n    </ul>\n  </li>\n  <li>应用场景\n    <ul>\n      <li>同步原语写异步逻辑\n        <ul>\n          <li>没有协程之前，异步逻辑采用的是函数回调，需要保留上下文</li>\n          <li>编程思路会断断续续，需要在几个函数之间不停切换</li>\n          <li>协程自动保存了上下文，且让逻辑更加连续\n            <ul>\n              <li>C++协程实现中，也是采用了系统函数进行上下文切换</li>\n              <li>windows采用了CreateFiber、SwitchToFiber</li>\n              <li>linux采用了makecontext、swapcontext</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n</ul>","text":" Lua的协程 Lua的协程 定义 两个子过程通过相互协作完成某个任务，用它可以实现协作式多任务， 协程(coroutine)技术本质上是一种程序控制机制 分类 对称协程(asymmetric) 当前协程将控制权让给另外一个协程，协程之间的优先级是平等的 非对称协程(symmet...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#lua%E7%9A%84%E5%8D%8F%E7%A8%8B\"><span class=\"toc-text\">Lua的协程</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"1.1 lua 简介","uid":"a36097e33cfd418ea134e8f4a3bfede6","slug":"zl/2016-01-01-540_1.1 lua 简介","date":"2024-04-03T03:47:35.810Z","updated":"2024-04-03T03:47:35.810Z","comments":true,"path":"api/articles/zl/2016-01-01-540_1.1 lua 简介.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"简介Lua（发音： /ˈluːə/）程序设计语言是一个简洁、轻量、可扩展的脚本语言，Lua在葡萄牙语中的意思是月亮。Lua 是巴西里约热内卢天主教大学（Pontifical Catholic University of Rio de Janeiro）里的一个研究小组，由Rober...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua参考手册上半部分","uid":"c3e6b0b841b77632475081af7971b980","slug":"zl/2016-01-01-538_Lua参考手册上半部分","date":"2024-04-03T03:47:35.809Z","updated":"2024-04-03T03:47:35.809Z","comments":true,"path":"api/articles/zl/2016-01-01-538_Lua参考手册上半部分.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua 是一个扩展式程序设计语言，它被设计成支持通用的过程式编程，并有相关数据描述的设施。 Lua 也能对面向对象编程，函数式编程，数据驱动式编程提供很好的支持。 它可以作为一个强大、轻量的脚本语言，供任何需要的程序使用。 Lua 以一个用 clean C 写成的库形式提供。（所...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}