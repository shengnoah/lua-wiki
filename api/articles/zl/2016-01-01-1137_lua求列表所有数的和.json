{"title":"lua求列表所有数的和","uid":"6cd5fadeef49c117785634784a7b7e3e","slug":"zl/2016-01-01-1137_lua求列表所有数的和","date":"2024-04-03T03:47:33.013Z","updated":"2024-04-03T03:47:33.013Z","comments":true,"path":"api/articles/zl/2016-01-01-1137_lua求列表所有数的和.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>\n<span class=\"o\">#</span><span class=\"err\">!</span><span class=\"o\">/</span><span class=\"n\">usr</span><span class=\"o\">/</span><span class=\"n\">bin</span><span class=\"o\">/</span><span class=\"n\">env</span> <span class=\"n\">lua</span>\n<p><span class=\"c1\">–table.reduce = function (list, fn)</span><br />\n<span class=\"c1\">–有趣的地方是fn参数也可以是一个函数</span><br />\n<span class=\"c1\">–这个函数是将列表值来相加得到和</span><br />\n<span class=\"n\">abc</span> <span class=\"o\">=</span> <span class=\"k\">function</span> <span class=\"p\">(</span><span class=\"n\">list</span><span class=\"p\">,</span> <span class=\"n\">fn</span><span class=\"p\">)</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">acc</span><br />\n<span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"k\">in</span> <span class=\"nb\">ipairs</span><span class=\"p\">(</span><span class=\"n\">list</span><span class=\"p\">)</span> <span class=\"k\">do</span><br />\n<span class=\"k\">if</span> <span class=\"mi\">1</span> <span class=\"o\">==</span> <span class=\"n\">k</span> <span class=\"k\">then</span><br />\n<span class=\"n\">acc</span> <span class=\"o\">=</span> <span class=\"n\">v</span><br />\n<span class=\"k\">else</span><br />\n<span class=\"n\">acc</span> <span class=\"o\">=</span> <span class=\"n\">fn</span><span class=\"p\">(</span><span class=\"n\">acc</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">)</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">return</span> <span class=\"n\">acc</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">abc</span><span class=\"p\">(</span><br />\n<span class=\"c1\">–print(table.reduce(</span><br />\n<span class=\"p\">&#123;</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">210</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"mi\">120</span><span class=\"p\">,</span> <span class=\"mi\">133</span><span class=\"p\">,</span> <span class=\"mi\">140</span><span class=\"p\">,</span> <span class=\"mi\">166</span><span class=\"p\">,</span> <span class=\"mi\">199</span><span class=\"p\">&#125;,</span><br />\n<span class=\"c1\">–这里将abc函数中的fn参数作为一个求和的函数来处理</span><br />\n<span class=\"k\">function</span> <span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span><br />\n<span class=\"k\">return</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"p\">))</span></p>\n<p></code></pre></div></div></p>\n","text":" #!/usr/bin/env lua –table.reduce = function (list, fn) –有趣的地方是fn参数也可以是一个函数 –这个函数是将列表值来相加得到和 abc = function (list, fn) local acc for k, v in...","link":"","photos":[],"count_time":{"symbolsCount":379,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua-beautify","uid":"3ba1363d060b9745cf2ae90e85e26f60","slug":"zl/2016-01-01-1139_Lua-beautify","date":"2024-04-03T03:47:33.013Z","updated":"2024-04-03T03:47:33.013Z","comments":true,"path":"api/articles/zl/2016-01-01-1139_Lua-beautify.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" function blahblahblah(x) –local table = {asd = 123, x = 0.34, } if x ~= 3 then print( x ) elseif x == &quot;string&quot; then my_custom_fun...","link":"","photos":[],"count_time":{"symbolsCount":703,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Erlang+Lua的一次重构","uid":"7635535fb530719b6f10fbc7f8fdcc90","slug":"zl/2016-01-01-113_Erlang+Lua的一次重构","date":"2024-04-03T03:47:33.013Z","updated":"2024-04-03T03:47:33.013Z","comments":true,"path":"api/articles/zl/2016-01-01-113_Erlang+Lua的一次重构.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"目前所在的项目基于erlang cluster搭建框架，再接入lua用于写逻辑。由于之前有一些erlang+lua的开发经验，因此着手项目的重构和优化，过程中一些体会，记录于此。 先简述一下项目架构，erlang做集群，网络层，节点交互，DB交互等，lua层只写逻辑。一个erla...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}