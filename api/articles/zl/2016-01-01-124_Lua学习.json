{"title":"Lua学习","uid":"98627ae8510dc86d4061c2718311a9a7","slug":"zl/2016-01-01-124_Lua学习","date":"2024-04-03T03:47:33.030Z","updated":"2024-04-03T03:47:33.030Z","comments":true,"path":"api/articles/zl/2016-01-01-124_Lua学习.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<ul>\n<li>轻量级嵌入式脚本语言</li>\n<li>动态类型语言\n</li>\n</ul>\n<h1 id=\"语法\">语法</h1><h2 id=\"数据类型\">数据类型</h2><ul>\n<li><p>nil boolean number string userdata function thread table<br/>使用<code>type()</code>返回类型</p>\n</li>\n<li><p>Boolean  </p>\n<ul>\n<li>boolean和nil都被看做false</li>\n<li>0和空串被看做true</li>\n</ul>\n</li>\n<li><p>Number  </p>\n<ul>\n<li>全部用浮点表示</li>\n<li>16进制表示也可以用2进制指数方式<br/>  <code>0x2.2p2</code> 等于(2+2/16)*2^2</li>\n</ul>\n</li>\n<li><p>String  </p>\n<ul>\n<li>String不能被修改，替换其中字符后会创建一个新字符串</li>\n<li>Lua自动处理字串内存分配问题，直接操作超长字串也OK</li>\n<li>使用<code>#string</code>来查看字串长度</li>\n<li>使用<code>[==[....]==]</code>来包含字面文字（Literal Text）<br/>其中=可以是0个或任意多个</li>\n<li>使用<code>..</code>来连接字串</li>\n<li>string转number:<code>tonumber()</code><br/>number转string:<code>tostring()</code></li>\n</ul>\n</li>\n<li><p>Table</p>\n<ul>\n<li>Table是对象</li>\n<li>变量指向Table的引用</li>\n<li>Table存储键-值对<br/>创建Table: <code>a=&#123;&#125;</code><br/>赋值:<code>a[&#34;x&#34;]=10</code></li>\n<li><code>a.x</code>和<code>a[&#34;x&#34;]</code>是相同的，注意第二项的x是字串值，不是变量名</li>\n<li>Lua的array<strong>从1开始</strong>，不是从0开始  </li>\n<li>对于没有洞（中间没有nil项）的Table（可以称之为Sequence）,用<code>#a</code>来获取长度（或者说最后一项的index）</li>\n</ul>\n</li>\n<li><p>Function</p>\n<ul>\n<li>Function可以被当做变量，参数和返回值</li>\n<li>Lua可以调用C函数</li>\n</ul>\n</li>\n<li><p>Userdata和Thread<br/>  N/A</p>\n</li>\n</ul>\n<h2 id=\"表达式\">表达式</h2><ul>\n<li><p>算术表达式<br/>  <strong>+, -, *, /, ^, %, -（负号）</strong><br/>  全部操作都是针对浮点数<br/>  支持浮点的求模, <span color=\"gray\"><em>a%b==a-math.floor(a/b)*b</em></span></p>\n</li>\n<li><p>关系表达式<br/>  <strong>&lt;, &gt;, &lt;=, &gt;=, ==, ~=</strong><br/>  不同类型不相等<br/>  table和userdata类型，引用同一个对象才相等<br/>  大小仅用于number和string类型</p>\n</li>\n<li><p>逻辑表达式<br/>  <strong>and, or, not</strong><br/>  and和or使用短路方式</p>\n<pre><code>x=x <span class=\"operator\">or</span> v \n<p><span class=\"operator\">a</span> <span class=\"operator\">and</span> b <span class=\"operator\">or</span> c <span class=\"comment\">–相当于C语言的a?b:c</span><br />\n</code></pre></li></p>\n<li><p>连接表达式<br/>  <strong>..</strong><br/>  支持数字的连接，但要在前后加空格</p>\n</li>\n<li><p>长度表达式<br/>  <strong>#</strong><br/>  仅对序列(sequence)有效</p>\n</li>\n<li><p>优先级</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">优先级</th>\n<th style=\"text-align:left\">操作符</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:left\">^</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:left\">not # -(neg)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:left\">* / %</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:left\">+ -</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:left\">..</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:left\">&lt; &gt; &lt;= &gt;= ~= ==</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:left\">and</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:left\">or</td>\n</tr>\n</tbody>\n</table>\n<p>只有^和..是右结合性</p>\n<ul>\n<li>table构造器<br/><code>a=&#123;&#34;xxx&#34;,&#34;yyy&#34;,&#34;zzz&#34;&#125;</code>按数字index初始化<br/><code>a=&#123;x=10,y=20&#125;</code>按键值对初始化<br/><code>a=&#123;[&#34;x&#34;]=10,[1]=&#34;xxx&#34;&#125;</code> 初始化的标准形式</li>\n</ul>\n<h2 id=\"语句\">语句</h2><ul>\n<li>支持用逗号分隔的多重赋值：<code>a,b=10, 2*x</code><br/>可以用这个形式交换数据：<code>a,b=b,a</code><br/>虽然没有单独赋值快，但可以接受函数返回多个返回值</li>\n<li>局部变量：<code>local i =1</code></li>\n<li><p>控制结构</p>\n<pre><code><span class=\"keyword\">if</span> a&lt;<span class=\"number\">0</span> <span class=\"keyword\">then</span> a=<span class=\"number\">0</span> <span class=\"keyword\">end</span>\n<span class=\"keyword\">if</span> a&lt;b <span class=\"keyword\">then</span> a=b <span class=\"keyword\">else</span> b=a <span class=\"keyword\">end</span>\n<span class=\"keyword\">if</span> .. <span class=\"keyword\">then</span> .. <span class=\"keyword\">elseif</span> .. <span class=\"keyword\">else</span> .. <span class=\"keyword\">end</span>\n<p><span class=\"keyword\">while</span> … <span class=\"keyword\">do</span> … <span class=\"keyword\">end</span><br />\n<span class=\"keyword\">repeat</span> … <span class=\"keyword\">until</span></p>\n<p><span class=\"keyword\">for</span> var= start, <span class=\"keyword\">end</span>, [step] <span class=\"keyword\">do</span> … [<span class=\"keyword\">break</span>] … <span class=\"keyword\">end</span><br />\n<span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(t) <span class=\"keyword\">do</span> … <span class=\"keyword\">end</span><br />\n</code></pre><p>return只能放在每个代码块的最后，想插入return可以写成<code>do return end</code><br/>goto可以跳到标签，但不可以跳进块，也不可从函数跳出。标签的写法<code>:🏷️:</code></p></p>\n</li>\n</ul>\n<h2 id=\"函数\">函数</h2><ul>\n<li>仅有一个参数，且参数是字面量字符串或者表构造器的时候，可以省略()：<code>print &#34;hello world&#34;</code> <code>f&#123;x=10,y=20&#125;</code></li>\n</ul>\n<h2 id=\"注释\">注释</h2><pre><code><span class=\"comment\">--这是一个单行注释  </span>\n<p><span class=\"comment\">–[[<br />\n这是一个多行注释<br />\n–]]</span></p>\n<p><span class=\"comment\">—[[</span><br />\n加一个小杠可以取消多行注释，很方便<br />\n<span class=\"comment\">–]]</span><br />\n</code></pre><h1 id=\"进阶\">进阶</h1><p>待补充</p></p>\n<h1 id=\"获取和安装\">获取和安装</h1><p>官网下载安装包-&gt;make macosx install</p>\n<h1 id=\"lua运行环境\">lua运行环境</h1><ul>\n<li><p>脚本运行</p>\n<pre><code><span class=\"shebang\">#!/usr/local/bin/lua</span>\n</code></pre></li>\n<li><p>lua解释器</p>\n<pre><code>lua -i <span class=\"operator\">-e</span> <span class=\"string\">&#34;嵌入式lua语句&#34;</span> <span class=\"operator\">-l</span>库 脚本名 脚本参数\n</code></pre><p>  -e后面跟嵌入式lua语句<br/>  -l后面跟库<br/>  -i是运行完脚本后打开交互式环境</p>\n<p>  arg[-3]=”lua”, arg[0]=脚本名，arg[1]=arg1…</p>\n</li>\n</ul>\n<h1 id=\"Q&amp;A\">Q&amp;A</h1><ul>\n<li>Q:Lua的基本特征是什么？<br/>A:Lua的基本特征是…</li>\n</ul>","text":" 轻量级嵌入式脚本语言 动态类型语言 语法数据类型 nil boolean number string userdata function thread table使用type()返回类型 Boolean boolean和nil都被看做false 0和空串被看做true Numb...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">数据类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">表达式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">语句</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">注释</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E9%98%B6\"><span class=\"toc-text\">进阶</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E5%92%8C%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">获取和安装</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#lua%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">lua运行环境</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Q&A\"><span class=\"toc-text\">Q&amp;A</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"延迟加载模式（lazy evaluation）","uid":"d1310a0d4bc61ea97c703ffc14e6565c","slug":"zl/2016-01-01-123_延迟加载模式（lazy evaluation）","date":"2024-04-03T03:47:33.030Z","updated":"2024-04-03T03:47:33.030Z","comments":true,"path":"api/articles/zl/2016-01-01-123_延迟加载模式（lazy evaluation）.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"延迟加载模式（lazy evaluation）代码参考引用自：https://github.com/faif/python-patterns/blob/master/lazy_evaluation.py 代码123456789101112131415161718192021222...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua简介","uid":"458253d99ce57d137635663da45bf807","slug":"zl/2016-01-01-11_Lua简介","date":"2024-04-03T03:47:33.029Z","updated":"2024-04-03T03:47:33.029Z","comments":true,"path":"api/articles/zl/2016-01-01-11_Lua简介.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;h1 id=&quot;Lua_u662F_u4EC0_u4E48&quot;&gt; Lua是什么 Lua是一门轻量、强大的嵌入式脚本语言。 轻量是指源码非常小，不到2万行的clean C代码，只提供了一门语言需要的基本功能。 强大指这语言的表现力十足，性能非常好，在...","link":"","photos":[],"count_time":{"symbolsCount":650,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}