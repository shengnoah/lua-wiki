{"title":"Lua","uid":"15b0cdc6d03f6c3f6bf8d3a7ff197317","slug":"zl/2016-01-01-412_Lua","date":"2024-04-03T03:47:35.703Z","updated":"2024-04-03T03:47:35.704Z","comments":true,"path":"api/articles/zl/2016-01-01-412_Lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h2 id=\"table-操作\"><a href=\"#table-操作\" class=\"headerlink\" title=\"table 操作\"></a>table 操作</h2><table>\n<thead>\n<tr>\n<th align=\"center\">函数</th>\n<th align=\"left\">解释</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">table.concat (table [, step [, start [, end]]])</td>\n<td align=\"left\">函数列出参数中指定table的数组部分从start位置到end位置的所有元素, 元素间以指定的分隔符(step)隔开</td>\n</tr>\n<tr>\n<td align=\"center\">table.insert (table, [pos,] value)</td>\n<td align=\"left\">在table的数组部分指定位置(pos)插入值为value的一个元素. pos参数可选, 默认为数组部分末尾</td>\n</tr>\n<tr>\n<td align=\"center\">table.maxn(table)</td>\n<td align=\"left\">指定table中所有正数key值中最大的key值. 如果不存在key值为正数的元素, 则返回0。(Lua5.2之后该方法已经不存在了)</td>\n</tr>\n<tr>\n<td align=\"center\">table.remove (table [, pos])</td>\n<td align=\"left\">返回table数组部分位于pos位置的元素. 其后的元素会被前移. pos参数可选, 默认为table长度, 即从最后一个元素删起。</td>\n</tr>\n<tr>\n<td align=\"center\">table.sort (table [, comp])</td>\n<td align=\"left\">对给定的table进行升序排序。</td>\n</tr>\n</tbody></table>\n<h2 id=\"操作示例\"><a href=\"#操作示例\" class=\"headerlink\" title=\"操作示例\"></a>操作示例</h2><ol>\n<li>table.concat</li>\n</ol>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">fruits = {<span class=\"string\">&#34;banana&#34;</span>,<span class=\"string\">&#34;orange&#34;</span>,<span class=\"string\">&#34;apple&#34;</span>}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;连接后的字符串 &#34;</span>,<span class=\"built_in\">table</span>.<span class=\"built_in\">concat</span>(fruits))</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 指定连接字符</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;连接后的字符串 &#34;</span>,<span class=\"built_in\">table</span>.<span class=\"built_in\">concat</span>(fruits,<span class=\"string\">&#34;, &#34;</span>))</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 指定索引来连接 table</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;连接后的字符串 &#34;</span>,<span class=\"built_in\">table</span>.<span class=\"built_in\">concat</span>(fruits,<span class=\"string\">&#34;, &#34;</span>, <span class=\"number\">2</span>,<span class=\"number\">3</span>))</span><br/></pre></td></tr></tbody></table></figure>\n<p>执行以上代码输出结果为：</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">连接后的字符串 bananaorangeapple</span><br/><span class=\"line\">连接后的字符串 banana, orange, apple</span><br/><span class=\"line\">连接后的字符串 orange, apple</span><br/></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>table.insert、table.remove</li>\n</ol>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">fruits = {<span class=\"string\">&#34;banana&#34;</span>,<span class=\"string\">&#34;orange&#34;</span>,<span class=\"string\">&#34;apple&#34;</span>}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 在末尾插入</span></span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">insert</span>(fruits,<span class=\"string\">&#34;mango&#34;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;索引为 4 的元素为 &#34;</span>,fruits[<span class=\"number\">4</span>])</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 在索引为 2 的键处插入</span></span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">insert</span>(fruits,<span class=\"number\">2</span>,<span class=\"string\">&#34;grapes&#34;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;索引为 2 的元素为 &#34;</span>,fruits[<span class=\"number\">2</span>])</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;最后一个元素为 &#34;</span>,fruits[<span class=\"number\">5</span>])</span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">remove</span>(fruits)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;移除后最后一个元素为 &#34;</span>,fruits[<span class=\"number\">5</span>])</span><br/></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>table.sort</li>\n</ol>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">fruits = {<span class=\"string\">&#34;banana&#34;</span>,<span class=\"string\">&#34;orange&#34;</span>,<span class=\"string\">&#34;apple&#34;</span>,<span class=\"string\">&#34;grapes&#34;</span>}</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;排序前&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(fruits) <span class=\"keyword\">do</span></span><br/><span class=\"line\">  <span class=\"built_in\">print</span>(k,v)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">sort</span>(fruits)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;排序后&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(fruits) <span class=\"keyword\">do</span></span><br/><span class=\"line\">   <span class=\"built_in\">print</span>(k,v)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<p>执行以上代码输出结果为：</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">排序前</span><br/><span class=\"line\"><span class=\"number\">1</span>   banana</span><br/><span class=\"line\"><span class=\"number\">2</span>   orange</span><br/><span class=\"line\"><span class=\"number\">3</span>   apple</span><br/><span class=\"line\"><span class=\"number\">4</span>    grapes</span><br/><span class=\"line\">排序后</span><br/><span class=\"line\"><span class=\"number\">1</span>  apple</span><br/><span class=\"line\"><span class=\"number\">2</span>    banana</span><br/><span class=\"line\"><span class=\"number\">3</span>   grapes</span><br/><span class=\"line\"><span class=\"number\">4</span>   orange</span><br/></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>Table中最大的正数key值</li>\n</ol>\n<p>table.maxn 在 Lua5.2 之后该方法已经不存在了，自定义table_maxn方法来实现。<br/>以下实例演示了如何获取 table 中的最大值：</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(t)</span></span></span><br/><span class=\"line\">    <span class=\"keyword\">local</span> mn = <span class=\"number\">0</span></span><br/><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(t) <span class=\"keyword\">do</span></span><br/><span class=\"line\">        <span class=\"keyword\">if</span> mn &lt; k <span class=\"keyword\">then</span></span><br/><span class=\"line\">            mn = k</span><br/><span class=\"line\">        <span class=\"keyword\">end</span></span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\">    <span class=\"keyword\">return</span> mn</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\">tbl = {[<span class=\"number\">1</span>] = <span class=\"string\">&#34;a&#34;</span>, [<span class=\"number\">2</span>] = <span class=\"string\">&#34;b&#34;</span>, [<span class=\"number\">3</span>] = <span class=\"string\">&#34;c&#34;</span>, [<span class=\"number\">26</span>] = <span class=\"string\">&#34;z&#34;</span>}</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;tbl 长度 &#34;</span>, #tbl)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;tbl 最大值 &#34;</span>, table_maxn(tbl))</span><br/></pre></td></tr></tbody></table></figure>\n<p>执行以上代码输出结果为：</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">tbl 长度    <span class=\"number\">3</span></span><br/><span class=\"line\">tbl 最大值  <span class=\"number\">26</span></span><br/></pre></td></tr></tbody></table></figure>","text":"table 操作 函数 解释 table.concat (table [, step [, start [, end]]]) 函数列出参数中指定table的数组部分从start位置到end位置的所有元素, 元素间以指定的分隔符(step)隔开 table.insert (tabl...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#table-%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">table 操作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">操作示例</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua作图教程之lua基础","uid":"d01429a3ff90494785acd5a575c45900","slug":"zl/2016-01-01-413_Lua作图教程之lua基础","date":"2024-04-03T03:47:35.704Z","updated":"2024-04-03T03:47:35.704Z","comments":true,"path":"api/articles/zl/2016-01-01-413_Lua作图教程之lua基础.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"一、什么是Lua？Lua 是一个小巧的脚本语言，巴西里约热内卢天主教大学里的一个研究小组于1993年开发，其设计目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。Lua由标准C编写而成，几乎在所有操作系统和平台上都可以编译，运行。一个完整的Lua解释器不过200k...","link":"","photos":[],"count_time":{"symbolsCount":"7.7k","symbolsTime":"7 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua语法基础 · 花生肉泥","uid":"e1e4f6137e4bd3266be4f52c61dcd858","slug":"zl/2016-01-01-410_Lua语法基础 · 花生肉泥","date":"2024-04-03T03:47:35.700Z","updated":"2024-04-03T03:47:35.700Z","comments":true,"path":"api/articles/zl/2016-01-01-410_Lua语法基础 · 花生肉泥.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"词法约定标识符标识符可以是任意非数字开头的字母、数字、下划线组成的字符串 标识符用来命名变量，或作为表的域名 Lua是一个大小写敏感的语言 1234andAndAND三者不一样 关键字一下列出了lua的保留关键字。保留关键字不能作为常量或者变量或者其他用户自定义标识符123456...","link":"","photos":[],"count_time":{"symbolsCount":539,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}