{"title":"Lua 学习 chapter2","uid":"0bb17b77edbb02cf2f08b220b0915c96","slug":"zl/2016-01-01-273_Lua 学习 chapter2 ","date":"2024-04-03T03:47:33.136Z","updated":"2024-04-03T03:47:33.136Z","comments":true,"path":"api/articles/zl/2016-01-01-273_Lua 学习 chapter2 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<pre><code>\t\t\t&lt;h3 id=&quot;目录&quot;&gt;目录&lt;/h3&gt;\n</code></pre>\n<ol>\n  <li>Eeight Queen</li>\n  <li>判断是否可以放置</li>\n  <li>递归放置</li>\n  <li>只打印第一个值</li>\n  <li>排列的方式</li>\n  <li>对比</li>\n</ol>\n<h2 id=\"eight-queen\">Eight Queen</h2>\n<p>8皇后问题：\n在一个8*8的棋盘上放置八个皇后，她们之间相互不能影响。\n通过一个表来存储，键值表示行，值表示列。</p>\n<h2 id=\"判断是否可以放置\">判断是否可以放置</h2>\n<p>因为键值已经保证不会再同一行，所以我们需要判断的就只有列和斜方向的。\n在斜方向，左斜和右斜。右斜列减行相同则同处一斜行。左斜行列相加则处于同斜行。</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">local</span> <span class=\"k\">function</span> <span class=\"nf\">checkAttack</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">n</span> <span class=\"o\">-</span> <span class=\"mi\">1</span> <span class=\"k\">do</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"ow\">or</span>\n                <span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">-</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"n\">c</span> <span class=\"o\">-</span> <span class=\"n\">n</span><span class=\"p\">)</span> <span class=\"ow\">or</span> <span class=\"c1\">--行列式</span>\n                <span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"n\">c</span> <span class=\"o\">+</span> <span class=\"n\">n</span><span class=\"p\">)</span> <span class=\"k\">then</span>\n            <span class=\"k\">return</span> <span class=\"kc\">false</span>\n        <span class=\"k\">end</span>\n    <span class=\"k\">end</span>\n    <span class=\"k\">return</span> <span class=\"kc\">true</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n<h2 id=\"递归放置\">递归放置</h2>\n<p>通过判断是否每一行都放置了棋子来决定是否打印这个棋谱。\n在addQueen中，每一个节点都会一直的递归，所有的节点递归结束。\n当然在中间不满足条件的后面的节点就不会递归了。</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">local</span> <span class=\"k\">function</span> <span class=\"nf\">addQueen</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"o\">&gt;</span> <span class=\"n\">N</span> <span class=\"k\">then</span>\n        <span class=\"n\">printTable</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span>\n        <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">N</span> <span class=\"k\">do</span>\n            <span class=\"k\">if</span> <span class=\"n\">checkAttack</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">)</span> <span class=\"k\">then</span>\n                <span class=\"n\">table</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">c</span>\n                <span class=\"n\">addQueen</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">,</span> <span class=\"n\">n</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n            <span class=\"k\">end</span>\n        <span class=\"k\">end</span>\n    <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n<h2 id=\"只打印第一个值\">只打印第一个值</h2>\n<p>在addQueen前面加一个判断，如果打印了一个可行解就不再进行冗余递归了。</p>\n<h2 id=\"排列的方式\">排列的方式</h2>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\">---@param t table|number</span>\n<span class=\"kd\">local</span> <span class=\"k\">function</span> <span class=\"nf\">deepCopy</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n    <span class=\"kd\">local</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span>\n    <span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s2\">\"number\"</span> <span class=\"k\">then</span>\n        <span class=\"nb\">table.insert</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"k\">in</span> <span class=\"nb\">ipairs</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n            <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n        <span class=\"k\">end</span>\n    <span class=\"k\">end</span>\n    <span class=\"k\">return</span> <span class=\"n\">result</span>\n<span class=\"k\">end</span>\n<p><span class=\"c1\">—@param table table</span><br />\n<span class=\"c1\">—@param n number</span><br />\n<span class=\"c1\">—return table</span><br />\n<span class=\"kd\">local</span> <span class=\"k\">function</span> <span class=\"nf\">insertNumber</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">)</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span><br />\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">#</span><span class=\"n\">t</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"k\">do</span><br />\n<span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">deepCopy</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span><br />\n<span class=\"nb\">table.insert</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">)</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">return</span> <span class=\"n\">result</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"c1\">—@param t1 table</span><br />\n<span class=\"c1\">—@param t2 table</span><br />\n<span class=\"c1\">—@return table</span><br />\n<span class=\"kd\">local</span> <span class=\"k\">function</span> <span class=\"nf\">mergeTable</span><span class=\"p\">(</span><span class=\"n\">t1</span><span class=\"p\">,</span> <span class=\"n\">t2</span><span class=\"p\">)</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">length</span> <span class=\"o\">=</span> <span class=\"o\">#</span><span class=\"n\">t1</span><br />\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">#</span><span class=\"n\">t2</span> <span class=\"k\">do</span><br />\n<span class=\"nb\">table.insert</span><span class=\"p\">(</span><span class=\"n\">t1</span><span class=\"p\">,</span> <span class=\"n\">length</span> <span class=\"o\">+</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">t2</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">])</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"c1\">—@param table table</span><br />\n<span class=\"c1\">—@param n number</span><br />\n<span class=\"c1\">—@return table</span><br />\n<span class=\"kd\">local</span> <span class=\"k\">function</span> <span class=\"nf\">arrangement</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">)</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">temp</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span><br />\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">#</span><span class=\"n\">t</span> <span class=\"k\">do</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">tt</span> <span class=\"o\">=</span> <span class=\"n\">insertNumber</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">n</span><span class=\"p\">)</span><br />\n<span class=\"n\">mergeTable</span><span class=\"p\">(</span><span class=\"n\">temp</span><span class=\"p\">,</span> <span class=\"n\">tt</span><span class=\"p\">)</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">return</span> <span class=\"n\">temp</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"kd\">local</span> <span class=\"k\">function</span> <span class=\"nf\">getArrangement</span><span class=\"p\">()</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"p\">&#123;</span> <span class=\"p\">&#123;</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span> <span class=\"p\">&#125;,</span> <span class=\"p\">&#123;</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span> <span class=\"p\">&#125;</span> <span class=\"p\">&#125;</span><br />\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">N</span> <span class=\"k\">do</span><br />\n<span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">arrangement</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">)</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">return</span> <span class=\"n\">table</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"kd\">local</span> <span class=\"n\">tr</span> <span class=\"o\">=</span> <span class=\"n\">getArrangement</span><span class=\"p\">()</span><br />\n<span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"k\">in</span> <span class=\"nb\">ipairs</span><span class=\"p\">(</span><span class=\"n\">tr</span><span class=\"p\">)</span> <span class=\"k\">do</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">flag</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><br />\n<span class=\"k\">for</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"nb\">ipairs</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span> <span class=\"k\">do</span><br />\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">checkAttack</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">j</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">)</span> <span class=\"k\">then</span><br />\n<span class=\"n\">flag</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><br />\n<span class=\"k\">break</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">if</span> <span class=\"n\">flag</span> <span class=\"k\">then</span><br />\n<span class=\"n\">printTable</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">“Total number:”</span><span class=\"p\">,</span> <span class=\"o\">#</span><span class=\"n\">tr</span><span class=\"p\">)</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">“Total answer2:”</span> <span class=\"o\">…</span> <span class=\"n\">totalResult</span><span class=\"p\">)</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">“Method2 time:”</span><span class=\"p\">,</span> <span class=\"nb\">os.clock</span><span class=\"p\">()</span> <span class=\"o\">-</span> <span class=\"n\">t1</span><span class=\"p\">)</span></p>\n<p></pre></td></tr></tbody></table></code></pre></div></div></p>\n<h2 id=\"对比\">对比</h2>\n<p><img src=\"https://i.imgur.com/GTTE5EV.png\" alt=\"\"></p>\n<p><img src=\"https://i.imgur.com/slauuLs.png\" alt=\"\"></p>\n<p>方法2：排列花费1.604秒，检测花费将近1.1秒，这说明排列还是浪费了很多时间在检测和排列上面的。</p>\n<pre><code>            &lt;hr style=&quot;visibility: hidden;&quot;&gt;\n</code></pre>\n","text":" &lt;h3 id=&quot;目录&quot;&gt;目录&lt;/h3&gt; Eeight Queen 判断是否可以放置 递归放置 只打印第一个值 排列的方式 对比 Eight Queen 8皇后问题： 在一个8*8的棋盘上放置八个皇后，她们之间相互不能影响。 通过一个表...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#eight-queen\"><span class=\"toc-text\">Eight Queen</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%A4%E6%96%AD%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E6%94%BE%E7%BD%AE\"><span class=\"toc-text\">判断是否可以放置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%80%92%E5%BD%92%E6%94%BE%E7%BD%AE\"><span class=\"toc-text\">递归放置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%AA%E6%89%93%E5%8D%B0%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%80%BC\"><span class=\"toc-text\">只打印第一个值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8E%92%E5%88%97%E7%9A%84%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">排列的方式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E6%AF%94\"><span class=\"toc-text\">对比</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua使用教程","uid":"bb366af0997ddf8c4e47511bb8d73383","slug":"zl/2016-01-01-277_lua使用教程","date":"2024-04-03T03:47:33.137Z","updated":"2024-04-03T03:47:33.138Z","comments":true,"path":"api/articles/zl/2016-01-01-277_lua使用教程.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;闲来无趣，稍微看了一会lua…&lt;/p&gt; 运行1.命令行运行lua命令，在lua的shell中执行语句12345zhubenshuli@raspberrypi /var/www/lua_program $ luaLua 5.3.1 Copyright...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"lua 元表学习","uid":"1281a2f200121e56ea61eb4caa5ec15c","slug":"zl/2016-01-01-274_lua 元表学习","date":"2024-04-03T03:47:33.136Z","updated":"2024-04-03T03:47:33.137Z","comments":true,"path":"api/articles/zl/2016-01-01-274_lua 元表学习.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua 中的每个值都有一个元表。table 和 userdata 可以有各自独立的原表，其他类型的值则共享其类型所属的单一元素。Lua 在创建新的 table 的时候不会创建元表。 12t = {}print(getmetatable(t)) 可以使用 setmetatable ...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}