{"title":"Lua","uid":"15b0cdc6d03f6c3f6bf8d3a7ff197317","slug":"zl/2016-01-01-149_Lua","date":"2024-04-03T03:47:33.044Z","updated":"2024-04-03T03:47:33.045Z","comments":true,"path":"api/articles/zl/2016-01-01-149_Lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h2 id=\"日常\"><a href=\"#日常\" class=\"headerlink\" title=\"日常\"></a>日常</h2><img src=\"https://img.dazhuanlan.com/2019/11/27/5dde4e37d9efc.jpg!v1\" alt=\"粉家干捞螺蛳粉\" title=\"粉家干捞螺蛳粉\"/>\n<h2 id=\"入门了一个很可爱的脚本语言，撸啊\"><a href=\"#入门了一个很可爱的脚本语言，撸啊\" class=\"headerlink\" title=\"入门了一个很可爱的脚本语言，撸啊!\"></a>入门了一个很可爱的脚本语言，撸啊!</h2><p>Lua脚本号称是性能最高的脚本，用在许多需要性能的地方，比如游戏脚本，nginx等。源码解释器不到200K，能够和C语言友好互动。</p>\n<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><p>变量在使用前，必须在代码中声明来创建该变量。 编译程序执行代码前需要知道如何给语句变量开辟存储区来存储变量。</p>\n<p>Lua变量分为： 全局变量， 局部变量， 表中域。 Lua中的变量全部是全局变量，哪怕是语句块或者函数里，除非用local关键字显示声明为局部变量。局部变量的作用域从声明位置开始到语句块结束。</p>\n<p>变量的默认值是nil</p>\n<h2 id=\"赋值\"><a href=\"#赋值\" class=\"headerlink\" title=\"赋值\"></a>赋值</h2><p>Lua可以对多个值同时赋值， 变量列表和值列表用逗号分割，依次赋值。 -&gt; 交换值</p>\n<p>左右个数不一致时会采取规则：a.变量个数&gt;值对个数 -&gt; 按变量个数补nil b.变量个数&lt;值个数 -&gt; 多余值被忽略</p>\n<p>尽可能使用局部变量可以避免明明冲突，同时访问局部变量对速度比全局变量更快。</p>\n<h2 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h2><p>对table的访问可以用[], 也可以用dot</p>\n<h2 id=\"Lua函数\"><a href=\"#Lua函数\" class=\"headerlink\" title=\"Lua函数\"></a>Lua函数</h2><p>函数是对语句和表达式进行抽象对主要方法。1.完成指定任务。2.计算并返回值。</p>\n<p><strong>函数定义格式如下</strong><br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">optional_function_scope *function* function_name(arg1, arg2, arg3...)</div><div class=\"line\">    function_body</div><div class=\"line\">    *return* result_params_comma_separated</div><div class=\"line\">end</div><div class=\"line\"></div><div class=\"line\">optional_function_scope: 该参数用来决定函数是全局函数还是局部函数，未设置则默认为全局函数，否则用（local）</div></pre></td></tr></tbody></table></figure><p></p>\n<p>Lua中，可以将函数作为参数传递给函数（callback</p>\n<p><strong>可变参数</strong></p>\n<p>Lua接受可变数目的参数， 使用和C类似的方法，在列表中用three dots(…)表示函数有可变参数。Lua将参数放在一个叫arg的表中，#arg表示传入参数的个数。</p>\n<h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><p>要注意的是 不等于 -&gt; ~=</p>\n<p>逻辑运算符三个 and or not</p>\n<p>特殊运算符两个， 1, double dots(..)连接两个字符串 2, # -&gt; 一元运算符，用来返回字符串或者表长度</p>\n<h2 id=\"Lua迭代器\"><a href=\"#Lua迭代器\" class=\"headerlink\" title=\"Lua迭代器\"></a>Lua迭代器</h2><p>Lua 中迭代器是一种支持指针类型的结构</p>\n<p><strong>范型for迭代器</strong><br/>for范型保存三个值 -&gt; 迭代函数， 状态常量， 控制变量</p>\n<p>执行过程：</p>\n<ul>\n<li>初始化计算in后表达式的值， 表达式应该返回范型for需要的三个值，与多赋值一样，若表达式返回结果个数不足三个自动补nil，多出的忽略</li>\n<li>将状态常量和控制变量作为参数调用迭代函数</li>\n<li>将迭代函数返沪指赋给变量列表</li>\n<li>返回的第一个值为nil结束循环，否则执行循环体</li>\n<li>返回第二步</li>\n</ul>\n<p>Lua 迭代器分为 无状态的和多状态的</p>\n<p><strong>无状态迭代器</strong><br/>不保留任何状态的迭代器， 在循环中可以利用无状态迭代器避免创建闭包花费额外代价。</p>\n<p>每一次迭代，迭代函数都是用两个变量（状态常量和控制变量）的值作为参数被调用，一个无状态迭代器只利用这两个值可以获得的下一个元素。</p>\n<p>这种无状态迭代器的典型例子就是ipairs， 他遍历数组的每一个元素</p>\n<p><strong>多状态迭代器</strong></p>\n<p>很多情况下，迭代器需要保存多个状态信息而不是简单的状态常量和控制变量，最简单的方法是使用闭包，还有一种方法就是将所有的状态信息封装到table内，将table作为迭代器的状态常量，因为这种情况下可以将所有的信息存放在table内，所以迭代函数通常不需要第二个参数</p>\n<p><strong>tips</strong></p>\n<ul>\n<li>ipairs 仅仅遍历值，按照索引升序遍历，索引中断停止遍历。即不能返回 nil,只能返回数字 0，如果遇到 nil 则退出。它只能遍历到集合中出现的第一个不是整数的 key</li>\n</ul>","text":"日常 入门了一个很可爱的脚本语言，撸啊!Lua脚本号称是性能最高的脚本，用在许多需要性能的地方，比如游戏脚本，nginx等。源码解释器不到200K，能够和C语言友好互动。 变量变量在使用前，必须在代码中声明来创建该变量。 编译程序执行代码前需要知道如何给语句变量开辟存储区来存储变...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%97%A5%E5%B8%B8\"><span class=\"toc-text\">日常</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%A5%E9%97%A8%E4%BA%86%E4%B8%80%E4%B8%AA%E5%BE%88%E5%8F%AF%E7%88%B1%E7%9A%84%E8%84%9A%E6%9C%AC%E8%AF%AD%E8%A8%80%EF%BC%8C%E6%92%B8%E5%95%8A\"><span class=\"toc-text\">入门了一个很可爱的脚本语言，撸啊!</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B5%8B%E5%80%BC\"><span class=\"toc-text\">赋值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B4%A2%E5%BC%95\"><span class=\"toc-text\">索引</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Lua%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">Lua函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">运算符</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Lua%E8%BF%AD%E4%BB%A3%E5%99%A8\"><span class=\"toc-text\">Lua迭代器</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua table","uid":"73ce1cd453aea8f6dbbd9fe8e760883a","slug":"zl/2016-01-01-148_Lua table","date":"2024-04-03T03:47:33.044Z","updated":"2024-04-03T03:47:33.044Z","comments":true,"path":"api/articles/zl/2016-01-01-148_Lua table.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" table 常用函数 -- 获取参数表 table，并对这个 table 预定义一个字段 n（表示该表的长度）。 local arg = table.pack(...) for i = 1, arg.n do print(i, arg[i]) end –[[ 提供一个列表，其所...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Programming in Lua(Thrid Edition)笔记","uid":"a502732b8dc58224e972b6c53538b8c4","slug":"zl/2016-01-01-146_Programming in Lua(Thrid Edition)笔记","date":"2024-04-03T03:47:33.043Z","updated":"2024-04-03T03:47:33.044Z","comments":true,"path":"api/articles/zl/2016-01-01-146_Programming in Lua(Thrid Edition)笔记.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"2 Types and Values 基础类型：nil,boolean,number,string,userdata,function,thread,table type()可以获取变量的动态类型，返回一个字符串 除了nil和false，其他均为true，包括0和空字符串 Lua...","link":"","photos":[],"count_time":{"symbolsCount":708,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}