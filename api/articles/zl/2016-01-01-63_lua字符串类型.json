{"title":"lua字符串类型","uid":"e9c8249153b2d6da8dc4410333e5d78b","slug":"zl/2016-01-01-63_lua字符串类型","date":"2024-04-03T03:47:35.862Z","updated":"2024-04-03T03:47:35.862Z","comments":true,"path":"api/articles/zl/2016-01-01-63_lua字符串类型.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>Lua中字符串结构体的定义是:</p>\n<pre><code>typedef union TString &#123;\n  L_Umaxalign dummy;  /* ensures maximum alignment for strings */\n  struct &#123;\n    CommonHeader;\n    lu_byte reserved;\n    unsigned int hash;\n    size_t len;\n  &#125; tsv;\n&#125; TString;\n</code></pre><p>这里TString结构体是一个union, 最开始的L_Umaxalign dummy;起到的是对齐作用.紧跟着是CommonHeader,可以看出TString也是可GC数据类型的一种.</p>\n<p>在Lua中,字符串是一个保存在一个全局的地方,在globale_state的strt里面,这是一个hash数组,专门用于存放字符串:</p>\n<pre><code>typedef struct stringtable &#123;\n  GCObject **hash;\n  lu_int32 nuse;  /* number of elements */\n  int size;\n&#125; stringtable;\n</code></pre><p>一个字符串TString,首先根据hash算法算出hash值,这就是stringtable中hash的索引值,如果这里已经有元素,则使用链表串接起来.</p>\n<p>同时,TString中的字段reserved,表示这个字符串是不是保留字符串,比如Lua的关键字,在最开始赋值的时候是这么处理的:</p>\n<pre><code>void luaX_init (lua_State *L) &#123;\n  int i;\n  for (i=0; itsv.reserved = cast_byte(i+1);  /* reserved word */\n  &#125;\n&#125;\n</code></pre><p>这里存放的值,是数组luaX_tokens中的索引:</p>\n<pre><code>const char *const luaX_tokens [] = &#123;\n    &#34;and&#34;, &#34;break&#34;, &#34;do&#34;, &#34;else&#34;, &#34;elseif&#34;,\n    &#34;end&#34;, &#34;false&#34;, &#34;for&#34;, &#34;function&#34;, &#34;if&#34;,\n    &#34;in&#34;, &#34;local&#34;, &#34;nil&#34;, &#34;not&#34;, &#34;or&#34;, &#34;repeat&#34;,\n    &#34;return&#34;, &#34;then&#34;, &#34;true&#34;, &#34;until&#34;, &#34;while&#34;,\n    &#34;..&#34;, &#34;...&#34;, &#34;==&#34;, &#34;&gt;=&#34;, &#34;&lt;=&#34;, &#34;~=&#34;,\n    &#34;&#34;, &#34;&#34;, &#34;&#34;, &#34;&#34;,\n    NULL\n&#125;;\n</code></pre><p>一方面可以迅速定位到是哪个关键字,另方面如果这个reserved字段不为0,则表示该字符串是不可自动回收的,在GC过程中会略过这个字符串的处理.</p>\n<p>具体查找字符串时,首先计算出hash值,定位到所在的strt中的hash数组所在,再遍历hash桶所在链表,首先比较长度,如果相同再继续逐字节的比较字符串内容:</p>\n<pre><code>TString *luaS_newlstr (lua_State *L, const char *str, size_t l) &#123;\n  GCObject *o;\n  unsigned int h = cast(unsigned int, l);  /* seed */\n  size_t step = (l&gt;&gt;5)+1;  /* if string is too long, don&#39;t hash all its chars */\n  size_t l1;\n  for (l1=l; l1&gt;=step; l1-=step)  /* compute hash */\n    h = h ^ ((h&lt;&lt;5)+(h&gt;&gt;2)+cast(unsigned char, str[l1-1]));\n  for (o = G(L)-&gt;strt.hash[lmod(h, G(L)-&gt;strt.size)];\n       o != NULL;\n       o = o-&gt;gch.next) &#123;\n    TString *ts = rawgco2ts(o);\n    if (ts-&gt;tsv.len == l &amp;&amp; (memcmp(str, getstr(ts), l) == 0)) &#123;\n      /* string may be dead */\n      if (isdead(G(L), o)) changewhite(o);\n      return ts;\n    &#125;\n  &#125;\n  return newlstr(L, str, l, h);  /* not found */\n&#125;\n</code></pre>","text":"Lua中字符串结构体的定义是: typedef union TString &#123; L_Umaxalign dummy; /* ensures maximum alignment for strings */ struct &#123; CommonHeader; lu_b...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua 学习 chapter13","uid":"785c99c78bd1541228130f3215e26238","slug":"zl/2016-01-01-639_Lua 学习 chapter13 ","date":"2024-04-03T03:47:35.862Z","updated":"2024-04-03T03:47:35.862Z","comments":true,"path":"api/articles/zl/2016-01-01-639_Lua 学习 chapter13 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"目录 位和字节 无符号的输出 打包和解包二进制数据 What is the cost of lies? It’s not that we’ll mistake them for the truth. The real danger is that if we hear enoug...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"浅析android手游lua脚本的加密与解密（前传）","uid":"34c99eebc4a80397f2da445ff1e625fe","slug":"zl/2016-01-01-640_浅析android手游lua脚本的加密与解密（前传）","date":"2024-04-03T03:47:35.862Z","updated":"2024-04-03T03:47:35.863Z","comments":true,"path":"api/articles/zl/2016-01-01-640_浅析android手游lua脚本的加密与解密（前传）.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 为了能让一些同学更好的学习lua的逆向，我把收集的一些资料组合成一篇lua加解密的相关工作给大家参考，当然，看这篇文章之前还是需要一些lua的基础知识，这里推荐云风大佬的《Lua源码欣赏》[19]，建议结合搜索引擎学习之。 文章分2部分介绍，第1部分介绍lua加解密的相关文章介...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}