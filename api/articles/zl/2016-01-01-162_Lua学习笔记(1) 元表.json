{"title":"Lua学习笔记(1) 元表","uid":"de2364008b06586313c5158e78472b93","slug":"zl/2016-01-01-162_Lua学习笔记(1) 元表","date":"2024-04-03T03:47:33.052Z","updated":"2024-04-03T03:47:33.052Z","comments":true,"path":"api/articles/zl/2016-01-01-162_Lua学习笔记(1) 元表.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>[TOC]</p>\n<h2 id=\"基本\">基本</h2>\n<h3 id=\"1-概念\">1. 概念</h3>\n<p>定义：Lua 中的每个值都可以用一个 metatable。 这个 metatable 就是一个原始的 Lua table ， 它用来定义原始值在特定操作下的行为。 你可以通过在 metatable 中的特定域设一些值来改变拥有这个 metatable 的值 的指定操作之行为。[1]</p>\n<h3 id=\"2-例子\">2. 例子</h3>\n<p>看一个例子就能够很好理解metatable的用法了</p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>-- 两种写法都可以^_^\nlocal t1 = &#123;20, 1, key1 = &#34;hello&#34;, key2 = &#34;world&#34;, lang = &#34;lua&#34;&#125;\nlocal t2 = &#123;\nkey1 = &#34;hello new&#34;,\nkey2 = &#34;world new&#34;,\n&#125;\nprint(&#34;Before setmetatable: &#34;)\nprint(&#34;a2 metable = &#34;, getmetatable(t2))\nprint(&#34;language =&#34;, t2[&#34;lang&#34;])\n<p>– 使用用setmetatable设置元表<br />\nsetmetatable(t2, &#123;__index = t1&#125;)<br />\nprint(&quot;After setmetatable:&quot;)<br />\nprint(&quot;a2 metable =&quot;, getmetatable(t2))<br />\nprint (&quot;language =&quot;, t2[&quot;lang&quot;])<br />\n</code></pre></div></div></p>\n<p>结果为：</p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Before setmetatable: \na2 metable = \tnil\nlanguage =\tnil\n<p>After setmetatable:<br />\na2 metable =\ttable: 004CCC28<br />\nlanguage =\tlua<br />\n</code></pre></div></div></p>\n<h2 id=\"理解\">理解</h2>\n<h3 id=\"1-元表和元方法关系\">1. 元表和元方法关系</h3>\n<p>元表和元方法的关系是：如定义中所说，需要通过元表中特定域做一些指定操作之行为。</p>\n<p>什么意思呢？也就是元表触发了某个事件（特定域）的时候，会通过这个事件绑定的操作（元方法）来做特定事情。举个例子：当一个值（lua中的每个值都可以用一个metatable，只是table用的比较多）是非数字，却要加法操作的时候，Lua 会检查它的 metatable 中 “__add” 域中的是否有一个函数（元方法），然后做特定的事情。</p>\n<h3 id=\"2-操作\">2. 操作</h3>\n<p>lua规定操作名字加上两个下划线 ‘<strong>’ 前缀的字符串，所以这里也可以知道自定义名字的时候最好不要用’</strong>’, 下面是metatable可以控制的操作：</p>\n<ul>\n  <li>“add”: + 操作。</li>\n  <li>“sub”: - 操作。 其行为类似于 “add” 操作。</li>\n  <li>“mul”: * 操作。 其行为类似于 “add” 操作。</li>\n  <li>“div”: / 操作。 其行为类似于 “add” 操作。</li>\n  <li>“mod”: % 操作。 其行为类似于 “add” 操作， 它的原生操作是这样的 o1 - floor(o1/o2)*o2</li>\n  <li>“pow”: ^ （幂）操作。 其行为类似于 “add” 操作， 它的原生操作是调用 pow 函数（通过 C math 库）。</li>\n  <li>“unm”: 一元 - 操作。</li>\n  <li>“concat”: .. （连接）操作。</li>\n  <li>“len”: # 操作。</li>\n  <li>“eq”: == 操作。 函数 getcomphandler 定义了 Lua 怎样选择一个处理器来作比较操作。 元方法仅仅在参于比较的两个对象类型相同且有对应操作相同的元方法时才起效。</li>\n  <li>“lt”: &lt; 操作。</li>\n  <li>“le”: &lt;= 操作。</li>\n  <li>“index”: 取下标操作用于访问 table[key] 。</li>\n  <li>“newindex”: 赋值给指定下标 table[key] = value 。</li>\n  <li>“call”: 当 Lua 调用一个值时调用。</li>\n</ul>\n<h3 id=\"3-注意\">3. 注意</h3>\n<ul>\n  <li>\n    <p>每个 table 和 userdata 拥有独立的 metatable （当然多个 table 和 userdata 可以共享一个相同的表作它们的 metatable）； 其它所有类型的值，每种类型都分别共享唯一的一个 metatable。</p>\n  </li>\n  <li>\n    <p>设置元表的时候，如果表是一个空表，没有指定一些操作，其实没有什么意义</p>\n  </li>\n</ul>\n<h2 id=\"应用\">应用</h2>\n<ol>\n  <li>复制表函数copy</li>\n</ol>\n<p>代码：</p>\n<div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>--@function: 复制一个table\n--@tbOrg: 源table\nfunction copy(tbOrg)\n\t-- 注意：放置互引用情况下的死循环\n\tlocal tbSaveExitTable = &#123;&#125;\n\tlocal function _copy(object)\n       \tif type(object) ~= &#34;table&#34; then\n            return object;\n        elseif tbSaveExitTable[object] then\t--检查是否有循环嵌套的table\n            return tbSaveExitTable[object];\n        end\n        local tbNewTable = &#123;&#125;;\n        tbSaveExitTable[object] = tbNewTable;\n        for index, value in pairs(object) do\n            tbNewTable[_copy(index)] = _copy(value);\t\n        end\n\t\t-- 使用：保持元表一致\n        return setmetatable(tbNewTable, getmetatable(object));\n    end\n\treturn _copy(tbOrg);\nend\n</code></pre></div></div>\n<h2 id=\"参考\">参考</h2>\n<p><a href=\"http://manual.luaer.cn/2.8.html\" title=\"metatable\">[1]http://manual.luaer.cn/2.8.html</a></p>","text":"[TOC] 基本 1. 概念 定义：Lua 中的每个值都可以用一个 metatable。 这个 metatable 就是一个原始的 Lua table ， 它用来定义原始值在特定操作下的行为。 你可以通过在 metatable 中的特定域设一些值来改变拥有这个 metatable...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC\"><span class=\"toc-text\">基本</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">1. 概念</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E4%BE%8B%E5%AD%90\"><span class=\"toc-text\">2. 例子</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">理解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%85%83%E8%A1%A8%E5%92%8C%E5%85%83%E6%96%B9%E6%B3%95%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">1. 元表和元方法关系</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">2. 操作</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E6%B3%A8%E6%84%8F\"><span class=\"toc-text\">3. 注意</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BA%94%E7%94%A8\"><span class=\"toc-text\">应用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Evaluation metrics for generation based models in NLP","uid":"31351d37c5d4d33e27cfeb4ae2729624","slug":"zl/2016-01-01-160_Evaluation metrics for generation based models in ","date":"2024-04-03T03:47:33.052Z","updated":"2024-04-03T03:47:33.052Z","comments":true,"path":"api/articles/zl/2016-01-01-160_Evaluation metrics for generation based models in .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Evaluation metrics for generation based models in NLPBLEU转自： http://www.cnblogs.com/by-dream/p/7679284.html n-gramBLEU 采用一种N-gram的匹配规则，原理比较简...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua 学习手记","uid":"ea602d69a91169b1a66e72dc3f4ebe31","slug":"zl/2016-01-01-163_Lua 学习手记","date":"2024-04-03T03:47:33.052Z","updated":"2024-04-03T03:47:33.053Z","comments":true,"path":"api/articles/zl/2016-01-01-163_Lua 学习手记.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Lua 语法说明 Lua 语法优化 其他语言调用 Lua 导语 介绍 Lua 的语法和优化细节 Lua 是一种轻量小巧的脚本语言，一个完整的 Lua 解释器不过200k，用标准 C 语言编写并以源代码形式开放。但麻雀虽小五脏俱全，Lua 本身其设计目的就是为了嵌入应用程序中，从...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}