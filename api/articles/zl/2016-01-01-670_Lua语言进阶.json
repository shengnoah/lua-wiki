{"title":"Lua语言进阶","uid":"dc394ec5eb5b7d637233ad2b80dc6e95","slug":"zl/2016-01-01-670_Lua语言进阶","date":"2024-04-03T03:47:35.897Z","updated":"2024-04-03T03:47:35.898Z","comments":true,"path":"api/articles/zl/2016-01-01-670_Lua语言进阶.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<hr/>\n<h3 id=\"0x01-Lua中什么值为假？\"><a href=\"#0x01-Lua中什么值为假？\" class=\"headerlink\" title=\"0x01 Lua中什么值为假？\"></a>0x01 Lua中什么值为假？</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"literal\">nil</span></span><br/><span class=\"line\"><span class=\"literal\">false</span></span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"0x02-语法举例\"><a href=\"#0x02-语法举例\" class=\"headerlink\" title=\"0x02 语法举例\"></a>0x02 语法举例</h3><blockquote>\n<ol>\n<li>当在一个数字后面写 .. 时，必须加上空格以防止被解释出错。</li>\n<li>lua会自动在string 和numbers之间自动运行类型转换，当一个字符串使用算术操作符时，string就会被转化成数字。</li>\n</ol>\n</blockquote>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;10&#34;</span>+<span class=\"number\">2</span>)  </span><br/><span class=\"line\">    <span class=\"number\">12.0</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">11.</span><span class=\"number\">.12</span>)  </span><br/><span class=\"line\">    malformed number near <span class=\"string\">&#39;11..12&#39;</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">11</span> .. <span class=\"number\">12</span>)</span><br/><span class=\"line\">    <span class=\"number\">1112</span></span><br/></pre></td></tr></tbody></table></figure>\n<blockquote>\n<ol start=\"3\">\n<li>默认索引从1开始，默认索引优先级大于[1]; [“a”]索引优先级大于a。</li>\n</ol>\n</blockquote>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/><span class=\"line\">29</span><br/><span class=\"line\">30</span><br/><span class=\"line\">31</span><br/><span class=\"line\">32</span><br/><span class=\"line\">33</span><br/><span class=\"line\">34</span><br/><span class=\"line\">35</span><br/><span class=\"line\">36</span><br/><span class=\"line\">37</span><br/><span class=\"line\">38</span><br/><span class=\"line\">39</span><br/><span class=\"line\">40</span><br/><span class=\"line\">41</span><br/><span class=\"line\">42</span><br/><span class=\"line\">43</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span></span><br/><span class=\"line\">    <span class=\"keyword\">local</span> value = {<span class=\"string\">&#34;index&#34;</span>, index=<span class=\"string\">&#34;index&#34;</span>, [<span class=\"number\">1</span>]=<span class=\"number\">1</span>}</span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(value[value[<span class=\"number\">1</span>]])</span><br/><span class=\"line\">    </span><br/><span class=\"line\">    Answer:</span><br/><span class=\"line\">    index</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"number\">2</span></span><br/><span class=\"line\">    <span class=\"keyword\">local</span> a = <span class=\"number\">1</span>  </span><br/><span class=\"line\">    <span class=\"keyword\">local</span> b = <span class=\"string\">&#34;1&#34;</span>  </span><br/><span class=\"line\">    <span class=\"keyword\">local</span> t = {a=<span class=\"number\">1</span>, [<span class=\"string\">&#34;a&#34;</span>]=<span class=\"number\">2</span>, [a]=<span class=\"number\">3</span>}  </span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(t.a, t[<span class=\"string\">&#34;a&#34;</span>], t[t.a], t.b, t[b])  </span><br/><span class=\"line\">    </span><br/><span class=\"line\">    Answer:</span><br/><span class=\"line\">    <span class=\"number\">2</span>   <span class=\"number\">2</span>   <span class=\"literal\">nil</span> <span class=\"literal\">nil</span> <span class=\"literal\">nil</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"number\">3.</span></span><br/><span class=\"line\">    <span class=\"keyword\">local</span> tmp = {[<span class=\"string\">&#34;1&#34;</span>]=<span class=\"string\">&#34;11&#34;</span>,<span class=\"string\">&#34;22&#34;</span>,[<span class=\"number\">3</span>]=<span class=\"string\">&#34;33&#34;</span>,<span class=\"string\">&#34;44&#34;</span>}</span><br/><span class=\"line\">    <span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(tmp) <span class=\"keyword\">do</span></span><br/><span class=\"line\">        <span class=\"built_in\">print</span>(i,v)</span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\">    </span><br/><span class=\"line\">    Answer:</span><br/><span class=\"line\">        <span class=\"number\">1</span>   <span class=\"number\">22</span></span><br/><span class=\"line\">        <span class=\"number\">2</span>   <span class=\"number\">44</span></span><br/><span class=\"line\">        <span class=\"number\">3</span>   <span class=\"number\">33</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"number\">4.</span></span><br/><span class=\"line\">    <span class=\"keyword\">local</span> tmp = {</span><br/><span class=\"line\">        [<span class=\"string\">&#34;1&#34;</span>] = <span class=\"string\">&#34;11&#34;</span>,</span><br/><span class=\"line\">        <span class=\"string\">&#34;22&#34;</span>,</span><br/><span class=\"line\">        [<span class=\"number\">3</span>] = <span class=\"string\">&#34;33&#34;</span>,</span><br/><span class=\"line\">        <span class=\"string\">&#34;44&#34;</span>,</span><br/><span class=\"line\">        <span class=\"string\">&#34;55&#34;</span></span><br/><span class=\"line\">    }  </span><br/><span class=\"line\">    <span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(tmp) <span class=\"keyword\">do</span></span><br/><span class=\"line\">        <span class=\"built_in\">print</span>(i,v)</span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\">    </span><br/><span class=\"line\">    Answer:</span><br/><span class=\"line\">        <span class=\"number\">1</span>   <span class=\"number\">22</span></span><br/><span class=\"line\">        <span class=\"number\">2</span>   <span class=\"number\">44</span></span><br/><span class=\"line\">        <span class=\"number\">3</span>   <span class=\"number\">55</span></span><br/></pre></td></tr></tbody></table></figure>\n<blockquote>\n<ol start=\"4\">\n<li>Lua 语言中字符串可以使用以下三种方式来表示：单引号间的一串字符；双引号间的一串字符；[[和]]间的一串字符。<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> stringtable = <span class=\"string\">[[  </span></span><br/><span class=\"line\"><span class=\"string\">    local a = 1  </span></span><br/><span class=\"line\"><span class=\"string\">    print(a)  </span></span><br/><span class=\"line\"><span class=\"string\">]]</span>  </span><br/><span class=\"line\"><span class=\"built_in\">print</span>(stringtable)  </span><br/><span class=\"line\"></span><br/><span class=\"line\">Answer:</span><br/><span class=\"line\">    <span class=\"keyword\">local</span> a = <span class=\"number\">1</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(a)</span><br/></pre></td></tr></tbody></table></figure>\n</li>\n</ol>\n</blockquote>\n<blockquote>\n<ol start=\"5\">\n<li>多返回值如果不接收，则放弃。<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span></span> <span class=\"keyword\">return</span> <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span> <span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f456</span><span class=\"params\">()</span></span> <span class=\"keyword\">return</span> <span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span> <span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(f123(),f456())</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(f456(),f123())</span><br/><span class=\"line\">    </span><br/><span class=\"line\">    Answer:</span><br/><span class=\"line\">        <span class=\"number\">1</span>   <span class=\"number\">4</span>   <span class=\"number\">5</span>   <span class=\"number\">6</span></span><br/><span class=\"line\">        <span class=\"number\">4</span>   <span class=\"number\">1</span>   <span class=\"number\">2</span>   <span class=\"number\">3</span></span><br/></pre></td></tr></tbody></table></figure>\n</li>\n</ol>\n</blockquote>\n<h3 id=\"0x03-对下面几段代码进行优化，并简述优化的原理。\"><a href=\"#0x03-对下面几段代码进行优化，并简述优化的原理。\" class=\"headerlink\" title=\"0x03 对下面几段代码进行优化，并简述优化的原理。\"></a>0x03 对下面几段代码进行优化，并简述优化的原理。</h3><blockquote>\n<p><a href=\"https://wuzhiwei.net/lua_performance/\" target=\"_blank\" rel=\"noopener noreferrer\">https://wuzhiwei.net/lua_performance/</a><br/><a href=\"https://www.cnblogs.com/YYRise/p/7082637.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.cnblogs.com/YYRise/p/7082637.html</a><br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">1</span><br/><span class=\"line\">    for _, v1 in ipairs(a) do</span><br/><span class=\"line\">        for_, v2 in ipairs(b) do</span><br/><span class=\"line\">            local x = math.sin(v1) * math.sin(v2)</span><br/><span class=\"line\">        end</span><br/><span class=\"line\">    end</span><br/><span class=\"line\"></span><br/><span class=\"line\">优化后</span><br/><span class=\"line\">使用全局变量，Lua预编译在生成的指令，需要添加获取类似以下代码：</span><br/><span class=\"line\">    GETGLOBAL 0 0 ; a</span><br/><span class=\"line\">    GETGLOBAL 1 1 ; b</span><br/><span class=\"line\">    ADD 0 0 1</span><br/><span class=\"line\">    SETGLOBAL 0 0 ; a</span><br/><span class=\"line\">Lua预编译能够在寄存器存储剩余的局部变量，结果在Lua中访问局部变量非常快。</span><br/><span class=\"line\"></span><br/><span class=\"line\">    local tsin = math.sin</span><br/><span class=\"line\">    for _, v1 in ipairs(a) do</span><br/><span class=\"line\">        for_, v2 in ipairs(b) do</span><br/><span class=\"line\">            local x = tsin(v1) * tsin(v2)</span><br/><span class=\"line\">        end</span><br/><span class=\"line\">    end</span><br/></pre></td></tr></tbody></table></figure><p></p>\n</blockquote>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">2</span></span><br/><span class=\"line\">    <span class=\"keyword\">for</span> i = <span class=\"number\">1</span>, <span class=\"number\">2000000</span> <span class=\"keyword\">do</span> </span><br/><span class=\"line\">        <span class=\"keyword\">local</span> a = {}</span><br/><span class=\"line\">        a[<span class=\"number\">1</span>] = <span class=\"number\">1</span>; a[<span class=\"number\">2</span>] = <span class=\"number\">2</span>; a[<span class=\"number\">3</span>] = <span class=\"number\">3</span></span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\">    </span><br/><span class=\"line\">优化后</span><br/><span class=\"line\">    通过给出新表合适的大小，这很容易避免那些初始的再哈希。</span><br/><span class=\"line\">    <span class=\"keyword\">for</span> i = <span class=\"number\">1</span>, <span class=\"number\">200000</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">        <span class=\"keyword\">local</span> a = {<span class=\"literal\">true</span>, <span class=\"literal\">true</span>, <span class=\"literal\">true</span>}</span><br/><span class=\"line\">        a[<span class=\"number\">1</span>] = <span class=\"number\">1</span>; a[<span class=\"number\">2</span>] = <span class=\"number\">2</span>; a[<span class=\"number\">3</span>] = <span class=\"number\">3</span></span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">3</span></span><br/><span class=\"line\">    <span class=\"keyword\">local</span> s = <span class=\"string\">&#34;&#34;</span></span><br/><span class=\"line\">    <span class=\"keyword\">for</span> i = <span class=\"number\">1</span>, i &lt; <span class=\"number\">300000</span> <span class=\"keyword\">do</span> </span><br/><span class=\"line\">        s = s .. <span class=\"string\">&#39;a&#39;</span></span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\">    </span><br/><span class=\"line\">优化后</span><br/><span class=\"line\">    在大字符串连接中，我们应避免..。应用<span class=\"built_in\">table</span>来模拟buffer，然后<span class=\"built_in\">concat</span>得到最终字符串。</span><br/><span class=\"line\">    <span class=\"keyword\">local</span> s = <span class=\"string\">&#39;&#39;</span></span><br/><span class=\"line\">    <span class=\"keyword\">local</span> t = {}</span><br/><span class=\"line\">    <span class=\"keyword\">for</span> i = <span class=\"number\">1</span>,<span class=\"number\">300000</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">        t[#t + <span class=\"number\">1</span>] = <span class=\"string\">&#39;a&#39;</span></span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\">    s = <span class=\"built_in\">table</span>.<span class=\"built_in\">concat</span>( t, <span class=\"string\">&#39;&#39;</span>)</span><br/><span class=\"line\">    b = <span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()</span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"0x04-编写一个函数，深度clone一个传入的lua对象。\"><a href=\"#0x04-编写一个函数，深度clone一个传入的lua对象。\" class=\"headerlink\" title=\"0x04 编写一个函数，深度clone一个传入的lua对象。\"></a>0x04 编写一个函数，深度clone一个传入的lua对象。</h3><blockquote>\n<p><a href=\"https://2013.mutoo.im/2015/10/deepclone-in-lua.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://2013.mutoo.im/2015/10/deepclone-in-lua.html</a><br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">deepCopy</span><span class=\"params\">(object)</span></span></span><br/><span class=\"line\">    <span class=\"keyword\">local</span> lookup_table = {}</span><br/><span class=\"line\">    <span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_copy</span><span class=\"params\">(object)</span></span></span><br/><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">type</span>(object) ~= <span class=\"string\">&#34;table&#34;</span> <span class=\"keyword\">then</span></span><br/><span class=\"line\">            <span class=\"keyword\">return</span> object</span><br/><span class=\"line\">        <span class=\"keyword\">elseif</span> lookup_table[object] <span class=\"keyword\">then</span></span><br/><span class=\"line\">            <span class=\"keyword\">return</span> lookup_table[object]</span><br/><span class=\"line\">        <span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">        <span class=\"keyword\">local</span> new_table = {}</span><br/><span class=\"line\">        lookup_table[object] = new_table</span><br/><span class=\"line\">        <span class=\"keyword\">for</span> key, value <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(object) <span class=\"keyword\">do</span></span><br/><span class=\"line\">            new_table[_copy(key)] = _copy(value)</span><br/><span class=\"line\">        <span class=\"keyword\">end</span></span><br/><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">setmetatable</span>(new_table, <span class=\"built_in\">getmetatable</span>(object))</span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"keyword\">return</span> _copy(object)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n</blockquote>","text":" 0x01 Lua中什么值为假？12nilfalse 0x02 语法举例 当在一个数字后面写 .. 时，必须加上空格以防止被解释出错。 lua会自动在string 和numbers之间自动运行类型转换，当一个字符串使用算术操作符时，string就会被转化成数字。 123456pr...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x01-Lua%E4%B8%AD%E4%BB%80%E4%B9%88%E5%80%BC%E4%B8%BA%E5%81%87%EF%BC%9F\"><span class=\"toc-text\">0x01 Lua中什么值为假？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x02-%E8%AF%AD%E6%B3%95%E4%B8%BE%E4%BE%8B\"><span class=\"toc-text\">0x02 语法举例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x03-%E5%AF%B9%E4%B8%8B%E9%9D%A2%E5%87%A0%E6%AE%B5%E4%BB%A3%E7%A0%81%E8%BF%9B%E8%A1%8C%E4%BC%98%E5%8C%96%EF%BC%8C%E5%B9%B6%E7%AE%80%E8%BF%B0%E4%BC%98%E5%8C%96%E7%9A%84%E5%8E%9F%E7%90%86%E3%80%82\"><span class=\"toc-text\">0x03 对下面几段代码进行优化，并简述优化的原理。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#0x04-%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%EF%BC%8C%E6%B7%B1%E5%BA%A6clone%E4%B8%80%E4%B8%AA%E4%BC%A0%E5%85%A5%E7%9A%84lua%E5%AF%B9%E8%B1%A1%E3%80%82\"><span class=\"toc-text\">0x04 编写一个函数，深度clone一个传入的lua对象。</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"深度理解Lua中的table","uid":"abe49e98abae713bee593ac15ed4e6fc","slug":"zl/2016-01-01-672_深度理解Lua中的table","date":"2024-04-03T03:47:35.898Z","updated":"2024-04-03T03:47:35.899Z","comments":true,"path":"api/articles/zl/2016-01-01-672_深度理解Lua中的table.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua的table是个很有意思的东西。有些内容平时写代码的时候很少接触到，但是了解一下还是很有意思的。 这篇blog参考MetatableEvents，一个一个边写测试边细说。 __newindex 原文翻译： __newindex用于分配属性，当调用 myTable[key]=...","link":"","photos":[],"count_time":{"symbolsCount":"7.2k","symbolsTime":"7 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua C API","uid":"0d1fbef5ebee69a60fb3f2ffbd51dab1","slug":"zl/2016-01-01-669_Lua C API","date":"2024-04-03T03:47:35.893Z","updated":"2024-04-03T03:47:35.893Z","comments":true,"path":"api/articles/zl/2016-01-01-669_Lua C API.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 云风Blog：Lua C API 的正确用法 C读取和调用Lua文件的库：lua.h, lauxlib.h, lualib.h 包括：读写Lua全局变量的函数、调用Lua函数的函数、运行Lua代码片段的函数、注册C函数然后可以在Lua中被调用的函数 C和Lua之间的数据交换，通...","link":"","photos":[],"count_time":{"symbolsCount":596,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}