{"title":"cocos2dx lua 常见命令行(编译调试运行打包)","uid":"9bf8c77e6e36e7e363fbe8f902b28df8","slug":"zl/2016-01-01-375_cocos2dx lua 常见命令行(编译调试运行打包)","date":"2024-04-03T03:47:35.660Z","updated":"2024-04-03T03:47:35.660Z","comments":true,"path":"api/articles/zl/2016-01-01-375_cocos2dx lua 常见命令行(编译调试运行打包).json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<blockquote>\n<p>cocos 命令</p>\n<blockquote>\n<p>Cocos2d-x 带有一个命令行工具：cocos 这是一个跨平台的工具，你可以用它创建项目、运行项目、发布项目。</p>\n</blockquote>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>命令行工具适用于所有 Cocos2d-x 支持的平台，包括：iOS、Android、Mac、Linux、Windows、Web。不用 IDE，只用命令行，你就能完成所有的工作！</p>\n</blockquote>\n</blockquote>\n<p>本文选自<a href=\"http://docs.cocos2d-x.org/cocos2d-x/zh/editors_and_tools/cocosCLTool.html\" target=\"_blank\" rel=\"noopener noreferrer\">cocos2dx官方文档</a>，只做记录！</p>\n<h3 id=\"项目创建\"><a href=\"#项目创建\" class=\"headerlink\" title=\"项目创建\"></a>项目创建</h3><p>使用 cocos new 命令创建新项目，命令格式如下：</p>\n<pre><code>cocos new &lt;game name&gt; -p &lt;package identifier&gt; -l &lt;language&gt; -d &lt;location&gt;\n</code></pre><p>示例：</p>\n<pre><code>cocos new MyGame -p com.MyCompany.MyGame -l cpp -d ~/MyCompany\n<p>cocos new MyGame -p com.MyCompany.MyGame -l lua -d ~/MyCompany</p>\n<p>cocos new MyGame -p com.MyCompany.MyGame -l js -d ~/MyCompany<br />\n</code></pre><p>使用命令 cocos new –help 可以查看到更多关于项目创建的帮助信息。</p></p>\n<h3 id=\"项目编译\"><a href=\"#项目编译\" class=\"headerlink\" title=\"项目编译\"></a>项目编译</h3><p>我们都知道，程序从源码到二进制程序，有一个编译环节。我们来看下 Cocos2d-x 是如何编译项目的，命令格式如下：</p>\n<pre><code>cocos compile -s &lt;path to your project&gt; -p &lt;platform&gt; -m &lt;mode&gt; -o &lt;output directory&gt;\n</code></pre><p>示例：</p>\n<pre><code>cocos compile -s ~/MyCompany/MyGame -p ios -m release -o ~/MyCompany/MyGame/bin\n<p>cocos compile -s ~/MyCompany/MyGame -p android -m release -o ~/MyCompany/MyGame/bin</p>\n<p>cocos compile -s c:MyCompanyMyGame -p win32 -m release -o c:MyCompanyMyGamebin<br />\n</code></pre><p>这里的参数有点多，让我们来一个一个说，-p 是编译的平台，-m 是模式：debug 或者 release。如果没指定模式，默认 debug。此外 -s 和 -o 参数是可选的，如果操作命令的当前路径就是工程的路径，那这两个参数都可以省掉。比如已经在 ~/MyCompany/MyGame 目录，那编译命令可以简化为：</p></p>\n<pre><code>cocos compile . -p ios -m release\n</code></pre><p>你也可以增加一个可选的参数 -q，这样执行静默操作，控制台的输出信息会比较少。示例：</p>\n<pre><code>cocos compile -q -s ~/MyCompany/MyGame -p ios -m release -o ~/MyCompany/MyGame/bin\n</code></pre><p>由于命令行工具支持很多平台，因此还有一些特定平台的参数，使用它们可以进行更多的控制，比如指定 SDK 版本，确定签名信息，添加一些 Lua 相关或专用于 Web 的选项。</p>\n<p>使用命令 cocos compile –help 可以查看更多关于项目编译的帮助信息。</p>\n<ul>\n<li>Android 项目编译注意事项<ul>\n<li>命令行工具是很灵活的，对于编译 Android 项目允许开发者使用特定版本的 API。比如你的系统上安装了 Android-22，你想使用它来编译，就在命令行的最后增加参数 –ap android-api-version。示例：<ul>\n<li>cocos compile -p android –ap android-22</li>\n</ul>\n</li>\n<li>你可以在项目的配置中，查看到目标 API 是什么版本。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"项目运行\"><a href=\"#项目运行\" class=\"headerlink\" title=\"项目运行\"></a>项目运行</h3><p>创建完项目后，你可以直接从命令行执行运行命令。cocos 会启动你指定平台的程序。命令行格式如下：</p>\n<pre><code>cocos run -s &lt;path to your project&gt; -p &lt;platform&gt;\n</code></pre><p>示例:</p>\n<pre><code>cocos run -s ~/MyCompany/MyGame -p ios\n<p>cocos run -s ~/MyCompany/MyGame -p android</p>\n<p>cocos run -s c:MyCompanyMyGame -p win32<br />\n</code></pre><p>当然，你也可以指定程序以 debug 还是 release 方式运行，默认的方式是 debug。示例：</p></p>\n<pre><code>cocos run -s ~/MyCompany/MyGame -p ios -m release\n</code></pre><p>就好像 cocos compile 命令那样，如果你已经在项目目录了，-s 和 -o 参数就不是必须的，这对 cocos run 命令也一样。就以上面的为例，如果已经在工程目录，命令可以简化成：</p>\n<pre><code>cocos run . -p ios -m release\n</code></pre><p>在运行 Web 程序时，还有可选的参数，允许你指定浏览器，例如指定 Google Chrome：</p>\n<pre><code>cocos run -s ~/MyCompany/MyGame -p web -b /Applications/Google Chrome.app\n\ncocos run -s ~/MyCompany/MyGame -p web -b C:Program FilesGoogleChromeApplicationchrome.exe\n\ncocos run -s ~/MyCompany/MyGame -p web -b /usr/local/bin/chrome\n</code></pre><p>你还可以指定 IP 地址和端口，更多关于项目运行的使用帮助，请运行 cocos run –help 命令。</p>\n<h3 id=\"项目发布\"><a href=\"#项目发布\" class=\"headerlink\" title=\"项目发布\"></a>项目发布</h3><p>cocos 通过提供一系列项目发布的命令实现了简单的发布机制。这些命令，就像上面介绍的命令一样，通过一些参数指定需要的操作。命令格式如下：</p>\n<pre><code>cocos deploy -s &lt;path to your project&gt; -p &lt;platform&gt; -m &lt;mode&gt;\n</code></pre><p>示例：</p>\n<pre><code>cocos deploy -s ~/MyCompany/MyGame -p ios -m release\n<p>cocos deploy -s ~/MyCompany/MyGame -p android -m release</p>\n<p>cocos deploy -s c:MyCompanyMyGame -p win32 -m release<br />\n</code></pre><p>你可以增加参数 -q，执行静默操作，这样控制台的输出信息会比较少。示例：</p></p>\n<pre><code>cocos deploy -q -s ~/MyCompany/MyGame -p ios -m release\n</code></pre><p>运行 cocos deploy –help，可以查看更多关于项目发布的帮助信息。</p>","text":" cocos 命令 Cocos2d-x 带有一个命令行工具：cocos 这是一个跨平台的工具，你可以用它创建项目、运行项目、发布项目。 命令行工具适用于所有 Cocos2d-x 支持的平台，包括：iOS、Android、Mac、Linux、Windows、Web。不用 IDE，只...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E5%88%9B%E5%BB%BA\"><span class=\"toc-text\">项目创建</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E7%BC%96%E8%AF%91\"><span class=\"toc-text\">项目编译</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E8%BF%90%E8%A1%8C\"><span class=\"toc-text\">项目运行</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83\"><span class=\"toc-text\">项目发布</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua学习笔记(一)","uid":"0dd08ce27dc9a095c050787b2946ec15","slug":"zl/2016-01-01-376_Lua学习笔记(一)","date":"2024-04-03T03:47:35.660Z","updated":"2024-04-03T03:47:35.661Z","comments":true,"path":"api/articles/zl/2016-01-01-376_Lua学习笔记(一).json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 基本语法 交互式编程 脚本式编程 注释 单行注释 多行注释 标识符 关键词 全局变量 数据类型 nil bool number string table function thread userdata 基本语法交互式编程所谓的交互式编程的意思，其实就是在命令行中输入程序就可以...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"结合Fluentd实现ngx_lua_waf页面展示","uid":"d818020fe9b5ded46e6f72a0b4292602","slug":"zl/2016-01-01-373_结合Fluentd实现ngx_lua_waf页面展示","date":"2024-04-03T03:47:35.655Z","updated":"2024-04-03T03:47:35.659Z","comments":true,"path":"api/articles/zl/2016-01-01-373_结合Fluentd实现ngx_lua_waf页面展示.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"0x00 概述最近在看lua_waf,看看怎么搞个web界面出来，于是有了这篇笔记。 上图是大佬分享的waf日志处理流程，不过我这篇文章讲的就简单多了，如下, 纯属搞着玩儿： ngx_lua_waf简介 ngx_lua_waf，是一个轻量级、高性能的WAF模块。 防止sql注入，...","link":"","photos":[],"count_time":{"symbolsCount":"8.8k","symbolsTime":"8 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}