{"title":"Write Redis Lua Script with ZeroBrane Studio","uid":"46d4a4f4da0fcaa00cb957564aa82400","slug":"zl/2016-01-01-703_Write Redis Lua Script with ZeroBrane Studio","date":"2024-04-03T03:47:35.938Z","updated":"2024-04-03T03:47:35.938Z","comments":true,"path":"api/articles/zl/2016-01-01-703_Write Redis Lua Script with ZeroBrane Studio.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>分享如何使用 ZeroBrane Studio 協助 Redis 的 Lua Script 開發與除錯。</p><p><img src=\"https://blackie1019.github.io/Logo.jpg\" alt=\"logo\"/></p><p>Lua 是一個輕量級程式語言，是在1993年被發行出來，因為體積小、啟動效能快而後很廣泛的被使用在遊戲腳本、硬體腳本語言與任何與腳本相關的場合中。其他詳細內容可以參考<a href=\"https://www.lua.org/\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.lua.org/</a></p><p>使用過的 Redis 的朋友可能多多少少有聽過 Redis 在 2.6 版之後可以透過撰寫客製化的 Lua Script 來大幅增加複雜處理的效能。</p><p>但看了官方的 debug 教學影片應該會直接想要放棄…</p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/IMvRfStaoyM\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen=\"\"></iframe><p>撰寫 Lua Script 的難度與如何在開發時進行除錯一直都是新手朋友的一大問題，今天要跟大家分享的就是透過 ZeroBrane Studio 這套 IDE 工具來幫我一次解決 Redis Lua 開發的兩大問題!</p><h2 id=\"ZeroBrane-Studio\"><a href=\"#ZeroBrane-Studio\" class=\"headerlink\" title=\"ZeroBrane Studio\"></a>ZeroBrane Studio</h2><p><a href=\"https://studio.zerobrane.com/\" target=\"_blank\" rel=\"noopener noreferrer\">ZeroBrane Studio</a> 是一套輕量級的 Lua IDE 工具，具備程式碼提示、語法提醒、遠端調用、程式碼偵錯與代碼分析等功能。</p><h2 id=\"Setup-and-Install-Redis-Plugin\"><a href=\"#Setup-and-Install-Redis-Plugin\" class=\"headerlink\" title=\"Setup and Install Redis Plugin\"></a>Setup and Install Redis Plugin</h2><p>目前支援 <em>Windows</em> , <em>Mac</em> 與 <em>Linux</em> 系統。安裝上十分簡單，可以直接到官方下載相關的安裝檔案，一步步按照步驟即可完成安裝。</p><p>而在進行 Redis 的 Lua 開發前，可先到下面<a href=\"https://raw.githubusercontent.com/pkulchenko/ZeroBranePackage/master/redis.lua\" target=\"_blank\" rel=\"noopener noreferrer\">ZeroBranePackage/redis.lua</a>下載對應支援的 Lua Interpreter。更多支援可參考 <a href=\"https://studio.zerobrane.com/doc-plugin\" target=\"_blank\" rel=\"noopener noreferrer\">ZeroBrane Studio - Plugin</a>。</p><p>接著將該 <strong>redis.lua</strong> 檔案放置執行目錄下面的 <em>packages</em> 資料夾下:</p><p><img src=\"https://blackie1019.github.io/package_path.png\" alt=\"package_path.png\"/></p><p>然後啟動 ZeroBrane Studio，新增一個 lua 檔案後即可從上方的 Project&gt; Lua Interpreter&gt; Redis 選定為我們欲執行的方式。</p><p><img src=\"https://blackie1019.github.io/Redis_Interpreter.png\" alt=\"Redis_Interpreter.png\"/></p><p>到這，前置安裝已經準備好了，接著讓我們來寫寫簡單的 Lua Script 並看 ZeroBrane Studio 如何讓 Lua 的開發變簡單。</p><h2 id=\"Write-Redis-Lua-Script\"><a href=\"#Write-Redis-Lua-Script\" class=\"headerlink\" title=\"Write Redis Lua Script\"></a>Write Redis Lua Script</h2><p>接著讓我們寫一個最簡單的 Lua 如下:</p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">42</span></span><br/></pre></td></tr></tbody></table></figure><p>我們可以透過IDE直接執行察看結果:</p><p><img src=\"https://blackie1019.github.io/basic_01.png\" alt=\"basic_01.png\"/></p><p>接著我們將程式碼做簡單的變數宣告:</p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> var1 = <span class=\"number\">100</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> var2 = <span class=\"number\">200</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> var3 = <span class=\"number\">300</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">return</span> var2</span><br/></pre></td></tr></tbody></table></figure><p>並透過重新執行的方式看到右邊的 Stack View 中的內容有記錄每步驟的變化”</p><p><img src=\"https://blackie1019.github.io/basic_02.png\" alt=\"basic_02.png\"/></p><p>而我們也可以透過 <em>watch</em> 的方式與逐步執行的方式來一步步觀察我們想確認的變數內容當前的數值:</p><p><img src=\"https://blackie1019.github.io/debug_01.png\" alt=\"debug_01.png\"/></p><p><img src=\"https://blackie1019.github.io/debug_02.png\" alt=\"debug_02.png\"/></p><p><img src=\"https://blackie1019.github.io/debug_03.png\" alt=\"debug_03.png\"/></p><p>到這邊介紹完基本的操作後，就來直接與本機或遠端的 Redis Instance 開發互動。</p><h2 id=\"Testing-and-Debug-Lua-Script-on-ZeroBran-Studio\"><a href=\"#Testing-and-Debug-Lua-Script-on-ZeroBran-Studio\" class=\"headerlink\" title=\"Testing and Debug Lua Script on ZeroBran Studio\"></a>Testing and Debug Lua Script on ZeroBran Studio</h2><p>首先我們先將 Redis Instance 建立一筆 key 為 <em>test</em> 數值為 <strong>100</strong> 的資料，如以下內容:</p><p><img src=\"https://blackie1019.github.io/demo_01.png\" alt=\"demo_01.png\"/></p><p>接著我們新增一個 lua 檔案，我們的目標是抓當前 key 為 <em>test</em> 的數值並且幫當前數值 <strong>+50</strong>，程式碼如下:</p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> targetKey = KEYS[<span class=\"number\">1</span>]</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> currentValue = redis.call(<span class=\"string\">&#39;GET&#39;</span>,targetKey)</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">if</span> currentValue <span class=\"keyword\">then</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">  currentValue = currentValue + <span class=\"number\">50</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">return</span> currentValue</span><br/></pre></td></tr></tbody></table></figure><p>接著我們就可以透過先前的設定的連線方式重新設定一次當前要執行的 redis 連線:</p><p><img src=\"https://blackie1019.github.io/demo_02.png\" alt=\"demo_02.png\"/></p><p>透過先前教過的 debug 方式逐步運行即可看到下面結果與 Stack 內容:</p><p><img src=\"https://blackie1019.github.io/demo_03.png\" alt=\"demo_03.png\"/></p><p>如此我們就可以輕鬆開發 Redis Lua Script 了。這邊要稍微注意，如果要修改當前的 Redis 連線資訊必須重新啟動 ZeroBrane Studio 再按一次直接執行就會又跑出一次 redis 連線設定對話框。也就是說每次重啟的第一次可以修改，但如果要修改就必須要重新啟動…算是唯一不方便的地方。</p><h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><ul><li><a href=\"https://www.youtube.com/watch?v=7mlajCj4QPw\" target=\"_blank\" rel=\"noopener noreferrer\">Develop and debug Redis Lua scripts with ZeroBrane Studio</a></li></ul>","text":"分享如何使用 ZeroBrane Studio 協助 Redis 的 Lua Script 開發與除錯。Lua 是一個輕量級程式語言，是在1993年被發行出來，因為體積小、啟動效能快而後很廣泛的被使用在遊戲腳本、硬體腳本語言與任何與腳本相關的場合中。其他詳細內容可以參考https...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ZeroBrane-Studio\"><span class=\"toc-text\">ZeroBrane Studio</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Setup-and-Install-Redis-Plugin\"><span class=\"toc-text\">Setup and Install Redis Plugin</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Write-Redis-Lua-Script\"><span class=\"toc-text\">Write Redis Lua Script</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Testing-and-Debug-Lua-Script-on-ZeroBran-Studio\"><span class=\"toc-text\">Testing and Debug Lua Script on ZeroBran Studio</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Reference\"><span class=\"toc-text\">Reference</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua学习","uid":"98627ae8510dc86d4061c2718311a9a7","slug":"zl/2016-01-01-707_Lua学习","date":"2024-04-03T03:47:35.939Z","updated":"2024-04-03T03:47:35.939Z","comments":true,"path":"api/articles/zl/2016-01-01-707_Lua学习.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"因为Moongen的需要，学习了一些Lua知识，特此总结。 现在更新到lua的模块与包。 注释字符串匹配模式以后补充。 包的加载机制和C包以后补充。 1brew install lua 注：lua的index都是从1开始的。 Lua数据类型 nil boolean number ...","link":"","photos":[],"count_time":{"symbolsCount":"6.9k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"安装Nginx Lua环境","uid":"8de7654a0c1f82f79006d329ee36718f","slug":"zl/2016-01-01-704_安装Nginx Lua环境","date":"2024-04-03T03:47:35.938Z","updated":"2024-04-03T03:47:35.938Z","comments":true,"path":"api/articles/zl/2016-01-01-704_安装Nginx Lua环境.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"环境准备： $ yum -y install pcre-devel $ yum -y install openssl openssl-devel 下载所需文件 亦可参考官方安装指南：lua-nginx-module Installation 这是我总结的安装，供参考： 需要最新版...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}