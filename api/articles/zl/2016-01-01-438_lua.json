{"title":"lua","uid":"df60e476b394b1dd4755ec96c53302ff","slug":"zl/2016-01-01-438_lua","date":"2024-04-03T03:47:35.721Z","updated":"2024-04-03T03:47:35.721Z","comments":true,"path":"api/articles/zl/2016-01-01-438_lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h2 id=\"设计目的\"><a href=\"#设计目的\" class=\"headerlink\" title=\"设计目的\"></a>设计目的</h2><p>其设计目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。</p>\n<h2 id=\"Lua-特性\"><a href=\"#Lua-特性\" class=\"headerlink\" title=\"Lua 特性\"></a>Lua 特性</h2><ul>\n<li><strong>轻量级</strong>: 它用标准C语言编写并以源代码形式开放，编译后仅仅一百余K，可以很方便的嵌入别的程序里。</li>\n<li><strong>可扩展</strong>: Lua提供了非常易于使用的扩展接口和机制：由宿主语言(通常是C或C++)提供这些功能，Lua可以使用它们，就像是本来就内置的功能一样。</li>\n<li>其它特性:<ul>\n<li>支持面向过程(procedure-oriented)编程和函数式编程(functional programming)；</li>\n<li>自动内存管理；只提供了一种通用类型的表（table），用它可以实现数组，哈希表，集合，对象；</li>\n<li>语言内置模式匹配；闭包(closure)；函数也可以看做一个值；提供多线程（协同进程，并非操作系统所支持的线程）支持；</li>\n<li>通过闭包和table可以很方便地支持面向对象编程所需要的一些关键机制，比如数据抽象，虚函数，继承和重载等。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Hello-World\"><a href=\"#Hello-World\" class=\"headerlink\" title=\"Hello World!\"></a>Hello World!</h2><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">print(&#34;Hello World!&#34;)</span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"交互式编程\"><a href=\"#交互式编程\" class=\"headerlink\" title=\"交互式编程\"></a>交互式编程</h3><blockquote>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; print(&#34;Hello World！&#34;)</span><br/><span class=\"line\">&gt; Hello World！</span><br/><span class=\"line\">&gt;</span><br/></pre></td></tr></tbody></table></figure>\n</blockquote>\n<blockquote>\n</blockquote>\n<h2 id=\"脚本式编程\"><a href=\"#脚本式编程\" class=\"headerlink\" title=\"脚本式编程\"></a>脚本式编程</h2><p>​    将下列代码存储在名为 hello.lua 的脚本文件中：</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">print(&#34;Hello World！&#34;)</span><br/><span class=\"line\">print(&#34;www.runoob.com&#34;)</span><br/></pre></td></tr></tbody></table></figure>\n<p>使用 lua 名执行以上脚本，输出结果为：</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">$ lua hello.lua</span><br/><span class=\"line\">Hello World！</span><br/><span class=\"line\">www.runoob.com</span><br/></pre></td></tr></tbody></table></figure>\n<p>我们也可以将代码修改为如下形式来执行脚本（在开头添加：#!/usr/local/bin/lua）：</p>\n<h2 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h2><p>#!/usr/<strong>local</strong>/bin/lua</p>\n<p>print(“Hello World！”)<br/>print(“<a href=\"http://www.runoob.com&#34;\" target=\"_blank\" rel=\"noopener noreferrer\">www.runoob.com&#34;</a>)</p>\n<p>以上代码中，我们指定了 Lua 的解释器 /usr/local/bin directory。加上 # 号标记解释器会忽略它。接下来我们为脚本添加可执行权限，并执行：</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">./hello.lua </span><br/><span class=\"line\">Hello World！</span><br/><span class=\"line\">www.runoob.com</span><br/></pre></td></tr></tbody></table></figure>\n<h2 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h2><h3 id=\"单行注释\"><a href=\"#单行注释\" class=\"headerlink\" title=\"单行注释\"></a>单行注释</h3><p>两个减号是单行注释:</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">--</span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"多行注释\"><a href=\"#多行注释\" class=\"headerlink\" title=\"多行注释\"></a>多行注释</h3><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">--[[</span><br/><span class=\"line\"> 多行注释</span><br/><span class=\"line\"> 多行注释</span><br/><span class=\"line\"> --]]</span><br/></pre></td></tr></tbody></table></figure>\n<p>其他lua相关知识均可参考下面两个链接:</p>\n<p><a href=\"https://www.jb51.net/article/136109.htm\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.jb51.net/article/136109.htm</a> </p>\n<p><a href=\"https://www.runoob.com/lua/lua-environment.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.runoob.com/lua/lua-environment.html</a> </p>","text":"设计目的其设计目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。 Lua 特性 轻量级: 它用标准C语言编写并以源代码形式开放，编译后仅仅一百余K，可以很方便的嵌入别的程序里。 可扩展: Lua提供了非常易于使用的扩展接口和机制：由宿主语言(通常是C或C++)提供...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E8%AE%A1%E7%9B%AE%E7%9A%84\"><span class=\"toc-text\">设计目的</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Lua-%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">Lua 特性</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Hello-World\"><span class=\"toc-text\">Hello World!</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%BC%96%E7%A8%8B\"><span class=\"toc-text\">交互式编程</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%84%9A%E6%9C%AC%E5%BC%8F%E7%BC%96%E7%A8%8B\"><span class=\"toc-text\">脚本式编程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E4%BE%8B\"><span class=\"toc-text\">实例</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">注释</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8D%95%E8%A1%8C%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">单行注释</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E8%A1%8C%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">多行注释</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua中模块[modlue]","uid":"df9a3750841aab9ece7af8ddca8a22cb","slug":"zl/2016-01-01-439_Lua中模块[modlue]","date":"2024-04-03T03:47:35.722Z","updated":"2024-04-03T03:47:35.725Z","comments":true,"path":"api/articles/zl/2016-01-01-439_Lua中模块[modlue].json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"require 直接引入文件-- aa.lua文件 function showName( v ) -- body print (&#34;哦哈呦&#34;..v) end -- a.lua 文件内引入aa.lua文件 require &#34;aa&#34; showName(&...","link":"","photos":[],"count_time":{"symbolsCount":454,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"tolua实现分析","uid":"badacccfdd679d5ed5e22c4988c3b87d","slug":"zl/2016-01-01-434_tolua实现分析","date":"2024-04-03T03:47:35.720Z","updated":"2024-04-03T03:47:35.720Z","comments":true,"path":"api/articles/zl/2016-01-01-434_tolua实现分析.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"tolua++如何将c++对象导入到lua里tolua++为每一个传入lua的对象建立一个userdata，userdata的值，是c++对象的地址。userdata的metatable，是一个tolua++建立的，记录了userdata对应c++类型信息的表格，包括导出的成员变...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}