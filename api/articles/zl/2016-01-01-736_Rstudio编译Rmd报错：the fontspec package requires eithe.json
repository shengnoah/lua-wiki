{"title":"Rstudio编译Rmd报错：the fontspec package requires either XeTeX or LuaTeX.","uid":"8321b0e56927292feb575cbffdd7f59e","slug":"zl/2016-01-01-736_Rstudio编译Rmd报错：the fontspec package requires eithe","date":"2024-04-03T03:47:35.985Z","updated":"2024-04-03T03:47:35.985Z","comments":true,"path":"api/articles/zl/2016-01-01-736_Rstudio编译Rmd报错：the fontspec package requires eithe.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<div class=\"section level1\">\n<p>对于一些常规的报告，我一般是会写一个脚本来自动运行、生成格式化的模板。然后通过 <code>R</code> 的软件包 <code>knitr</code> 来实现自动化报告效果。这样可以十分方便的把数据分析与数据报告结合在一起，如果在分析端的脚本有变化，我们只需要把主要精力放在修改 <code>R</code> 脚本就可以了，而在报告端，在每次生成报告时会自动根据分析脚本生成的数据进行更新，从而完成「时时更新与可重复研究」的伟大目标。</p>\n<p>比如，我们公司目前要求每周五收盘会，出具一份所有基金的净值报告文档。这个一方面要求数据保持与数据库的同步更新，二来还要求文档有一定的「逼格」。针对第一条，我本身在日常工作中就是使用 <code>R</code> 来处理各项数据分析，而对于第二条，以前我也系统性的学习过 <code>LaTeX</code> 这个排版届的「一股清流」。因此，自然而然的，我就使用 <code>Rstudio</code> 来完成这个常规化的工作了。</p>\n</div>\n<div class=\"section level1\">\n<h1>问题描述</h1>\n<p>可是，最近在新安装的 <code>Rstudio</code> 中运行原来的脚本，却出现一个奇怪的报错。我怀疑是 <code>Rstudio</code> 因为版本更新的问题，不再使用原来的部分 <code>yaml</code> 参数。下面我们来看看具体的报错：</p>\n<pre class=\"bash\"><code>/usr/bin/pandoc +RTS -K512m -RTS ReportingTemplate.utf8.md --to beamer --from markdown+autolink_bare_uris+ascii_identifiers+tex_math_single_backslash --output ReportingTemplate.tex --template backtesting_template.tex --table-of-contents --variable theme=SOCIB --highlight-style espresso --latex-engine pdflatex --self-contained --latex-engine=xelatex \noutput file: ReportingTemplate.knit.md\n<p>! Fatal fontspec error: &quot;cannot-use-pdftex&quot;<br />\n!<br />\n! The fontspec package requires either XeTeX or LuaTeX.<br />\n!<br />\n! You must change your typesetting engine to, e.g., &quot;xelatex&quot; or<br />\n! &quot;lualatex&quot;instead of &quot;latex&quot; or &quot;pdflatex&quot;.<br />\n!<br />\n! See the fontspec documentation for further information.<br />\n!<br />\n! For immediate help type H &lt;return&gt;.<br />\n!..</p>\n<p>!<br />\n! The fontspec package requires either XeTeX or LuaTeX.<br />\n!<br />\n! You must change your typesetting engine to, e.g., &quot;xelatex&quot; or<br />\n! &quot;lualatex&quot;instead of &quot;latex&quot; or &quot;pdflatex&quot;.<br />\n!<br />\n! See the fontspec documentation for further information.<br />\n!<br />\n! For immediate help type H &lt;return&gt;.<br />\n!..</p>\n<p>! The fontspec package requires either XeTeX or LuaTeX.<br />\n!<br />\n! You must change your typesetting engine to, e.g., &quot;xelatex&quot; or<br />\n! &quot;lualatex&quot;instead of &quot;latex&quot; or &quot;pdflatex&quot;.<br />\n!<br />\n! See the fontspec documentation for further information.<br />\n!<br />\n! For immediate help type H &lt;return&gt;.<br />\n!..</p>\n<p>!<br />\n! You must change your typesetting engine to, e.g., &quot;xelatex&quot; or<br />\n! &quot;lualatex&quot;instead of &quot;latex&quot; or &quot;pdflatex&quot;.<br />\n!<br />\n! See the fontspec documentation for further information.<br />\n!<br />\n! For immediate help type H &lt;return&gt;.<br />\n!..</p>\n<p>! You must change your typesetting engine to, e.g., &quot;xelatex&quot; or<br />\n! &quot;lualatex&quot;instead of &quot;latex&quot; or &quot;pdflatex&quot;.<br />\n!<br />\n! See the fontspec documentation for further information.<br />\n!<br />\n! For immediate help type H &lt;return&gt;.<br />\n!..</p>\n<p>! &quot;lualatex&quot;instead of &quot;latex&quot; or &quot;pdflatex&quot;.<br />\n!<br />\n! See the fontspec documentation for further information.<br />\n!<br />\n! For immediate help type H &lt;return&gt;.<br />\n!..</p>\n<p>!<br />\n! See the fontspec documentation for further information.<br />\n!<br />\n! For immediate help type H &lt;return&gt;.<br />\n!..</p>\n<p>! See the fontspec documentation for further information.<br />\n!<br />\n! For immediate help type H &lt;return&gt;.<br />\n!..</p>\n<p>!<br />\n! For immediate help type H &lt;return&gt;.<br />\n!..</p>\n<p>! For immediate help type H &lt;return&gt;.<br />\n!..</p>\n<p>Error: Failed to compile ReportingTemplate.tex. See ReportingTemplate.log for more info.<br />\nIn addition: There were 50 or more warnings (use warnings() to see the first 50)<br />\nExecution halted</code></pre></p>\n</div>\n<div class=\"section level1\">\n<h1>解决思路</h1>\n<div id=\"latex-\" class=\"section level2\">\n<h2><code>LaTeX</code> 编译引擎</h2>\n<p>细看这个错误，应该是提示我们需要使用 <code>XeTeX</code> 这个新的编译引擎来执行 <code>fontspect</code> 包，也就是可以允许我们调用操作系统的字体。而现在 <code>Rstudio</code> 无法找到 <code>XeTeX</code>。因此，很直观的想法就是去设置一下这个参数。</p>\n</div>\n<div id=\"so-\" class=\"section level2\">\n<h2>SO 的参考</h2>\n<p>然后还是用 <code>google</code> 去搜索了一下其他人是否也遇到类似的问题。果真如此。在 <code>StackOverFlow</code> 上面的链接，<a href=\"Rmarkdown%20The%20fontspec%20package%20requires%20either%20XeTeX%20or%20LuaTeX.\">https://stackoverflow.com/questions/36806255/rstudio-on-windows-not-using-xelatex</a>。有个人也是遇到相同的问题，然后后面的提示也是十分给力，验证了我的想法。</p>\n</div>\n<div id=\"-yaml\" class=\"section level2\">\n<h2>原来的 <code>yaml</code></h2>\n<p>这里我们来看一下原来的 <code>yaml</code> 表头，虽然也指定了 <code>pandoc_args</code> 为 <code>xelatex</code>，但是可能是由于 <code>Rstudio</code> 在新版本里去掉了对这个参数的引用，才导致我们在编译 <code>.tex</code> 文件的时候无法使用该编译引擎。而新的参数列表方式与其他的参数选项一致，即作为一个参数值来传递。这也更加符合 <code>knitr</code> 的设计哲学。</p>\n<pre class=\"yaml\"><code>---\ntitle: &#34;汉云投资&#34;\nsubtitle: &#34;基金报告&#34;\noutput: \n  beamer_presentation:\n    theme: SOCIB      ## sthlm, SOCIB\n    template: backtesting_template.tex\n    pandoc_args: &#39;--latex-engine=xelatex&#39;\n    keep_tex: false\n    toc: true\n    highlight: espresso  ## &#34;default&#34;, &#34;tango&#34;, &#34;pygments&#34;, &#34;kate&#34;, &#34;monochrome&#34;, \n                        ## &#34;espresso&#34;, &#34;zenburn&#34;, &#34;haddock&#34;\ndate: cntoday\nprint: no\n---</code></pre>\n</div>\n<div id=\"-yaml-\" class=\"section level2\">\n<h2>修改 <code>yaml</code> 解决问题</h2>\n<p>既然现在问题解决了，那就修改一下。</p>\n<pre class=\"yaml\"><code>---\ntitle: &#34;汉云投资&#34;\nsubtitle: &#34;基金报告&#34;\noutput: \n  beamer_presentation:\n    theme: SOCIB      ## sthlm, SOCIB\n    template: backtesting_template.tex\n    # pandoc_args: &#39;--latex-engine=xelatex&#39;\n    latex_engine: xelatex\n    keep_tex: false\n    toc: true\n    highlight: espresso  ## &#34;default&#34;, &#34;tango&#34;, &#34;pygments&#34;, &#34;kate&#34;, &#34;monochrome&#34;, \n                        ## &#34;espresso&#34;, &#34;zenburn&#34;, &#34;haddock&#34;\ndate: cntoday\nprint: no\n---</code></pre>\n<p>注意，这里为了兼容旧版本，我并没有删除 <code>pandoc_args: &#39;--latex-engine=xelatex&#39;</code>，而是把这个先注释掉。这一点在写代码的时候算是一个小技术，即一次只修改一个地方，等到程序运行稳定后，再对修改过的代码进行删除或移到备用文件，以防止后来又要使用之前的就代码。</p>\n<p>好了，这样我又可以愉快的「偷懒」了。让计算机去做「boring stuff」吧。</p>\n</div>\n</div>","text":" 对于一些常规的报告，我一般是会写一个脚本来自动运行、生成格式化的模板。然后通过 R 的软件包 knitr 来实现自动化报告效果。这样可以十分方便的把数据分析与数据报告结合在一起，如果在分析端的脚本有变化，我们只需要把主要精力放在修改 R 脚本就可以了，而在报告端，在每次生成报告...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">问题描述</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">解决思路</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#latex-\"><span class=\"toc-text\">LaTeX 编译引擎</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#so-\"><span class=\"toc-text\">SO 的参考</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#-yaml\"><span class=\"toc-text\">原来的 yaml</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#-yaml-\"><span class=\"toc-text\">修改 yaml 解决问题</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"深入理解Lua中的元表setmetatable","uid":"257e856ad408de9d81cf10f5e9bfb4b7","slug":"zl/2016-01-01-740_深入理解Lua中的元表setmetatable","date":"2024-04-03T03:47:35.986Z","updated":"2024-04-03T03:47:35.987Z","comments":true,"path":"api/articles/zl/2016-01-01-740_深入理解Lua中的元表setmetatable.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 一直对Lua中的元表理解的不是很深，今天刚好有时间重点看了一下这一部分，写一下笔记有利于日后翻阅 Lua中的表Lua是“万物基于表的”，Table既可以模拟数组，也可以模拟字典哈希表等，确实很强大。其实Lua表的本质就类似是我们C#中的字典，是以很多键值对存在的。如果访问了一个...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"LuCI的uci使用（lua）","uid":"307dd1de8967bd9b98bf15acd11e3afd","slug":"zl/2016-01-01-737_LuCI的uci使用（lua）","date":"2024-04-03T03:47:35.985Z","updated":"2024-04-03T03:47:35.985Z","comments":true,"path":"api/articles/zl/2016-01-01-737_LuCI的uci使用（lua）.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"add123local uci = require(&#34;luci.model.uci&#34;).cursor()uci:add(&#34;wireless&#34;, &#34;wifi-iface&#34;)uci:commit(&#34;wireless&#34;) ...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}