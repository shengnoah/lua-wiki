{"title":"Lua表达式 · 花生肉泥","uid":"148bf8464f1e30bf4f29b6a6cd87b88d","slug":"zl/2016-01-01-709_Lua表达式 · 花生肉泥","date":"2024-04-03T03:47:35.940Z","updated":"2024-04-03T03:47:35.940Z","comments":true,"path":"api/articles/zl/2016-01-01-709_Lua表达式 · 花生肉泥.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h3 id=\"算术运算符\"><a href=\"#算术运算符\" class=\"headerlink\" title=\"算术运算符\"></a>算术运算符</h3><p>下表列出了lua语言中常用算术运算符(设定A的值为10，B的值为20)</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">操作符</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">+</td>\n<td style=\"text-align:center\">加法</td>\n<td style=\"text-align:center\">A + B 输出 30</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">减法</td>\n<td style=\"text-align:center\">A - B 输出 -10</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">*</td>\n<td style=\"text-align:center\">乘法</td>\n<td style=\"text-align:center\">A * B 输出 200</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">/</td>\n<td style=\"text-align:center\">除法</td>\n<td style=\"text-align:center\">B / A 输出 2</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">%</td>\n<td style=\"text-align:center\">取余</td>\n<td style=\"text-align:center\">B % A 输出 0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">^</td>\n<td style=\"text-align:center\">乘幂</td>\n<td style=\"text-align:center\">A ^ 2 输出 100</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">-</td>\n<td style=\"text-align:center\">负号</td>\n<td style=\"text-align:center\">-A 输出 -10</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"关系运算符\"><a href=\"#关系运算符\" class=\"headerlink\" title=\"关系运算符\"></a>关系运算符</h3><p>lua中的关系运算符有：<br/></p><figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;     </span><br/><span class=\"line\">&gt;</span><br/><span class=\"line\">&lt;=     </span><br/><span class=\"line\">&gt;=     </span><br/><span class=\"line\">==   </span><br/><span class=\"line\">~=</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>这些操作符返回结果为false或者true</p>\n<p>==和~=比较两个值，如果两个值类型不同，lua认为两者不同；nil只和自己相等。lua通过引用比较tables、userdata、functions。也就是说当且仅当两者表示同一对象时相等。<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> a,b = <span class=\"number\">11</span>,<span class=\"string\">&#34;33&#34;</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(a==b)     </span><br/><span class=\"line\"><span class=\"built_in\">print</span>(a~=b)     <span class=\"comment\">-- false</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(a&gt;=b)     <span class=\"comment\">-- trye</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>A=10 B=20</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">操作符</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">==</td>\n<td style=\"text-align:center\">等于，检测两个值是否相等，相等返回true，否则返回false</td>\n<td style=\"text-align:center\">（A == B） 为false</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">~=</td>\n<td style=\"text-align:center\">等于，检测两个值是否相等，相等返回false，否则返回true</td>\n<td style=\"text-align:center\">(A ~= B) 为true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt;</td>\n<td style=\"text-align:center\">大于，如果左边的值大于右边的值，返回true，否则返回false</td>\n<td style=\"text-align:center\">(A &gt; B) 为false</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&lt;</td>\n<td style=\"text-align:center\">小于，如果左边的值大于右边的值，返回false，否则返回true</td>\n<td style=\"text-align:center\">(A &gt;= B)返回false</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&gt;=</td>\n<td style=\"text-align:center\">大于等于，如果左边的值大于等于右边的值，返回true，否则返回false</td>\n<td style=\"text-align:center\">(A &gt;= B) 返回false</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">&lt;=</td>\n<td style=\"text-align:center\">小于等于，如果左边的值小于等于右边的值，返回true，否则返回false</td>\n<td style=\"text-align:center\">(A &lt;= B) 返回true</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"逻辑运算符\"><a href=\"#逻辑运算符\" class=\"headerlink\" title=\"逻辑运算符\"></a>逻辑运算符</h3><figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">and</span></span><br/><span class=\"line\"><span class=\"keyword\">or</span></span><br/><span class=\"line\"><span class=\"keyword\">not</span></span><br/></pre></td></tr></tbody></table></figure>\n<p>逻辑运算符认为false和nil是假（false），其他是真，0和空字符串也是true</p>\n<p>and和or的运算结果不是true和false，而是他的两个操作数相关</p>\n<p>a and b      – 如果a为false，则返回a，否则返回b</p>\n<p>a or b     – 如果a为true，则返回a，否则返回b<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">4</span> <span class=\"keyword\">and</span> <span class=\"number\">5</span>)     <span class=\"comment\">-- 5</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">nil</span> <span class=\"keyword\">and</span> <span class=\"number\">13</span>)     <span class=\"comment\">-- nil</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">false</span> <span class=\"keyword\">and</span> <span class=\"number\">13</span>)     <span class=\"comment\">-- false</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">4</span> <span class=\"keyword\">or</span> <span class=\"number\">5</span>)     <span class=\"comment\">-- 4</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">false</span> <span class=\"keyword\">or</span> <span class=\"number\">5</span>)     <span class=\"comment\">-- 5</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>A=10 B=20</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">操作符</th>\n<th style=\"text-align:center\">描述</th>\n<th style=\"text-align:center\">示例</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">and</td>\n<td style=\"text-align:center\">逻辑与操作符，如果两边的操作都为true，则条件为true</td>\n<td style=\"text-align:center\">(A and B) 为false</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">or</td>\n<td style=\"text-align:center\">逻辑或操作符，如果两边的操作任意一个为true，则条件为true</td>\n<td style=\"text-align:center\">(A or B) 为true</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">not</td>\n<td style=\"text-align:center\">逻辑非运算符，与逻辑运算结果相反没如果条件为true，逻辑非为false</td>\n<td style=\"text-align:center\">not(A and B)为true</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"连接运算符\"><a href=\"#连接运算符\" class=\"headerlink\" title=\"连接运算符\"></a>连接运算符</h3><p>lua中字符串的连接操作符写作两个点(‘..’)</p>\n<p>字符串连接，如果操作数为数字，lua将数字转换成字符串</p>\n<p>如果前面连接的是数值，靠近数值边的连接符要有空格，若数值实在后面则无要求<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> a,b = <span class=\"number\">11</span>,<span class=\"string\">&#34;33&#34;</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(a..b)     <span class=\"comment\">-- 1133</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;cc&#34;</span>.<span class=\"number\">.1</span>)     <span class=\"comment\">-- cc1</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<h3 id=\"优先级\"><a href=\"#优先级\" class=\"headerlink\" title=\"优先级\"></a>优先级</h3><p>从高到低的顺序<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">^</span><br/><span class=\"line\"><span class=\"keyword\">not</span>     -(unary)</span><br/><span class=\"line\">*     /</span><br/><span class=\"line\">+     -</span><br/><span class=\"line\">..</span><br/><span class=\"line\">&lt;     &gt;     &lt;=     &gt;=     ~=     ==</span><br/><span class=\"line\"><span class=\"keyword\">and</span></span><br/><span class=\"line\"><span class=\"keyword\">or</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>除了^和..以外所有的二元运算符都是左连接的<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--一个常见的错误</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> a,b = <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br/><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> a&gt;b <span class=\"keyword\">then</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span>(a)</span><br/><span class=\"line\"><span class=\"keyword\">else</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span>(b)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">=====结果=====</span><br/><span class=\"line\">错误</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>这里的错误是因为not a返回的是false，false和b不是一个类型，所以报错<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> a,b = <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br/><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> (a &gt; b) <span class=\"keyword\">then</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span>(a)</span><br/><span class=\"line\"><span class=\"keyword\">else</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span>(b)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">=====结果=====</span><br/><span class=\"line\"><span class=\"number\">1</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<h3 id=\"table构造\"><a href=\"#table构造\" class=\"headerlink\" title=\"table构造\"></a>table构造</h3><p>lua中表既不是值也不是变量，而是对象。lua表没有固定尺寸，可动态地增加元素</p>\n<p>表的创建：创建一张空表：local t = {}<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> t = {<span class=\"string\">&#34;s&#34;</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"string\">&#34;a&#34;</span>}</span><br/><span class=\"line\"><span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(t) <span class=\"keyword\">do</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span>(k,v)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">=====结果=====</span><br/><span class=\"line\"><span class=\"number\">1</span>     s</span><br/><span class=\"line\"><span class=\"number\">2</span>     <span class=\"number\">2</span></span><br/><span class=\"line\"><span class=\"number\">3</span>     <span class=\"number\">3</span></span><br/><span class=\"line\"><span class=\"number\">4</span>     a</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>表的索引，下表是从1开始的<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> t = {<span class=\"string\">&#34;s&#34;</span> , <span class=\"number\">2</span> , <span class=\"number\">3</span> , x = <span class=\"string\">&#34;a&#34;</span>}</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(t.x)</span><br/><span class=\"line\"><span class=\"keyword\">local</span> x = <span class=\"number\">3</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(t[x])</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(t[<span class=\"string\">&#34;x&#34;</span>])</span><br/><span class=\"line\"></span><br/><span class=\"line\">=====结果=====</span><br/><span class=\"line\">a</span><br/><span class=\"line\"><span class=\"number\">3</span></span><br/><span class=\"line\">a</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<h3 id=\"取长度操作符\"><a href=\"#取长度操作符\" class=\"headerlink\" title=\"取长度操作符\"></a>取长度操作符</h3><p>取长度操作符写作一元操作#，字符串的长度是他的字节数</p>\n<p>table t的长度被定义成一个整数下表n，它满足t[n]不是nil而t[n+1]为nil，此外，如果t[1]为nil，n就可能是0<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> t = {<span class=\"string\">&#34;s&#34;</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,x = <span class=\"number\">4</span>,<span class=\"number\">5</span>}</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(#t)</span><br/><span class=\"line\"></span><br/><span class=\"line\">=====结果=====</span><br/><span class=\"line\"><span class=\"number\">4</span></span><br/></pre></td></tr></tbody></table></figure><p></p>","text":"算术运算符下表列出了lua语言中常用算术运算符(设定A的值为10，B的值为20) 操作符 描述 示例 + 加法 A + B 输出 30 - 减法 A - B 输出 -10 * 乘法 A * B 输出 200 / 除法 B / A 输出 2 % 取余 B % A 输出 0 ^ 乘幂...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%9C%AF%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">算术运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B3%E7%B3%BB%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">关系运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%BB%E8%BE%91%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">逻辑运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%9E%E6%8E%A5%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">连接运算符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BC%98%E5%85%88%E7%BA%A7\"><span class=\"toc-text\">优先级</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#table%E6%9E%84%E9%80%A0\"><span class=\"toc-text\">table构造</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%96%E9%95%BF%E5%BA%A6%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">取长度操作符</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"优化wireshark下Lua插件SMGP协议代码","uid":"bfe069540971f2c903e3b83beeb9ddf0","slug":"zl/2016-01-01-70_优化wireshark下Lua插件SMGP协议代码","date":"2024-04-03T03:47:35.944Z","updated":"2024-04-03T03:47:35.945Z","comments":true,"path":"api/articles/zl/2016-01-01-70_优化wireshark下Lua插件SMGP协议代码.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"@(Linux)[学习] [toc] 写在前面由于wireshark对SMGP协议不支持，之前使用wireshark查看SMGP协议字段，一般都是拷贝下来HEX，一个字节一个字节对。眼睛都要花了！昨天检查问题的时候同事和我说wireshark可以支持Lua插件自己编写协议识别代码...","link":"","photos":[],"count_time":{"symbolsCount":"9.1k","symbolsTime":"8 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"lua","uid":"df60e476b394b1dd4755ec96c53302ff","slug":"zl/2016-01-01-708_lua","date":"2024-04-03T03:47:35.939Z","updated":"2024-04-03T03:47:35.940Z","comments":true,"path":"api/articles/zl/2016-01-01-708_lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 之前项目中用到 openresty 作为 Web Api 的开发平台, 用 openresty 很适合开发以 http 接口形式 提供的服务. openresty 可以使用 lua 进行逻辑控制,加上完备的组件driver(redis, mysql, rabbitmq 等), ...","link":"","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}