{"title":"Lua学习笔记(一)","uid":"0dd08ce27dc9a095c050787b2946ec15","slug":"zl/2016-01-01-376_Lua学习笔记(一)","date":"2024-04-03T03:47:35.660Z","updated":"2024-04-03T03:47:35.661Z","comments":true,"path":"api/articles/zl/2016-01-01-376_Lua学习笔记(一).json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<ul>\n<li><a href=\"#基本语法\">基本语法</a><ul>\n<li><a href=\"#交互式编程\">交互式编程</a></li>\n<li><a href=\"#脚本式编程\">脚本式编程</a></li>\n<li><a href=\"#注释\">注释</a><ul>\n<li><a href=\"#单行注释\">单行注释</a></li>\n<li><a href=\"#多行注释\">多行注释</a></li>\n</ul>\n</li>\n<li><a href=\"#标识符\">标识符</a></li>\n<li><a href=\"#关键词\">关键词</a></li>\n<li><a href=\"#全局变量\">全局变量</a></li>\n</ul>\n</li>\n<li><a href=\"#数据类型\">数据类型</a><ul>\n<li><a href=\"#nil\">nil</a></li>\n<li><a href=\"#bool\">bool</a></li>\n<li><a href=\"#number\">number</a></li>\n<li><a href=\"#string\">string</a></li>\n<li><a href=\"#table\">table</a></li>\n<li><a href=\"#function\">function</a></li>\n<li><a href=\"#thread\">thread</a></li>\n<li><a href=\"#userdata\">userdata</a></li>\n</ul>\n</li>\n</ul>\n<h2><span id=\"基本语法\">基本语法</span></h2><h3><span id=\"交互式编程\">交互式编程</span></h3><p>所谓的交互式编程的意思，其实就是<strong>在命令行中输入程序就可以立即查看效果。</strong></p>\n<h3><span id=\"脚本式编程\">脚本式编程</span></h3><p>将Lua代码保持在.lua文件中执行。</p>\n<p>两种编程方式下的简单的helloword程序：</p>\n<p><img src=\"https://thbelief.github.io//2019/04/20/Lua学习笔记-一/helloworld.jpg\" alt=\"\"/></p>\n<h3><span id=\"注释\">注释</span></h3><h4><span id=\"单行注释\">单行注释</span></h4><p>两个减号。</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">--</span><br/></pre></td></tr></tbody></table></figure>\n<h4><span id=\"多行注释\">多行注释</span></h4><p>这个东西有点儿小奇怪，习惯了就没问题了。</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">--[[</span><br/><span class=\"line\"> 多行注释</span><br/><span class=\"line\"> 多行注释</span><br/><span class=\"line\"> --]]</span><br/></pre></td></tr></tbody></table></figure>\n<p>总的：</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">print(&#34;helloword&#34;)</span><br/><span class=\"line\">--print(&#34;helloworld&#34;)</span><br/><span class=\"line\">--[[</span><br/><span class=\"line\">print(&#34;helloworld&#34;)</span><br/><span class=\"line\">--]]</span><br/></pre></td></tr></tbody></table></figure>\n<h3><span id=\"标识符\">标识符</span></h3><p>标示符以<strong>一个字母 A 到 Z 或 a 到 z 或下划线 _ 开头后加上0个或多个字母，下划线，数字（0到9）。</strong></p>\n<p>最好<strong>不要使用下划线加大写字母</strong>的标示符，因为Lua的<strong>保留字</strong>也是这样的。</p>\n<p>Lua <strong>不允许使用特殊字符如 @, $, 和 % 来定义标示符</strong>。 Lua 是一个<strong>区分大小写</strong>的编程语言。</p>\n<p>正确标识符举例：</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">mohd      zara      abc     move_name    a_123</span><br/></pre></td></tr></tbody></table></figure>\n<h3><span id=\"关键词\">关键词</span></h3><p>下面罗列出Lua的一些保留关键词，这些词<strong>不能作为常量或者变量或者用户的自定义标识符。</strong></p>\n<p><strong>注意：下划线+大写字符串被默认为Lua内部的全局变量。</strong></p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>and</td>\n<td>break</td>\n<td>do</td>\n<td>else</td>\n</tr>\n<tr>\n<td>elseif</td>\n<td>end</td>\n<td>false</td>\n<td>for</td>\n</tr>\n<tr>\n<td>function</td>\n<td>if</td>\n<td>in</td>\n<td>local</td>\n</tr>\n<tr>\n<td>nil</td>\n<td>not</td>\n<td>or</td>\n<td>repeat</td>\n</tr>\n<tr>\n<td>return</td>\n<td>then</td>\n<td>true</td>\n<td>until</td>\n</tr>\n<tr>\n<td>while</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3><span id=\"全局变量\">全局变量</span></h3><p>和C++等语言不同的是，在Lua中，所有的变量都是所谓的“全局变量”。</p>\n<p>并不需要声明，用的时候直接访问就可以了，如果访问一个未初始化的变量并不会报错，只是会返回一个nil而已，这里nil的意思其实就是false的意思？同理，删除一个全局变量直接赋值为nil即可。</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">b = nil</span><br/><span class=\"line\">print(b)</span><br/></pre></td></tr></tbody></table></figure>\n<p>结果为：</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">nil</span><br/></pre></td></tr></tbody></table></figure>\n<h2><span id=\"数据类型\">数据类型</span></h2><p><strong>Lua是动态的类型语言，它的变量不需要类型定义，只需要赋值即可。</strong></p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">数据类型</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">nil</td>\n<td style=\"text-align:left\">这个最简单，只有值nil属于该类，表示一个无效值（在条件表达式中相当于false）。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">boolean</td>\n<td style=\"text-align:left\">包含两个值：false和true。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">number</td>\n<td style=\"text-align:left\">表示双精度类型的实浮点数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">string</td>\n<td style=\"text-align:left\">字符串由一对双引号或单引号来表示</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">function</td>\n<td style=\"text-align:left\">由 C 或 Lua 编写的函数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">userdata</td>\n<td style=\"text-align:left\">表示任意存储在变量中的C数据结构</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">thread</td>\n<td style=\"text-align:left\">表示执行的独立线路，用于执行协同程序</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">table</td>\n<td style=\"text-align:left\">Lua 中的表（table）其实是一个”关联数组”（associative arrays），数组的索引可以是数字、字符串或表类型。在 Lua 里，table 的创建是通过”构造表达式”来完成，最简单构造表达式是{}，用来创建一个空表。</td>\n</tr>\n</tbody>\n</table>\n<p>可以使用type函数测试变量的类型：</p>\n<p><img src=\"https://thbelief.github.io//2019/04/20/Lua学习笔记-一/数据类型.jpg\" alt=\"\"/></p>\n<h3><span id=\"nil\">nil</span></h3><p>表示的是“空”，没有任何的有效值，它只能输出一个nil值。</p>\n<p>这里需要特别的注意：使用nil做判断的时候必须用双引号：</p>\n<p>这里第一个为false的原因是：</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">type(type(X))==string</span><br/></pre></td></tr></tbody></table></figure>\n<p><img src=\"https://thbelief.github.io//2019/04/20/Lua学习笔记-一/nil比较.jpg\" alt=\"\"/></p>\n<h3><span id=\"bool\">bool</span></h3><p>true和false两种值。</p>\n<h3><span id=\"number\">number</span></h3><p><strong>Lua中默认的number类型只有一种——double（双精度）。</strong></p>\n<h3><span id=\"string\">string</span></h3><p>和JS中差不多，双引号或者单引号都可以表示字符串。<strong>[[]]</strong> 可以表示”一块“字符串。</p>\n<p>注意：<strong>Lua中字符串的拼接有点儿特殊</strong>，和其它的高级语言不一样：</p>\n<p><strong>只能使用”..”,不能使用”+”.</strong></p>\n<p><img src=\"https://thbelief.github.io//2019/04/20/Lua学习笔记-一/字符串拼接1.jpg\" alt=\"\"/></p>\n<p><img src=\"https://thbelief.github.io//2019/04/20/Lua学习笔记-一/字符串拼接2.jpg\" alt=\"\"/></p>\n<p><strong>字符串长度计算——“#”</strong></p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">print(#&#34;test&#34;)</span><br/></pre></td></tr></tbody></table></figure>\n<p>输出：</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">4</span><br/></pre></td></tr></tbody></table></figure>\n<h3><span id=\"table\">table</span></h3><p>table即表，在Lua中table是通过“<strong>构造表达式</strong>”来实现的，最简单的就是“{}”，这个就是一个空表，也可以初始化表，即添加一些数据就可以了。</p>\n<p>在Lua中，table其实就是一个<strong>关联数组</strong>。<strong>数组的索引可以是数字或者字符串。</strong></p>\n<p>和c++之类的不一样，Lua默认初始索引一般<strong>以1开始</strong>。</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">-- 创建一个空的 table</span><br/><span class=\"line\">local tbl1 = {}</span><br/><span class=\"line\"> </span><br/><span class=\"line\">-- 直接初始表</span><br/><span class=\"line\">local tbl2 = {&#34;apple&#34;, &#34;pear&#34;, &#34;orange&#34;, &#34;grape&#34;}</span><br/></pre></td></tr></tbody></table></figure>\n<p>注意：</p>\n<p><strong>table没有长度，一般是需要的时候直接加进去即可，没初始化的table的值都是nil。</strong></p>\n<h3><span id=\"function\">function</span></h3><p>Lua中，函数可以存在变量里面。这个特性和JavaScript里面的特性有点儿像。</p>\n<h3><span id=\"thread\">thread</span></h3><p>在 Lua 里，<strong>最主要的线程是协同程序（coroutine）</strong>。它跟线程（thread）差不多，拥有自己<strong>独立的栈、局部变量和指令指针</strong>，可以跟其他协同程序<strong>共享全局变量和其他大部分东西。</strong></p>\n<p>线程跟协程的区别：线程可以<strong>同时多个运行</strong>，而协程<strong>任意时刻只能运行一个</strong>，并且处于运行状态的协程只有被挂起（suspend）时才会暂停。</p>\n<h3><span id=\"userdata\">userdata</span></h3><p><strong>所谓的自定义类型。</strong></p>\n<p>主要就是用于表示一种<strong>由应用程序或 C/C++ 语言库所创建的类型</strong>，可以将<strong>任意 C/C++ 的任意数据类型的数据（通常是 struct 和 指针）存储到 Lua 变量中</strong>调用。</p>","text":" 基本语法 交互式编程 脚本式编程 注释 单行注释 多行注释 标识符 关键词 全局变量 数据类型 nil bool number string table function thread userdata 基本语法交互式编程所谓的交互式编程的意思，其实就是在命令行中输入程序就可以...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">基本语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">交互式编程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">脚本式编程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">注释</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">单行注释</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">多行注释</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">标识符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">关键词</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">全局变量</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">数据类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">nil</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">bool</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">number</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">string</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">table</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">function</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">thread</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">userdata</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua Table增删排序","uid":"e67c6353d7f9bb88283c7bbe06f6dbc7","slug":"zl/2016-01-01-374_Lua Table增删排序","date":"2024-04-03T03:47:35.660Z","updated":"2024-04-03T03:47:35.660Z","comments":true,"path":"api/articles/zl/2016-01-01-374_Lua Table增删排序.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"谨慎使用 table[index]=nil 删除某索引下的值，原table其他隐藏索引编号不会发生改变！且这种方法会导致索引产生空缺不连续，也会影响ipairs方法的遍历，pairs方法不受影响 t = &#123; 1, 2, 3 &#125; –插入函数(table,位置（可...","link":"","photos":[],"count_time":{"symbolsCount":512,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"cocos2dx lua 常见命令行(编译调试运行打包)","uid":"9bf8c77e6e36e7e363fbe8f902b28df8","slug":"zl/2016-01-01-375_cocos2dx lua 常见命令行(编译调试运行打包)","date":"2024-04-03T03:47:35.660Z","updated":"2024-04-03T03:47:35.660Z","comments":true,"path":"api/articles/zl/2016-01-01-375_cocos2dx lua 常见命令行(编译调试运行打包).json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" cocos 命令 Cocos2d-x 带有一个命令行工具：cocos 这是一个跨平台的工具，你可以用它创建项目、运行项目、发布项目。 命令行工具适用于所有 Cocos2d-x 支持的平台，包括：iOS、Android、Mac、Linux、Windows、Web。不用 IDE，只...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}