{"title":"lua学习笔记（五）","uid":"df9c8749159d9c30c7d9a06b97c8b235","slug":"zl/2016-01-01-348_lua学习笔记（五）","date":"2024-04-03T03:47:35.625Z","updated":"2024-04-03T03:47:35.625Z","comments":true,"path":"api/articles/zl/2016-01-01-348_lua学习笔记（五）.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h2 id=\"Lua模块与包\"><a href=\"#Lua模块与包\" class=\"headerlink\" title=\"Lua模块与包\"></a>Lua模块与包</h2><p>模块类似于一个封装库</p>\n<p>创建方法：</p>\n<ul>\n<li>创建一个table</li>\n<li>把需要导出的常量、函数放入其中</li>\n<li>返回该table</li>\n</ul>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 定义一个名为mymodule的模块</span></span><br/><span class=\"line\">mymodule={}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 定义一个常量</span></span><br/><span class=\"line\">mymodule.constant=<span class=\"string\">&#34;这是一个常量&#34;</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 定义一个函数</span></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span></span></span><br/><span class=\"line\">    <span class=\"built_in\">io</span>.<span class=\"built_in\">write</span>(<span class=\"string\">&#34;这是一个公有函数！n&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">func2</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;这是一个私有函数！&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">module.func3</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">    func2()</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">return</span> mymodule</span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"require函数\"><a href=\"#require函数\" class=\"headerlink\" title=\"require函数\"></a>require函数</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- require函数用于加载模块，使用方法：</span></span><br/><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&#34;mymodule&#34;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">&#34;mymodule&#34;</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 执行require后返回由模块常量或函数组成的table，并且还会定义一个包含该table的全局变量</span></span><br/><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&#34;mymodule&#34;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(module.constant)</span><br/><span class=\"line\">mymodule.func3()</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 也可以创建别名</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> m=<span class=\"built_in\">require</span>(<span class=\"string\">&#34;mymodule&#34;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(m.constant)</span><br/><span class=\"line\">m.func3()</span><br/></pre></td></tr></tbody></table></figure>\n<p>加载机制：</p>\n<p><a href=\"https://www.runoob.com/lua/lua-modules-packages.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.runoob.com/lua/lua-modules-packages.html</a></p>\n<h2 id=\"Metatable（元表）\"><a href=\"#Metatable（元表）\" class=\"headerlink\" title=\"Metatable（元表）\"></a>Metatable（元表）</h2><p>元表允许改变table的行为，每个行为关联了对应的元方法</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--[[</span></span><br/><span class=\"line\"><span class=\"comment\">作用：对指定的table设置metatable</span></span><br/><span class=\"line\"><span class=\"comment\">参数列表：</span></span><br/><span class=\"line\"><span class=\"comment\">\ttable：操作对象</span></span><br/><span class=\"line\"><span class=\"comment\">\tmetatable：元表</span></span><br/><span class=\"line\"><span class=\"comment\">返回值：绑定好对象的table</span></span><br/><span class=\"line\"><span class=\"comment\">]]</span></span><br/><span class=\"line\"><span class=\"built_in\">setmetatable</span>(<span class=\"built_in\">table</span>,metatable)</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--[[</span></span><br/><span class=\"line\"><span class=\"comment\">作用：返回对象的元表</span></span><br/><span class=\"line\"><span class=\"comment\">参数列表：</span></span><br/><span class=\"line\"><span class=\"comment\">\ttable：操作对象</span></span><br/><span class=\"line\"><span class=\"comment\">返回值：元表</span></span><br/><span class=\"line\"><span class=\"comment\">]]</span></span><br/><span class=\"line\"><span class=\"built_in\">getmetatable</span>(<span class=\"built_in\">table</span>)</span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"index元方法\"><a href=\"#index元方法\" class=\"headerlink\" title=\"__index元方法\"></a>__index元方法</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 当使用table中的某个键key时，会查找table中的该键key，如果没有这个键key则会寻找该table的metatable中的_index键，如果__index包含一个table，Lua会在表格中查找键值为key的元素</span></span><br/><span class=\"line\">other={foo=<span class=\"number\">3</span>}</span><br/><span class=\"line\">t=<span class=\"built_in\">setmetatable</span>({},{_index=other})\t<span class=\"comment\">-- t中没有foo键，调用foo是在metatable中查找__index对应的table，再在该table上查找foo键</span></span><br/><span class=\"line\">t.foo\t\t<span class=\"comment\">-- 输出：3</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- __index 元方法查看表中元素是否存在，如果不存在，返回结果为 nil；如果存在则由 __index 返回结果。如果__index包含一个函数，Lua就会调用该函数，table和键作为参数传递给函数。</span></span><br/><span class=\"line\">mytable=<span class=\"built_in\">setmetatable</span>({key1=<span class=\"string\">&#34;value1&#34;</span>},{</span><br/><span class=\"line\">        <span class=\"built_in\">__index</span>=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(mytable,key)</span></span></span><br/><span class=\"line\">            <span class=\"keyword\">if</span> key == <span class=\"string\">&#34;key2&#34;</span> <span class=\"keyword\">then</span></span><br/><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">&#34;metatablevalue&#34;</span></span><br/><span class=\"line\">            <span class=\"keyword\">else</span></span><br/><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br/><span class=\"line\">            <span class=\"keyword\">end</span></span><br/><span class=\"line\">        <span class=\"keyword\">end</span></span><br/><span class=\"line\">    })</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(mytable.key1,mytable.key2)</span><br/><span class=\"line\"><span class=\"comment\">--[[</span></span><br/><span class=\"line\"><span class=\"comment\">输出结果：</span></span><br/><span class=\"line\"><span class=\"comment\">value1\tmetatablevalue</span></span><br/><span class=\"line\"><span class=\"comment\">]]</span></span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"Lua查找table元素规则：\"><a href=\"#Lua查找table元素规则：\" class=\"headerlink\" title=\"Lua查找table元素规则：\"></a>Lua查找table元素规则：</h4><ol>\n<li><p>在表中查找，如果找到，返回该元素，找不到则继续</p>\n</li>\n<li><p>判断该表是否有元表，如果没有元表，返回 nil，有元表则继续</p>\n</li>\n<li><p>判断元表有没有__index方法，如果__index方法为nil，返回nil；如果__index方法是一个表，则重复1、2、3；如果__index方法是一个函数，则返回该函数的返回值</p>\n</li>\n</ol>\n<h3 id=\"newindex元方法\"><a href=\"#newindex元方法\" class=\"headerlink\" title=\"__newindex元方法\"></a>__newindex元方法</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/><span class=\"line\">29</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- __newindex方法用于对表更新，__index则用来对表访问</span></span><br/><span class=\"line\"><span class=\"comment\">-- 给表的一个缺少的索引赋值，解释器就会查找__newindex 元方法：如果存在则调用这个函数而不进行赋值操作</span></span><br/><span class=\"line\">mymetatable={}</span><br/><span class=\"line\">mytable=<span class=\"built_in\">setmetatable</span>({key1=<span class=\"string\">&#34;value1&#34;</span>},{<span class=\"built_in\">__newindex</span>=mymetatable})</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(mytable.key1)</span><br/><span class=\"line\">mytable.newkey=<span class=\"string\">&#34;新值2&#34;</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(mytable.newkey,mymetatable.newkey)</span><br/><span class=\"line\">mytable.key1 = <span class=\"string\">&#34;新值1&#34;</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(mytable.key1,mymetatable.key1)</span><br/><span class=\"line\"><span class=\"comment\">--[[</span></span><br/><span class=\"line\"><span class=\"comment\">输出结果：</span></span><br/><span class=\"line\"><span class=\"comment\">value1</span></span><br/><span class=\"line\"><span class=\"comment\">nil\t新值2</span></span><br/><span class=\"line\"><span class=\"comment\">新值1\tnil</span></span><br/><span class=\"line\"><span class=\"comment\">]]</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 如果__newindex元方法是一个函数，则会把该table，该key，该value作为参数传进函数</span></span><br/><span class=\"line\">mytable = <span class=\"built_in\">setmetatable</span>({key1 = <span class=\"string\">&#34;value1&#34;</span>}, {</span><br/><span class=\"line\">\t<span class=\"built_in\">__newindex</span> = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(mytable, key, value)</span></span></span><br/><span class=\"line\">\t\t<span class=\"built_in\">rawset</span>(mytable, key, <span class=\"string\">&#34;&#34;&#34;</span>..value..<span class=\"string\">&#34;&#34;&#34;</span>)</span><br/><span class=\"line\">\t<span class=\"keyword\">end</span></span><br/><span class=\"line\">})</span><br/><span class=\"line\">mytable.key1 = <span class=\"string\">&#34;new value&#34;</span></span><br/><span class=\"line\">mytable.key2 = <span class=\"number\">4</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(mytable.key1,mytable.key2)</span><br/><span class=\"line\"><span class=\"comment\">--[[</span></span><br/><span class=\"line\"><span class=\"comment\">输出结果：</span></span><br/><span class=\"line\"><span class=\"comment\">new value\t&#34;4&#34;</span></span><br/><span class=\"line\"><span class=\"comment\">]]</span></span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"为表添加操作符（类似于运算符重载）\"><a href=\"#为表添加操作符（类似于运算符重载）\" class=\"headerlink\" title=\"为表添加操作符（类似于运算符重载）\"></a>为表添加操作符（类似于运算符重载）</h3><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">元方法</th>\n<th style=\"text-align:center\">对应运算符</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">__add</td>\n<td style=\"text-align:center\">+</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">__sub</td>\n<td style=\"text-align:center\">-（减号）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">__mul</td>\n<td style=\"text-align:center\">*</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">__div</td>\n<td style=\"text-align:center\">/</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">__mod</td>\n<td style=\"text-align:center\">%</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">_unm</td>\n<td style=\"text-align:center\">-（负号）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">__concat</td>\n<td style=\"text-align:center\">..</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">__eq</td>\n<td style=\"text-align:center\">==</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">__lt</td>\n<td style=\"text-align:center\">&lt;</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">__le</td>\n<td style=\"text-align:center\">&lt;=</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"call元方法\"><a href=\"#call元方法\" class=\"headerlink\" title=\"__call元方法\"></a>__call元方法</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- __call元方法在该表被当成函数来调用时会调用</span></span><br/><span class=\"line\">mytable=<span class=\"built_in\">setmetatable</span>({<span class=\"number\">10</span>},{</span><br/><span class=\"line\">        <span class=\"built_in\">__call</span>=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(mytable,newtable)</span></span></span><br/><span class=\"line\">            <span class=\"keyword\">local</span> sum=<span class=\"number\">0</span></span><br/><span class=\"line\">            <span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,#mytable <span class=\"keyword\">do</span></span><br/><span class=\"line\">                sum=sum+mytable[i]</span><br/><span class=\"line\">           \t<span class=\"keyword\">end</span></span><br/><span class=\"line\">            <span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,#newtable <span class=\"keyword\">do</span></span><br/><span class=\"line\">                sum=sum+newtable[i]</span><br/><span class=\"line\">            <span class=\"keyword\">end</span></span><br/><span class=\"line\">            <span class=\"keyword\">return</span> sum</span><br/><span class=\"line\">        <span class=\"keyword\">end</span></span><br/><span class=\"line\">    })</span><br/><span class=\"line\">newtable={<span class=\"number\">10</span>,<span class=\"number\">20</span>,<span class=\"number\">30</span>}</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(mytable(newtable))\t<span class=\"comment\">-- 输出结果：70</span></span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"tostring元方法\"><a href=\"#tostring元方法\" class=\"headerlink\" title=\"__tostring元方法\"></a>__tostring元方法</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- __tostring 元方法用于修改表的输出行为</span></span><br/><span class=\"line\">mytable = <span class=\"built_in\">setmetatable</span>({ <span class=\"number\">10</span>, <span class=\"number\">20</span>, <span class=\"number\">30</span> }, {</span><br/><span class=\"line\">\t<span class=\"built_in\">__tostring</span> = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(mytable)</span></span></span><br/><span class=\"line\">\t\t<span class=\"keyword\">local</span> sum = <span class=\"number\">0</span></span><br/><span class=\"line\">\t\t<span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(mytable) <span class=\"keyword\">do</span></span><br/><span class=\"line\">         \tsum = sum + v</span><br/><span class=\"line\">         <span class=\"keyword\">end</span></span><br/><span class=\"line\">    \t<span class=\"keyword\">return</span> <span class=\"string\">&#34;表所有元素的和为 &#34;</span> .. sum</span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\">})</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(mytable)\t<span class=\"comment\">-- 输出结果：表所有元素的和为 60</span></span><br/></pre></td></tr></tbody></table></figure>","text":"Lua模块与包模块类似于一个封装库 创建方法： 创建一个table 把需要导出的常量、函数放入其中 返回该table 123456789101112131415161718192021-- 定义一个名为mymodule的模块mymodule={}-- 定义一个常量mymodule...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Lua%E6%A8%A1%E5%9D%97%E4%B8%8E%E5%8C%85\"><span class=\"toc-text\">Lua模块与包</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#require%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">require函数</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Metatable%EF%BC%88%E5%85%83%E8%A1%A8%EF%BC%89\"><span class=\"toc-text\">Metatable（元表）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#index%E5%85%83%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">__index元方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Lua%E6%9F%A5%E6%89%BEtable%E5%85%83%E7%B4%A0%E8%A7%84%E5%88%99%EF%BC%9A\"><span class=\"toc-text\">Lua查找table元素规则：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#newindex%E5%85%83%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">__newindex元方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E8%A1%A8%E6%B7%BB%E5%8A%A0%E6%93%8D%E4%BD%9C%E7%AC%A6%EF%BC%88%E7%B1%BB%E4%BC%BC%E4%BA%8E%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD%EF%BC%89\"><span class=\"toc-text\">为表添加操作符（类似于运算符重载）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#call%E5%85%83%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">__call元方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#tostring%E5%85%83%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">__tostring元方法</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Tengine+Lua+GraphicsMagick动态裁剪图片","uid":"0275abca588acf7a772475f54b09449d","slug":"zl/2016-01-01-34_Tengine+Lua+GraphicsMagick动态裁剪图片","date":"2024-04-03T03:47:35.629Z","updated":"2024-04-03T03:47:35.630Z","comments":true,"path":"api/articles/zl/2016-01-01-34_Tengine+Lua+GraphicsMagick动态裁剪图片.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Tengine：https://github.com/alibaba/tengine Lua：http://www.lua.org/ftp/ ，这里使用 lua-5.3.1.tar.gz LuaJIT：http://luajit.org/download.html ，这里使用 ...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"lua易错点","uid":"3771466940e9475d48b7119959432bd4","slug":"zl/2016-01-01-349_lua易错点","date":"2024-04-03T03:47:35.625Z","updated":"2024-04-03T03:47:35.629Z","comments":true,"path":"api/articles/zl/2016-01-01-349_lua易错点.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"table.remove 删除时导致的错？正确的删除方案：先记录要删除的表记录的k(位置)，然后反向遍历记录逐个删除。 删除1~10中的4,5,6,7,8. Table.remove 删除表时后面的元素会自动向前与移动导致隔一个删除一个. table长度table当字数组来用时获...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}