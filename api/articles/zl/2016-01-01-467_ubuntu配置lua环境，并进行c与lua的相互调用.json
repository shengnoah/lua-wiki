{"title":"ubuntu配置lua环境，并进行c与lua的相互调用","uid":"cfb5d87c6823510f0471a0e3956b7f6c","slug":"zl/2016-01-01-467_ubuntu配置lua环境，并进行c与lua的相互调用","date":"2024-04-03T03:47:35.748Z","updated":"2024-04-03T03:47:35.748Z","comments":true,"path":"api/articles/zl/2016-01-01-467_ubuntu配置lua环境，并进行c与lua的相互调用.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>先查看一下apt可获取的lua版本<br/><img src=\"http://arrayindex.me//2018/08/29/ubuntu配置lua环境，并进行c与lua的相互调用/1.png\" alt=\"\"/><br/><br/>我们选择lua5.1版本进行安装<br/></p><figure class=\"highlight sh\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install lua5.1</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>安装完之后测试一下是否安装成功，如果可以正常使用，则lua环境已经安装完毕。<br/><img src=\"http://arrayindex.me//2018/08/29/ubuntu配置lua环境，并进行c与lua的相互调用/2.png\" alt=\"\"/></p>\n<h1 id=\"2-安装lua相关的c库\"><a href=\"#2-安装lua相关的c库\" class=\"headerlink\" title=\"2.安装lua相关的c库\"></a>2.安装lua相关的c库</h1><p>lua环境安装完毕，但是此时在c中还不能对lua进行调用，或者生成供lua调用的c库，因为还没有安装lua的c库，通过下面这条命令安装相应的库文件和头文件<br/></p><figure class=\"highlight sh\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install lua5.1-0-dev</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>安装完毕后，我们写代码进行测试</p>\n<h2 id=\"2-1生成c的动态库供lua调用\"><a href=\"#2-1生成c的动态库供lua调用\" class=\"headerlink\" title=\"2.1生成c的动态库供lua调用\"></a>2.1生成c的动态库供lua调用</h2><p>新建一个c文件<br/></p><figure class=\"highlight sh\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">vim addlib.c</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>写一个addc函数供lua调用<br/></p><figure class=\"highlight c\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;lua5.1/lualib.h&gt;</span></span></span><br/><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;lua5.1/lauxlib.h&gt;</span></span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"params\">(lua_State *L)</span></span></span><br/><span class=\"line\"><span class=\"function\"></span>{</span><br/><span class=\"line\">    <span class=\"keyword\">int</span> a,b,c;</span><br/><span class=\"line\">    a = lua_tonumber(L,<span class=\"number\">1</span>);</span><br/><span class=\"line\">    b = lua_tonumber(L,<span class=\"number\">2</span>);</span><br/><span class=\"line\">    c = a + b;</span><br/><span class=\"line\">    lua_pushnumber(L,c);</span><br/><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br/><span class=\"line\">}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">luaL_Reg</span> <span class=\"title\">lib</span>[] =</span></span><br/><span class=\"line\"><span class=\"class\">{</span></span><br/><span class=\"line\">    </span><br/><span class=\"line\">    {<span class=\"string\">&#34;addc&#34;</span>,addc},</span><br/><span class=\"line\">    {<span class=\"literal\">NULL</span>,<span class=\"literal\">NULL</span>}</span><br/><span class=\"line\">};</span><br/><span class=\"line\"><span class=\"comment\">//luaopen_xxx  这个xxx一定要和导出的库名一样，不然lua无法识别这个函数，无法进行函数的注册 </span></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">luaopen_addlib</span><span class=\"params\">(lua_State *L)</span></span></span><br/><span class=\"line\"><span class=\"function\"></span>{</span><br/><span class=\"line\">    <span class=\"comment\">//这里的&#34;testadd&#34;是在lua中调用库函数的全局变量名，不需要和库名addlib保持一致,但一般会用一样的名字</span></span><br/><span class=\"line\">    luaL_register(L,<span class=\"string\">&#34;testadd&#34;</span>,lib);</span><br/><span class=\"line\">    <span class=\"comment\">//luaL_register(L,&#34;addlib&#34;,lib);</span></span><br/><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br/><span class=\"line\">}</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>保存后对代码进行编译，生成lua用的so或dll库<br/></p><figure class=\"highlight sh\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">gcc addlib.c -fPIC -shared -o addlib.so</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p><img src=\"http://arrayindex.me//2018/08/29/ubuntu配置lua环境，并进行c与lua的相互调用/4.png\" alt=\"\"/><br/>接下来进行lua对c调用的测试<br/><img src=\"http://arrayindex.me//2018/08/29/ubuntu配置lua环境，并进行c与lua的相互调用/5.png\" alt=\"\"/><br/>调用成功</p>\n<h2 id=\"2-2在c中调用lua\"><a href=\"#2-2在c中调用lua\" class=\"headerlink\" title=\"2.2在c中调用lua\"></a>2.2在c中调用lua</h2><p>创建printHello.lua文件<br/></p><figure class=\"highlight sh\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">vim printHello.lua</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>写一个PrintHelloLua函数<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">PrintHelloLua</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;hello !!!&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>创建luaFunctionTest.c文件<br/></p><figure class=\"highlight sh\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">vim luaFunctionTest.c</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<figure class=\"highlight c\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/><span class=\"line\">29</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;lua5.1/lualib.h&gt;</span></span></span><br/><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;lua5.1/lauxlib.h&gt;</span></span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br/><span class=\"line\"><span class=\"function\"></span>{</span><br/><span class=\"line\">    <span class=\"comment\">//创建lua运行环境</span></span><br/><span class=\"line\">    lua_State *luaEnv = lua_open();</span><br/><span class=\"line\">    luaopen_base(luaEnv);</span><br/><span class=\"line\">    luaL_openlibs(luaEnv);</span><br/><span class=\"line\">    <span class=\"keyword\">if</span>(!luaEnv)</span><br/><span class=\"line\">    {</span><br/><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br/><span class=\"line\">    }</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"comment\">//载入lua文件</span></span><br/><span class=\"line\">    <span class=\"keyword\">int</span> loadInfo = luaL_loadfile(luaEnv,<span class=\"string\">&#34;printHello.lua&#34;</span>);</span><br/><span class=\"line\">    <span class=\"keyword\">if</span>(loadInfo)</span><br/><span class=\"line\">    {</span><br/><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br/><span class=\"line\">    }</span><br/><span class=\"line\">    <span class=\"comment\">//执行lua文件</span></span><br/><span class=\"line\">    lua_pcall(luaEnv,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"comment\">//调用PrintHelloLua函数</span></span><br/><span class=\"line\">    lua_getglobal(luaEnv,<span class=\"string\">&#34;PrintHelloLua&#34;</span>);</span><br/><span class=\"line\">    lua_pcall(luaEnv,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br/><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br/><span class=\"line\">}</span><br/></pre></td></tr></tbody></table></figure>\n<p>生成可执行文件,需要通过 -llua5.1指明使用的库文件<br/></p><figure class=\"highlight sh\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">gcc -o luaFunctionTest luaFunctionTest.c -llua5.1</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>运行可执行文件,成功输出 hello !!!<br/></p><figure class=\"highlight sh\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">./luaFunctionTest</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p><img src=\"http://arrayindex.me//2018/08/29/ubuntu配置lua环境，并进行c与lua的相互调用/6.png\" alt=\"\"/></p>","text":"先查看一下apt可获取的lua版本我们选择lua5.1版本进行安装1sudo apt install lua5.1 安装完之后测试一下是否安装成功，如果可以正常使用，则lua环境已经安装完毕。 2.安装lua相关的c库lua环境安装完毕，但是此时在c中还不能对lua进行调用，或者...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E5%AE%89%E8%A3%85lua%E7%9B%B8%E5%85%B3%E7%9A%84c%E5%BA%93\"><span class=\"toc-text\">2.安装lua相关的c库</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1%E7%94%9F%E6%88%90c%E7%9A%84%E5%8A%A8%E6%80%81%E5%BA%93%E4%BE%9Blua%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">2.1生成c的动态库供lua调用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2%E5%9C%A8c%E4%B8%AD%E8%B0%83%E7%94%A8lua\"><span class=\"toc-text\">2.2在c中调用lua</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua 排序算法","uid":"18c65ae79c1521b9ec150d64b8237a42","slug":"zl/2016-01-01-466_Lua 排序算法 ","date":"2024-04-03T03:47:35.748Z","updated":"2024-04-03T03:47:35.748Z","comments":true,"path":"api/articles/zl/2016-01-01-466_Lua 排序算法 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"设有一组关键字｛K1， K2，…， Kn｝；排序开始就认为 K1 是一个有序序列；让 K2 插入上述表长为 1 的有序序列，使之成为一个表长为 2 的有序序列；然后让 K3 插入上述表长为 2 的有序序列，使之成为一个表长为 3 的有序序列；依次类推，最后让 Kn 插入上述表长为...","link":"","photos":[],"count_time":{"symbolsCount":878,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua笔记效率性能","uid":"efcdfddb4fbc0b5d46faecb17d08a2b6","slug":"zl/2016-01-01-465_Lua笔记效率性能","date":"2024-04-03T03:47:35.747Z","updated":"2024-04-03T03:47:35.748Z","comments":true,"path":"api/articles/zl/2016-01-01-465_Lua笔记效率性能.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"本文使用对比测评的方式比较了几种Lua中代码和方式，并做了简要的总结和分析。结合其中结论，可指导写出质量更高、性能更优的脚本。本文基于Lua5.1，大部分内容也同样适用于Lua5.2和5.3。本文中引用到的Lua源代码都取自Lua 5.1.5版本。 评测方法主要有运行时间和产生G...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}