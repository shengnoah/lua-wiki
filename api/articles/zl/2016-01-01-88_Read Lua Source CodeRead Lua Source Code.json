{"title":"Read Lua Source CodeRead Lua Source Code","uid":"6c777e7f9cb325db7b41123b71472666","slug":"zl/2016-01-01-88_Read Lua Source CodeRead Lua Source Code","date":"2024-04-03T03:47:36.162Z","updated":"2024-04-03T03:47:36.163Z","comments":true,"path":"api/articles/zl/2016-01-01-88_Read Lua Source CodeRead Lua Source Code.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p><a href=\"https://www.lua.org/images/lua.gif\"><img class=\"wp-image-1581 size-full\" src=\"https://oxnz.github.io//assets/lua.gif\" alt=\"Lua logo\" width=\"128\" height=\"128\"/></a> Lua logo</p>\n<h2 id=\"介绍\">介绍</h2>\n<p>Lua 应用比较广泛，主要是作为插件解释器。例如mysql proxy，VLC 等。Lua 源代码比较规范，代码也不长，2w 多行，分布也是比较均匀的，就想看一看，顺便在这里做个笔记。</p>\n<h2 id=\"lua-523-源码树\">lua 5.2.3 源码树</h2>\n<figure class=\"highlight\"><pre><code class=\"language-shell\" data-lang=\"shell\"><span class=\"o\">[</span>will@iF8sg:~DOWN]% tree lua-5.2.3\nlua-5.2.3\n├── Makefile\n├── README\n├── doc\n│   ├── contents.html\n│   ├── logo.gif\n│   ├── lua.1\n│   ├── lua.css\n│   ├── luac.1\n│   ├── manual.css\n│   ├── manual.html\n│   ├── osi-certified-72x60.png\n│   └── readme.html\n└── src\n    ├── Makefile\n    ├── lapi.c\n    ├── lapi.h\n    ├── lauxlib.c\n    ├── lauxlib.h\n    ├── lbaselib.c\n    ├── lbitlib.c\n    ├── lcode.c\n    ├── lcode.h\n    ├── lcorolib.c\n    ├── lctype.c\n    ├── lctype.h\n    ├── ldblib.c\n    ├── ldebug.c\n    ├── ldebug.h\n    ├── ldo.c\n    ├── ldo.h\n    ├── ldump.c\n    ├── lfunc.c\n    ├── lfunc.h\n    ├── lgc.c\n    ├── lgc.h\n    ├── linit.c\n    ├── liolib.c\n    ├── llex.c\n    ├── llex.h\n    ├── llimits.h\n    ├── lmathlib.c\n    ├── lmem.c\n    ├── lmem.h\n    ├── loadlib.c\n    ├── lobject.c\n    ├── lobject.h\n    ├── lopcodes.c\n    ├── lopcodes.h\n    ├── loslib.c\n    ├── lparser.c\n    ├── lparser.h\n    ├── lstate.c\n    ├── lstate.h\n    ├── lstring.c\n    ├── lstring.h\n    ├── lstrlib.c\n    ├── ltable.c\n    ├── ltable.h\n    ├── ltablib.c\n    ├── ltm.c\n    ├── ltm.h\n    ├── lua.c\n    ├── lua.h\n    ├── lua.hpp\n    ├── luac.c\n    ├── luaconf.h\n    ├── lualib.h\n    ├── lundump.c\n    ├── lundump.h\n    ├── lvm.c\n    ├── lvm.h\n    ├── lzio.c\n    └── lzio.h\n<p>2 directories, 71 files</code></pre></figure></p>\n<h2>lua 5.2.3 代码量</h2>\n<pre class=\"lang:default decode:true\">[oxnz@iF8sg:tmp]% wc -l /Users/oxnz/Downloads/lua-5.2.3/src/*\n     187 /Users/oxnz/Downloads/lua-5.2.3/src/Makefile\n    1284 /Users/oxnz/Downloads/lua-5.2.3/src/lapi.c\n      24 /Users/oxnz/Downloads/lua-5.2.3/src/lapi.h\n     959 /Users/oxnz/Downloads/lua-5.2.3/src/lauxlib.c\n     212 /Users/oxnz/Downloads/lua-5.2.3/src/lauxlib.h\n     458 /Users/oxnz/Downloads/lua-5.2.3/src/lbaselib.c\n     212 /Users/oxnz/Downloads/lua-5.2.3/src/lbitlib.c\n     881 /Users/oxnz/Downloads/lua-5.2.3/src/lcode.c\n      83 /Users/oxnz/Downloads/lua-5.2.3/src/lcode.h\n     155 /Users/oxnz/Downloads/lua-5.2.3/src/lcorolib.c\n      52 /Users/oxnz/Downloads/lua-5.2.3/src/lctype.c\n      95 /Users/oxnz/Downloads/lua-5.2.3/src/lctype.h\n     398 /Users/oxnz/Downloads/lua-5.2.3/src/ldblib.c\n     593 /Users/oxnz/Downloads/lua-5.2.3/src/ldebug.c\n      34 /Users/oxnz/Downloads/lua-5.2.3/src/ldebug.h\n     681 /Users/oxnz/Downloads/lua-5.2.3/src/ldo.c\n      46 /Users/oxnz/Downloads/lua-5.2.3/src/ldo.h\n     173 /Users/oxnz/Downloads/lua-5.2.3/src/ldump.c\n     161 /Users/oxnz/Downloads/lua-5.2.3/src/lfunc.c\n      33 /Users/oxnz/Downloads/lua-5.2.3/src/lfunc.h\n    1220 /Users/oxnz/Downloads/lua-5.2.3/src/lgc.c\n     157 /Users/oxnz/Downloads/lua-5.2.3/src/lgc.h\n      67 /Users/oxnz/Downloads/lua-5.2.3/src/linit.c\n     666 /Users/oxnz/Downloads/lua-5.2.3/src/liolib.c\n     530 /Users/oxnz/Downloads/lua-5.2.3/src/llex.c\n      78 /Users/oxnz/Downloads/lua-5.2.3/src/llex.h\n     309 /Users/oxnz/Downloads/lua-5.2.3/src/llimits.h\n     279 /Users/oxnz/Downloads/lua-5.2.3/src/lmathlib.c\n      99 /Users/oxnz/Downloads/lua-5.2.3/src/lmem.c\n      57 /Users/oxnz/Downloads/lua-5.2.3/src/lmem.h\n     725 /Users/oxnz/Downloads/lua-5.2.3/src/loadlib.c\n     287 /Users/oxnz/Downloads/lua-5.2.3/src/lobject.c\n     607 /Users/oxnz/Downloads/lua-5.2.3/src/lobject.h\n     107 /Users/oxnz/Downloads/lua-5.2.3/src/lopcodes.c\n     288 /Users/oxnz/Downloads/lua-5.2.3/src/lopcodes.h\n     323 /Users/oxnz/Downloads/lua-5.2.3/src/loslib.c\n    1638 /Users/oxnz/Downloads/lua-5.2.3/src/lparser.c\n     119 /Users/oxnz/Downloads/lua-5.2.3/src/lparser.h\n     323 /Users/oxnz/Downloads/lua-5.2.3/src/lstate.c\n     228 /Users/oxnz/Downloads/lua-5.2.3/src/lstate.h\n     185 /Users/oxnz/Downloads/lua-5.2.3/src/lstring.c\n      46 /Users/oxnz/Downloads/lua-5.2.3/src/lstring.h\n    1019 /Users/oxnz/Downloads/lua-5.2.3/src/lstrlib.c\n     588 /Users/oxnz/Downloads/lua-5.2.3/src/ltable.c\n      45 /Users/oxnz/Downloads/lua-5.2.3/src/ltable.h\n     283 /Users/oxnz/Downloads/lua-5.2.3/src/ltablib.c\n      77 /Users/oxnz/Downloads/lua-5.2.3/src/ltm.c\n      57 /Users/oxnz/Downloads/lua-5.2.3/src/ltm.h\n     497 /Users/oxnz/Downloads/lua-5.2.3/src/lua.c\n     444 /Users/oxnz/Downloads/lua-5.2.3/src/lua.h\n       9 /Users/oxnz/Downloads/lua-5.2.3/src/lua.hpp\n     432 /Users/oxnz/Downloads/lua-5.2.3/src/luac.c\n     551 /Users/oxnz/Downloads/lua-5.2.3/src/luaconf.h\n      55 /Users/oxnz/Downloads/lua-5.2.3/src/lualib.h\n     258 /Users/oxnz/Downloads/lua-5.2.3/src/lundump.c\n      28 /Users/oxnz/Downloads/lua-5.2.3/src/lundump.h\n     867 /Users/oxnz/Downloads/lua-5.2.3/src/lvm.c\n      44 /Users/oxnz/Downloads/lua-5.2.3/src/lvm.h\n      76 /Users/oxnz/Downloads/lua-5.2.3/src/lzio.c\n      65 /Users/oxnz/Downloads/lua-5.2.3/src/lzio.h\n   20454 total\n</pre>\n<h2>README</h2>\n<pre class=\"lang:default decode:true\">[oxnz@iF8sg:lua-5.2.3]% cat README\n<p>This is Lua 5.2.3, released on 11 Nov 2013.</p>\n<p>For installation instructions, license details, and<br />\nfurther information about Lua, see doc/readme.html.</pre></p>\n<h2>Makefile</h2>\n<p>lua 的 Makefile 可以看得出是手写的，不是 autotools 自动生成的，所以还是仔细看一下编译过程，以便对 lua 有一个总体的了解。</p>\n<pre class=\"nums:true lang:Makefile decode:true\">[oxnz@iF8sg:lua-5.2.3]% cat Makefile\n# Makefile for installing Lua\n# See doc/readme.html for installation and customization instructions.\n<h1 id=\"change-the-settings-below-to-suit-your-environment\"><a class=\"markdownIt-Anchor\" href=\"#change-the-settings-below-to-suit-your-environment\"></a> == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================</h1>\n<h1 id=\"your-platform-see-plats-for-possible-values\"><a class=\"markdownIt-Anchor\" href=\"#your-platform-see-plats-for-possible-values\"></a> Your platform. See PLATS for possible values.</h1>\n<p>PLAT= none</p>\n<h1 id=\"where-to-install-the-installation-starts-in-the-src-and-doc-directories\"><a class=\"markdownIt-Anchor\" href=\"#where-to-install-the-installation-starts-in-the-src-and-doc-directories\"></a> Where to install. The installation starts in the src and doc directories,</h1>\n<h1 id=\"so-take-care-if-install_top-is-not-an-absolute-path-see-the-local-target\"><a class=\"markdownIt-Anchor\" href=\"#so-take-care-if-install_top-is-not-an-absolute-path-see-the-local-target\"></a> so take care if INSTALL_TOP is not an absolute path. See the local target.</h1>\n<h1 id=\"you-may-want-to-make-install_lmod-and-install_cmod-consistent-with\"><a class=\"markdownIt-Anchor\" href=\"#you-may-want-to-make-install_lmod-and-install_cmod-consistent-with\"></a> You may want to make INSTALL_LMOD and INSTALL_CMOD consistent with</h1>\n<h1 id=\"lua_root-lua_ldir-and-lua_cdir-in-luaconfh\"><a class=\"markdownIt-Anchor\" href=\"#lua_root-lua_ldir-and-lua_cdir-in-luaconfh\"></a> LUA_ROOT, LUA_LDIR, and LUA_CDIR in luaconf.h.</h1>\n<p>INSTALL_TOP= /usr/local<br />\nINSTALL_BIN= $(INSTALL_TOP)/bin<br />\nINSTALL_INC= $(INSTALL_TOP)/include<br />\nINSTALL_LIB= $(INSTALL_TOP)/lib<br />\nINSTALL_MAN= $(INSTALL_TOP)/man/man1<br />\nINSTALL_LMOD= <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>I</mi><mi>N</mi><mi>S</mi><mi>T</mi><mi>A</mi><mi>L</mi><msub><mi>L</mi><mi>T</mi></msub><mi>O</mi><mi>P</mi><mo>)</mo><mi mathvariant=\"normal\">/</mi><mi>s</mi><mi>h</mi><mi>a</mi><mi>r</mi><mi>e</mi><mi mathvariant=\"normal\">/</mi><mi>l</mi><mi>u</mi><mi>a</mi><mi mathvariant=\"normal\">/</mi></mrow><annotation encoding=\"application/x-tex\">(INSTALL_TOP)/share/lua/</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathit\">A</span><span class=\"mord mathit\">L</span><span class=\"mord\"><span class=\"mord mathit\">L</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">T</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span>​</span></span></span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">P</span><span class=\"mclose\">)</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">h</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathit\">e</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">u</span><span class=\"mord mathit\">a</span><span class=\"mord mathrm\">/</span></span></span></span>V<br />\nINSTALL_CMOD= <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>I</mi><mi>N</mi><mi>S</mi><mi>T</mi><mi>A</mi><mi>L</mi><msub><mi>L</mi><mi>T</mi></msub><mi>O</mi><mi>P</mi><mo>)</mo><mi mathvariant=\"normal\">/</mi><mi>l</mi><mi>i</mi><mi>b</mi><mi mathvariant=\"normal\">/</mi><mi>l</mi><mi>u</mi><mi>a</mi><mi mathvariant=\"normal\">/</mi></mrow><annotation encoding=\"application/x-tex\">(INSTALL_TOP)/lib/lua/</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">N</span><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathit\">A</span><span class=\"mord mathit\">L</span><span class=\"mord\"><span class=\"mord mathit\">L</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">T</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span>​</span></span></span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">P</span><span class=\"mclose\">)</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">i</span><span class=\"mord mathit\">b</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">u</span><span class=\"mord mathit\">a</span><span class=\"mord mathrm\">/</span></span></span></span>V</p>\n<h1 id=\"how-to-install-if-your-install-program-does-not-support-p-then\"><a class=\"markdownIt-Anchor\" href=\"#how-to-install-if-your-install-program-does-not-support-p-then\"></a> How to install. If your install program does not support &quot;-p&quot;, then</h1>\n<h1 id=\"you-may-have-to-run-ranlib-on-the-installed-libluaa\"><a class=\"markdownIt-Anchor\" href=\"#you-may-have-to-run-ranlib-on-the-installed-libluaa\"></a> you may have to run ranlib on the installed liblua.a.</h1>\n<p>INSTALL= install -p<br />\nINSTALL_EXEC= $(INSTALL) -m 0755<br />\nINSTALL_DATA= $(INSTALL) -m 0644</p>\n<h1 id=\"\"><a class=\"markdownIt-Anchor\" href=\"#\"></a> </h1>\n<h1 id=\"if-you-dont-have-install-you-can-use-cp-instead\"><a class=\"markdownIt-Anchor\" href=\"#if-you-dont-have-install-you-can-use-cp-instead\"></a> If you don't have &quot;install&quot; you can use &quot;cp&quot; instead.</h1>\n<h1 id=\"install-cp-p\"><a class=\"markdownIt-Anchor\" href=\"#install-cp-p\"></a> INSTALL= cp -p</h1>\n<h1 id=\"install_exec-install\"><a class=\"markdownIt-Anchor\" href=\"#install_exec-install\"></a> INSTALL_EXEC= $(INSTALL)</h1>\n<h1 id=\"install_data-install\"><a class=\"markdownIt-Anchor\" href=\"#install_data-install\"></a> INSTALL_DATA= $(INSTALL)</h1>\n<h1 id=\"other-utilities\"><a class=\"markdownIt-Anchor\" href=\"#other-utilities\"></a> Other utilities.</h1>\n<p>MKDIR= mkdir -p<br />\nRM= rm -f</p>\n<h1 id=\"end-of-user-settings-no-need-to-change-anything-below-this-line\"><a class=\"markdownIt-Anchor\" href=\"#end-of-user-settings-no-need-to-change-anything-below-this-line\"></a> == END OF USER SETTINGS – NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======</h1>\n<h1 id=\"convenience-platforms-targets\"><a class=\"markdownIt-Anchor\" href=\"#convenience-platforms-targets\"></a> Convenience platforms targets.</h1>\n<p>PLATS= aix ansi bsd freebsd generic linux macosx mingw posix solaris</p>\n<h1 id=\"what-to-install\"><a class=\"markdownIt-Anchor\" href=\"#what-to-install\"></a> What to install.</h1>\n<p>TO_BIN= lua luac<br />\nTO_INC= lua.h luaconf.h lualib.h lauxlib.h lua.hpp<br />\nTO_LIB= liblua.a<br />\nTO_MAN= lua.1 luac.1</p>\n<h1 id=\"lua-version-and-release\"><a class=\"markdownIt-Anchor\" href=\"#lua-version-and-release\"></a> Lua version and release.</h1>\n<p>V= 5.2<br />\nR= $V.3</p>\n<h1 id=\"targets-start-here\"><a class=\"markdownIt-Anchor\" href=\"#targets-start-here\"></a> Targets start here.</h1>\n<p>all:\t$(PLAT)</p>\n<p>$(PLATS) clean:<br />\ncd src &amp;&amp; $(MAKE) $@</p>\n<p>test:\tdummy<br />\nsrc/lua -v</p>\n<p>install: dummy<br />\ncd src &amp;&amp; $(MKDIR) $(INSTALL_BIN) $(INSTALL_INC) $(INSTALL_LIB) $(INSTALL_MAN) $(INSTALL_LMOD) $(INSTALL_CMOD)<br />\ncd src &amp;&amp; $(INSTALL_EXEC) $(TO_BIN) $(INSTALL_BIN)<br />\ncd src &amp;&amp; $(INSTALL_DATA) $(TO_INC) $(INSTALL_INC)<br />\ncd src &amp;&amp; $(INSTALL_DATA) $(TO_LIB) $(INSTALL_LIB)<br />\ncd doc &amp;&amp; $(INSTALL_DATA) $(TO_MAN) $(INSTALL_MAN)</p>\n<p>uninstall:<br />\ncd src &amp;&amp; cd $(INSTALL_BIN) &amp;&amp; $(RM) $(TO_BIN)<br />\ncd src &amp;&amp; cd $(INSTALL_INC) &amp;&amp; $(RM) $(TO_INC)<br />\ncd src &amp;&amp; cd $(INSTALL_LIB) &amp;&amp; $(RM) $(TO_LIB)<br />\ncd doc &amp;&amp; cd $(INSTALL_MAN) &amp;&amp; $(RM) $(TO_MAN)</p>\n<p>local:<br />\n$(MAKE) install INSTALL_TOP=…/install</p>\n<p>none:<br />\n@echo &quot;Please do 'make PLATFORM' where PLATFORM is one of these:&quot;<br />\n@echo &quot;   $(PLATS)&quot;<br />\n@echo &quot;See doc/readme.html for complete instructions.&quot;</p>\n<h1 id=\"make-may-get-confused-with-test-and-install\"><a class=\"markdownIt-Anchor\" href=\"#make-may-get-confused-with-test-and-install\"></a> make may get confused with test/ and install/</h1>\n<p>dummy:</p>\n<h1 id=\"echo-config-parameters\"><a class=\"markdownIt-Anchor\" href=\"#echo-config-parameters\"></a> echo config parameters</h1>\n<p>echo:<br />\n@cd src &amp;&amp; $(MAKE) -s echo<br />\n@echo &quot;PLAT= $(PLAT)&quot;<br />\n@echo &quot;V= $V&quot;<br />\n@echo &quot;R= $R&quot;<br />\n@echo &quot;TO_BIN= $(TO_BIN)&quot;<br />\n@echo &quot;TO_INC= $(TO_INC)&quot;<br />\n@echo &quot;TO_LIB= $(TO_LIB)&quot;<br />\n@echo &quot;TO_MAN= $(TO_MAN)&quot;<br />\n@echo &quot;INSTALL_TOP= $(INSTALL_TOP)&quot;<br />\n@echo &quot;INSTALL_BIN= $(INSTALL_BIN)&quot;<br />\n@echo &quot;INSTALL_INC= $(INSTALL_INC)&quot;<br />\n@echo &quot;INSTALL_LIB= $(INSTALL_LIB)&quot;<br />\n@echo &quot;INSTALL_MAN= $(INSTALL_MAN)&quot;<br />\n@echo &quot;INSTALL_LMOD= $(INSTALL_LMOD)&quot;<br />\n@echo &quot;INSTALL_CMOD= $(INSTALL_CMOD)&quot;<br />\n@echo &quot;INSTALL_EXEC= $(INSTALL_EXEC)&quot;<br />\n@echo &quot;INSTALL_DATA= $(INSTALL_DATA)&quot;</p>\n<h1 id=\"echo-pkg-config-data\"><a class=\"markdownIt-Anchor\" href=\"#echo-pkg-config-data\"></a> echo pkg-config data</h1>\n<p>pc:<br />\n@echo &quot;version=R&#34;\n\t@echo &#34;prefix=(INSTALL_TOP)&quot;<br />\n@echo &quot;libdir=(INSTALL_LIB)&#34;\n\t@echo &#34;includedir=(INSTALL_INC)&quot;</p>\n<h1 id=\"list-targets-that-do-not-create-files-but-not-all-makes-understand-phony\"><a class=\"markdownIt-Anchor\" href=\"#list-targets-that-do-not-create-files-but-not-all-makes-understand-phony\"></a> list targets that do not create files (but not all makes understand .PHONY)</h1>\n<p>.PHONY: all $(PLATS) clean test install local none dummy echo pecho lecho</p>\n<h1 id=\"end-of-makefilepre\"><a class=\"markdownIt-Anchor\" href=\"#end-of-makefilepre\"></a> (end of Makefile)</pre></h1>\n<p><code>END OF USER SETTINGS</code>之前是一些配置项目。诸如指定平台，各部分安装目录和安装程序以及依赖的辅助程序等。之后列出了支持的平台，需要安装的各文件，版本号。最后到了熟悉的<code>all:</code>，其后面是 <code>$(PLAT)</code>，就是平台，但到此时为止还是 <code>none</code>。所以执行 <code>make</code> 会出现如下信息：</p>\n<pre class=\"lang:default decode:true\">[oxnz@iF8sg:lua-5.2.3]% make\nPlease do &#39;make PLATFORM&#39; where PLATFORM is one of these:\n   aix ansi bsd freebsd generic linux macosx mingw posix solaris\nSee doc/readme.html for complete instructions.</pre>\n<p>告诉你选择一个列出的平台。整个 <code>Makefile</code> 比较直白，没有什么太高深的东西。由于我目前在使用 OS X 系统，所以这个根目录的 Makefile 最终的编译指令就是 <code>cd src &amp;&amp; make macosx</code>，所以我们去看看 <code>src</code> 目录下的 <code>Makefile</code>。</p>\n<h2>src/Makefile</h2>\n<p>由于这个 Makefile 略长，所以分割开来看好了。首先是用户设置：</p>\n<pre class=\"nums:true lang:default decode:true\"># Makefile for building Lua\n# See ../doc/readme.html for installation and customization instructions.\n<h1 id=\"change-the-settings-below-to-suit-your-environment-2\"><a class=\"markdownIt-Anchor\" href=\"#change-the-settings-below-to-suit-your-environment-2\"></a> == CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT =======================</h1>\n<h1 id=\"your-platform-see-plats-for-possible-values-2\"><a class=\"markdownIt-Anchor\" href=\"#your-platform-see-plats-for-possible-values-2\"></a> Your platform. See PLATS for possible values.</h1>\n<p>PLAT= none</p>\n<p>CC= gcc<br />\nCFLAGS= -O2 -Wall -DLUA_COMPAT_ALL $(SYSCFLAGS) $(MYCFLAGS)<br />\nLDFLAGS= $(SYSLDFLAGS) $(MYLDFLAGS)<br />\nLIBS= -lm $(SYSLIBS) $(MYLIBS)</p>\n<p>AR= ar rcu<br />\nRANLIB= ranlib<br />\nRM= rm -f</p>\n<p>SYSCFLAGS=<br />\nSYSLDFLAGS=<br />\nSYSLIBS=</p>\n<p>MYCFLAGS=<br />\nMYLDFLAGS=<br />\nMYLIBS=<br />\nMYOBJS=</p>\n<h1 id=\"end-of-user-settings-no-need-to-change-anything-below-this-line-pre\"><a class=\"markdownIt-Anchor\" href=\"#end-of-user-settings-no-need-to-change-anything-below-this-line-pre\"></a> == END OF USER SETTINGS – NO NEED TO CHANGE ANYTHING BELOW THIS LINE =======</pre></h1>\n<p>其中指定了编译工具链及其参数。接着是一些变量定义：</p>\n<pre class=\"nums:true start-line:28 lang:default decode:true\">PLATS= aix ansi bsd freebsd generic linux macosx mingw posix solaris\n<p>LUA_A=\tliblua.a<br />\nCORE_O=\tlapi.o lcode.o lctype.o ldebug.o ldo.o ldump.o lfunc.o lgc.o llex.o<br />\nlmem.o lobject.o lopcodes.o lparser.o lstate.o lstring.o ltable.o<br />\nltm.o lundump.o lvm.o lzio.o<br />\nLIB_O=\tlauxlib.o lbaselib.o lbitlib.o lcorolib.o ldblib.o liolib.o<br />\nlmathlib.o loslib.o lstrlib.o ltablib.o loadlib.o linit.o<br />\nBASE_O= $(CORE_O) $(LIB_O) $(MYOBJS)</p>\n<p>LUA_T=\tlua<br />\nLUA_O=\tlua.o</p>\n<p>LUAC_T=\tluac<br />\nLUAC_O=\tluac.o</p>\n<p>ALL_O= $(BASE_O) $(LUA_O) $(LUAC_O)<br />\nALL_T= $(LUA_A) $(LUA_T) $(LUAC_T)<br />\nALL_A= $(LUA_A)<br />\n</pre></p>\n<p>说明了整个的<code>.o</code> 文件和<code>.a</code> 文件，下面是目标以及规则定义：</p>\n<pre class=\"start-line:47 nums:true lang:default decode:true\"># Targets start here.\ndefault: $(PLAT)\n<p>all:\t$(ALL_T)</p>\n<p>o:\t$(ALL_O)</p>\n<p>a:\t$(ALL_A)</p>\n<p>$(LUA_A): $(BASE_O)<br />\n$(AR) $@ $(BASE_O)<br />\n$(RANLIB) $@</p>\n<p>$(LUA_T): $(LUA_O) $(LUA_A)<br />\n$(CC) -o $@ $(LDFLAGS) $(LUA_O) $(LUA_A) $(LIBS)</p>\n<p>$(LUAC_T): $(LUAC_O) $(LUA_A)<br />\n$(CC) -o $@ $(LDFLAGS) $(LUAC_O) $(LUA_A) $(LIBS)</p>\n<p>clean:<br />\n$(RM) $(ALL_T) $(ALL_O)</p>\n<p>depend:<br />\n@$(CC) $(CFLAGS) -MM l*.c</p>\n<p>echo:<br />\n@echo &quot;PLAT= $(PLAT)&quot;<br />\n@echo &quot;CC= $(CC)&quot;<br />\n@echo &quot;CFLAGS= $(CFLAGS)&quot;<br />\n@echo &quot;LDFLAGS= $(SYSLDFLAGS)&quot;<br />\n@echo &quot;LIBS= $(LIBS)&quot;<br />\n@echo &quot;AR= $(AR)&quot;<br />\n@echo &quot;RANLIB= $(RANLIB)&quot;<br />\n@echo &quot;RM= $(RM)&quot;</p>\n<h1 id=\"convenience-targets-for-popular-platforms\"><a class=\"markdownIt-Anchor\" href=\"#convenience-targets-for-popular-platforms\"></a> Convenience targets for popular platforms</h1>\n<p>ALL= all</p>\n<p>none:<br />\n@echo &quot;Please do 'make PLATFORM' where PLATFORM is one of these:&quot;<br />\n@echo &quot;   $(PLATS)&quot;</p>\n<p>aix:<br />\n$(MAKE) $(ALL) CC=&quot;xlc&quot; CFLAGS=&quot;-O2 -DLUA_USE_POSIX -DLUA_USE_DLOPEN&quot; SYSLIBS=&quot;-ldl&quot; SYSLDFLAGS=&quot;-brtl -bexpall&quot;</p>\n<p>ansi:<br />\n$(MAKE) $(ALL) SYSCFLAGS=&quot;-DLUA_ANSI&quot;</p>\n<p>bsd:<br />\n$(MAKE) $(ALL) SYSCFLAGS=&quot;-DLUA_USE_POSIX -DLUA_USE_DLOPEN&quot; SYSLIBS=&quot;-Wl,-E&quot;</p>\n<p>freebsd:<br />\n$(MAKE) $(ALL) SYSCFLAGS=&quot;-DLUA_USE_LINUX&quot; SYSLIBS=&quot;-Wl,-E -lreadline&quot;</p>\n<p>generic: $(ALL)</p>\n<p>linux:<br />\n$(MAKE) $(ALL) SYSCFLAGS=&quot;-DLUA_USE_LINUX&quot; SYSLIBS=&quot;-Wl,-E -ldl -lreadline&quot;</p>\n<p>macosx:<br />\n$(MAKE) $(ALL) SYSCFLAGS=&quot;-DLUA_USE_MACOSX&quot; SYSLIBS=&quot;-lreadline&quot; CC=cc</p>\n<p>mingw:<br />\n(MAKE) &#34;LUA_A=lua52.dll&#34; &#34;LUA_T=lua.exe&#34;\n\t&#34;AR=(CC) -shared -o&quot; &quot;RANLIB=strip --strip-unneeded&quot;<br />\n&quot;SYSCFLAGS=-DLUA_BUILD_AS_DLL&quot; &quot;SYSLIBS=&quot; &quot;SYSLDFLAGS=-s&quot; lua.exe<br />\n$(MAKE) &quot;LUAC_T=luac.exe&quot; luac.exe</p>\n<p>posix:<br />\n$(MAKE) $(ALL) SYSCFLAGS=&quot;-DLUA_USE_POSIX&quot;</p>\n<p>solaris:<br />\n$(MAKE) $(ALL) SYSCFLAGS=&quot;-DLUA_USE_POSIX -DLUA_USE_DLOPEN&quot; SYSLIBS=&quot;-ldl&quot;</p>\n<h1 id=\"list-targets-that-do-not-create-files-but-not-all-makes-understand-phony-2\"><a class=\"markdownIt-Anchor\" href=\"#list-targets-that-do-not-create-files-but-not-all-makes-understand-phony-2\"></a> list targets that do not create files (but not all makes understand .PHONY)</h1>\n<p>.PHONY: all $(PLATS) default o a clean depend echo none</p>\n<h1 id=\"do-not-delete\"><a class=\"markdownIt-Anchor\" href=\"#do-not-delete\"></a> DO NOT DELETE</h1>\n</pre>\n<p>最后是具体的<code>.o</code> 文件的依赖关系：</p>\n<pre class=\"start-line:125 nums:true lang:default decode:true\">lapi.o: lapi.c lua.h luaconf.h lapi.h llimits.h lstate.h lobject.h ltm.h\n lzio.h lmem.h ldebug.h ldo.h lfunc.h lgc.h lstring.h ltable.h lundump.h\n lvm.h\nlauxlib.o: lauxlib.c lua.h luaconf.h lauxlib.h\nlbaselib.o: lbaselib.c lua.h luaconf.h lauxlib.h lualib.h\nlbitlib.o: lbitlib.c lua.h luaconf.h lauxlib.h lualib.h\nlcode.o: lcode.c lua.h luaconf.h lcode.h llex.h lobject.h llimits.h\n lzio.h lmem.h lopcodes.h lparser.h ldebug.h lstate.h ltm.h ldo.h lgc.h\n lstring.h ltable.h lvm.h\nlcorolib.o: lcorolib.c lua.h luaconf.h lauxlib.h lualib.h\nlctype.o: lctype.c lctype.h lua.h luaconf.h llimits.h\nldblib.o: ldblib.c lua.h luaconf.h lauxlib.h lualib.h\nldebug.o: ldebug.c lua.h luaconf.h lapi.h llimits.h lstate.h lobject.h\n ltm.h lzio.h lmem.h lcode.h llex.h lopcodes.h lparser.h ldebug.h ldo.h\n lfunc.h lstring.h lgc.h ltable.h lvm.h\nldo.o: ldo.c lua.h luaconf.h lapi.h llimits.h lstate.h lobject.h ltm.h\n lzio.h lmem.h ldebug.h ldo.h lfunc.h lgc.h lopcodes.h lparser.h\n lstring.h ltable.h lundump.h lvm.h\nldump.o: ldump.c lua.h luaconf.h lobject.h llimits.h lstate.h ltm.h\n lzio.h lmem.h lundump.h\nlfunc.o: lfunc.c lua.h luaconf.h lfunc.h lobject.h llimits.h lgc.h\n lstate.h ltm.h lzio.h lmem.h\nlgc.o: lgc.c lua.h luaconf.h ldebug.h lstate.h lobject.h llimits.h ltm.h\n lzio.h lmem.h ldo.h lfunc.h lgc.h lstring.h ltable.h\nlinit.o: linit.c lua.h luaconf.h lualib.h lauxlib.h\nliolib.o: liolib.c lua.h luaconf.h lauxlib.h lualib.h\nllex.o: llex.c lua.h luaconf.h lctype.h llimits.h ldo.h lobject.h\n lstate.h ltm.h lzio.h lmem.h llex.h lparser.h lstring.h lgc.h ltable.h\nlmathlib.o: lmathlib.c lua.h luaconf.h lauxlib.h lualib.h\nlmem.o: lmem.c lua.h luaconf.h ldebug.h lstate.h lobject.h llimits.h\n ltm.h lzio.h lmem.h ldo.h lgc.h\nloadlib.o: loadlib.c lua.h luaconf.h lauxlib.h lualib.h\nlobject.o: lobject.c lua.h luaconf.h lctype.h llimits.h ldebug.h lstate.h\n lobject.h ltm.h lzio.h lmem.h ldo.h lstring.h lgc.h lvm.h\nlopcodes.o: lopcodes.c lopcodes.h llimits.h lua.h luaconf.h\nloslib.o: loslib.c lua.h luaconf.h lauxlib.h lualib.h\nlparser.o: lparser.c lua.h luaconf.h lcode.h llex.h lobject.h llimits.h\n lzio.h lmem.h lopcodes.h lparser.h ldebug.h lstate.h ltm.h ldo.h lfunc.h\n lstring.h lgc.h ltable.h\nlstate.o: lstate.c lua.h luaconf.h lapi.h llimits.h lstate.h lobject.h\n ltm.h lzio.h lmem.h ldebug.h ldo.h lfunc.h lgc.h llex.h lstring.h\n ltable.h\nlstring.o: lstring.c lua.h luaconf.h lmem.h llimits.h lobject.h lstate.h\n ltm.h lzio.h lstring.h lgc.h\nlstrlib.o: lstrlib.c lua.h luaconf.h lauxlib.h lualib.h\nltable.o: ltable.c lua.h luaconf.h ldebug.h lstate.h lobject.h llimits.h\n ltm.h lzio.h lmem.h ldo.h lgc.h lstring.h ltable.h lvm.h\nltablib.o: ltablib.c lua.h luaconf.h lauxlib.h lualib.h\nltm.o: ltm.c lua.h luaconf.h lobject.h llimits.h lstate.h ltm.h lzio.h\n lmem.h lstring.h lgc.h ltable.h\nlua.o: lua.c lua.h luaconf.h lauxlib.h lualib.h\nluac.o: luac.c lua.h luaconf.h lauxlib.h lobject.h llimits.h lstate.h\n ltm.h lzio.h lmem.h lundump.h ldebug.h lopcodes.h\nlundump.o: lundump.c lua.h luaconf.h ldebug.h lstate.h lobject.h\n llimits.h ltm.h lzio.h lmem.h ldo.h lfunc.h lstring.h lgc.h lundump.h\nlvm.o: lvm.c lua.h luaconf.h ldebug.h lstate.h lobject.h llimits.h ltm.h\n lzio.h lmem.h ldo.h lfunc.h lgc.h lopcodes.h lstring.h ltable.h lvm.h\nlzio.o: lzio.c lua.h luaconf.h llimits.h lmem.h lstate.h lobject.h ltm.h\n lzio.h\n</pre>\n<h2>luaconf.h</h2>\n<p>这个头文件中定义了一些设置信息，放在这里以便后续参考。</p>\n<pre class=\"lang:default decode:true\">[oxnz@iF8sg:src]% grep @@ luaconf.h\n** Search for &#34;@@&#34; to find all configurable definitions.\n@@ LUA_ANSI controls the use of non-ansi features.\n@@ LUA_USE_POSIX includes all functionality listed as X/Open System\n@@ LUA_PATH_DEFAULT is the default path that Lua uses to look for\n@@ LUA_CPATH_DEFAULT is the default path that Lua uses to look for\n@@ LUA_DIRSEP is the directory separator (for submodules).\n@@ LUA_ENV is the name of the variable that holds the current\n@@ environment, used to access global names.\n@@ LUA_API is a mark for all core API functions.\n@@ LUALIB_API is a mark for all auxiliary library functions.\n@@ LUAMOD_API is a mark for all standard library opening functions.\n@@ LUAI_FUNC is a mark for all extern functions that are not to be\n@@ LUAI_DDEF and LUAI_DDEC are marks for all extern (const) variables\n@@ LUA_QL describes how error messages quote program elements.\n@@ LUA_IDSIZE gives the maximum size for the description of the source\n@@ luai_writestring/luai_writeline define how &#39;print&#39; prints its results.\n@@ luai_writestringerror defines how to print error messages.\n@@ LUAI_MAXSHORTLEN is the maximum length for short strings, that is,\n@@ LUA_COMPAT_ALL controls all compatibility options.\n@@ LUA_COMPAT_UNPACK controls the presence of global &#39;unpack&#39;.\n@@ LUA_COMPAT_LOADERS controls the presence of table &#39;package.loaders&#39;.\n@@ macro &#39;lua_cpcall&#39; emulates deprecated function lua_cpcall.\n@@ LUA_COMPAT_LOG10 defines the function &#39;log10&#39; in the math library.\n@@ LUA_COMPAT_LOADSTRING defines the function &#39;loadstring&#39; in the base\n@@ LUA_COMPAT_MAXN defines the function &#39;maxn&#39; in the table library.\n@@ The following macros supply trivial compatibility for some\n@@ LUA_COMPAT_MODULE controls compatibility with previous\n@@ LUAI_BITSINT defines the number of bits in an int.\n@@ LUA_INT32 is an signed integer with exactly 32 bits.\n@@ LUAI_UMEM is an unsigned integer big enough to count the total\n@@ LUAI_MEM is a signed integer big enough to count the total memory\n@@ LUAI_MAXSTACK limits the size of the Lua stack.\n@@ LUAL_BUFFERSIZE is the buffer size used by the lauxlib buffer system.\n@@ LUA_NUMBER is the type of numbers in Lua.\n@@ LUAI_UACNUMBER is the result of an &#39;usual argument conversion&#39;\n@@ LUA_NUMBER_SCAN is the format for reading numbers.\n@@ LUA_NUMBER_FMT is the format for writing numbers.\n@@ lua_number2str converts a number to a string.\n@@ LUAI_MAXNUMBER2STR is maximum size of previous conversion.\n@@ l_mathop allows the addition of an &#39;l&#39; or &#39;f&#39; to all math operations\n@@ lua_str2number converts a decimal numeric string to a number.\n@@ lua_strx2number converts an hexadecimal numeric string to a number.\n@@ The luai_num* macros define the primitive operations over numbers.\n@@ LUA_INTEGER is the integral type used by lua_pushinteger/lua_tointeger.\n@@ LUA_UNSIGNED is the integral type used by lua_pushunsigned/lua_tounsigned.\n@@ LUA_MSASMTRICK uses Microsoft assembler to avoid clashes with a\n@@ LUA_IEEE754TRICK uses a trick that should work on any machine\n@@ LUA_IEEELL extends the trick to LUA_INTEGER; should only be\n@@ LUA_IEEEENDIAN is the endianness of doubles in your machine\n@@ LUA_NANTRICK controls the use of a trick to pack all types into</pre>\n<h2>main</h2>\n<p>接下来就要进入 lua.c 文件中的 main 函数了，具体如下：</p>\n<pre class=\"lang:default decode:true\">int main (int argc, char **argv) {\n  int status, result;\n  lua_State *L = luaL_newstate();  /* create state */\n  if (L == NULL) {\n    l_message(argv[0], &#34;cannot create state: not enough memory&#34;);\n    return EXIT_FAILURE;\n  }\n  /* call &#39;pmain&#39; in protected mode */\n  lua_pushcfunction(L, &amp;pmain);\n  lua_pushinteger(L, argc);  /* 1st argument */\n  lua_pushlightuserdata(L, argv); /* 2nd argument */\n  status = lua_pcall(L, 2, 1, 0);\n  result = lua_toboolean(L, -1);  /* get result */\n  finalreport(L, status);\n  lua_close(L);\n  return (result &amp;&amp; status == LUA_OK) ? EXIT_SUCCESS : EXIT_FAILURE;\n}</pre>\n<p><code>lua_State</code> 结构在<code>lstate.h</code> 中定义，如果创建失败，则错误退出。否则在保护模式(<code>protected mode</code>)中调用 <code>pmain</code>。接着传入 <code>argc</code> 与 <code>argv</code>，之后的<code>status = lua_pcall(L, 2, 1, 0);</code>中直接给出了2、1、0三个数字，对应到 lua.h 文件中得宏：</p>\n<pre class=\"lang:default decode:true\">#define lua_pcall(L,n,r,f)  lua_pcallk(L, (n), (r), (f), 0, NULL)</pre>\n<p>可以看出，其实是调用了 <code>lua_pcallk(L, (2), (1), (0), 0, NULL)</code>。而看到下面的 <code>lua_pcallk</code> 定义就清楚了：</p>\n<pre class=\"lang:default decode:true\">LUA_API int   (lua_pcallk) (lua_State *L, int nargs, int nresults, int errfunc,\n                            int ctx, lua_CFunction k);</pre>\n<p>其中2赋给了 <code>nargs</code>，1赋给了 <code>nresults</code>，0赋给了 <code>errfunc</code>，<code>ctx</code> 被上一个宏设置为0，<code>k</code> 设置为 <code>NULL</code>。最后获取结果，报告状态，关闭之前创建的 <code>L</code> 并退出。其中 <code>lua_pushcfunction(L, &amp;pmain);</code>被宏<code>#define lua_pushcfunction(L,f) lua_pushcclosure(L, (f), 0)</code>展开之后变成了 <code>lua_pushcclosure(L, (pmain), 0)</code>,而<code>lua_pushcclosure</code>的定义为<code>LUA_API void (lua_pushcclosure) (lua_State *L, lua_CFunction fn, int n);</code>纵观整个 <code>main</code>，真正开始做事的应该是 <code>lua_pcall</code> 函数，也就是 <code>lua_pcallk</code>，看其定义：</p>\n<pre class=\"lang:default decode:true\">LUA_API int lua_pcallk (lua_State *L, int nargs, int nresults, int errfunc,\n                        int ctx, lua_CFunction k) {\n  struct CallS c;\n  int status;\n  ptrdiff_t func;\n  lua_lock(L);\n  api_check(L, k == NULL || !isLua(L-&gt;ci),\n    &#34;cannot use continuations inside hooks&#34;);\n  api_checknelems(L, nargs+1);\n  api_check(L, L-&gt;status == LUA_OK, &#34;cannot do calls on non-normal thread&#34;);\n  checkresults(L, nargs, nresults);\n  if (errfunc == 0)\n    func = 0;\n  else {\n    StkId o = index2addr(L, errfunc);\n    api_checkstackindex(L, errfunc, o);\n    func = savestack(L, o);\n  }\n  c.func = L-&gt;top - (nargs+1);  /* function to be called */\n  if (k == NULL || L-&gt;nny &gt; 0) {  /* no continuation or no yieldable? */\n    c.nresults = nresults;  /* do a &#39;conventional&#39; protected call */\n    status = luaD_pcall(L, f_call, &amp;c, savestack(L, c.func), func);\n  }\n  else {  /* prepare continuation (call is already protected by &#39;resume&#39;) */\n    CallInfo *ci = L-&gt;ci;\n    ci-&gt;u.c.k = k;  /* save continuation */\n    ci-&gt;u.c.ctx = ctx;  /* save context */\n    /* save information for error recovery */\n    ci-&gt;extra = savestack(L, c.func);\n    ci-&gt;u.c.old_allowhook = L-&gt;allowhook;\n    ci-&gt;u.c.old_errfunc = L-&gt;errfunc;\n    L-&gt;errfunc = func;\n    /* mark that function may do error recovery */\n    ci-&gt;callstatus |= CIST_YPCALL;\n    luaD_call(L, c.func, nresults, 1);  /* do the call */\n    ci-&gt;callstatus &amp;= ~CIST_YPCALL;\n    L-&gt;errfunc = ci-&gt;u.c.old_errfunc;\n    status = LUA_OK;  /* if it is here, there were no errors */\n  }\n  adjustresults(L, nresults);\n  lua_unlock(L);\n  return status;\n}</pre>\n<p>限于篇幅，近期会作后续更新。</p>","text":" Lua logo 介绍 Lua 应用比较广泛，主要是作为插件解释器。例如mysql proxy，VLC 等。Lua 源代码比较规范，代码也不长，2w 多行，分布也是比较均匀的，就想看一看，顺便在这里做个笔记。 lua 5.2.3 源码树 [will@iF8sg:~DOWN]% ...","link":"","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#lua-523-%E6%BA%90%E7%A0%81%E6%A0%91\"><span class=\"toc-text\">lua 5.2.3 源码树</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">lua 5.2.3 代码量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">README</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">Makefile</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#change-the-settings-below-to-suit-your-environment\"><span class=\"toc-text\"> &#x3D;&#x3D; CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#your-platform-see-plats-for-possible-values\"><span class=\"toc-text\"> Your platform. See PLATS for possible values.</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#where-to-install-the-installation-starts-in-the-src-and-doc-directories\"><span class=\"toc-text\"> Where to install. The installation starts in the src and doc directories,</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#so-take-care-if-install_top-is-not-an-absolute-path-see-the-local-target\"><span class=\"toc-text\"> so take care if INSTALL_TOP is not an absolute path. See the local target.</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#you-may-want-to-make-install_lmod-and-install_cmod-consistent-with\"><span class=\"toc-text\"> You may want to make INSTALL_LMOD and INSTALL_CMOD consistent with</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#lua_root-lua_ldir-and-lua_cdir-in-luaconfh\"><span class=\"toc-text\"> LUA_ROOT, LUA_LDIR, and LUA_CDIR in luaconf.h.</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#how-to-install-if-your-install-program-does-not-support-p-then\"><span class=\"toc-text\"> How to install. If your install program does not support &quot;-p&quot;, then</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#you-may-have-to-run-ranlib-on-the-installed-libluaa\"><span class=\"toc-text\"> you may have to run ranlib on the installed liblua.a.</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\"> </span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#if-you-dont-have-install-you-can-use-cp-instead\"><span class=\"toc-text\"> If you don&#39;t have &quot;install&quot; you can use &quot;cp&quot; instead.</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#install-cp-p\"><span class=\"toc-text\"> INSTALL&#x3D; cp -p</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#install_exec-install\"><span class=\"toc-text\"> INSTALL_EXEC&#x3D; $(INSTALL)</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#install_data-install\"><span class=\"toc-text\"> INSTALL_DATA&#x3D; $(INSTALL)</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#other-utilities\"><span class=\"toc-text\"> Other utilities.</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#end-of-user-settings-no-need-to-change-anything-below-this-line\"><span class=\"toc-text\"> &#x3D;&#x3D; END OF USER SETTINGS – NO NEED TO CHANGE ANYTHING BELOW THIS LINE &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#convenience-platforms-targets\"><span class=\"toc-text\"> Convenience platforms targets.</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#what-to-install\"><span class=\"toc-text\"> What to install.</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#lua-version-and-release\"><span class=\"toc-text\"> Lua version and release.</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#targets-start-here\"><span class=\"toc-text\"> Targets start here.</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#make-may-get-confused-with-test-and-install\"><span class=\"toc-text\"> make may get confused with test&#x2F; and install&#x2F;</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#echo-config-parameters\"><span class=\"toc-text\"> echo config parameters</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#echo-pkg-config-data\"><span class=\"toc-text\"> echo pkg-config data</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#list-targets-that-do-not-create-files-but-not-all-makes-understand-phony\"><span class=\"toc-text\"> list targets that do not create files (but not all makes understand .PHONY)</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#end-of-makefilepre\"><span class=\"toc-text\"> (end of Makefile)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">src&#x2F;Makefile</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#change-the-settings-below-to-suit-your-environment-2\"><span class=\"toc-text\"> &#x3D;&#x3D; CHANGE THE SETTINGS BELOW TO SUIT YOUR ENVIRONMENT &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#your-platform-see-plats-for-possible-values-2\"><span class=\"toc-text\"> Your platform. See PLATS for possible values.</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#end-of-user-settings-no-need-to-change-anything-below-this-line-pre\"><span class=\"toc-text\"> &#x3D;&#x3D; END OF USER SETTINGS – NO NEED TO CHANGE ANYTHING BELOW THIS LINE &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#convenience-targets-for-popular-platforms\"><span class=\"toc-text\"> Convenience targets for popular platforms</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#list-targets-that-do-not-create-files-but-not-all-makes-understand-phony-2\"><span class=\"toc-text\"> list targets that do not create files (but not all makes understand .PHONY)</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#do-not-delete\"><span class=\"toc-text\"> DO NOT DELETE</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">luaconf.h</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">main</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua实现继承方法和原理","uid":"e5459e9ab812ea755aa4249f74103898","slug":"zl/2016-01-01-891_Lua实现继承方法和原理","date":"2024-04-03T03:47:36.163Z","updated":"2024-04-03T03:47:36.163Z","comments":true,"path":"api/articles/zl/2016-01-01-891_Lua实现继承方法和原理.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"原理 � 查找表元表的三个步骤: 在表中查找，如果找到，返回该元素，找不到则继续 判断该表是否有元表，如果没有元表，返回nil，有元表则继续 判断元表有没有 __index 方法，如果 __index 方法为nil，则返回nil；如果__index 方法是一个表，则重复1、2、3...","link":"","photos":[],"count_time":{"symbolsCount":172,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"lua学习1","uid":"ccf00cc91e42a79529a94664e1522709","slug":"zl/2016-01-01-889_lua学习1","date":"2024-04-03T03:47:36.162Z","updated":"2024-04-03T03:47:36.162Z","comments":true,"path":"api/articles/zl/2016-01-01-889_lua学习1.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"类型与值Lua是一种动态语言，没有定义类型的语法，每个值都携带了自身的类型信息。 Lua中有8种基础类型：nil、boolean、number、string、userdata、function、thread、table。函数type可以返回值的类型。 123456print(ty...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}