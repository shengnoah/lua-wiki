{"title":"lua table深拷贝","uid":"edf7212f56a6607561f8cb09a5c0dcb3","slug":"zl/2016-01-01-13_lua table深拷贝","date":"2024-04-03T03:47:33.037Z","updated":"2024-04-03T03:47:33.038Z","comments":true,"path":"api/articles/zl/2016-01-01-13_lua table深拷贝.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<pre><code>          &lt;p&gt;深拷贝，只需要对table类型进行递归拷贝即可，其他类型直接用赋值拷贝或浅拷贝。&lt;/p&gt;\n</code></pre>\n<p>还有，拷贝后的table应与原table具有相同的元表，and元表不需要递归拷贝。</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">function</span> <span class=\"nf\">deepcopy</span><span class=\"p\">(</span> <span class=\"n\">src</span> <span class=\"p\">)</span>\n\t<span class=\"kd\">local</span> <span class=\"n\">lookup_table</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span>\n\t<span class=\"kd\">local</span> <span class=\"k\">function</span> <span class=\"nf\">_copy</span><span class=\"p\">(</span> <span class=\"n\">object</span> <span class=\"p\">)</span>\n\t\t<span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">object</span><span class=\"p\">)</span> <span class=\"o\">~=</span> <span class=\"s2\">\"table\"</span> <span class=\"k\">then</span>\n\t\t\t<span class=\"k\">return</span> <span class=\"n\">object</span>\n\t\t<span class=\"k\">elseif</span> <span class=\"n\">lookup_table</span><span class=\"p\">[</span><span class=\"n\">object</span><span class=\"p\">]</span> <span class=\"k\">then</span>\n\t\t\t<span class=\"k\">return</span> <span class=\"n\">lookup_table</span><span class=\"p\">[</span><span class=\"n\">object</span><span class=\"p\">]</span>\n\t\t<span class=\"k\">end</span>\n<pre><code>\t&lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&#123;&#125;&lt;/span&gt;\n\t&lt;span class=&quot;n&quot;&gt;lookup_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_table&lt;/span&gt;\n\t&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pairs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;\n        &lt;span class=&quot;c1&quot;&gt;--table的key可以是任意基本类型，所以不仅需要对value进行递归拷贝，也要对key进行递归拷贝&lt;/span&gt;\n\t\t&lt;span class=&quot;n&quot;&gt;new_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n\t&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;--设置元表&lt;/span&gt;\n\t&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;setmetatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;getmetatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;\n\n&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n</code></pre>\n<p><span class=\"k\">end</span></p>\n<p><span class=\"kd\">local</span> <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">}</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">tt</span> <span class=\"o\">=</span> <span class=\"p\">{</span><br />\n<span class=\"n\">t1</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"p\">,</span><br />\n<span class=\"n\">t2</span> <span class=\"o\">=</span> <span class=\"n\">t</span><br />\n<span class=\"p\">}</span></p>\n<p><span class=\"kd\">local</span> <span class=\"n\">tcopy</span> <span class=\"o\">=</span> <span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">tt</span><span class=\"p\">)</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tt</span><span class=\"p\">.</span><span class=\"n\">t1</span><span class=\"p\">,</span> <span class=\"n\">tt</span><span class=\"p\">.</span><span class=\"n\">t2</span><span class=\"p\">)</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tcopy</span><span class=\"p\">.</span><span class=\"n\">t1</span><span class=\"p\">,</span> <span class=\"n\">tcopy</span><span class=\"p\">.</span><span class=\"n\">t2</span><span class=\"p\">)</span></p>\n<p><span class=\"c1\">–输出</span><br />\n<span class=\"c1\">–table: 0074D710</span><br />\n<span class=\"c1\">–table: 0074D710 table: 0074D710</span><br />\n<span class=\"c1\">–table: 0074CAA0 table: 0074CAA0</span><br />\n<span class=\"c1\">–可以看到，tt里面的t1和t2其实是同一个table，所以进行深拷贝的时候要保持这种联系，而不是在深拷贝后里面变成两个独立的table，使用了lookup_table来保存已经拷贝过的对象。</span><br />\n<span class=\"c1\">–而且使用lookup_table还避免了下面这种情况</span></p>\n<p><span class=\"n\">t</span><span class=\"p\">.</span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">t</span> <span class=\"c1\">– 有个索引指向自己，如果不用lookup_table的话保存的话会进入死循环</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">t1</span> <span class=\"o\">=</span> <span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">.</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">b</span><span class=\"p\">)</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">t1</span><span class=\"p\">)</span><br />\n<span class=\"c1\">–输出</span><br />\n<span class=\"c1\">–table: 007EAEA8 table: 007ED1B8</span><br />\n<span class=\"c1\">–table: 007EAEA8 table: 007ED1B8</span><br />\n</code></pre></div></div></p>\n","text":" &lt;p&gt;深拷贝，只需要对table类型进行递归拷贝即可，其他类型直接用赋值拷贝或浅拷贝。&lt;/p&gt; 还有，拷贝后的table应与原table具有相同的元表，and元表不需要递归拷贝。 function deepcopy( src ) local lookup...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Towards a Methodology for Experimental Evaluation in Low","uid":"0619ac74faf0d7bb4a8371e7b7ff4263","slug":"zl/2016-01-01-139_Towards a Methodology for Experimental Evaluation ","date":"2024-04-03T03:47:33.037Z","updated":"2024-04-03T03:47:33.037Z","comments":true,"path":"api/articles/zl/2016-01-01-139_Towards a Methodology for Experimental Evaluation .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Background repeatable, reproducible, and comparable还没实现 低功耗无线的基准测试提高研究成果的重现性和可比性 解决问题的6个部分： 1.描述无线网络实验测试混杂的通用框架 2.一种成熟的实验方法，规定了如何计划、执行和报告实验结...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua table、模块与面向对象","uid":"2c7b59d286ea0f514f3312281292ce52","slug":"zl/2016-01-01-136_Lua table、模块与面向对象","date":"2024-04-03T03:47:33.036Z","updated":"2024-04-03T03:47:33.037Z","comments":true,"path":"api/articles/zl/2016-01-01-136_Lua table、模块与面向对象.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"很久之前接触过lua，最近在工作中又用到了一些，对lua这门语言又有了新的认识和理解。Lua是一门很简洁高效的语言,在openresty项目中大量使用，游戏开发中也使用lua来写一些脚本。在这里记录一下自己对lua中面向对象的理解。 table在lua中是一种kv的数据结构，也指...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}