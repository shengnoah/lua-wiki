{"title":"lua脚本解析webhooks实现自动部署","uid":"fbe4509147239e385948192a32ab2b36","slug":"zl/2016-01-01-880_lua脚本解析webhooks实现自动部署","date":"2024-04-03T03:47:36.151Z","updated":"2024-04-03T03:47:36.152Z","comments":true,"path":"api/articles/zl/2016-01-01-880_lua脚本解析webhooks实现自动部署.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h3 id=\"码云配置webhooks\"><a href=\"#码云配置webhooks\" class=\"headerlink\" title=\"码云配置webhooks\"></a>码云配置webhooks</h3><p>实现自动部署的方式有很多，可以把项目放在github用github的webhooks，但是github只能创建公开项目私有项目是要钱的。也可以使用一种相对麻烦的方式，可以在vps上建一个git仓库每次提交到vps上之后触发hook去更新blog，这种方法相对麻烦而且vps<br/>上的项目容易丢失。所以最后选择了码云，在码云上初始化一个blog项目，之后配置一个webhooks并且跑配置密码，防止url被恶意调用。</p>\n<p>如下图：<img src=\"https://olef5l6y5.qnssl.com/mayunwebhooks.png?imageView2/0/q/75|watermark/2/text/U3VuJ3MgQmxvZw==/font/5a6L5L2T/fontsize/280/fill/I0Y2MEU1Mg==/dissolve/100/gravity/SouthEast/dx/10/dy/10|imageslim\" alt=\"\"/></p>\n<h3 id=\"nginx配置\"><a href=\"#nginx配置\" class=\"headerlink\" title=\"nginx配置\"></a>nginx配置</h3><p>前提是安装了lua或者Luajit以及nginx编译了lua-nginx-module模块</p>\n<pre><code>  location /webhooks &#123;\n    content_by_lua_file blog_hook.lua;\n  &#125;\n</code></pre><p>现在开始编写lua脚本</p>\n<pre><code>ngx.req.read_body()\nlocal data = ngx.req.get_body_data()\nlocal args = ngx.req.get_uri_args()\nlocal cjson = require &#34;cjson&#34;\n<p>value = cjson.decode(data)</p>\n<p>if value[&quot;password&quot;]==&quot;your_password&quot; then</p>\n<p>os.execute(&quot;sh /www/blog_update.sh&quot;);<br />\nngx.say(&quot;OK&quot;)<br />\nngx.exit(200)</p>\n<p>else</p>\n<pre><code>ngx.exit(404)\n</code></pre>\n<p>end<br />\n</code></pre><p>这里应该注意，在获取body内容之前必须<code>ngx.req.read_body()</code>，通过<code>local data = ngx.req.get_body_data()</code>获取body内容，通过<code>local args = ngx.req.get_uri_args()</code>获取url后面携带的参数。</p></p>\n<h3 id=\"“cjson”\"><a href=\"#“cjson”\" class=\"headerlink\" title=\"“cjson”\"></a>“cjson”</h3><p>使用<a href=\"https://github.com/openresty/lua-cjson\" target=\"_blank\" rel=\"noopener noreferrer\">cjson</a>模块解析json字符串</p>\n<pre><code>$ git clone https://github.com/openresty/lua-cjson.git\n$ cd ./lua-cjson\n</code></pre><p>在编译之前需要修改一下Makefile</p>\n<pre><code>21 LUA_INCLUDE_DIR ?=   $(PREFIX)/include\n</code></pre><p>打开Makefile修改第21行，修改为</p>\n<pre><code>21 LUA_INCLUDE_DIR ?=   $(PREFIX)/include/luajit-2.0\n</code></pre><p>因为luajit默认将lua头文件放在 /usr/local/include/luajit-2.0 中，修改之后执行</p>\n<pre><code>$ make all\n$ make install\n</code></pre><p>之后就可以通过cjson解析body中的json串了，密码验证通过才可以继续调用自动更新脚本否则返回404，更新的脚本这里也列出来。</p>\n<h3 id=\"编写shell脚本\"><a href=\"#编写shell脚本\" class=\"headerlink\" title=\"编写shell脚本\"></a>编写shell脚本</h3><pre><code>#!/bin/sh\nexport PATH=$PATH:/usr/local/nodejs/bin\nexport LANG=&#34;en_US.UTF-8&#34;\nunset GIT_DIR \n<p>NowPath=<code>pwd</code><br />\nWebSite=&quot;/www&quot;<br />\nBlogPath=&quot;/www/blog&quot;</p>\n<p>if [ ! -d &quot;$BlogPath&quot; ]; then<br />\ncd $WebSite<br />\ngit clone <a href=\"mailto:git@git.oschina.net\">git@git.oschina.net</a>:sunblog/blog.git<br />\ncd $BlogPath<br />\nelse<br />\ncd $BlogPath<br />\ngit fetch --all<br />\ngit reset --hard origin/master<br />\nfi</p>\n<p>hexo clean<br />\nhexo g</p>\n<p>#awk '{message=&quot;亲爱的&quot;$1&quot;，您所关注的博客Sun‘s Blog已更新，快去围观吧！<a href=\"https://www.sunsblog.cn\">https://www.sunsblog.cn</a>&quot;;tittle=&quot;Sun’s Blog更新&quot;;system(&quot;echo &quot;&quot;message&quot;&quot; | mail -s &quot;&quot;tittle&quot;&quot; &quot;$2);}' /www/mail.txt</p>\n<p>echo 您的博客已成功更新，<a href=\"https://www.sunsblog.cn\">https://www.sunsblog.cn</a> | mail -s 博客更新成功 <a href=\"mailto:admin@sunsblog.cn\">admin@sunsblog.cn</a></p>\n<p>cd $NowPath<br />\necho &quot;deploy done&quot;<br />\nexit 0<br />\n</code></pre><p>脚本会去判断blog文件夹是否存在不存在就clone否则强制更新，每次更新成功之后都会向你自己或者其他人发送邮件，我这里使用awk读取mail<br/>.txt中的qq好友的邮箱账号去发送邮件，由于同一时间发送大量邮件可能会存在vps被封的风险。所以最好还是不要大量发送，只是每次给自己或者几个重要的人发送就好了。感兴趣的话可以自己研究awk以及sendmail。</p></p>\n","text":"码云配置webhooks实现自动部署的方式有很多，可以把项目放在github用github的webhooks，但是github只能创建公开项目私有项目是要钱的。也可以使用一种相对麻烦的方式，可以在vps上建一个git仓库每次提交到vps上之后触发hook去更新blog，这种方法相...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A0%81%E4%BA%91%E9%85%8D%E7%BD%AEwebhooks\"><span class=\"toc-text\">码云配置webhooks</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#nginx%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">nginx配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E2%80%9Ccjson%E2%80%9D\"><span class=\"toc-text\">“cjson”</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99shell%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">编写shell脚本</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua 数据类型","uid":"6c463eadf15d1d28f8d8924fee10fda2","slug":"zl/2016-01-01-87_Lua 数据类型","date":"2024-04-03T03:47:36.151Z","updated":"2024-04-03T03:47:36.151Z","comments":true,"path":"api/articles/zl/2016-01-01-87_Lua 数据类型.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 数据类型 描述 nil 这个最简单，只有值nil属于该类，表示一个无效值（在条件表达式中相当于false）。 boolean 包含两个值：false和true。 number 表示双精度类型的实浮点数 string 字符串由一对双引号或单引号来表示 function 由 C 或...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua中的布尔值","uid":"f38ed677d715d2ba631245c469d43a4a","slug":"zl/2016-01-01-877_Lua中的布尔值","date":"2024-04-03T03:47:36.150Z","updated":"2024-04-03T03:47:36.150Z","comments":true,"path":"api/articles/zl/2016-01-01-877_Lua中的布尔值.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua中的真值和假值除了nil和false为假, 其它都为真. 这意味着包括0, 空字符串, 空表都为真. 源码中关于布尔值的代码#define l_isfalse(o) (ttisnil(o) || (ttisboolean(o) &amp;&amp; bvalue(o) ==...","link":"","photos":[],"count_time":{"symbolsCount":742,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}