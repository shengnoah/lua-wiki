{"title":"Lua的require机制","uid":"cf3af81c47f105a555a6bc972ab03ba4","slug":"zl/2016-01-01-770_Lua的require机制","date":"2024-04-03T03:47:36.009Z","updated":"2024-04-03T03:47:36.009Z","comments":true,"path":"api/articles/zl/2016-01-01-770_Lua的require机制.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>今天仔细读了文档，弄清楚了Lua的模块require机制。<br/>\nLua是通过require函数来加载模块的，只需提供模块的名字，即可通过require(modname)来加载模块。<br/>\nLua是如何通过modname来载入.lua或.so的呢？</p>\n<h3 id=\"默认加载过程\">默认加载过程</h3>\n<ol>\n  <li>package.loaded[modname]中存了模块的数据，有则直接返回</li>\n  <li>顺序遍历package.searchers，获取loader\n    <blockquote>\n      <ol>\n        <li>package.preload[modname]</li>\n        <li>Lua Loader, 通过package.searchpath搜索package.path</li>\n        <li>C Loader, 通过package.searchpath搜索package.cpath</li>\n        <li>All-In-One loader</li>\n      </ol>\n    </blockquote>\n  </li>\n  <li>调用loader载入模块</li>\n  <li>将载入结果保存至package.loaded[modname]并返回结果</li>\n</ol>\n<p>可用lua模拟载入过程：</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>function findloader(modname)\n    local loader = nil\n    local ext = nil\n    for _,s in ipairs(package.searchers) do\n        loader,ext = s(modname)\n        if type(loader)==&#34;function&#34; then return loader,ext end\n    end\n    error(&#34;findloader fail&#34;)\nend\n<p>function myreq(modname)<br />\nlocal m = package.loaded[modname]<br />\nif m then return m end</p>\n<pre><code>local loader,ext = findloader(modname)\nlocal ret = loader(modname, ext) or true\npackage.loaded[modname] = ret\nreturn ret\n</code></pre>\n<p>end<br />\n</code></pre></div></div></p>\n<h3 id=\"all-in-one-loader\">All-In-One Loader</h3>\n<p>例如:</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>require(&#34;a.b.c&#34;)\n</code></pre></div></div>\n<ol>\n  <li>查找a的C library(见过程2.3)</li>\n  <li>检查它是否有luaopen_a_b_c函数</li>\n</ol>","text":"今天仔细读了文档，弄清楚了Lua的模块require机制。 Lua是通过require函数来加载模块的，只需提供模块的名字，即可通过require(modname)来加载模块。 Lua是如何通过modname来载入.lua或.so的呢？ 默认加载过程 package.loaded...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%BB%98%E8%AE%A4%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">默认加载过程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#all-in-one-loader\"><span class=\"toc-text\">All-In-One Loader</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"在Lua中调用C函数","uid":"e915da81aa7864ddfb697e914e30f001","slug":"zl/2016-01-01-772_在Lua中调用C函数","date":"2024-04-03T03:47:36.010Z","updated":"2024-04-03T03:47:36.011Z","comments":true,"path":"api/articles/zl/2016-01-01-772_在Lua中调用C函数.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua调用C语言中的函数是通过栈来进行参数传递的，这与大部分编程语言的内部函数调用的实现一致。我们先实现如下C代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua 在 Android 中应用下,具体使用","uid":"11792273231c1e7281436c1496534663","slug":"zl/2016-01-01-767_Lua 在 Android 中应用下,具体使用","date":"2024-04-03T03:47:36.008Z","updated":"2024-04-03T03:47:36.008Z","comments":true,"path":"api/articles/zl/2016-01-01-767_Lua 在 Android 中应用下,具体使用.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"转载请附原文链接： Lua 在 Android 中应用下,具体使用 一、概要在上一章节中介绍了 Android 中如何引入 Lua ，本章节主要介绍 Lua 在 Android 中的具体使用，本章节主要分为两个部分，第一部分是使用 Lua API 绘制 Android 的 Vie...","link":"","photos":[],"count_time":{"symbolsCount":"9.9k","symbolsTime":"9 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}