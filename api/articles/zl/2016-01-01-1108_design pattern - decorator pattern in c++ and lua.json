{"title":"design pattern - decorator pattern in c++ and lua","uid":"80c9b0d8afc22af69ad87c186b2a7796","slug":"zl/2016-01-01-1108_design pattern - decorator pattern in c++ and lua","date":"2024-04-03T03:47:33.004Z","updated":"2024-04-03T03:47:33.004Z","comments":true,"path":"api/articles/zl/2016-01-01-1108_design pattern - decorator pattern in c++ and lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<ul id=\"markdown-toc\">\n  <li><a href=\"#what-is-decorator-pattern\" id=\"markdown-toc-what-is-decorator-pattern\">What is Decorator Pattern</a></li>\n  <li><a href=\"#example-in-c\" id=\"markdown-toc-example-in-c\">Example in C++</a></li>\n  <li><a href=\"#example-in-lua\" id=\"markdown-toc-example-in-lua\">Example in Lua</a></li>\n</ul>\n<center><br/>\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e9/Decorator_UML_class_diagram.svg/400px-Decorator_UML_class_diagram.svg.png\" width=\"800\" itemprop=\"image\"/>\n</center>\n<p><br/>\n<a href=\"https://en.wikipedia.org/wiki/Decorator_pattern\">Decorator Pattern Wiki</a><br/></p>\n<blockquote>\n  <p>In object-oriented programming, the decorator pattern is a design pattern that allows behavior to be added to an individual object, either statically or dynamically, without affecting the behavior of other objects from the same class. The decorator pattern is often useful for adhering to the Single Responsibility Principle, as it allows functionality to be divided between classes with unique areas of concern.\n</p>\n</blockquote>\n<center><b><br/>\n一一一一一一一一一一一一一一一一一一一一一一一一<br/>\n© Hung-Chi&#39;s Blog<br/>\n<a href=\"https://hungchicheng.github.io/2017/11/07/Design-Patterns-Decorator-Pattern-in-lua-and-C++/\" id=\"link\" target=\"_blank\" rel=\"noopener noreferrer\">\n\thttps://hungchicheng.github.io/2017/11/07/Design-Patterns-Decorator-Pattern-in-lua-and-C++/\n</a><br/>\n一一一一一一一一一一一一一一一一一一一一一一一一\n</b></center>\n<p><br/></p>\n<center>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n</center>\n<h2 id=\"what-is-decorator-pattern\">What is Decorator Pattern</h2>\n<h2 id=\"example-in-c\">Example in C++</h2>\n<div class=\"language-cpp highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">#include &lt;iostream&gt;\n</span><span class=\"k\">using</span> <span class=\"k\">namespace</span> <span class=\"n\">std</span><span class=\"p\">;</span>\n<p><span class=\"k\">class</span> <span class=\"nc\">I</span> <span class=\"p\">&#123;</span><br />\n<span class=\"k\">public</span><span class=\"o\">:</span><br />\n<span class=\"k\">virtual</span> <span class=\"o\">~</span><span class=\"n\">I</span><span class=\"p\">()&#123;&#125;</span><br />\n<span class=\"k\">virtual</span> <span class=\"kt\">void</span> <span class=\"n\">show</span><span class=\"p\">()</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span><br />\n<span class=\"p\">&#125;;</span></p>\n<p><span class=\"k\">class</span> <span class=\"nc\">Hero</span><span class=\"o\">:</span> <span class=\"k\">public</span> <span class=\"n\">I</span> <span class=\"p\">&#123;</span><br />\n<span class=\"k\">public</span><span class=\"o\">:</span><br />\n<span class=\"n\">Hero</span><span class=\"p\">(</span><span class=\"n\">string</span> <span class=\"n\">n</span><span class=\"p\">)</span><span class=\"o\">:</span><span class=\"n\">name</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)&#123;&#125;</span><br />\n<span class=\"o\">~</span><span class=\"n\">Hero</span><span class=\"p\">()</span> <span class=\"p\">&#123;</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">name</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot; dtor&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"sc\">'n'</span><span class=\"p\">;</span><br />\n<span class=\"p\">&#125;</span><br />\n<span class=\"cm\">/<em>virtual</em>/</span><br />\n<span class=\"kt\">void</span> <span class=\"n\">show</span><span class=\"p\">()</span> <span class=\"p\">&#123;</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">name</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot; with &quot;</span><span class=\"p\">;</span><br />\n<span class=\"p\">&#125;</span><br />\n<span class=\"k\">private</span><span class=\"o\">:</span><br />\n<span class=\"n\">string</span> <span class=\"n\">name</span><span class=\"p\">;</span><br />\n<span class=\"p\">&#125;;</span></p>\n<p><span class=\"k\">class</span> <span class=\"nc\">Equiment</span><span class=\"o\">:</span> <span class=\"k\">public</span> <span class=\"n\">I</span> <span class=\"p\">&#123;</span><br />\n<span class=\"k\">public</span><span class=\"o\">:</span><br />\n<span class=\"n\">Equiment</span><span class=\"p\">(</span><span class=\"n\">I</span> <span class=\"o\"><em></span><span class=\"n\">inner</span><span class=\"p\">)</span> <span class=\"p\">&#123;</span><br />\n<span class=\"n\">m_wrappee</span> <span class=\"o\">=</span> <span class=\"n\">inner</span><span class=\"p\">;</span><br />\n<span class=\"p\">&#125;</span><br />\n<span class=\"o\">~</span><span class=\"n\">Equiment</span><span class=\"p\">()</span> <span class=\"p\">&#123;</span><br />\n<span class=\"k\">delete</span> <span class=\"n\">m_wrappee</span><span class=\"p\">;</span><br />\n<span class=\"p\">&#125;</span><br />\n<span class=\"cm\">/<em>virtual</em>/</span><br />\n<span class=\"kt\">void</span> <span class=\"n\">show</span><span class=\"p\">()</span> <span class=\"p\">&#123;</span><br />\n<span class=\"n\">m_wrappee</span><span class=\"o\">-&gt;</span><span class=\"n\">show</span><span class=\"p\">();</span><br />\n<span class=\"p\">&#125;</span><br />\n<span class=\"k\">private</span><span class=\"o\">:</span><br />\n<span class=\"n\">I</span> <span class=\"o\"></em></span><span class=\"n\">m_wrappee</span><span class=\"p\">;</span><br />\n<span class=\"p\">&#125;;</span></p>\n<p><span class=\"k\">class</span> <span class=\"nc\">Helmet</span><span class=\"o\">:</span> <span class=\"k\">public</span> <span class=\"n\">Equiment</span> <span class=\"p\">&#123;</span><br />\n<span class=\"k\">public</span><span class=\"o\">:</span><br />\n<span class=\"n\">Helmet</span><span class=\"p\">(</span><span class=\"n\">I</span> <span class=\"o\">*</span><span class=\"n\">core</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">Equiment</span><span class=\"p\">(</span><span class=\"n\">core</span><span class=\"p\">)&#123;&#125;</span><br />\n<span class=\"o\">~</span><span class=\"n\">Helmet</span><span class=\"p\">()</span> <span class=\"p\">&#123;</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Helmet dtor, &quot;</span><span class=\"p\">;</span><br />\n<span class=\"p\">&#125;</span><br />\n<span class=\"cm\">/<em>virtual</em>/</span><br />\n<span class=\"kt\">void</span> <span class=\"n\">show</span><span class=\"p\">()</span> <span class=\"p\">&#123;</span><br />\n<span class=\"n\">Equiment</span><span class=\"o\">::</span><span class=\"n\">show</span><span class=\"p\">();</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Helmet, &quot;</span><span class=\"p\">;</span><br />\n<span class=\"p\">&#125;</span><br />\n<span class=\"p\">&#125;;</span></p>\n<p><span class=\"k\">class</span> <span class=\"nc\">Armour</span><span class=\"o\">:</span> <span class=\"k\">public</span> <span class=\"n\">Equiment</span> <span class=\"p\">&#123;</span><br />\n<span class=\"k\">public</span><span class=\"o\">:</span><br />\n<span class=\"n\">Armour</span><span class=\"p\">(</span><span class=\"n\">I</span> <span class=\"o\">*</span><span class=\"n\">core</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">Equiment</span><span class=\"p\">(</span><span class=\"n\">core</span><span class=\"p\">)&#123;&#125;</span><br />\n<span class=\"o\">~</span><span class=\"n\">Armour</span><span class=\"p\">()</span> <span class=\"p\">&#123;</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Armour dtor, &quot;</span><span class=\"p\">;</span><br />\n<span class=\"p\">&#125;</span><br />\n<span class=\"cm\">/<em>virtual</em>/</span><br />\n<span class=\"kt\">void</span> <span class=\"n\">show</span><span class=\"p\">()</span> <span class=\"p\">&#123;</span><br />\n<span class=\"n\">Equiment</span><span class=\"o\">::</span><span class=\"n\">show</span><span class=\"p\">();</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Armour, &quot;</span><span class=\"p\">;</span><br />\n<span class=\"p\">&#125;</span><br />\n<span class=\"p\">&#125;;</span></p>\n<p><span class=\"k\">class</span> <span class=\"nc\">Boots</span><span class=\"o\">:</span> <span class=\"k\">public</span> <span class=\"n\">Equiment</span> <span class=\"p\">&#123;</span><br />\n<span class=\"k\">public</span><span class=\"o\">:</span><br />\n<span class=\"n\">Boots</span><span class=\"p\">(</span><span class=\"n\">I</span> <span class=\"o\">*</span><span class=\"n\">core</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">Equiment</span><span class=\"p\">(</span><span class=\"n\">core</span><span class=\"p\">)&#123;&#125;</span><br />\n<span class=\"o\">~</span><span class=\"n\">Boots</span><span class=\"p\">()</span> <span class=\"p\">&#123;</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Boots dtor, &quot;</span><span class=\"p\">;</span><br />\n<span class=\"p\">&#125;</span><br />\n<span class=\"cm\">/<em>virtual</em>/</span><br />\n<span class=\"kt\">void</span> <span class=\"n\">show</span><span class=\"p\">()</span> <span class=\"p\">&#123;</span><br />\n<span class=\"n\">Equiment</span><span class=\"o\">::</span><span class=\"n\">show</span><span class=\"p\">();</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;Boots, &quot;</span><span class=\"p\">;</span><br />\n<span class=\"p\">&#125;</span><br />\n<span class=\"p\">&#125;;</span></p>\n<p><span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"p\">&#123;</span><br />\n<span class=\"n\">I</span> <span class=\"o\"><em></span><span class=\"n\">hero1H</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Helmet</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">Hero</span><span class=\"p\">(</span><span class=\"s\">&quot;Hero1&quot;</span><span class=\"p\">));</span><br />\n<span class=\"n\">I</span> <span class=\"o\"></em></span><span class=\"n\">hero2HA</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Armour</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">Helmet</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">Hero</span><span class=\"p\">(</span><span class=\"s\">&quot;Hero2&quot;</span><span class=\"p\">)));</span><br />\n<span class=\"n\">I</span> <span class=\"o\"><em></span><span class=\"n\">hero3HAB</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Boots</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">Armour</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">Helmet</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">Hero</span><span class=\"p\">(</span><span class=\"s\">&quot;Hero3&quot;</span><span class=\"p\">))));</span><br />\n<span class=\"n\">I</span> <span class=\"o\"></em></span><span class=\"n\">hero4BH</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Helmet</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">Boots</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">Hero</span><span class=\"p\">(</span><span class=\"s\">&quot;Hero4&quot;</span><span class=\"p\">)));</span> <span class=\"c1\">//Hero 4 with no Armour<br />\n</span>    <span class=\"n\">hero1H</span><span class=\"o\">-&gt;</span><span class=\"n\">show</span><span class=\"p\">();</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"sc\">'n'</span><span class=\"p\">;</span><br />\n<span class=\"n\">hero2HA</span><span class=\"o\">-&gt;</span><span class=\"n\">show</span><span class=\"p\">();</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"sc\">'n'</span><span class=\"p\">;</span><br />\n<span class=\"n\">hero3HAB</span><span class=\"o\">-&gt;</span><span class=\"n\">show</span><span class=\"p\">();</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"sc\">'n'</span><span class=\"p\">;</span><br />\n<span class=\"n\">hero4BH</span><span class=\"o\">-&gt;</span><span class=\"n\">show</span><span class=\"p\">();</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"sc\">'n'</span><span class=\"p\">;</span><br />\n<span class=\"k\">delete</span> <span class=\"n\">hero1H</span><span class=\"p\">;</span><br />\n<span class=\"k\">delete</span> <span class=\"n\">hero2HA</span><span class=\"p\">;</span><br />\n<span class=\"k\">delete</span> <span class=\"n\">hero3HAB</span><span class=\"p\">;</span><br />\n<span class=\"k\">delete</span> <span class=\"n\">hero4BH</span><span class=\"p\">;</span><br />\n<span class=\"p\">&#125;</span><br />\n</code></pre></div></div></p>\n<p>Output:</p>\n<div class=\"language-console highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"go\">Hero1 with Helmet, \nHero2 with Helmet, Armour, \nHero3 with Helmet, Armour, Boots, \nHero4 with Boots, Helmet, \nHelmet dtor, Hero1 dtor\nArmour dtor, Helmet dtor, Hero2 dtor\nBoots dtor, Armour dtor, Helmet dtor, Hero3 dtor\nHelmet dtor, Boots dtor, Hero4 dtor\nProgram ended with exit code: 0\n</span></code></pre></div></div>\n<p><a href=\"https://github.com/hungchicheng/DesignPattern/blob/master/C%2B%2B/Decorator.cpp\">Download - Source Code</a><br/>\n<p><br/></p></p>\n<center>\n<script>\n(adsbygoogle = window.adsbygoogle || []).push({});\n</script>\n</center>\n<h2 id=\"example-in-lua\">Example in Lua</h2>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">function</span> <span class=\"nf\">FuncNew</span><span class=\"p\">(</span> <span class=\"n\">obj</span> <span class=\"p\">)</span> <span class=\"c1\">-- for Inheritance </span>\n    <span class=\"k\">function</span> <span class=\"nf\">obj</span><span class=\"p\">:</span><span class=\"n\">new</span><span class=\"p\">(</span> <span class=\"n\">o</span> <span class=\"p\">)</span>\n        <span class=\"n\">o</span> <span class=\"o\">=</span> <span class=\"n\">o</span> <span class=\"ow\">or</span> <span class=\"p\">&#123;&#125;</span>\n        <span class=\"nb\">setmetatable</span><span class=\"p\">(</span> <span class=\"n\">o</span><span class=\"p\">,</span> <span class=\"n\">self</span> <span class=\"p\">)</span>\n        <span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">__index</span> <span class=\"o\">=</span> <span class=\"n\">self</span>\n        <span class=\"k\">return</span> <span class=\"n\">o</span>\n    <span class=\"k\">end</span>\n    <span class=\"k\">return</span> <span class=\"n\">obj</span>\n<span class=\"k\">end</span>\n<p><span class=\"n\">Hero</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span><br />\n<span class=\"k\">function</span> <span class=\"nf\">Hero</span><span class=\"p\">:</span><span class=\"n\">create</span><span class=\"p\">(</span> <span class=\"n\">name</span> <span class=\"p\">)</span><br />\n<span class=\"k\">return</span> <span class=\"n\">FuncNew</span><span class=\"p\">(</span> <span class=\"n\">Hero</span> <span class=\"p\">):</span><span class=\"n\">new</span><span class=\"p\">(&#123;</span> <span class=\"n\">m_name</span> <span class=\"o\">=</span> <span class=\"n\">name</span> <span class=\"p\">&#125;)</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">function</span> <span class=\"nf\">Hero</span><span class=\"p\">:</span><span class=\"n\">show</span><span class=\"p\">()</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span> <span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">m_name</span> <span class=\"o\">…</span> <span class=\"s2\">&quot; with &quot;</span> <span class=\"p\">)</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"n\">Helmet</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span><br />\n<span class=\"k\">function</span> <span class=\"nf\">Helmet</span><span class=\"p\">:</span><span class=\"n\">create</span><span class=\"p\">(</span> <span class=\"n\">child</span> <span class=\"p\">)</span><br />\n<span class=\"k\">return</span> <span class=\"n\">FuncNew</span><span class=\"p\">(</span> <span class=\"n\">Helmet</span> <span class=\"p\">):</span><span class=\"n\">new</span><span class=\"p\">(&#123;</span> <span class=\"n\">m_child</span> <span class=\"o\">=</span> <span class=\"n\">child</span> <span class=\"p\">&#125;)</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">function</span> <span class=\"nf\">Helmet</span><span class=\"p\">:</span><span class=\"n\">show</span><span class=\"p\">()</span><br />\n<span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">m_child</span><span class=\"p\">:</span><span class=\"n\">show</span><span class=\"p\">()</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span> <span class=\"s2\">&quot;Helmet, &quot;</span> <span class=\"p\">)</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"n\">Armour</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span><br />\n<span class=\"k\">function</span> <span class=\"nf\">Armour</span><span class=\"p\">:</span><span class=\"n\">create</span><span class=\"p\">(</span> <span class=\"n\">child</span> <span class=\"p\">)</span><br />\n<span class=\"k\">return</span> <span class=\"n\">FuncNew</span><span class=\"p\">(</span> <span class=\"n\">Armour</span> <span class=\"p\">):</span><span class=\"n\">new</span><span class=\"p\">(&#123;</span> <span class=\"n\">m_child</span> <span class=\"o\">=</span> <span class=\"n\">child</span> <span class=\"p\">&#125;)</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">function</span> <span class=\"nf\">Armour</span><span class=\"p\">:</span><span class=\"n\">show</span><span class=\"p\">()</span><br />\n<span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">m_child</span><span class=\"p\">:</span><span class=\"n\">show</span><span class=\"p\">()</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span> <span class=\"s2\">&quot;Armour, &quot;</span> <span class=\"p\">)</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"n\">Boots</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span><br />\n<span class=\"k\">function</span> <span class=\"nf\">Boots</span><span class=\"p\">:</span><span class=\"n\">create</span><span class=\"p\">(</span> <span class=\"n\">child</span> <span class=\"p\">)</span><br />\n<span class=\"k\">return</span> <span class=\"n\">FuncNew</span><span class=\"p\">(</span> <span class=\"n\">Boots</span> <span class=\"p\">):</span><span class=\"n\">new</span><span class=\"p\">(&#123;</span> <span class=\"n\">m_child</span> <span class=\"o\">=</span> <span class=\"n\">child</span> <span class=\"p\">&#125;)</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">function</span> <span class=\"nf\">Boots</span><span class=\"p\">:</span><span class=\"n\">show</span><span class=\"p\">()</span><br />\n<span class=\"n\">self</span><span class=\"p\">.</span><span class=\"n\">m_child</span><span class=\"p\">:</span><span class=\"n\">show</span><span class=\"p\">()</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span> <span class=\"s2\">&quot;Boots, &quot;</span> <span class=\"p\">)</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"c1\">------------------------------------------------------</span></p>\n<p><span class=\"kd\">local</span> <span class=\"n\">hero1H</span> <span class=\"o\">=</span> <span class=\"n\">Helmet</span><span class=\"p\">:</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">Hero</span><span class=\"p\">:</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hero1&quot;</span><span class=\"p\">))</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">hero2HA</span> <span class=\"o\">=</span> <span class=\"n\">Armour</span><span class=\"p\">:</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">Helmet</span><span class=\"p\">:</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">Hero</span><span class=\"p\">:</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hero2&quot;</span><span class=\"p\">)))</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">hero3HAB</span> <span class=\"o\">=</span> <span class=\"n\">Boots</span><span class=\"p\">:</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">Armour</span><span class=\"p\">:</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">Helmet</span><span class=\"p\">:</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">Hero</span><span class=\"p\">:</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hero3&quot;</span><span class=\"p\">))))</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">hero4BH</span> <span class=\"o\">=</span> <span class=\"n\">Helmet</span><span class=\"p\">:</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">Boots</span><span class=\"p\">:</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">Hero</span><span class=\"p\">:</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hero4&quot;</span><span class=\"p\">)))</span></p>\n<p><span class=\"n\">hero1H</span><span class=\"p\">:</span><span class=\"n\">show</span><span class=\"p\">()</span><br />\n<span class=\"n\">hero2HA</span><span class=\"p\">:</span><span class=\"n\">show</span><span class=\"p\">()</span><br />\n<span class=\"n\">hero3HAB</span><span class=\"p\">:</span><span class=\"n\">show</span><span class=\"p\">()</span><br />\n<span class=\"n\">hero4BH</span><span class=\"p\">:</span><span class=\"n\">show</span><span class=\"p\">()</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;</span><span class=\"se\">n</span><span class=\"s2\">Lua automatically deletes objects that become garbagen&quot;</span><span class=\"p\">)</span></p>\n<p></code></pre></div></div></p>\n<p>Output:</p>\n<div class=\"language-console highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"go\">Hero1 with \nHelmet, \nHero2 with \nHelmet, \nArmour, \nHero3 with \nHelmet, \nArmour, \nBoots, \nHero4 with \nBoots, \nHelmet, \n<p>Lua automatically deletes objects that become garbage</p>\n<p>[Finished in 0.0s]<br />\n</span></code></pre></div></div></p>\n<p><a href=\"https://github.com/hungchicheng/DesignPattern/blob/master/Lua/Decorator.lua\">Download - Source Code</a><br/></p>","text":" What is Decorator Pattern Example in C++ Example in Lua Decorator Pattern Wiki In object-oriented programming, the decorator pattern is a d...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#what-is-decorator-pattern\"><span class=\"toc-text\">What is Decorator Pattern</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#example-in-c\"><span class=\"toc-text\">Example in C++</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#example-in-lua\"><span class=\"toc-text\">Example in Lua</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua-table","uid":"62c354e3a991cf37c6a0a912575be5ff","slug":"zl/2016-01-01-1112_Lua-table","date":"2024-04-03T03:47:33.005Z","updated":"2024-04-03T03:47:33.005Z","comments":true,"path":"api/articles/zl/2016-01-01-1112_Lua-table.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"by Mingyang Guan2017/9/16 14:00:13 table.pack() and table.unpack() pack函数主要是获取一个索引从一开始的table，并对这个table预定义一个字段n，表示该表的长度。例如： th&gt; t = table....","link":"","photos":[],"count_time":{"symbolsCount":430,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"design pattern - observer pattern in c++ and lua","uid":"0a15add781a9db23ff81d14c8ccc8d4b","slug":"zl/2016-01-01-1109_design pattern - observer pattern in c++ and lua","date":"2024-04-03T03:47:33.004Z","updated":"2024-04-03T03:47:33.004Z","comments":true,"path":"api/articles/zl/2016-01-01-1109_design pattern - observer pattern in c++ and lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" What is Observer Pattern Example in C++ Example in Lua Observer Pattern Wiki The observer pattern is a software design pattern in which an ...","link":"","photos":[],"count_time":{"symbolsCount":"9.2k","symbolsTime":"8 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}