{"title":"Lua中的函数和闭包","uid":"1ee79d4ad61a9c9b3a3d6ebb0e10d2d3","slug":"zl/2016-01-01-476_Lua中的函数和闭包","date":"2024-04-03T03:47:35.757Z","updated":"2024-04-03T03:47:35.757Z","comments":true,"path":"api/articles/zl/2016-01-01-476_Lua中的函数和闭包.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<div class=\"page-content\">\n<pre><code>&lt;div class=&quot;wrap-content&quot;&gt;\n  \n  &lt;p&gt;当Lua&lt;strong&gt;编译一个函数的时候，会产生一个prototype&lt;/strong&gt;，这个prototype包含了这个函数的&lt;strong&gt;虚拟机器指令&lt;/strong&gt;、&lt;strong&gt;常量值&lt;/strong&gt;和&lt;strong&gt;一些调试信息&lt;/strong&gt;。&lt;/p&gt;\n</code></pre>\n<p>在运行的时候，任何时候，<strong>Lua执行一个function…end表达式的时候，会为这个函数创建一个新的闭包（closure）</strong>。</p>\n<p>每一个闭包包含“<strong>两个引用和一个引用数组</strong>”：</p>\n<ul>\n  <li>对prototype的引用</li>\n  <li>对闭包环境的引用（这个环境是一个table，通过它可以查找全局变量）</li>\n  <li>对upvalue的引用构成的数组，可以通过这些引用来访问外部的local变量</li>\n</ul>\n<p>词法作用域和一流函数的结合为对外部的local变量的访问带来的困难。</p>\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    <span class=\"n\">add</span><span class=\"err\">函数</span>                     <span class=\"err\">调用过程</span>\n<span class=\"n\">function</span> <span class=\"n\">add</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>              <span class=\"n\">add2</span> <span class=\"o\">=</span> <span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">function</span> <span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span>       <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">add2</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">x</span><span class=\"o\">+</span><span class=\"n\">y</span>\n    <span class=\"k\">end</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n<blockquote>\n  <p>说明</p>\n  <p>在add2被调用的时候，函数体部分需要访问外部的local变量x。但是等到add2被调用的时候，创建add2的函数add已经返回了，如果变量x是在栈中被创建的，存储它的栈存储单元在函数返回时已经不存在了。</p>\n</blockquote>\n<p>大多数过程式语言，通过限制词法作用域（像Python语言），或不提供一流函数（像Pascal语言），或都限制两者（像C语言），来解决上面对访问外部变量的local变量困难的问题。研究表明，非纯正的函数式语言，像Scheme和ML语言，对闭包的编译技术创建了一大堆知识。但是这些努力并没有限制编译器的复杂度。比如，仅仅Bigloo的控制流分析，一种优化的scheme编译器，是Lua的实现的10倍大。</p>\n<p><strong>Lua使用一个叫做upvalue的结构来实现闭包</strong>。对任何外部的local变量的访问都是通过upvalue来进行的。upvalue原本指向变量所在的栈的槽位。当变量离开了作用域，变量会迁移到upvalue本身的槽位中。因为变量是间接通过upvalue中的指针访问的，这个迁移对任何读写变量的代码都是透明的。不像内部函数，声明变量的函数访问变量就像访问自己的local变量一样：直接在栈中。</p>\n<p><strong>可变状态可以在闭包间正确地被共享，只要为每个变量创建至多一个upvalue结构，并在需要时重新利用它就行了</strong>。要确保这种唯一性，Lua保存了一个链表，这个链表包含了所有打开的upvalue（也就是说，这些upvalue仍然指向栈）。当Lua创建了一个闭包，会遍历所有外部的local变量。对于每个变量，如果能够在链表中找到一个打开的upvalue，就会重利用这个upvalue。否则，Lua会创建一个新的upvalue,并链接到这个upvalue。注意，搜索链表的时候，只会搜索部分节点，因为对于每个被内部函数使用的local变量，链表中至多有一个入口。一旦关闭的upvalue不再被任何闭包所使用，这个upvalue入口就会被当做垃圾回收。</p>\n<p>函数访问不属于自己的封闭函数，而属于某个外部函数的外部local变量是可能的。在这种情况下，即使闭包已经被创建，变量可能在栈中不存在。Lua通过使用flat closure解决了这个问题。使用flat closure，任何时候某个函数访问不在自己封闭函数中的外部变量，这个变量也会进入到封闭函数的闭包中。因此，当一个函数被初始化后，这个函数用到的所有闭包中的变量，要么在该函数的栈中，要么在该函数的闭包中。</p>\n<p><img src=\"https://hytc1106hwc.github.io/assets/lua/how-to-write-c-functions/open-and-closed-upvalue.png\" alt=\"Upvalue开启与关闭时结构\"/></p>\n<ul>\n  <li>\n    <p>相关资料</p>\n<pre><code>&lt;p&gt;Lua发起人向JUCS提交的论文 &lt;a href=&quot;https://hytc1106hwc.github.io/assets/attachments/The-Implementation%20-of-Lua-5.0.pdf&quot;&gt;[下载]&lt;/a&gt;&lt;/p&gt;\n</code></pre>\n  </li>\n</ul>\n<script src=\"http://qzonestyle.gtimg.cn/qzone/app/qzlike/qzopensl.js#jsdate=20111201\" charset=\"utf-8\"></script>\n<script type=\"text/javascript\">\n\t(function(){\n\t\tvar p = {\n\t\t\turl:'https://hytc1106hwc.github.io/2018/01/30/functions-and-closures-in-lua.html',\n\t\t\tshowcount:'0',/*是否显示分享总数,显示：'1'，不显示：'0' */\n\t\t\tdesc:'',/*默认分享理由(可选)*/\n\t\t\tsummary:'Lua中的函数和闭包Lua中的函数与闭包的实现机制',/*分享摘要(可选)*/\n\t\t\ttitle:'Lua中的函数和闭包',/*分享标题(可选)*/\n\t\t\tsite:'',/*分享来源 如：腾讯网(可选)*/\n\t\t\tpics:'', /*分享图片的路径(可选)*/\n\t\t\tstyle:'203',\n\t\t\twidth:98,\n\t\t\theight:22\n\t\t};\n\t\tvar s = [];\n\t\tfor(var i in p){\n\t\t\ts.push(i + '=' + encodeURIComponent(p[i]||''));\n\t\t}\n\t\t$(\"div.page-share\").append(['<a version=\"1.0\" href=\"http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?',s.join('&'),'\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" >Qzone</a>'].join(''));\n\t\t/*document.write(['<a version=\"1.0\" class=\"qzOpenerDiv\" href=\"http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?',s.join('&'),'\" target=\"_blank\" rel=\"noopener noreferrer\">分享</a>'].join(''));*/\n\t})();\n</script>\n<script src=\"/assets/js/jquery-qrcode-0.14.0.js\"></script>\n<script type=\"text/javascript\">\n\tfunction showHideWechatCode(){\n\t\t\n\t\tvar ops = {\n\t\t\t// render method: 'canvas', 'image' or 'div'\n\t\t\trender: 'canvas',\n\n\t\t\t// version range somewhere in 1 .. 40\n\t\t\tminVersion: 1,\n\t\t\tmaxVersion: 40,\n\n\t\t\t// error correction level: 'L', 'M', 'Q' or 'H'\n\t\t\tecLevel: 'L',\n\n\t\t\t// offset in pixel if drawn onto existing canvas\n\t\t\tleft: 1,\n\t\t\ttop: 1,\n\n\t\t\t// size in pixel\n\t\t\tsize: 100,\n\n\t\t\t// code color or image element\n\t\t\tfill: '#000',\n\n\t\t\t// background color or image element, null for transparent background\n\t\t\tbackground: null,\n\n\t\t\t// content\n\t\t\ttext: 'https://hytc1106hwc.github.io/2018/01/30/functions-and-closures-in-lua.html',\n\n\t\t\t// corner radius relative to module width: 0.0 .. 0.5\n\t\t\tradius: 0,\n\n\t\t\t// quiet zone in modules\n\t\t\tquiet: 0,\n\n\t\t\t// modes\n\t\t\t// 0: normal\n\t\t\t// 1: label strip\n\t\t\t// 2: label box\n\t\t\t// 3: image strip\n\t\t\t// 4: image box\n\t\t\tmode: 0,\n\n\t\t\tmSize: 0.1,\n\t\t\tmPosX: 0.5,\n\t\t\tmPosY: 0.5,\n\n\t\t\tlabel: 'no label',\n\t\t\tfontname: 'sans',\n\t\t\tfontcolor: '#000',\n\n\t\t\timage: null\n\t\t};\n\n\t\tif ($(\"div.weixin-container\").hasClass(\"loaded\"))\n\t\t{\n\t\t\t$(\"div.weixin-qrcode-img\").empty();\n\t\t\t$(\"div.weixin-container\").removeClass(\"loaded\")\n\t\t}\n\t\telse\n\t\t{\n\t\t\t$(\"div.weixin-qrcode\").html('<div class=\"weixin-qrcode-img\"></div>');\n\t\t\t$(\"div.weixin-qrcode-img\").qrcode(ops);\n\t\t\t$(\"div.weixin-container\").addClass(\"loaded\");\n\t\t}\n\t\t\n\t\t\n\t}\n\n\t(function(){\n\t\t$(\"div.page-share\").append('<a href=\"javascript:void(0)\" onclick=\"showHideWechatCode()\" rel=\"nofollow\">WeChat</a>');\n\t})();\n</script>\n<pre><code>  &lt;section class=&quot;comment-area&quot;&gt;\n</code></pre>\n  <div class=\"comment-wrapper\">\n<pre><code>&lt;script&gt;\n  (function() &#123;\n      var d = document, s = d.createElement('script');\n      s.src = '//mr-brown.disqus.com/embed.js';\n      s.setAttribute('data-timestamp', +new Date());\n      (d.head || d.body).appendChild(s);\n  &#125;)();\n&lt;/script&gt;\n&lt;noscript&gt;Please enable JavaScript to view the &lt;a href=&quot;https://disqus.com/?ref_noscript&quot;&gt;comments powered by Disqus.&lt;/a&gt;&lt;/noscript&gt;\n</code></pre>\n  </div>\n</section> \n<pre><code>&lt;/div&gt; \n</code></pre>\n  </div>","text":" &lt;div class=&quot;wrap-content&quot;&gt; &lt;p&gt;当Lua&lt;strong&gt;编译一个函数的时候，会产生一个prototype&lt;/strong&gt;，这个prototype包含了这个函数的&lt;strong...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua 学习 chapter22","uid":"4a87df76c39f3f8150fdb435e35555f2","slug":"zl/2016-01-01-477_Lua 学习 chapter22 ","date":"2024-04-03T03:47:35.757Z","updated":"2024-04-03T03:47:35.758Z","comments":true,"path":"api/articles/zl/2016-01-01-477_Lua 学习 chapter22 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"目录 具有动态名称的全局变量 非全局环境 环境和模块 只有疯狂过，你才知道自己究竟能不能成功。 具有动态名称的全局变量 在lua中，所有的全局变量都被存在_G中，通过_G[name]可以访问到任意一个全局变量。在lua中，全局变量不需要声明就可以直接使用，但是这个可能会造成非常难...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua基础","uid":"20b614bdbdbfb7a95408c75ff42d548f","slug":"zl/2016-01-01-474_Lua基础","date":"2024-04-03T03:47:35.756Z","updated":"2024-04-03T03:47:35.756Z","comments":true,"path":"api/articles/zl/2016-01-01-474_Lua基础.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua是一种灵活小巧的脚本语言，可以被嵌入应用程序中，为应用程序提供灵活的扩展和定制功能。 注释单行注释12print(&#34;Hello World!&#34;) -- 另一个单行注释 多行注释1234--[[ 多行注释 另一个多行注释--]] 变量变量标识符Lua的变量标识...","link":"","photos":[],"count_time":{"symbolsCount":"6.6k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}