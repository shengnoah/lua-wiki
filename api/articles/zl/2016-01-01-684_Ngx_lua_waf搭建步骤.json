{"title":"Ngx_lua_waf搭建步骤","uid":"daec95cc6d5bb06273470ed3fafb0d44","slug":"zl/2016-01-01-684_Ngx_lua_waf搭建步骤","date":"2024-04-03T03:47:35.918Z","updated":"2024-04-03T03:47:35.918Z","comments":true,"path":"api/articles/zl/2016-01-01-684_Ngx_lua_waf搭建步骤.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>Ngx_lua_waf是一个web防火墙，主要通过lua实现，安装简单，性能优异，由国人loveshell开发。<br/></p>\n<blockquote>\n<p><a href=\"https://github.com/loveshell/ngx_lua_waf\" target=\"_blank\" rel=\"external noopener noreferrer\">ngx_lua_waf</a>是我刚入职趣游时候开发的一个基于ngx_lua的web应用防火墙。</p>\n<p>代码很简单，开发初衷主要是使用简单，高性能和轻量级。</p>\n<p>现在开源出来，遵从MIT许可协议。其中包含我们的过滤规则。如果大家有什么建议和想法，欢迎和我一起完善。</p>\n</blockquote>\n<p>主页上介绍的安装流程不是很详细，我这里详细记录了一下。</p>\n<h2 id=\"安装openresty平台\"><a href=\"#安装openresty平台\" class=\"headerlink\" title=\"安装openresty平台\"></a>安装openresty平台</h2><p>OpenResty 是一个基于 NGINX 和 LuaJIT 的 Web 平台,相当于集成了lua的Nginx，比自己编译安装Nginx+Lua要方便很多。步骤如下：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\">su</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\"># 预装环境</span></span><br/><span class=\"line\">yum install readline-devel pcre-devel openssl-devel gcc</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\"># 下载安装包</span></span><br/><span class=\"line\">wget https://openresty.org/download/openresty-1.9.7.4.tar.gz</span><br/><span class=\"line\">tar zxvf openresty-1.9.7.4.tar.gz</span><br/><span class=\"line\"><span class=\"built_in\">cd</span> openresty-1.9.7.4.tar.gz</span><br/><span class=\"line\">./configure</span><br/><span class=\"line\">make &amp;&amp; make install</span><br/></pre></td></tr></tbody></table></figure>\n<p>安装如果出现问题，可以参考 <a href=\"http://openresty.org/cn/installation.html\" target=\"_blank\" rel=\"external noopener noreferrer\">http://openresty.org/cn/installation.html</a></p>\n<p>默认安装位置在/usr/local/openresty/nginx，修改conf/nginx.conf指定运行nginx worker的用户：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">user nginx;</span><br/><span class=\"line\">worker_processes  1;</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log;</span></span><br/><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log  notice;</span></span><br/><span class=\"line\"><span class=\"comment\">#error_log  logs/error.log  info;</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">#pid        logs/nginx.pid;</span></span><br/></pre></td></tr></tbody></table></figure>\n<p>如果没有nginx用户，在root权限下运行useradd nginx即可添加。</p>\n<p>如果是用systemctl管理服务，创建/lib/systemd/system/nginx.service文件，填写如下内容：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br/><span class=\"line\">Description=nginx</span><br/><span class=\"line\">After=network.target</span><br/><span class=\"line\"></span><br/><span class=\"line\">[Service]</span><br/><span class=\"line\">Type=forking</span><br/><span class=\"line\">ExecStart=/usr/<span class=\"built_in\">local</span>/openresty/nginx/sbin/nginx</span><br/><span class=\"line\">ExecReload=/usr/<span class=\"built_in\">local</span>/openresty/nginx/sbin/nginx <span class=\"_\">-s</span> reload</span><br/><span class=\"line\">ExecStop=/usr/<span class=\"built_in\">local</span>/openresty/nginx/sbin/nginx <span class=\"_\">-s</span> stop</span><br/><span class=\"line\">PrivateTmp=<span class=\"literal\">true</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">[Install]</span><br/><span class=\"line\">WantedBy=multi-user.target</span><br/></pre></td></tr></tbody></table></figure>\n<p>即可使用systemctl命令管理nginx服务：</p>\n<ul>\n<li><p><strong>启动</strong> systemctl start nginx</p>\n</li>\n<li><p><strong>关闭</strong> systemctl stop nginx</p>\n</li>\n<li><p><strong>重启</strong> systemctl restart nginx</p>\n</li>\n<li><p><strong>开启自启动</strong> systemctl enable nginx</p>\n</li>\n</ul>\n<h2 id=\"部署Ngx-lua-waf\"><a href=\"#部署Ngx-lua-waf\" class=\"headerlink\" title=\"部署Ngx_lua_waf\"></a>部署Ngx_lua_waf</h2><p>下载安装包到nginx配置目录，重命名为waf：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/<span class=\"built_in\">local</span>/openresty/nginx/conf</span><br/><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/loveshell/ngx_lua_waf.git waf</span><br/></pre></td></tr></tbody></table></figure>\n<p>然后修改Nginx.conf，在http下面增加以下waf配置：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">http {</span><br/><span class=\"line\">    include       mime.types;</span><br/><span class=\"line\">    default_<span class=\"built_in\">type</span>  application/octet-stream;</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"comment\"># Lua包的路径</span></span><br/><span class=\"line\">    lua_package_path <span class=\"string\">&#34;/usr/local/openresty/nginx/conf/waf/?.lua&#34;</span>;</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"comment\"># Lua运行时最大内存</span></span><br/><span class=\"line\">    lua_shared_dict <span class=\"built_in\">limit</span> 10m;</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"comment\"># Waf启动脚本</span></span><br/><span class=\"line\">    init_by_lua_file /usr/<span class=\"built_in\">local</span>/openresty/nginx/conf/waf/init.lua;</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"comment\"># Waf过滤逻辑脚本</span></span><br/><span class=\"line\">    access_by_lua_file /usr/<span class=\"built_in\">local</span>/openresty/nginx/conf/waf/waf.lua;</span><br/><span class=\"line\"></span><br/><span class=\"line\">    ···</span><br/></pre></td></tr></tbody></table></figure>\n<p>然后配置waf下的config.lua文件，主要是waf规则目录(RulePath)和日志目录(logdir):</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">RulePath = <span class=\"string\">&#34;/usr/local/openresty/nginx/conf/waf/wafconf&#34;</span></span><br/><span class=\"line\"><span class=\"comment\">--规则存放目录</span></span><br/><span class=\"line\">attacklog = <span class=\"string\">&#34;off&#34;</span></span><br/><span class=\"line\"><span class=\"comment\">--是否开启攻击信息记录，需要配置logdir</span></span><br/><span class=\"line\">logdir = <span class=\"string\">&#34;/usr/local/openresty/nginx/logs/hack/&#34;</span></span><br/><span class=\"line\"><span class=\"comment\">--log存储目录，该目录需要用户自己新建，且需要nginx用户的可写权限</span></span><br/><span class=\"line\">UrlDeny=<span class=\"string\">&#34;on&#34;</span></span><br/><span class=\"line\"><span class=\"comment\">--是否拦截url访问</span></span><br/><span class=\"line\">Redirect=<span class=\"string\">&#34;on&#34;</span></span><br/><span class=\"line\"><span class=\"comment\">--是否拦截后重定向</span></span><br/><span class=\"line\">CookieMatch = <span class=\"string\">&#34;on&#34;</span></span><br/><span class=\"line\"><span class=\"comment\">--是否拦截cookie攻击</span></span><br/><span class=\"line\">postMatch = <span class=\"string\">&#34;on&#34;</span> </span><br/><span class=\"line\"><span class=\"comment\">--是否拦截post攻击</span></span><br/><span class=\"line\">whiteModule = <span class=\"string\">&#34;on&#34;</span> </span><br/><span class=\"line\"><span class=\"comment\">--是否开启URL白名单</span></span><br/><span class=\"line\">black_fileExt={<span class=\"string\">&#34;php&#34;</span>,<span class=\"string\">&#34;jsp&#34;</span>}</span><br/><span class=\"line\"><span class=\"comment\">--填写不允许上传文件后缀类型</span></span><br/><span class=\"line\">ipWhitelist={<span class=\"string\">&#34;127.0.0.1&#34;</span>}</span><br/><span class=\"line\"><span class=\"comment\">--ip白名单，多个ip用逗号分隔</span></span><br/><span class=\"line\">ipBlocklist={<span class=\"string\">&#34;1.0.0.1&#34;</span>}</span><br/><span class=\"line\"><span class=\"comment\">--ip黑名单，多个ip用逗号分隔</span></span><br/><span class=\"line\">CCDeny=<span class=\"string\">&#34;on&#34;</span></span><br/><span class=\"line\"><span class=\"comment\">--是否开启拦截cc攻击(需要nginx.conf的http段增加lua_shared_dict limit 10m;)</span></span><br/><span class=\"line\">CCrate = <span class=\"string\">&#34;100/60&#34;</span></span><br/><span class=\"line\"><span class=\"comment\">--设置cc攻击频率，单位为秒.</span></span><br/><span class=\"line\"><span class=\"comment\">--默认1分钟同一个IP只能请求同一个地址100次</span></span><br/><span class=\"line\">html=<span class=\"string\">[[Please go away~~]]</span></span><br/><span class=\"line\"><span class=\"comment\">--警告内容,可在中括号内自定义</span></span><br/><span class=\"line\">备注:不要乱动双引号，区分大小写</span><br/></pre></td></tr></tbody></table></figure>\n<p>logdir目录尤其注意，需要用户自行创建，并且设置nginx用户可写，否则不会生成拦截日志也不会报错。</p>\n<h2 id=\"规则\"><a href=\"#规则\" class=\"headerlink\" title=\"规则\"></a>规则</h2><p>规则文件在wafconf下面，分为:</p>\n<ul>\n<li><p><code>args</code></p>\n</li>\n<li><p><code>cookie</code> </p>\n</li>\n<li><p><code>post</code></p>\n</li>\n<li><p><code>url</code></p>\n</li>\n<li><p><code>user-agent</code></p>\n</li>\n<li><p><code>whiteurl</code></p>\n</li>\n</ul>\n<p>文件一行一条规则，基于正则表达式编写，你可以根据你的需要进行修改。</p>\n<h2 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h2><p>在部署配置完成之后，执行命令systemctl restart nginx重启nginx服务，即可看到WAF效果：</p>\n<p><img src=\"https://hustlibraco.github.io//images/waf-example.png\" alt=\"waf-example\"/></p>\n<p>拦截页面内容配置在config.lua的html字段中，你可以自定义更美观的样式。</p>","text":"Ngx_lua_waf是一个web防火墙，主要通过lua实现，安装简单，性能优异，由国人loveshell开发。 ngx_lua_waf是我刚入职趣游时候开发的一个基于ngx_lua的web应用防火墙。 代码很简单，开发初衷主要是使用简单，高性能和轻量级。 现在开源出来，遵从MI...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85openresty%E5%B9%B3%E5%8F%B0\"><span class=\"toc-text\">安装openresty平台</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%83%A8%E7%BD%B2Ngx-lua-waf\"><span class=\"toc-text\">部署Ngx_lua_waf</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%84%E5%88%99\"><span class=\"toc-text\">规则</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">效果</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Linux 下 lua 开发环境安装及安装 luafilesystem","uid":"8f4c30a76f8d788c178eb45d61a32358","slug":"zl/2016-01-01-683_Linux 下 lua 开发环境安装及安装 luafilesystem","date":"2024-04-03T03:47:35.918Z","updated":"2024-04-03T03:47:35.918Z","comments":true,"path":"api/articles/zl/2016-01-01-683_Linux 下 lua 开发环境安装及安装 luafilesystem.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"火云邪神语录：天下武功，无坚不破，唯快不破！Nginx 的看家本领就是速度，Lua 的拿手好戏亦是速度，这两者的结合在速度上无疑有基因上的优势。 最近一直再折腾这个，干脆就稍微整理下。以防后面继续跳坑！ 安装： 1.先安装 lua 的相关依赖安装 C 开发环境由于 gcc 包需要...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"lua基本语法","uid":"aee4e303f65857e7155c42b9b734660e","slug":"zl/2016-01-01-685_lua基本语法","date":"2024-04-03T03:47:35.918Z","updated":"2024-04-03T03:47:35.919Z","comments":true,"path":"api/articles/zl/2016-01-01-685_lua基本语法.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"关键字1234and break do else elseifend false for function ifin local nil not orrepeat return then true until while 运算 数字运算 12支持+，-，*，/，…… 比如2^2 ...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}