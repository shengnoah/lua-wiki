{"title":"How  computer program are interpreted and evaluated","uid":"3c4be2ecef47570fc524a101c788355f","slug":"zl/2016-01-01-299_How  computer program are interpreted and evaluate","date":"2024-04-03T03:47:33.154Z","updated":"2024-04-03T03:47:33.154Z","comments":true,"path":"api/articles/zl/2016-01-01-299_How  computer program are interpreted and evaluate.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p><img src=\"https://user-images.githubusercontent.com/12626454/53999102-28a30300-417d-11e9-9cb5-c5cfa2642bc8.png\" alt=\"\"/></p>\n<p>花了一些时间重新捋了一遍自己关于解释器的学习笔记：<a href=\"https://github.com/xxleyi/learning_list/issues/28\">CS 61A Summer 2018 Lecture 20: Interpreters</a></p>\n<p>稍稍得了一些门道，把自己的想法记录一下。</p>\n<p>自己目前的编程以动态语言 Python 为主，想要对动态语言有一个完整的理解和掌握，解释器这部分是必须要掌握的点。</p>\n<p>简单来说，解释器就是程序的求值器。当我们花费心思构建起针对一个个功能实现的程序之后，下一步就是把那些代码喂给解释器，然后解释器把我们的代码当作一段文本，当作一些字符串一样的东西，进行解释求值。</p>\n<p>本质上就是一句话：我们写的代码之于解释器来说就是一些待求值的数据。正所谓：<strong>code is data, data is code.</strong></p>\n<p>具体来讲，解释器求值有一个通用流程：Read-Eval-Print Loop，读入-求值-打印输出 循环进行。</p>\n<p>光是这么讲还是太抽象。还需要继续拆分：</p>\n<ul>\n  <li>读入\n    <ul>\n      <li>词法分析生成「token 序列」</li>\n      <li>语义分析生成「recursive expression representation」</li>\n    </ul>\n  </li>\n  <li>求值\n    <ul>\n      <li>互递归\n        <ul>\n          <li>eval ：对表达式求值，得到过程和参数，调用 apply</li>\n          <li>apply：将过程应用于操作数，操作数本身可能是又一个表达式，调用 eval</li>\n        </ul>\n      </li>\n      <li>递归到最后，得到「程序的值」</li>\n    </ul>\n  </li>\n  <li>大部分时候，价值发生在副作用上</li>\n  <li>而我们的程序，就是让副作用可控且符合期待</li>\n</ul>\n<pre><code>\t \t    &lt;div class=&quot;push&quot;&gt;&lt;/div&gt;\n\t\t\t\t&lt;br/&gt;\n\t\t\t\t&lt;em style=&quot;margin: 0; font-size: 1rem; color: lightgray; padding-left: 1rem;&quot;&gt;不知是该恭喜，还是该怎样，总之阅读到该文的，你是第 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt; 人。每一次刷新，都是不同的自己。&lt;/em&gt;\n\t\t\t\t&lt;hr/&gt;\n</code></pre>\n","text":" 花了一些时间重新捋了一遍自己关于解释器的学习笔记：CS 61A Summer 2018 Lecture 20: Interpreters 稍稍得了一些门道，把自己的想法记录一下。 自己目前的编程以动态语言 Python 为主，想要对动态语言有一个完整的理解和掌握，解释器这部分是...","link":"","photos":[],"count_time":{"symbolsCount":987,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua用法2","uid":"c37eb63e9dd840d90dbfe0cd24262c50","slug":"zl/2016-01-01-298_lua用法2","date":"2024-04-03T03:47:33.154Z","updated":"2024-04-03T03:47:33.154Z","comments":true,"path":"api/articles/zl/2016-01-01-298_lua用法2.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"从给定的字符串得到块(函数)。lua5.3使用load()替换loadstring(). 一般如下用法：assert(loadstring(script))()f = loadstring(&#34;a = 1&#34;)语义上相当于：f = loadstring(&#34;fu...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"2.4lua控制结构","uid":"05f95be9f92ea29db6f3eec91cdcb6f0","slug":"zl/2016-01-01-29_2.4 lua 控制结构","date":"2024-04-03T03:47:33.154Z","updated":"2024-04-03T03:47:33.154Z","comments":true,"path":"api/articles/zl/2016-01-01-29_2.4 lua 控制结构.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"流程控制语句对于程序设计来说特别重要，它可以用于设定程序的逻辑结构。一般需要与条件判断语句结合使用。Lua 语言提供的控制结构有 if，while，repeat，for，并提供 break 关键字来满足更丰富的需求。 if/elseif-else 是我们熟知的一种控制结构。Lua...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}