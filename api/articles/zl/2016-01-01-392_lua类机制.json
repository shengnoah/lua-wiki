{"title":"lua类机制","uid":"06e23d8cbe40b86c0fe447e69c088be2","slug":"zl/2016-01-01-392_lua类机制","date":"2024-04-03T03:47:35.683Z","updated":"2024-04-03T03:47:35.683Z","comments":true,"path":"api/articles/zl/2016-01-01-392_lua类机制.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h2 id=\"lua类机制的简易实现\"><a href=\"#lua类机制的简易实现\" class=\"headerlink\" title=\"lua类机制的简易实现\"></a>lua类机制的简易实现</h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/><span class=\"line\">29</span><br/><span class=\"line\">30</span><br/><span class=\"line\">31</span><br/><span class=\"line\">32</span><br/><span class=\"line\">33</span><br/><span class=\"line\">34</span><br/><span class=\"line\">35</span><br/><span class=\"line\">36</span><br/><span class=\"line\">37</span><br/><span class=\"line\">38</span><br/><span class=\"line\">39</span><br/><span class=\"line\">40</span><br/><span class=\"line\">41</span><br/><span class=\"line\">42</span><br/><span class=\"line\">43</span><br/><span class=\"line\">44</span><br/><span class=\"line\">45</span><br/><span class=\"line\">46</span><br/><span class=\"line\">47</span><br/><span class=\"line\">48</span><br/><span class=\"line\">49</span><br/><span class=\"line\">50</span><br/><span class=\"line\">51</span><br/><span class=\"line\">52</span><br/><span class=\"line\">53</span><br/><span class=\"line\">54</span><br/><span class=\"line\">55</span><br/><span class=\"line\">56</span><br/><span class=\"line\">57</span><br/><span class=\"line\">58</span><br/><span class=\"line\">59</span><br/><span class=\"line\">60</span><br/><span class=\"line\">61</span><br/><span class=\"line\">62</span><br/><span class=\"line\">63</span><br/><span class=\"line\">64</span><br/><span class=\"line\">65</span><br/><span class=\"line\">66</span><br/><span class=\"line\">67</span><br/><span class=\"line\">68</span><br/><span class=\"line\">69</span><br/><span class=\"line\">70</span><br/><span class=\"line\">71</span><br/><span class=\"line\">72</span><br/><span class=\"line\">73</span><br/><span class=\"line\">74</span><br/><span class=\"line\">75</span><br/><span class=\"line\">76</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> _class={}</span><br/><span class=\"line\"> </span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(super)</span></span></span><br/><span class=\"line\">\t<span class=\"keyword\">local</span> class_type={}</span><br/><span class=\"line\">\tclass_type.ctor=<span class=\"literal\">false</span></span><br/><span class=\"line\">\tclass_type.super=super</span><br/><span class=\"line\">\tclass_type.new=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(...)</span></span> </span><br/><span class=\"line\">\t\t\t<span class=\"keyword\">local</span> obj={}</span><br/><span class=\"line\">\t\t\t<span class=\"keyword\">do</span></span><br/><span class=\"line\">\t\t\t\t<span class=\"keyword\">local</span> <span class=\"built_in\">create</span></span><br/><span class=\"line\">\t\t\t\t<span class=\"built_in\">create</span> = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(c,...)</span></span></span><br/><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> c.super <span class=\"keyword\">then</span></span><br/><span class=\"line\">\t\t\t\t\t\t<span class=\"built_in\">create</span>(c.super,...)</span><br/><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">end</span></span><br/><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> c.ctor <span class=\"keyword\">then</span></span><br/><span class=\"line\">\t\t\t\t\t\tc.ctor(obj,...)</span><br/><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">end</span></span><br/><span class=\"line\">\t\t\t\t<span class=\"keyword\">end</span></span><br/><span class=\"line\"> </span><br/><span class=\"line\">\t\t\t\t<span class=\"built_in\">create</span>(class_type,...)</span><br/><span class=\"line\">\t\t\t<span class=\"keyword\">end</span></span><br/><span class=\"line\">\t\t\t<span class=\"built_in\">setmetatable</span>(obj,{ <span class=\"built_in\">__index</span>=_class[class_type] })</span><br/><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> obj</span><br/><span class=\"line\">\t\t<span class=\"keyword\">end</span></span><br/><span class=\"line\">\t<span class=\"keyword\">local</span> vtbl={}</span><br/><span class=\"line\">\t_class[class_type]=vtbl</span><br/><span class=\"line\"> </span><br/><span class=\"line\">\t<span class=\"built_in\">setmetatable</span>(class_type,{<span class=\"built_in\">__newindex</span>=</span><br/><span class=\"line\">\t\t<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(t,k,v)</span></span></span><br/><span class=\"line\">\t\t\tvtbl[k]=v</span><br/><span class=\"line\">\t\t<span class=\"keyword\">end</span></span><br/><span class=\"line\">\t})</span><br/><span class=\"line\"> </span><br/><span class=\"line\">\t<span class=\"keyword\">if</span> super <span class=\"keyword\">then</span></span><br/><span class=\"line\">\t\t<span class=\"built_in\">setmetatable</span>(vtbl,{<span class=\"built_in\">__index</span>=</span><br/><span class=\"line\">\t\t\t<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(t,k)</span></span></span><br/><span class=\"line\">\t\t\t\t<span class=\"keyword\">local</span> ret=_class[super][k]</span><br/><span class=\"line\">\t\t\t\tvtbl[k]=ret</span><br/><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span> ret</span><br/><span class=\"line\">\t\t\t<span class=\"keyword\">end</span></span><br/><span class=\"line\">\t\t})</span><br/><span class=\"line\">\t<span class=\"keyword\">end</span></span><br/><span class=\"line\"> </span><br/><span class=\"line\">\t<span class=\"keyword\">return</span> class_type</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\">base_type=class()\t\t</span><br/><span class=\"line\"> </span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">base_type:ctor</span><span class=\"params\">(x)</span></span>\t<span class=\"comment\">-- 定义 base_type 的构造函数</span></span><br/><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&#34;base_type ctor&#34;</span>)</span><br/><span class=\"line\">\tself.x=x</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"> </span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">base_type:print_x</span><span class=\"params\">()</span></span>\t<span class=\"comment\">-- 定义一个成员函数 base_type:print_x</span></span><br/><span class=\"line\">\t<span class=\"built_in\">print</span>(self.x)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"> </span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">base_type:hello</span><span class=\"params\">()</span></span>\t<span class=\"comment\">-- 定义另一个成员函数 base_type:hello</span></span><br/><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&#34;hello base_type&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">test=class(base_type)\t<span class=\"comment\">-- 定义一个类 test 继承于 base_type</span></span><br/><span class=\"line\"> </span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test:ctor</span><span class=\"params\">()</span></span>\t<span class=\"comment\">-- 定义 test 的构造函数</span></span><br/><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&#34;test ctor&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"> </span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test:hello</span><span class=\"params\">()</span></span>\t<span class=\"comment\">-- 重载 base_type:hello 为 test:hello</span></span><br/><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&#34;hello test&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\">a=test.new(<span class=\"number\">1</span>)\t<span class=\"comment\">-- 输出两行，base_type ctor 和 test ctor 。这个对象被正确的构造了。</span></span><br/><span class=\"line\">a:print_x()\t<span class=\"comment\">-- 输出 1 ，这个是基类 base_type 中的成员函数。</span></span><br/><span class=\"line\">a:hello()\t<span class=\"comment\">-- 输出 hello test ，这个函数被重载了。</span></span><br/></pre></td></tr></tbody></table></figure>\n<h2 id=\"lua类机制的简易实现–多重继承\"><a href=\"#lua类机制的简易实现–多重继承\" class=\"headerlink\" title=\"lua类机制的简易实现–多重继承\"></a>lua类机制的简易实现–多重继承</h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/><span class=\"line\">29</span><br/><span class=\"line\">30</span><br/><span class=\"line\">31</span><br/><span class=\"line\">32</span><br/><span class=\"line\">33</span><br/><span class=\"line\">34</span><br/><span class=\"line\">35</span><br/><span class=\"line\">36</span><br/><span class=\"line\">37</span><br/><span class=\"line\">38</span><br/><span class=\"line\">39</span><br/><span class=\"line\">40</span><br/><span class=\"line\">41</span><br/><span class=\"line\">42</span><br/><span class=\"line\">43</span><br/><span class=\"line\">44</span><br/><span class=\"line\">45</span><br/><span class=\"line\">46</span><br/><span class=\"line\">47</span><br/><span class=\"line\">48</span><br/><span class=\"line\">49</span><br/><span class=\"line\">50</span><br/><span class=\"line\">51</span><br/><span class=\"line\">52</span><br/><span class=\"line\">53</span><br/><span class=\"line\">54</span><br/><span class=\"line\">55</span><br/><span class=\"line\">56</span><br/><span class=\"line\">57</span><br/><span class=\"line\">58</span><br/><span class=\"line\">59</span><br/><span class=\"line\">60</span><br/><span class=\"line\">61</span><br/><span class=\"line\">62</span><br/><span class=\"line\">63</span><br/><span class=\"line\">64</span><br/><span class=\"line\">65</span><br/><span class=\"line\">66</span><br/><span class=\"line\">67</span><br/><span class=\"line\">68</span><br/><span class=\"line\">69</span><br/><span class=\"line\">70</span><br/><span class=\"line\">71</span><br/><span class=\"line\">72</span><br/><span class=\"line\">73</span><br/><span class=\"line\">74</span><br/><span class=\"line\">75</span><br/><span class=\"line\">76</span><br/><span class=\"line\">77</span><br/><span class=\"line\">78</span><br/><span class=\"line\">79</span><br/><span class=\"line\">80</span><br/><span class=\"line\">81</span><br/><span class=\"line\">82</span><br/><span class=\"line\">83</span><br/><span class=\"line\">84</span><br/><span class=\"line\">85</span><br/><span class=\"line\">86</span><br/><span class=\"line\">87</span><br/><span class=\"line\">88</span><br/><span class=\"line\">89</span><br/><span class=\"line\">90</span><br/><span class=\"line\">91</span><br/><span class=\"line\">92</span><br/><span class=\"line\">93</span><br/><span class=\"line\">94</span><br/><span class=\"line\">95</span><br/><span class=\"line\">96</span><br/><span class=\"line\">97</span><br/><span class=\"line\">98</span><br/><span class=\"line\">99</span><br/><span class=\"line\">100</span><br/><span class=\"line\">101</span><br/><span class=\"line\">102</span><br/><span class=\"line\">103</span><br/><span class=\"line\">104</span><br/><span class=\"line\">105</span><br/><span class=\"line\">106</span><br/><span class=\"line\">107</span><br/><span class=\"line\">108</span><br/><span class=\"line\">109</span><br/><span class=\"line\">110</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">search</span><span class=\"params\">(classes, key)</span></span></span><br/><span class=\"line\">    <span class=\"keyword\">for</span> i = <span class=\"number\">1</span>, #classes <span class=\"keyword\">do</span></span><br/><span class=\"line\">        <span class=\"keyword\">local</span> value = classes[i][key];</span><br/><span class=\"line\">        <span class=\"keyword\">if</span> value ~= <span class=\"literal\">nil</span> <span class=\"keyword\">then</span></span><br/><span class=\"line\">            <span class=\"keyword\">return</span> value;</span><br/><span class=\"line\">        <span class=\"keyword\">end</span></span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(fun,...)</span></span></span><br/><span class=\"line\">    <span class=\"keyword\">local</span> class_type={}</span><br/><span class=\"line\">    class_type.ctor=<span class=\"literal\">false</span></span><br/><span class=\"line\">    <span class=\"keyword\">local</span> parents = {...}</span><br/><span class=\"line\">    <span class=\"keyword\">if</span> #parents  &gt; <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br/><span class=\"line\">        class_type.super=parents</span><br/><span class=\"line\">    <span class=\"keyword\">else</span></span><br/><span class=\"line\">        class_type.super=<span class=\"literal\">nil</span></span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\">    class_type.fun = fun</span><br/><span class=\"line\">    class_type.new=<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(...)</span></span></span><br/><span class=\"line\">        <span class=\"keyword\">local</span> obj</span><br/><span class=\"line\">        <span class=\"keyword\">if</span> class_type.fun <span class=\"keyword\">then</span></span><br/><span class=\"line\">            obj = class_type.fun(...)</span><br/><span class=\"line\">        <span class=\"keyword\">else</span></span><br/><span class=\"line\">            obj = {}</span><br/><span class=\"line\">        <span class=\"keyword\">end</span></span><br/><span class=\"line\">        <span class=\"keyword\">do</span></span><br/><span class=\"line\">            <span class=\"keyword\">local</span> <span class=\"built_in\">create</span></span><br/><span class=\"line\">            <span class=\"built_in\">create</span> = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(c,...)</span></span></span><br/><span class=\"line\">                <span class=\"keyword\">if</span> c.super <span class=\"keyword\">then</span></span><br/><span class=\"line\">                    <span class=\"keyword\">for</span> i = <span class=\"number\">1</span>, #c.super <span class=\"keyword\">do</span></span><br/><span class=\"line\">                        <span class=\"built_in\">create</span>(c.super[i],...)</span><br/><span class=\"line\">                    <span class=\"keyword\">end</span></span><br/><span class=\"line\">                <span class=\"keyword\">end</span></span><br/><span class=\"line\">                <span class=\"keyword\">if</span> c.ctor <span class=\"keyword\">then</span></span><br/><span class=\"line\">                    c.ctor(obj,...)</span><br/><span class=\"line\">                <span class=\"keyword\">end</span></span><br/><span class=\"line\">            <span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">            <span class=\"built_in\">create</span>(class_type,...)</span><br/><span class=\"line\">        <span class=\"keyword\">end</span></span><br/><span class=\"line\">        <span class=\"built_in\">setmetatable</span>(obj,{ <span class=\"built_in\">__index</span>=class_type })</span><br/><span class=\"line\">        <span class=\"keyword\">return</span> obj</span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"keyword\">if</span> class_type.super <span class=\"keyword\">then</span></span><br/><span class=\"line\">        <span class=\"built_in\">setmetatable</span>(class_type,{<span class=\"built_in\">__index</span>=</span><br/><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(t,k)</span></span></span><br/><span class=\"line\">                    <span class=\"keyword\">local</span> ret=search(class_type.super,k)</span><br/><span class=\"line\">                    class_type[k]=ret</span><br/><span class=\"line\">                    <span class=\"keyword\">return</span> ret</span><br/><span class=\"line\">                <span class=\"keyword\">end</span></span><br/><span class=\"line\">            })</span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"keyword\">return</span> class_type</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> base_type=class()\t\t</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">base_type:ctor</span><span class=\"params\">(x)</span></span>\t<span class=\"comment\">-- 定义 base_type 的构造函数</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;base_type ctor&#34;</span>)</span><br/><span class=\"line\">    self.x=x</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">base_type:print_x</span><span class=\"params\">()</span></span>\t<span class=\"comment\">-- 定义一个成员函数 base_type:print_x</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;print base_type&#34;</span>)</span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(self.x)</span><br/><span class=\"line\">    self:print_b()</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">base_type:hello</span><span class=\"params\">()</span></span>\t<span class=\"comment\">-- 定义另一个成员函数 base_type:hello</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;hello base_type&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> base_typeB=class()\t\t</span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">base_typeB:ctor</span><span class=\"params\">(x)</span></span>\t<span class=\"comment\">-- 定义 base_type 的构造函数</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;base_typeB ctor&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">base_typeB:print_b</span><span class=\"params\">()</span></span>\t<span class=\"comment\">-- 定义一个成员函数 base_type:print_x</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;print base_typeB&#34;</span>)</span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(self.x)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">base_typeB:helloB</span><span class=\"params\">()</span></span>\t<span class=\"comment\">-- 定义另一个成员函数 base_type:hello</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;hello base_typeB&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> test=class(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;fun&#34;</span>)</span><br/><span class=\"line\">    <span class=\"keyword\">return</span> {}</span><br/><span class=\"line\"><span class=\"keyword\">end</span>,</span><br/><span class=\"line\">base_typeB,base_type)\t<span class=\"comment\">-- 定义一个类 test 继承于 base_type</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test:ctor</span><span class=\"params\">()</span></span>\t<span class=\"comment\">-- 定义 test 的构造函数</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;test ctor&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test:hello</span><span class=\"params\">()</span></span>\t<span class=\"comment\">-- 重载 base_type:hello 为 test:hello</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;hello test&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> a=test.new(<span class=\"number\">1</span>)\t<span class=\"comment\">-- 输出两行，base_type ctor 和 test ctor 。这个对象被正确的构造了。</span></span><br/><span class=\"line\">a:print_x()\t<span class=\"comment\">-- 输出 1 ，这个是基类 base_type 中的成员函数。</span></span><br/><span class=\"line\">a:hello()\t<span class=\"comment\">-- 输出 hello test ，这个函数被重载了。</span></span><br/><span class=\"line\">a:helloB()</span><br/></pre></td></tr></tbody></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://blog.codingnow.com/cloud/LuaOO\" target=\"_blank\" rel=\"noopener noreferrer\">Lua 中实现面向对象</a></p>","text":"lua类机制的简易实现123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#lua%E7%B1%BB%E6%9C%BA%E5%88%B6%E7%9A%84%E7%AE%80%E6%98%93%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">lua类机制的简易实现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#lua%E7%B1%BB%E6%9C%BA%E5%88%B6%E7%9A%84%E7%AE%80%E6%98%93%E5%AE%9E%E7%8E%B0%E2%80%93%E5%A4%9A%E9%87%8D%E7%BB%A7%E6%89%BF\"><span class=\"toc-text\">lua类机制的简易实现–多重继承</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Redis 集群 Lua 操作","uid":"28aef2d24f0f724c3c4aa2b7ec317e06","slug":"zl/2016-01-01-391_Redis 集群 Lua 操作","date":"2024-04-03T03:47:35.683Z","updated":"2024-04-03T03:47:35.683Z","comments":true,"path":"api/articles/zl/2016-01-01-391_Redis 集群 Lua 操作.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"redis 集群的单键操作，基本跟单机版一样，没有太大的区别redis集群的操作相对麻烦一点，由于slot的存在，同一组key可能会被分派到不同的slot中,这会导致lua在执行多键操作时遇到错误 需要使用redis 的hashtag来将一组类似的key分配到同一个slot中，方...","link":"","photos":[],"count_time":{"symbolsCount":341,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"cocos2dx lua 闭包(匿名函数)入门实战","uid":"3a6e858fce4d017b7e8aa41a71c3f0de","slug":"zl/2016-01-01-393_cocos2dx lua 闭包(匿名函数)入门实战","date":"2024-04-03T03:47:35.683Z","updated":"2024-04-03T03:47:35.684Z","comments":true,"path":"api/articles/zl/2016-01-01-393_cocos2dx lua 闭包(匿名函数)入门实战.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"本文首先通过具体的例子讲解了Lua中闭包的概念，然后总结了闭包的应用场合，最后探讨了Lua中闭包的实现原理。 闭包的概念 在Lua中，闭包（closure）是由一个函数和该函数会访问到的非局部变量（或者是upvalue）组成的，其中非局部变量（non-local variable...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}