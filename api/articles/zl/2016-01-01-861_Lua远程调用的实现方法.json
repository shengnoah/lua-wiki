{"title":"Lua远程调用的实现方法","uid":"76e52e8255c32e959dab4087b6cfa1a6","slug":"zl/2016-01-01-861_Lua远程调用的实现方法","date":"2024-04-03T03:47:36.126Z","updated":"2024-04-03T03:47:36.126Z","comments":true,"path":"api/articles/zl/2016-01-01-861_Lua远程调用的实现方法.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>游戏开发中，客户端、服务端之间的交互是很频繁的，尤其是逻辑玩法的实现，需要大量的交互。</p>\n<p>如果所有的交互都按功能构建出不同的协议，这样即繁琐又不方便修改。</p>\n<p>通过Lua，使用远程调用可以极大的方便客户端、服务器的通信。</p>\n<p>在Lua中，通过C++告诉对方，我要调用哪个函数、传递哪些参数，来执行相关的功能。</p>\n<p>这样就不用定义一大串协议，而只需定义一种：远程调用协议。</p>\n<p>如果要对方执行相应的函数，需要传递以下信息：</p>\n<ol>\n  <li>函数名</li>\n  <li>参数</li>\n</ol>\n<p>当C++获得函数名、参数后，就可以构建RPC数据包，实现远程调用了。</p>\n<p><strong>本文讲述如何在C++中获得Lua远程调用的函数名、参数。</strong></p>\n<hr/>\n<p>例如，我想实现：</p>\n<p>客户端登录的功能，我就可以在客户端调用位于服务端的loginreq函数。</p>\n<p>具体的形式有如下两种：</p>\n<figure class=\"highlight\"><pre><code class=\"language-lua\" data-lang=\"lua\"><span class=\"n\">rpc</span><span class=\"p\">(</span><span class=\"s2\">&#34;loginreq&#34;</span><span class=\"p\">,</span> <span class=\"s2\">&#34;username&#34;</span><span class=\"p\">,</span> <span class=\"s2\">&#34;password&#34;</span><span class=\"p\">)</span>\n<span class=\"n\">server</span><span class=\"p\">.</span><span class=\"n\">loginreq</span><span class=\"p\">(</span><span class=\"s2\">&#34;username&#34;</span><span class=\"p\">,</span> <span class=\"s2\">&#34;password&#34;</span><span class=\"p\">)</span></code></pre></figure>\n<p>第一种，是直接导出一个全局函数rpc，并将函数名作为第一个参数传递过去。</p>\n<p>第二种，是导出一个全局table，以函数名作为key。</p>\n<hr/>\n<p>第一种实现比较简单：</p>\n<p>直接导出全局函数，依次获取栈的值：函数名、参数列表。</p>\n<figure class=\"highlight\"><pre><code class=\"language-cpp\" data-lang=\"cpp\"><span class=\"kt\">int</span> <span class=\"nf\">handler2</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\">*</span> <span class=\"n\">L</span><span class=\"p\">)</span> <span class=\"p\">&#123;</span>\n\t<span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\">*</span> <span class=\"n\">funcname</span> <span class=\"o\">=</span> <span class=\"n\">lua_tostring</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">);</span>\n\t<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&#34;[handler2] Call function &lt;&#34;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">funcname</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&#34;&gt; with &#34;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">lua_gettop</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">)</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&#34; params:&#34;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">endl</span><span class=\"p\">;</span>\n\t<span class=\"n\">printstack</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">);</span>\n<pre><code>&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n</code></pre>\n<p><span class=\"p\">}</span></p>\n<p><span class=\"n\">lua_pushcfunction</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">handler2</span><span class=\"p\">);</span><br />\n<span class=\"n\">lua_setglobal</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"s\">&quot;rpc&quot;</span><span class=\"p\">);</span></code></pre></figure></p>\n<hr/>\n<p>第二种相对复杂一些：</p>\n<p>导出全局table，设置metatable.__index处理table访问，Lua会将key作为第二个参数，传给__index（__index(table, key)），由此可以获得函数名。\n将函数名存储到处理函数的upvalue中，以便后续使用。</p>\n<figure class=\"highlight\"><pre><code class=\"language-cpp\" data-lang=\"cpp\"><span class=\"kt\">int</span> <span class=\"nf\">__index</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\">*</span> <span class=\"n\">L</span><span class=\"p\">)</span> <span class=\"p\">&#123;</span>\n\t<span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\">*</span> <span class=\"n\">funcname</span> <span class=\"o\">=</span> <span class=\"n\">lua_tostring</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n\t<span class=\"n\">lua_pushstring</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">funcname</span><span class=\"p\">);</span>\n\t<span class=\"n\">lua_pushcclosure</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">handler1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">);</span>\n\t<span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n<span class=\"p\">&#125;</span>\n<p><span class=\"kt\">int</span> <span class=\"nf\">handler1</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">)</span> <span class=\"p\">&#123;</span><br />\n<span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">funcname</span> <span class=\"o\">=</span> <span class=\"n\">lua_tostring</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">lua_upvalueindex</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">));</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;[handler1] Call function &lt;&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">funcname</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;&gt; with &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">lua_gettop</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">)</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot; params:&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">endl</span><span class=\"p\">;</span><br />\n<span class=\"n\">printstack</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">);</span></p>\n<pre><code>&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n</code></pre>\n<p><span class=\"p\">}</span></p>\n<p><span class=\"n\">lua_newtable</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">);</span>\t<span class=\"c1\">// server</span></p>\n<p><span class=\"n\">lua_newtable</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">);</span>\t<span class=\"c1\">// metatable</span><br />\n<span class=\"n\">lua_pushcfunction</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">__index</span><span class=\"p\">);</span><br />\n<span class=\"n\">lua_setfield</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s\">&quot;__index&quot;</span><span class=\"p\">);</span></p>\n<p><span class=\"n\">lua_setmetatable</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">);</span></p>\n<p><span class=\"n\">lua_setglobal</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"s\">&quot;server&quot;</span><span class=\"p\">);</span></code></pre></figure></p>\n<hr/>\n<p>完整代码如下：</p>\n<p>test.cpp</p>\n<figure class=\"highlight\"><pre><code class=\"language-cpp\" data-lang=\"cpp\"><span class=\"cp\">#include &lt;iostream&gt;\n</span><span class=\"k\">using</span> <span class=\"k\">namespace</span> <span class=\"n\">std</span><span class=\"p\">;</span>\n<p><span class=\"cp\">#include &quot;lua.hpp&quot;<br />\n</span><br />\n<span class=\"kt\">void</span> <span class=\"nf\">printstack</span><span class=\"p\">(</span><span class=\"n\">lua_State</span> <span class=\"o\"><em></span><span class=\"n\">L</span><span class=\"p\">)</span> <span class=\"p\">&#123;</span><br />\n<span class=\"kt\">int</span> <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">lua_gettop</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">);</span><br />\n<span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kt\">int</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;=</span> <span class=\"n\">n</span><span class=\"p\">;</span> <span class=\"o\">++</span><span class=\"n\">i</span><span class=\"p\">)</span> <span class=\"p\">&#123;</span><br />\n<span class=\"kt\">int</span> <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">lua_type</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">);</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">i</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;: (&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">lua_typename</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;) &quot;</span><span class=\"p\">;</span><br />\n<span class=\"k\">switch</span> <span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"p\">&#123;</span><br />\n<span class=\"k\">case</span> <span class=\"n\">LUA_TNIL</span><span class=\"p\">:</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;nil&quot;</span><span class=\"p\">;</span><br />\n<span class=\"k\">break</span><span class=\"p\">;</span><br />\n<span class=\"k\">case</span> <span class=\"n\">LUA_TBOOLEAN</span><span class=\"p\">:</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">lua_toboolean</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">);</span><br />\n<span class=\"k\">break</span><span class=\"p\">;</span><br />\n<span class=\"k\">case</span> <span class=\"n\">LUA_TNUMBER</span><span class=\"p\">:</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">lua_tonumber</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">);</span><br />\n<span class=\"k\">break</span><span class=\"p\">;</span><br />\n<span class=\"k\">case</span> <span class=\"n\">LUA_TSTRING</span><span class=\"p\">:</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">lua_tostring</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">i</span><span class=\"p\">);</span><br />\n<span class=\"k\">break</span><span class=\"p\">;</span><br />\n<span class=\"k\">case</span> <span class=\"n\">LUA_TTABLE</span><span class=\"p\">:</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;table&quot;</span><span class=\"p\">;</span><br />\n<span class=\"k\">break</span><span class=\"p\">;</span><br />\n<span class=\"nl\">default:</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;</em>&quot;</span><span class=\"p\">;</span><br />\n<span class=\"k\">break</span><span class=\"p\">;</span><br />\n<span class=\"p\">&#125;</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">endl</span><span class=\"p\">;</span><br />\n<span class=\"p\">&#125;</span><br />\n<span class=\"p\">&#125;</span></p>\n<p><span class=\"kt\">int</span> <span class=\"nf\">handler1</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">)</span> <span class=\"p\">&#123;</span><br />\n<span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">funcname</span> <span class=\"o\">=</span> <span class=\"n\">lua_tostring</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">lua_upvalueindex</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">));</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;[handler1] Call function &lt;&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">funcname</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;&gt; with &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">lua_gettop</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">)</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot; params:&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">endl</span><span class=\"p\">;</span><br />\n<span class=\"n\">printstack</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">);</span></p>\n<pre><code>&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n</code></pre>\n<p><span class=\"p\">}</span></p>\n<p><span class=\"kt\">int</span> <span class=\"nf\">handler2</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">)</span> <span class=\"p\">{</span><br />\n<span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">funcname</span> <span class=\"o\">=</span> <span class=\"n\">lua_tostring</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">);</span><br />\n<span class=\"n\">cout</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;[handler2] Call function &lt;&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">funcname</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot;&gt; with &quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">lua_gettop</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">)</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s\">&quot; params:&quot;</span> <span class=\"o\">&lt;&lt;</span> <span class=\"n\">endl</span><span class=\"p\">;</span><br />\n<span class=\"n\">printstack</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">);</span></p>\n<pre><code>&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n</code></pre>\n<p><span class=\"p\">}</span></p>\n<p><span class=\"kt\">int</span> <span class=\"nf\">__index</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">)</span> <span class=\"p\">{</span><br />\n<span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">funcname</span> <span class=\"o\">=</span> <span class=\"n\">lua_tostring</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">);</span><br />\n<span class=\"n\">lua_pushstring</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">funcname</span><span class=\"p\">);</span><br />\n<span class=\"n\">lua_pushcclosure</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">handler1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">);</span><br />\n<span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span><br />\n<span class=\"p\">}</span></p>\n<p><span class=\"kt\">void</span> <span class=\"nf\">regluafuncs</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\">*</span> <span class=\"n\">L</span><span class=\"p\">)</span> <span class=\"p\">{</span><br />\n<span class=\"n\">lua_newtable</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">);</span>\t<span class=\"c1\">// server</span></p>\n<pre><code>&lt;span class=&quot;n&quot;&gt;lua_newtable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\t&lt;span class=&quot;c1&quot;&gt;// metatable&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;lua_pushcfunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;lua_setfield&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#34;__index&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n\n&lt;span class=&quot;n&quot;&gt;lua_setmetatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n\n&lt;span class=&quot;n&quot;&gt;lua_setglobal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#34;server&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n\n&lt;span class=&quot;n&quot;&gt;lua_pushcfunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handler2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;lua_setglobal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#34;rpc&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n</code></pre>\n<p><span class=\"p\">}</span></p>\n<p><span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span><br />\n<span class=\"n\">lua_State</span><span class=\"o\">*</span> <span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"n\">luaL_newstate</span><span class=\"p\">();</span></p>\n<pre><code>&lt;span class=&quot;n&quot;&gt;regluafuncs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n\n&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luaL_dofile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#34;test.lua&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n</code></pre>\n<p><span class=\"p\">}</span></code></pre></figure></p>\n<p>test.lua</p>\n<figure class=\"highlight\"><pre><code class=\"language-lua\" data-lang=\"lua\"><span class=\"n\">server</span><span class=\"p\">.</span><span class=\"n\">test</span><span class=\"p\">(</span><span class=\"kc\">nil</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"kc\">true</span><span class=\"p\">,</span> <span class=\"kc\">false</span><span class=\"p\">,</span> <span class=\"s2\">&#34;abc&#34;</span><span class=\"p\">,</span> <span class=\"p\">&#123;</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s2\">&#34;hello&#34;</span><span class=\"p\">&#125;,</span> <span class=\"k\">function</span><span class=\"p\">()</span> <span class=\"k\">end</span><span class=\"p\">)</span>\n<span class=\"n\">rpc</span><span class=\"p\">(</span><span class=\"s2\">&#34;test&#34;</span><span class=\"p\">,</span> <span class=\"kc\">nil</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"kc\">true</span><span class=\"p\">,</span> <span class=\"kc\">false</span><span class=\"p\">,</span> <span class=\"s2\">&#34;abc&#34;</span><span class=\"p\">,</span> <span class=\"p\">&#123;</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s2\">&#34;hello&#34;</span><span class=\"p\">&#125;,</span> <span class=\"k\">function</span><span class=\"p\">()</span> <span class=\"k\">end</span><span class=\"p\">)</span></code></pre></figure>\n<p>执行输出：</p>\n<figure class=\"highlight\"><pre><code class=\"language-text\" data-lang=\"text\">[handler1] Call function &lt;test&gt; with 7 params:\n1: (nil) nil\n2: (number) 1\n3: (boolean) 1\n4: (boolean) 0\n5: (string) abc\n6: (table) table\n7: (function) *\n[handler2] Call function &lt;test&gt; with 8 params:\n1: (string) test\n2: (nil) nil\n3: (number) 1\n4: (boolean) 1\n5: (boolean) 0\n6: (string) abc\n7: (table) table\n8: (function) *</code></pre></figure>","text":"游戏开发中，客户端、服务端之间的交互是很频繁的，尤其是逻辑玩法的实现，需要大量的交互。 如果所有的交互都按功能构建出不同的协议，这样即繁琐又不方便修改。 通过Lua，使用远程调用可以极大的方便客户端、服务器的通信。 在Lua中，通过C++告诉对方，我要调用哪个函数、传递哪些参数，...","link":"","photos":[],"count_time":{"symbolsCount":"7.2k","symbolsTime":"7 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"nginx+lua","uid":"a773c3a9f69d581e601604c5af796ac7","slug":"zl/2016-01-01-862_nginx+lua","date":"2024-04-03T03:47:36.130Z","updated":"2024-04-03T03:47:36.132Z","comments":true,"path":"api/articles/zl/2016-01-01-862_nginx+lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"1. 安装lua编译器LuaJIT#wget http://luajit.org/download/LuaJIT-2.0.3.tar.gz#tar -xzvf LuaJIT-2.0.3.tar.gz#cd LuaJIT 2.0.3#make &amp;&amp; make ins...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"lua解析","uid":"c03ca621c9a51162fd5282a8c7245d96","slug":"zl/2016-01-01-85_lua解析","date":"2024-04-03T03:47:36.125Z","updated":"2024-04-03T03:47:36.125Z","comments":true,"path":"api/articles/zl/2016-01-01-85_lua解析.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"本lua版本为5.2.1 在lua的源码中，lua.c 实现了可执行的解释器，用于解释执行.out文件，luac.c 实现了字节码的编译器，用于将.lua文件编译为.out文件，即字节码文件。更加宏观的东西，则在打印的两份文档里，此处不详述，由于整个读入解析到解释执行的过程是先从...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}