{"title":"linux常用库的lua移植：libmcrypt的lua插件","uid":"9e32926600738e59d526b5fa520f6d70","slug":"zl/2016-01-01-596_linux常用库的lua移植：libmcrypt的lua插件","date":"2024-04-03T03:47:35.834Z","updated":"2024-04-03T03:47:35.835Z","comments":true,"path":"api/articles/zl/2016-01-01-596_linux常用库的lua移植：libmcrypt的lua插件.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>openresty的lua方案效率不错，缺点是库不全，php现成的接口应用改成lua并不容易，比如libmcrypt，这个php常用的加密库（其实nginx的lua模块加密还有个不错的原生方案，openssl，在openrestylualibresty目录下，特定的加密方式需要自行修改），第三方C库在lua里使用都可以依照本文的方法来处理。<br/>        下载libmcrypt的源代码，解压，找到正常libmcrypt库的入口C文件（源代码目录下，找int main()），这个目录libmcrypt-2.5.3src里面，找到这几个文件：cipher_test.c和aes_test.c，移植就从修改这两个文件的开始：<br/>         </p>\n<pre><code>int main()  \n&#123;  \nMCRYPT td;//设定IV向量（需要的话）  \nunsigned char IV[8]=&#123;0x12,0x34,0x56,0x78,0x90,0xab,0xcd,0xef&#125;;  \nunsigned char key[8]=&#123;0x12,0x34,0x56,0x78,0x90,0xab,0xcd,0xef&#125;;  \nint keysize;  \nnames = mcrypt_list_algorithms (ALGORITHMS_DIR, &amp;jmax);  \nmodes = mcrypt_list_modes (MODES_DIR, &amp;imax);//设定加密模式  \nfor (i=0;i&lt;imax;i++) &#123;  \nif(strcmp(modes[i],”cbc”)==0)&#123;  \ntd = mcrypt_module_open(names[j], ALGORITHMS_DIR, modes[i], MODES_DIR);//初始化  \nivsize = mcrypt_enc_get_iv_size(td);  \nmcrypt_generic_init( td, key, keysize, IV) ;  \nif (mcrypt_enc_is_block_mode(td)!=0)  \nsiz = (strlen(TEXT) / mcrypt_enc_get_block_size(td))*mcrypt_enc_get_block_size(td);  \nelse siz = strlen(TEXT);//开辟存储结果的内存  \ntext = calloc( 1, siz);  \nmemmove( text, TEXT, siz);  \n//产生结果  \nmdecrypt_generic( td, text, siz);  \nmemcmp( text, TEXT, siz);  \nmcrypt_generic_deinit(td);  \nmcrypt_module_close(td);  \nfree(text);  \nfree(key);  \nfree(IV);  \nreturn;  \n&#125;    \n</code></pre><p>保存，编译，gcc编译选项记得加lpthread之类的，运行 . 到这步，移植的逻辑被证明是正确的，接下来想办法把它做成一个弓lua调用的so文件。</p>\n<pre><code>#include “../lib/mcrypt.h”   //使用libmcrypt要加的头文件\n#include “lua.h”\n#include “lauxlib.h”\n#include “lualib.h”          //lua和C、C++交互需要的几个头文件\nunsigned char *enc(unsigned char *data);\nunsigned char *dec(unsigned char *data);   //这几个封装上面加密和解密的逻辑，一个加密，一个解密\n<p>接下来想办法把这两个函数抛给lua：</p>\n<p>static int encode(lua_State* L)<br />\n&#123;<br />\nconst char *src=lua_tostring(L,-1);<br />\nunsigned char *s=(unsigned char *)malloc(lua_strlen(L,-1)+1);<br />\nstrcpy(s,src);<br />\ns[lua_strlen(L,-1)]=(unsigned char)0x0;<br />\nunsigned char *rst=enc(s);   //在这里调用enc()加密函数<br />\nlua_pushstring(L,rst);<br />\nfree(s);<br />\nfree(rst);<br />\nreturn 1;<br />\n&#125;</p>\n<p>static int decode(lua_State* L)<br />\n&#123;<br />\nconst char <em>src=lua_tostring(L,-1);<br />\nunsigned char</em>s=(unsigned char *)malloc(lua_strlen(L,-1)+1);<br />\nstrcpy(s,src);<br />\ns[lua_strlen(L,-1)]=(unsigned char)0x0;<br />\nunsigned char *rst=dec(s);      //在这里调用dec()解密函数<br />\nlua_pushstring(L,rst);<br />\nfree(s);<br />\nfree(rst);<br />\nreturn 1;<br />\n&#125;</p>\n<p>//让so文件注册这两个函数<br />\nstatic luaL_Reg mylibs[] = &#123;<br />\n&#123;“encode”, encode&#125;,<br />\n&#123;“decode”, decode&#125;,<br />\n&#123;NULL, NULL&#125;<br />\n&#125;;</p>\n<p><a href=\"//xn--libdes4lua-vj4pi1ld5ouna261gqplgoomw3g.so\">//我们库的名字叫做libdes4lua.so</a>,最终这么写，相当于动态链接库的main<br />\nint luaopen_des4lua(lua_State* L)<br />\n&#123;<br />\nconst char* libName = “des4lua”;<br />\nluaL_register(L,libName,mylibs);  //注册，透给lua脚本<br />\nreturn 1;<br />\n&#125;<br />\n</code></pre><p>编译，<a href=\"http://xn--libdes4lua-m11qt00k.so\">得到libdes4lua.so</a>,将这个文件拷贝到openresty/lualib,openresty的lua加密库就做好了.</p></p>\n","text":"openresty的lua方案效率不错，缺点是库不全，php现成的接口应用改成lua并不容易，比如libmcrypt，这个php常用的加密库（其实nginx的lua模块加密还有个不错的原生方案，openssl，在openrestylualibresty目录下，特定的加密方式需要自...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Programming in Lua(Thrid Edition)笔记","uid":"a502732b8dc58224e972b6c53538b8c4","slug":"zl/2016-01-01-595_Programming in Lua(Thrid Edition)笔记","date":"2024-04-03T03:47:35.834Z","updated":"2024-04-03T03:47:35.834Z","comments":true,"path":"api/articles/zl/2016-01-01-595_Programming in Lua(Thrid Edition)笔记.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"7 Iterators and the Generic for 用闭包编写迭代器可以存储状态，先写一个迭代器生成器，然后生成新的迭代器1234function (t) local i = 0 return function () i = i + 1； return t[i] en...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"150.Evaluate Reverse Polish Notation","uid":"822f2b75bb566ca0a24d71cff86dfdda","slug":"zl/2016-01-01-591_150.Evaluate Reverse Polish Notation","date":"2024-04-03T03:47:35.833Z","updated":"2024-04-03T03:47:35.833Z","comments":true,"path":"api/articles/zl/2016-01-01-591_150.Evaluate Reverse Polish Notation.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Evaluate the value of an arithmetic expression in Reverse Polish Notation.Valid operators are +, -, *, /. Each operand may be an integer or...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}