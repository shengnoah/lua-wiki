{"title":"Lua","uid":"15b0cdc6d03f6c3f6bf8d3a7ff197317","slug":"zl/2016-01-01-462_Lua","date":"2024-04-03T03:47:35.743Z","updated":"2024-04-03T03:47:35.743Z","comments":true,"path":"api/articles/zl/2016-01-01-462_Lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h2 id=\"简单模式和完全模式\"><a href=\"#简单模式和完全模式\" class=\"headerlink\" title=\"简单模式和完全模式\"></a>简单模式和完全模式</h2><ul>\n<li>简单模式（simple model）拥有一个当前输入文件和一个当前输出文件，并且提供针对这些文件相关的操作。</li>\n<li>完全模式（complete model） 使用外部的文件句柄来实现。它以一种面对对象的形式，将所有的文件操作定义为文件句柄的方法。</li>\n</ul>\n<h2 id=\"打开文件\"><a href=\"#打开文件\" class=\"headerlink\" title=\"打开文件\"></a>打开文件</h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">file = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(filename [, mode])</span><br/></pre></td></tr></tbody></table></figure>\n<p>mode 选项</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">模式</th>\n<th align=\"left\">简介</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">r</td>\n<td align=\"left\">只读，文件必须存在。默认。</td>\n</tr>\n<tr>\n<td align=\"center\">w</td>\n<td align=\"left\">只写，文件存在，则写入时覆盖原有内容。文件不存在，则创建文件。</td>\n</tr>\n<tr>\n<td align=\"center\">a</td>\n<td align=\"left\">附加写入，文件存在，则从文件末尾写入。文件不存在，则创建文件。</td>\n</tr>\n<tr>\n<td align=\"center\">b</td>\n<td align=\"left\">二进制模式，与r/w/a结合使用。</td>\n</tr>\n<tr>\n<td align=\"center\">+</td>\n<td align=\"left\">表示文件可读写，与r/w/a结合使用。</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">file01 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;r&#34;</span>)</span><br/><span class=\"line\">file02 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;rb&#34;</span>)</span><br/><span class=\"line\">file03 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;w&#34;</span>)</span><br/><span class=\"line\">file04 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;wb&#34;</span>)</span><br/><span class=\"line\">file05 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;a&#34;</span>)</span><br/><span class=\"line\">file06 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;ab&#34;</span>)</span><br/><span class=\"line\">file07 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;r+&#34;</span>)</span><br/><span class=\"line\">file08 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;r+b&#34;</span>)</span><br/><span class=\"line\">file09 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;w+&#34;</span>)</span><br/><span class=\"line\">file10 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;w+b&#34;</span>)</span><br/><span class=\"line\">file11 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;a+&#34;</span>)</span><br/><span class=\"line\">file12 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;a+b&#34;</span>)</span><br/></pre></td></tr></tbody></table></figure>\n<h2 id=\"从文件读取数据\"><a href=\"#从文件读取数据\" class=\"headerlink\" title=\"从文件读取数据\"></a>从文件读取数据</h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\">file01 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;r&#34;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">input</span>(file01)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;简单模式读取的文件内容:n&#34;</span>..<span class=\"built_in\">io</span>.<span class=\"built_in\">read</span>())</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 完全模式</span></span><br/><span class=\"line\">file02 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;r&#34;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;完全模式读取的文件内容:n&#34;</span>..file02:<span class=\"built_in\">read</span>())</span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 关闭文件流</span></span><br/><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">close</span>()</span><br/><span class=\"line\">file02:<span class=\"built_in\">close</span>()</span><br/></pre></td></tr></tbody></table></figure>\n<h2 id=\"向文件写入数据\"><a href=\"#向文件写入数据\" class=\"headerlink\" title=\"向文件写入数据\"></a>向文件写入数据</h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\">file01 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;a&#34;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">output</span>(file01)</span><br/><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">write</span>(<span class=\"string\">&#34;-- 这是一行简单模式写入的文本。&#34;</span>)</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 完全模式</span></span><br/><span class=\"line\">file02 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;a&#34;</span>)</span><br/><span class=\"line\">file02:<span class=\"built_in\">write</span>(<span class=\"string\">&#34;-- 这是一行完全模式写入的文本。&#34;</span>)</span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 关闭文件流</span></span><br/><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">close</span>(file01)</span><br/><span class=\"line\">file02:<span class=\"built_in\">close</span>()</span><br/></pre></td></tr></tbody></table></figure>\n<h2 id=\"关闭文件\"><a href=\"#关闭文件\" class=\"headerlink\" title=\"关闭文件\"></a>关闭文件</h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">file01 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;r&#34;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">input</span>(file01)</span><br/><span class=\"line\">file02 = <span class=\"built_in\">io</span>.<span class=\"built_in\">open</span>(<span class=\"string\">&#34;test.lua&#34;</span>, <span class=\"string\">&#34;r&#34;</span>)</span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"built_in\">io</span>.<span class=\"built_in\">close</span>(file01)</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 完全模式</span></span><br/><span class=\"line\">file02:<span class=\"built_in\">close</span>()</span><br/></pre></td></tr></tbody></table></figure>\n<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><h3 id=\"简单模式，io的方法\"><a href=\"#简单模式，io的方法\" class=\"headerlink\" title=\"简单模式，io的方法\"></a>简单模式，io的方法</h3><p>调用方式：io.方法名()。如：io.read()</p>\n<ol>\n<li>read()</li>\n</ol>\n<p>输入文件一行数据，并把游标指向下一行开始地址。</p>\n<p>参数：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">参数</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">“*l”</td>\n<td align=\"left\">读取下一行，在文件尾 (EOF) 处返回 nil。默认。</td>\n</tr>\n<tr>\n<td align=\"center\">“*n”</td>\n<td align=\"left\">读取一个数字并返回它。</td>\n</tr>\n<tr>\n<td align=\"center\">“*a”</td>\n<td align=\"left\">从当前位置读取整个文件。</td>\n</tr>\n<tr>\n<td align=\"center\">number</td>\n<td align=\"left\">返回一个指定字符个数的字符串，或在 EOF 时返回 nil。</td>\n</tr>\n</tbody></table>\n<ol start=\"2\">\n<li>tmpfile()</li>\n</ol>\n<p>返回一个临时文件句柄，该文件以更新模式（附加）打开，程序结束时自动删除。</p>\n<ol start=\"3\">\n<li>type(file)</li>\n</ol>\n<p>检测file是否一个可用的文件句柄。</p>\n<ol start=\"4\">\n<li>flush()</li>\n</ol>\n<p>向文件写入缓冲中的所有数据。</p>\n<ol start=\"5\">\n<li>lines(optional filename)</li>\n</ol>\n<p>打开指定的文件filename为只读模式并返回一个迭代函数,每次调用将获得文件中的一行内容,当到文件尾时，将返回nil,并自动关闭文件。</p>\n<p>若不带参数时io.lines() io.input():lines(); 读取默认输入设备的内容，但结束时不关闭文件</p>\n<h3 id=\"完全模式，文件句柄的方法\"><a href=\"#完全模式，文件句柄的方法\" class=\"headerlink\" title=\"完全模式，文件句柄的方法\"></a>完全模式，文件句柄的方法</h3><p>调用方式：文件句柄:方法名()。如：file:read()。</p>\n<ol>\n<li>read()</li>\n</ol>\n<p>作用和参数与简单模式一致。</p>\n<ol start=\"2\">\n<li>seek(optional whence, optional offset)</li>\n</ol>\n<p>设置和获取当前文件位置,成功则返回最终的文件位置(按字节),失败则返回nil加错误信息。</p>\n<p>参数 whence 取值：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">值</th>\n<th align=\"left\">说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">“cur”</td>\n<td align=\"left\">从当前位置开始。默认</td>\n</tr>\n<tr>\n<td align=\"center\">“set”</td>\n<td align=\"left\">从文件头开始</td>\n</tr>\n<tr>\n<td align=\"center\">“end”</td>\n<td align=\"left\">从文件尾开始</td>\n</tr>\n</tbody></table>\n<p>offset，偏移量，默认为0。</p>\n<p>不带参数file:seek()则返回当前位置。<br/>file:seek(“set”)则定位到文件头。<br/>file:seek(“end”)则定位到文件尾并返回文件大小。</p>\n<ol start=\"3\">\n<li>flush()</li>\n</ol>\n<p>向文件写入缓冲中的所有数据。</p>","text":"简单模式和完全模式 简单模式（simple model）拥有一个当前输入文件和一个当前输出文件，并且提供针对这些文件相关的操作。 完全模式（complete model） 使用外部的文件句柄来实现。它以一种面对对象的形式，将所有的文件操作定义为文件句柄的方法。 打开文件1file...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%80%E5%8D%95%E6%A8%A1%E5%BC%8F%E5%92%8C%E5%AE%8C%E5%85%A8%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">简单模式和完全模式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">打开文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">从文件读取数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%90%91%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">向文件写入数据</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B3%E9%97%AD%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">关闭文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%80%E5%8D%95%E6%A8%A1%E5%BC%8F%EF%BC%8Cio%E7%9A%84%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">简单模式，io的方法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%8C%E5%85%A8%E6%A8%A1%E5%BC%8F%EF%BC%8C%E6%96%87%E4%BB%B6%E5%8F%A5%E6%9F%84%E7%9A%84%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">完全模式，文件句柄的方法</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua与c++的交互","uid":"b6b8b43446ae98a92d7e51b47e9bb462","slug":"zl/2016-01-01-463_lua与c++的交互","date":"2024-04-03T03:47:35.743Z","updated":"2024-04-03T03:47:35.743Z","comments":true,"path":"api/articles/zl/2016-01-01-463_lua与c++的交互.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"1.前言Lua作为一个运行效率非常高的脚本语言,简单方便,如今很多游戏开发都会用到.今天研究下c++和lua是如何交互的~ 2.c++调用lua我是在macos上实验的,过程应该和linux上类似.使用的lua版本是5.3.0. c++调用lua原理主要是通过Lua的堆栈,一方将...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"lua沙盒","uid":"e0634f6e1ca64b0c82fd90868116d14e","slug":"zl/2016-01-01-464_lua沙盒","date":"2024-04-03T03:47:35.743Z","updated":"2024-04-03T03:47:35.747Z","comments":true,"path":"api/articles/zl/2016-01-01-464_lua沙盒.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"背景知识Lua 给我的感觉是：各种内置函数和标准库的存在感都是比较强的。如果执行这句： for name in pairs(_G) do print(_G) end就会把各种环境中已存在名称的打印出来： 全局变量：比如字符串 _VERSION。内置函数：比如 print、tonu...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}