{"title":"Openrestry(Nginx+Lua)之WAF实现","uid":"80e34abb1affa04007019ffdefc3854a","slug":"zl/2016-01-01-481_Openrestry(Nginx+Lua)之WAF实现","date":"2024-04-03T03:47:35.762Z","updated":"2024-04-03T03:47:35.762Z","comments":true,"path":"api/articles/zl/2016-01-01-481_Openrestry(Nginx+Lua)之WAF实现.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<div class=\"page-image\">\n      <div class=\"cover-image\" style=\"background: url(/assets/img/post-9.jpg) center no-repeat; background-size: cover;\"></div>\n    </div>\n    <div class=\"wrapper\">\n      <div class=\"page-content\">\n        <div class=\"header-page\">\n<pre><code>      &lt;div class=&quot;page-date&quot;&gt;\n\t          &lt;span id=&quot;busuanzi_container_page_pv&quot;&gt; | 本文阅读量：&lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;&lt;/span&gt;次&lt;/span&gt;\n\t  &lt;/div&gt;\n    &lt;/div&gt;\n    &lt;h1 id=&quot;openrestry简介&quot;&gt;openrestry简介:&lt;/h1&gt;\n</code></pre>\n<ul>\n  <li>\n    <p>OpenResty®是一个基于Nginx与Lua的高性能 Web 平台，其内部集成了大量精良的 Lua 库、第三方模块以及大多数的依赖项。用于方便地搭建能够处理超高并发、扩展性极高的动态 Web 应用、Web 服务和动态网关。</p>\n  </li>\n  <li>\n    <p>OpenResty®通过汇聚各种设计精良的 Nginx 模块（主要由 OpenResty 团队自主开发），从而将 Nginx 有效地变成一个强大的通用 Web 应用平台。这样，Web 开发人员和系统工程师可以使用 Lua 脚本语言调动 Nginx 支持的各种 C 以及 Lua 模块，快速构造出足以胜任 10K 乃至 1000K 以上单机并发连接的高性能 Web 应用系统。</p>\n  </li>\n  <li>\n    <p>OpenResty®的目标是让你的Web服务直接跑在 Nginx 服务内部，充分利用 Nginx 的非阻塞 I/O 模型，不仅仅对 HTTP 客户端请求,甚至于对远程后端诸如 MySQL、PostgreSQL、Memcached 以及 Redis 等都进行一致的高性能响应。</p>\n  </li>\n</ul>\n<h2 id=\"openrestry安装部署\">openrestry安装部署:</h2>\n<ul>\n  <li>部署文档参考资料</li>\n</ul>\n<blockquote>\n  <p>https://openresty.org/cn/installation.html\nhttps://openresty.org/cn/linux-packages.html</p>\n</blockquote>\n<blockquote>\n  <p>我是在CentOS发行版下通过yum方式安装的，图个简单，毕竟openrestry的部署不是我们的重点。</p>\n</blockquote>\n<h2 id=\"openrestry的waf功能列表\">openrestry的WAF功能列表:</h2>\n<blockquote>\n  <ol>\n    <li>支持IP白名单和黑名单功能，直接将黑名单的IP访问拒绝。</li>\n    <li>支持URL白名单，将不需要过滤的URL进行定义。</li>\n    <li>支持User-Agent的过滤，匹配自定义规则中的条目，然后进行处理（返回403）。</li>\n    <li>支持CC攻击防护，单个URL指定时间的访问次数，超过设定值，直接返回403。</li>\n    <li>支持Cookie过滤，匹配自定义规则中的条目，然后进行处理（返回403）。</li>\n    <li>支持URL过滤，匹配自定义规则中的条目，如果用户请求的URL包含这些，返回403。</li>\n    <li>支持URL参数过滤，原理同上。</li>\n    <li>支持日志记录，将所有拒绝的操作，记录到日志中去。</li>\n    <li>日志记录为JSON格式，便于日志分析，例如使用ELKStack进行攻击日志收集、存储、搜索和展示。</li>\n  </ol>\n</blockquote>\n<h4 id=\"waf实现基本原理\">WAF实现基本原理:</h4>\n<blockquote>\n  <p>WAF实现 WAF一句话描述，就是解析HTTP请求（协议解析模块），规则检测（规则模块），做不同的防御动作（动作模块），并将防御过程（日志模块）记录下来。所以本文中的WAF的实现由五个模块(配置模块、协议解析模块、规则模块、动作模块、错误处理模块）组成。</p>\n</blockquote>\n<h2 id=\"openrestry启用waf配置\">openrestry启用WAF配置:</h2>\n<p><em style=\"color: red\">参考资料，感谢这两个项目人员的贡献</em></p>\n<blockquote>\n  <p>https://github.com/loveshell/ngx_lua_waf\nhttps://github.com/unixhot/waf</p>\n</blockquote>\n<ul>\n  <li>获取WAF实现的lua代码，并放到openrestry配置文件存放路径:</li>\n</ul>\n<blockquote>\n  <p>PS: yum方式安装openrestry后，程序会在部署在:<em style=\"color: red\">/usr/local/openresty</em>路径。</p>\n</blockquote>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">#git clone https://github.com/unixhot/waf.git</span>\n<span class=\"c\">#cp -a ./waf/waf /usr/local/openresty/nginx/conf/</span>\n</code></pre></div></div>\n<ul>\n  <li>修改Nginx的配置文件，加入以下配置。在nginx.conf的<em style=\"color: red\">http</em>段添加:</li>\n</ul>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">#WAF</span>\nlua_shared_dict limit 50m<span class=\"p\">;</span>\nlua_package_path <span class=\"s2\">&#34;/usr/local/openresty/nginx/conf/waf/?.lua&#34;</span><span class=\"p\">;</span>\ninit_by_lua_file <span class=\"s2\">&#34;/usr/local/openresty/nginx/conf/waf/init.lua&#34;</span><span class=\"p\">;</span>\naccess_by_lua_file <span class=\"s2\">&#34;/usr/local/openresty/nginx/conf/waf/access.lua&#34;</span><span class=\"p\">;</span>\n</code></pre></div></div>\n<ul>\n  <li>根据需要修改WAF配置参数:</li>\n</ul>\n<blockquote>\n  <p>一般需要修改WAF日志默认存放路径/tmp/,其他配置项参数的修改参考注解即可，被拦截后的提醒页面内容根据需要自行定义：</p>\n</blockquote>\n<p><img src=\"https://lichi6174.github.io//assets/img/openrestry-waf.jpg\" alt=\"openrestry-waf\"/></p>\n<ul>\n  <li>验证配置和启动openrestry服务：</li>\n</ul>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">#/usr/local/openresty/nginx/sbin/nginx –t</span>\n<span class=\"c\">#/usr/local/openresty/nginx/sbin/nginx</span>\n</code></pre></div></div>\n<h2 id=\"nginx配置参考\">nginx配置参考:</h2>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>worker_processes  4<span class=\"p\">;</span>\nevents <span class=\"o\">&#123;</span>\n    worker_connections  1024<span class=\"p\">;</span>\n<span class=\"o\">&#125;</span>\nhttp <span class=\"o\">&#123;</span>\n    include       mime.types<span class=\"p\">;</span>\n    default_type  application/octet-stream<span class=\"p\">;</span>\n    log_format  main  <span class=\"s1\">&#39;$remote_addr - $remote_user [$time_local] &#34;$request&#34; &#39;</span>\n                      <span class=\"s1\">&#39;$status $body_bytes_sent &#34;$http_referer&#34; &#39;</span>\n                      <span class=\"s1\">&#39;&#34;$http_user_agent&#34; &#34;$http_x_forwarded_for&#34;&#39;</span><span class=\"p\">;</span>\n    access_log  logs/access.log  main<span class=\"p\">;</span>\n    sendfile        on<span class=\"p\">;</span>\n    keepalive_timeout  65<span class=\"p\">;</span>\n    lua_shared_dict limit 50m<span class=\"p\">;</span>\n    lua_package_path <span class=\"s2\">&#34;/usr/local/openresty/nginx/conf/waf/?.lua&#34;</span><span class=\"p\">;</span>\n    init_by_lua_file <span class=\"s2\">&#34;/usr/local/openresty/nginx/conf/waf/init.lua&#34;</span><span class=\"p\">;</span>\n    access_by_lua_file <span class=\"s2\">&#34;/usr/local/openresty/nginx/conf/waf/access.lua&#34;</span><span class=\"p\">;</span>\n    server <span class=\"o\">&#123;</span>\n        listen       80<span class=\"p\">;</span>\n        server_name  localhost<span class=\"p\">;</span>\n        location / <span class=\"o\">&#123;</span>\n            root   html<span class=\"p\">;</span>\n            index  index.html index.htm<span class=\"p\">;</span>\n        <span class=\"o\">&#125;</span>\n        error_page   500 502 503 504  /50x.html<span class=\"p\">;</span>\n        location <span class=\"o\">=</span> /50x.html <span class=\"o\">&#123;</span>\n            root   html<span class=\"p\">;</span>\n        <span class=\"o\">&#125;</span>\n    <span class=\"o\">&#125;</span>\ninclude vhosts/<span class=\"k\">*</span>.conf<span class=\"p\">;</span>\n<span class=\"o\">&#125;</span>\n</code></pre></div></div>\n<h2 id=\"关于lua脚本获取客户端真实ip方法调整\">关于lua脚本获取客户端真实IP方法调整</h2>\n<blockquote>\n  <p>原代码获取客户端真实IP，如果经过多个代理节点传过来的X_Forwarded_For的IP值不止一个的时候会有问题。</p>\n</blockquote>\n<h3 id=\"1-此功能函数定义的脚本位置\">1. 此功能函数定义的脚本位置：</h3>\n<blockquote>\n  <p>/usr/local/openresty/nginx/conf/waf/lib.lua</p>\n</blockquote>\n<h3 id=\"2-此功能函数参考\">2. 此功能函数参考：</h3>\n<h4 id=\"方法一\">方法一：</h4>\n<ul>\n  <li>原代码：</li>\n</ul>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">--Get</span> the client IP\n<span class=\"k\">function </span>get_client_ip<span class=\"o\">()</span>\n    CLIENT_IP <span class=\"o\">=</span> ngx.req.get_headers<span class=\"o\">()[</span><span class=\"s2\">&#34;X_real_ip&#34;</span><span class=\"o\">]</span>\n    <span class=\"k\">if </span>CLIENT_IP <span class=\"o\">==</span> nil <span class=\"k\">then\n        </span>CLIENT_IP <span class=\"o\">=</span> ngx.req.get_headers<span class=\"o\">()[</span><span class=\"s2\">&#34;X_Forwarded_For&#34;</span><span class=\"o\">]</span>\n    end\n    <span class=\"k\">if </span>CLIENT_IP <span class=\"o\">==</span> nil <span class=\"k\">then\n        </span>CLIENT_IP  <span class=\"o\">=</span> ngx.var.remote_addr\n    end\n    <span class=\"k\">if </span>CLIENT_IP <span class=\"o\">==</span> nil <span class=\"k\">then\n        </span>CLIENT_IP  <span class=\"o\">=</span> <span class=\"s2\">&#34;unknown&#34;</span>\n    end\n    <span class=\"k\">return </span>CLIENT_IP\nend\n</code></pre></div></div>\n<h4 id=\"方法二\">方法二：</h4>\n<blockquote>\n  <p>部分客户端访问经过多个代理节点之后，X_Forwarded_For获得的IP地址可能不止一个，我们只取第一个ip地址即为客户端真实IP地址，比如如下日志记录：</p>\n</blockquote>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>100.116.224.220 - - <span class=\"o\">[</span>29/Nov/2018:09:14:37 +0800-1543454077.462] <span class=\"s2\">&#34;POST /api/operation/abc HTTP/1.1&#34;</span> 200 873 <span class=\"s2\">&#34;https://abc.com/2018031602388641/0.2.1811161506.32/index.html&#34;</span> <span class=\"s2\">&#34;Mozilla/5.0 (Linux; U; Android 9; zh-CN; ALP-AL00 Build/HUAWEIALP-AL00)&#34;</span> <span class=\"s2\">&#34;223.104.64.51, 11.34.31.180, 110.75.242.180&#34;</span>\n</code></pre></div></div>\n<ul>\n  <li>调整后代码(经验证有效)：</li>\n</ul>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">--Get</span> the client IP\n<span class=\"k\">function </span>get_client_ip<span class=\"o\">()</span>\n    CLIENT_IP <span class=\"o\">=</span> ngx.req.get_headers<span class=\"o\">()[</span><span class=\"s2\">&#34;X_real_ip&#34;</span><span class=\"o\">]</span>\n    <span class=\"k\">if </span>CLIENT_IP <span class=\"o\">==</span> nil <span class=\"k\">then\n        if </span>ngx.var.http_x_forwarded_for ~<span class=\"o\">=</span> nil <span class=\"k\">then\n        </span>CLIENT_IP <span class=\"o\">=</span> string.match<span class=\"o\">(</span>ngx.var.http_x_forwarded_for, <span class=\"s2\">&#34;%d+.%d+.%d+.%d+&#34;</span>, 1<span class=\"o\">)</span><span class=\"p\">;</span>\n        end\n    end\n    <span class=\"k\">if </span>CLIENT_IP <span class=\"o\">==</span> nil <span class=\"k\">then\n        </span>CLIENT_IP  <span class=\"o\">=</span> ngx.var.remote_addr or <span class=\"s1\">&#39;127.0.0.1&#39;</span>\n    end\n    <span class=\"k\">if </span>CLIENT_IP <span class=\"o\">==</span> nil <span class=\"k\">then\n        </span>CLIENT_IP  <span class=\"o\">=</span> <span class=\"s2\">&#34;unknown&#34;</span>\n    end\n    <span class=\"k\">return </span>CLIENT_IP\nend\n</code></pre></div></div>\n<h4 id=\"方法三\">方法三：</h4>\n<ul>\n  <li>调整后代码（验证无效）</li>\n</ul>\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">--Get</span> the client IP\n<span class=\"k\">function </span>get_client_ip<span class=\"o\">()</span>\n    HEADERS <span class=\"o\">=</span> ngx.req.get_headers<span class=\"o\">()</span>\n    CLIENT_IP <span class=\"o\">=</span> HEADERS[<span class=\"s2\">&#34;X_real_ip&#34;</span><span class=\"o\">]</span>\n    <span class=\"k\">if </span>CLIENT_IP <span class=\"o\">==</span> nil <span class=\"k\">then\n       if </span><span class=\"nb\">type</span><span class=\"o\">(</span>HEADERS[<span class=\"s2\">&#34;x-forwarded-for&#34;</span><span class=\"o\">])</span> <span class=\"o\">==</span> <span class=\"s2\">&#34;table&#34;</span> <span class=\"k\">then\n           </span>CLIENT_IP <span class=\"o\">=</span> HEADERS[<span class=\"s2\">&#34;x-forwarded-for&#34;</span><span class=\"o\">][</span>1]\n       <span class=\"k\">else\n           </span>CLIENT_IP <span class=\"o\">=</span> HEADERS[<span class=\"s2\">&#34;x-forwarded-for&#34;</span><span class=\"o\">]</span>\n       end\n    end\n    <span class=\"k\">if </span>CLIENT_IP <span class=\"o\">==</span> nil <span class=\"k\">then\n        </span>CLIENT_IP  <span class=\"o\">=</span> ngx.var.remote_addr or <span class=\"s1\">&#39;127.0.0.1&#39;</span>\n    end\n    <span class=\"k\">if </span>CLIENT_IP <span class=\"o\">==</span> nil <span class=\"k\">then\n        </span>CLIENT_IP  <span class=\"o\">=</span> <span class=\"s2\">&#34;unknown&#34;</span>\n    end\n    <span class=\"k\">return </span>CLIENT_IP\nend\n</code></pre></div></div>\n<pre><code>    &lt;div class=&quot;page-footer&quot;&gt;\n      &lt;div class=&quot;page-tag&quot;&gt;\n        &lt;span&gt;Tags:&lt;/span&gt;\n        \n        &lt;a href=&quot;/tags#Blog&quot; class=&quot;tag&quot;&gt;| Blog&lt;/a&gt;\n        \n        &lt;a href=&quot;/tags#security&quot; class=&quot;tag&quot;&gt;| security&lt;/a&gt;\n        \n        &lt;a href=&quot;/tags#web&quot; class=&quot;tag&quot;&gt;| web&lt;/a&gt;\n        \n        &lt;a href=&quot;/tags#openrestry&quot; class=&quot;tag&quot;&gt;| openrestry&lt;/a&gt;\n        \n      &lt;/div&gt;\n\n      \n      &lt;div id=&quot;gitmentContainer&quot;&gt;&lt;/div&gt;\n        &lt;link rel=&quot;stylesheet&quot; href=&quot;https://jjeejj.github.io/css/gitment.css&quot;/&gt;\n        &lt;script src=&quot;https://jjeejj.github.io/js/gitment.js&quot;&gt;&lt;/script&gt;\n        &lt;script&gt;\n          var gitment = new Gitment(&#123;\n          owner: 'lichi6174',\n          repo: 'lichi6174.github.io',\n          oauth: &#123;\n            client_id: '6a7d368a50aba47c2074',\n            client_secret: '21d9d8a3ffba794b0dbda3e2f3276aa9ddd98ec5',\n          &#125;,\n          &#125;);\n          gitment.render('gitmentContainer');\n        &lt;/script&gt;\n\n      \n\t      &lt;section&gt;\n\t\t\n\n        &lt;div class=&quot;content-play&quot;&gt;\n          &lt;p&gt;&lt;a href=&quot;javascript:void(0)&quot; onclick=&quot;dashangToggle()&quot; class=&quot;dashang&quot; title=&quot;打赏，支持一下&quot;&gt;打赏一下呗&lt;/a&gt;&lt;/p&gt;\n          &lt;div class=&quot;hide_box-play&quot;&gt;&lt;/div&gt;\n          &lt;div class=&quot;shang_box-play&quot;&gt;\n            &lt;a class=&quot;shang_close-play&quot; href=&quot;javascript:void(0)&quot; onclick=&quot;dashangToggle()&quot; title=&quot;关闭&quot;&gt;&lt;img src=&quot;https://lichi6174.github.io//assets/img/close.jpg&quot; alt=&quot;取消&quot;/&gt;&lt;/a&gt;\n            &lt;div class=&quot;shang_tit-play&quot;&gt;\n              &lt;p&gt;对你有帮助，那就打赏一下吧&lt;/p&gt;\n            &lt;/div&gt;\n\t\t\t\n\t\t\t&lt;div class=&quot;shang_payimg&quot;&gt;    \n                &lt;img src=&quot;https://lichi6174.github.io//assets/img/wechatpayimg.png&quot; alt=&quot;扫码支持&quot; title=&quot;扫一扫&quot;/&gt;\n            &lt;/div&gt;\n\t\t\t\n\t\t\t &lt;div class=&quot;pay_item&quot; data-id=&quot;weipay&quot;&gt;\n                &lt;span class=&quot;pay_logo&quot;&gt;&lt;img src=&quot;https://lichi6174.github.io//assets/img/wechat.jpg&quot; alt=&quot;微信&quot;/&gt;&lt;/span&gt;\n              &lt;/div&gt;\n\t\t\t\n            &lt;div class=&quot;shang_payimg&quot;&gt;\n                &lt;img src=&quot;https://lichi6174.github.io//assets/img/alipayimg.jpg&quot; alt=&quot;扫码支持&quot; title=&quot;扫一扫&quot;/&gt;\n            &lt;/div&gt;\n\t\t\t\n\t\t\t &lt;div class=&quot;pay_item checked&quot; data-id=&quot;alipay&quot;&gt;\n                &lt;span class=&quot;pay_logo&quot;&gt;&lt;img src=&quot;https://lichi6174.github.io//assets/img/alipay.jpg&quot; alt=&quot;支付宝&quot;/&gt;&lt;/span&gt;\n              &lt;/div&gt;\n\t\t\t\n            &lt;div class=&quot;pay_explain&quot;&gt;扫码打赏,金额随意&lt;/div&gt;\n           \n          &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;script type=&quot;text/javascript&quot;&gt;\n        function dashangToggle()&#123;\n          $(&quot;.hide_box-play&quot;).fadeToggle();\n          $(&quot;.shang_box-play&quot;).fadeToggle();\n        &#125;\n        &lt;/script&gt;\n\n        &lt;div style=&quot;text-align:center;margin:50px 0; font:normal 14px/24px &amp;#39;MicroSoft YaHei&amp;#39;;&quot;&gt;&lt;/div&gt;\n\n        &lt;style type=&quot;text/css&quot;&gt;\n          .content-play&#123;width:100%;margin-top: 20px;margin-bottom: 10px;height:40px;text-align:center;&#125;\n          .hide_box-play&#123;z-index:999;filter:alpha(opacity=50);background:#666;opacity: 0.5;-moz-opacity: 0.5;left:0;top:0;height:99%;width:100%;position:fixed;display:none;&#125;\n          .shang_box-play&#123;width:100%;height:540px;padding:10px;background-color:#fff;border-radius:10px;position:fixed;z-index:1000;left:0%;top:50%;margin-left:0px;margin-top:-280px;border:1px dotted #dedede;display:none;&#125;\n          .shang_box-play img&#123;border:none;border-width:0;&#125;\n          .dashang&#123;width:100px;margin:5px auto;height:25px;line-height:25px;padding:10px;background-color:#E74851;color:#fff;text-align:center;text-decoration:none;border-radius:10px;font-weight:bold;font-size:16px;transition: all 0.3s;&#125;\n          .dashang:hover&#123;opacity:0.8;padding:15px;font-size:18px;&#125;\n          .shang_close-play&#123;float:right;display:inline-block;\n            margin-right: 10px;margin-top: 20px;\n          &#125;\n          .shang_logo&#123;display:block;text-align:center;margin:20px auto;&#125;\n          .shang_tit-play&#123;width: 100%;height: 75px;text-align: center;line-height: 66px;color: #a3a3a3;font-size: 16px;background: url('/images/payimg/cy-reward-title-bg.jpg');font-family: 'Microsoft YaHei';margin-top: 7px;margin-right:2px;&#125;\n          .shang_tit-play p&#123;color:#a3a3a3;text-align:center;font-size:16px;&#125;\n          .shang_payimg&#123;padding:10px;/*border:6px solid #EA5F00;**/margin:0 auto;border-radius:3px;height:140px;display:inline-block;&#125;\n          .shang_payimg img&#123;display:inline-block;margin-right:10px;float:left;text-align:center;width:140px;height:140px; &#125;\n          .pay_explain&#123;text-align:center;margin:10px auto;font-size:12px;color:#545454;&#125;\n          .shang_payselect&#123;text-align:center;margin:0 auto;margin-top:40px;cursor:pointer;height:60px;width:500px;margin-left:110px;&#125;\n          .shang_payselect .pay_item&#123;display:inline-block;margin-right:140px;float:left;&#125;\n          .shang_info-play&#123;clear:both;&#125;\n          .shang_info-play p,.shang_info-play a&#123;color:#C3C3C3;text-align:center;font-size:12px;text-decoration:none;line-height:2em;&#125;\n        &lt;/style&gt;\n</code></pre>\n</section>\n<pre><code>    &lt;/div&gt;\n\t\n    \n     \n\n  &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n","text":" &lt;div class=&quot;page-date&quot;&gt; &lt;span id=&quot;busuanzi_container_page_pv&quot;&gt; | 本文阅读量：&lt;span id=&quot;busuanzi_value_pag...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#openrestry%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">openrestry安装部署:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#openrestry%E7%9A%84waf%E5%8A%9F%E8%83%BD%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">openrestry的WAF功能列表:</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#waf%E5%AE%9E%E7%8E%B0%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">WAF实现基本原理:</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#openrestry%E5%90%AF%E7%94%A8waf%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">openrestry启用WAF配置:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#nginx%E9%85%8D%E7%BD%AE%E5%8F%82%E8%80%83\"><span class=\"toc-text\">nginx配置参考:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8Elua%E8%84%9A%E6%9C%AC%E8%8E%B7%E5%8F%96%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9C%9F%E5%AE%9Eip%E6%96%B9%E6%B3%95%E8%B0%83%E6%95%B4\"><span class=\"toc-text\">关于lua脚本获取客户端真实IP方法调整</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%AD%A4%E5%8A%9F%E8%83%BD%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89%E7%9A%84%E8%84%9A%E6%9C%AC%E4%BD%8D%E7%BD%AE\"><span class=\"toc-text\">1. 此功能函数定义的脚本位置：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%AD%A4%E5%8A%9F%E8%83%BD%E5%87%BD%E6%95%B0%E5%8F%82%E8%80%83\"><span class=\"toc-text\">2. 此功能函数参考：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%80\"><span class=\"toc-text\">方法一：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%BA%8C\"><span class=\"toc-text\">方法二：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%89\"><span class=\"toc-text\">方法三：</span></a></li></ol></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"浅析android手游lua脚本的加密与解密（后续）","uid":"bd350126d0e97ae395bee5fd654c1540","slug":"zl/2016-01-01-483_浅析android手游lua脚本的加密与解密（后续）","date":"2024-04-03T03:47:35.763Z","updated":"2024-04-03T03:47:35.763Z","comments":true,"path":"api/articles/zl/2016-01-01-483_浅析android手游lua脚本的加密与解密（后续）.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 趁着周末，把lua的后续文章也写完了。 反编译对抗 众所周知，反汇编/反编译 工具在逆向人员工作中第一步被使用，其地位非常之高，而对于软件保护者来说，如何对抗 反汇编/反编译 就显得尤为重要。例如，动态调试中对OD的的检测、内核调试对windbg的破坏、加壳加花对IDA静态分析...","link":"","photos":[],"count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua 汉字拼音首字母提取","uid":"7210045a47c00c031b29ac526b186e4c","slug":"zl/2016-01-01-482_Lua 汉字拼音首字母提取 ","date":"2024-04-03T03:47:35.762Z","updated":"2024-04-03T03:47:35.763Z","comments":true,"path":"api/articles/zl/2016-01-01-482_Lua 汉字拼音首字母提取 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"最近项目上有个需求，需要将一些联系人数据按照拼音首字母排序。google 了一番，竟然没有找到一个合适的 Lua 解决方案。倒是找到一个 lua-pinyin，粗略翻了下源码发现其是将所有的中文返回全部完整的拼音，原理是将所有汉字对应拼音创建好数据字典，载入 Lua，之后查询这个...","link":"","photos":[],"count_time":{"symbolsCount":598,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}