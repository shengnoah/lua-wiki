{"title":"Lua学习随笔","uid":"b8151848ffa5266b284bc7d3370dae8b","slug":"zl/2016-01-01-107_Lua学习随笔","date":"2024-04-03T03:47:32.993Z","updated":"2024-04-03T03:47:32.994Z","comments":true,"path":"api/articles/zl/2016-01-01-107_Lua学习随笔.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>昨天刚立了FLAG，今天就来还愿了。因为是工作中接触到的，已经用了几次，比较熟悉。昨晚在晚上大概搜了下，看了两个教程，看进去了，今早又看了将近两小时，看到了些基础的东西。</p>\n<p>我是在Windows上练习LUA，所以只用下个软件就可以开始了，非常方便。<a href=\"http://static.runoob.com/download/LuaForWindows_v5.1.4-46.exe\" target=\"_blank\" rel=\"external noopener noreferrer\">下载入口</a></p>\n<p>下载后安装即可，使用方法就是首先打开SciTE，然后在里面直接敲代码，保存为以lua结尾的文件，按F5就可以看到运行结果了。</p>\n<p>首先是注释，单行注释是</p>\n<pre><code>--单行注释\n</code></pre><p>多行注释：</p>\n<pre><code>--[[\n多行注释\n多行注释\n--]]\n</code></pre><p>lua中变量不需要声明类型，默认所有变量都是全局变量，如果需要局部变量，需要使用local显式声明。</p>\n<pre><code>a = 5               -- 全局变量\nlocal b = 5         -- 局部变量\n</code></pre><p>lua中两个点“..”表示对字符串进行连接</p>\n<pre><code>print(&#34;字符串1&#34; .. “字符串2”)   --字符串1字符串2\n</code></pre><p>Lua可以对多个变量同时赋值，变量列表和值列表的各个元素用逗号分开，赋值语句右边的值会依次赋给左边的变量。</p>\n<pre><code>a, b = 10, 2*x       -- a=10; b=2*x\n</code></pre><p>当变量与值的个数不一致时：</p>\n<pre><code>a. 变量个数 &gt; 值的个数             按变量个数补足nil\nb. 变量个数 &lt; 值的个数             多余的值会被忽略\n</code></pre><p>对 table 的索引使用方括号 []。Lua 也提供了 . 操作。</p>\n<pre><code>t[i]\nt.i                 -- 当索引为字符串类型时的一种简化写法\ngettable_event(t,i) -- 采用索引访问本质上是一个类似这样的函数调用\n</code></pre><p>在 Lua 里，table 的创建是通过”构造表达式”来完成，最简单构造表达式是{}</p>\n<pre><code>-- 创建一个空的 table\nlocal tbl1 = &#123;&#125;\n<p>– 直接初始表<br />\nlocal tbl2 = &#123;&quot;apple&quot;, &quot;pear&quot;, &quot;orange&quot;, &quot;grape&quot;&#125;<br />\n</code></pre><p>lua中的函数，可以类似变量进行互相赋值</p></p>\n<pre><code>function factorial1(n)\n   if n == 0 then\n       return 1\n   else\n       return n * factorial1(n - 1)\n   end\nend\nprint(factorial1(5))\nfactorial2 = factorial1\nprint(factorial2(5))\n</code></pre><p>boolean 类型只有两个可选值：true（真） 和 false（假），Lua 把 false 和 nil 看作是”假”，其他的都为”真”:</p>\n<p>Lua 编程语言中数值for循环语法格式:</p>\n<pre><code>for var=exp1,exp2,exp3 do  \n    &lt;执行体&gt;  \nend \n</code></pre><p>var 从 exp1 变化到 exp2，每次变化以 exp3 为步长递增 var，并执行一次 “执行体”。exp3 是可选的，如果不指定，默认为1。</p>\n<p>lua有两种for循环，上面是第一种，称为数值for循环，可以理解为正常版for。还有一种是泛型for循环，类似于java中的foreach，利用迭代器实现for循环。</p>\n<pre><code>a = &#123;&#34;one&#34;, &#34;two&#34;, &#34;three&#34;&#125;\nfor i, v in ipairs(a) do\n   print(i, v)\nend \n</code></pre><p>i是数组索引值，v是对应索引的数组元素值。ipairs是Lua提供的一个迭代器函数，用来迭代数组。</p>\n<p>Lua 编程语言中 repeat…until 循环语法格式:</p>\n<pre><code>repeat\n  statements\nuntil( condition )\n</code></pre><p>循环条件判断语句（condition）在循环体末尾部分，所以在条件进行判断前循环体都会执行一次。</p>\n<p>如果条件判断语句（condition）为 false，循环会重新开始执行，直到条件判断语句（condition）为 true 才会停止执行。</p>\n<h2 id=\"函数\"><a href=\"#函数\" class=\"headerlink\" title=\"函数\"></a>函数</h2><p>lua函数使用function声明，默认为全局函数，如果要使用局部函数，类似于变量，在前面加个local即可。写法格式和平常的函数一样。lua中的函数可以作为参数传递给函数。</p>\n<h3 id=\"多返回值\"><a href=\"#多返回值\" class=\"headerlink\" title=\"多返回值\"></a>多返回值</h3><p>Lua函数可以返回多个结果值，比如string.find，其返回匹配串”开始和结束的下标”（如果不存在匹配串返回nil）。</p>\n<pre><code>&gt; s, e = string.find(&#34;www.runoob.com&#34;, &#34;runoob&#34;) \n&gt; print(s, e)\n--输出结果：5    10\n</code></pre><h3 id=\"可变参数\"><a href=\"#可变参数\" class=\"headerlink\" title=\"可变参数\"></a>可变参数</h3><pre><code>function add(...)  \n  local s = 0  \n  for i, v in ipairs&#123;...&#125; do   --&gt; &#123;...&#125; 表示一个由所有变长参数构成的数组  \n     s = s + v  \n  end  \n  return s  \nend  \nprint(add(3,4,5,6,7))  ---&gt;25\n<p>–select('#', …) 返回可变参数的长度<br />\n–select(n, …) 用于访问 n 到 select('#',…) 的参数<br />\n</code></pre><h2 id=\"运算符\"><a href=\"#运算符\" class=\"headerlink\" title=\"运算符\"></a>运算符</h2><p>lua关系运算符中的不等于是“~=”</p></p>\n<p>字符串连接符“..”</p>\n<p>“#”返回字符串或表的长度</p>","text":"昨天刚立了FLAG，今天就来还愿了。因为是工作中接触到的，已经用了几次，比较熟悉。昨晚在晚上大概搜了下，看了两个教程，看进去了，今早又看了将近两小时，看到了些基础的东西。 我是在Windows上练习LUA，所以只用下个软件就可以开始了，非常方便。下载入口 下载后安装即可，使用方法...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E8%BF%94%E5%9B%9E%E5%80%BC\"><span class=\"toc-text\">多返回值</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">可变参数</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%90%E7%AE%97%E7%AC%A6\"><span class=\"toc-text\">运算符</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua的一种continue实现","uid":"cdeaef84b39b08fc3127196eddbf7c97","slug":"zl/2016-01-01-1079_lua的一种continue实现","date":"2024-04-03T03:47:32.993Z","updated":"2024-04-03T03:47:32.993Z","comments":true,"path":"api/articles/zl/2016-01-01-1079_lua的一种continue实现.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua中没有continue，通过另一种方式实现了continue的功能for var=exp1,exp2 do while true do if condition expressions do break end other statements ... ... break ...","link":"","photos":[],"count_time":{"symbolsCount":157,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"openresty_balancer_by_lua_file","uid":"a2411ddd503448beb656773fa1e82fb8","slug":"zl/2016-01-01-1078_openresty_balancer_by_lua_file","date":"2024-04-03T03:47:32.992Z","updated":"2024-04-03T03:47:32.993Z","comments":true,"path":"api/articles/zl/2016-01-01-1078_openresty_balancer_by_lua_file.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"set the balancer in nginx.conf12345678910upstream default_doc_upstream { server 192.168.1.170:8081; # tomcat-8 server 192.168.1.170:8082; # ...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}