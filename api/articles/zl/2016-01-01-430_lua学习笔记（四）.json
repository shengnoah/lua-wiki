{"title":"lua学习笔记（四）","uid":"9f7e83ce19d0f00693e9a104549dd317","slug":"zl/2016-01-01-430_lua学习笔记（四）","date":"2024-04-03T03:47:35.718Z","updated":"2024-04-03T03:47:35.719Z","comments":true,"path":"api/articles/zl/2016-01-01-430_lua学习笔记（四）.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h2 id=\"Lua数组\"><a href=\"#Lua数组\" class=\"headerlink\" title=\"Lua数组\"></a>Lua数组</h2><h3 id=\"一维数组\"><a href=\"#一维数组\" class=\"headerlink\" title=\"一维数组\"></a>一维数组</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">array={<span class=\"string\">&#34;Lua&#34;</span>,<span class=\"string\">&#34;Java&#34;</span>,<span class=\"string\">&#34;C++&#34;</span>}</span><br/><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">0</span>,<span class=\"number\">2</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(array[i])</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">输出结果：</span></span><br/><span class=\"line\"><span class=\"comment\">nil</span></span><br/><span class=\"line\"><span class=\"comment\">Lua</span></span><br/><span class=\"line\"><span class=\"comment\">Java</span></span><br/><span class=\"line\"><span class=\"comment\">结果分析：</span></span><br/><span class=\"line\"><span class=\"comment\">Lua索引值以1为起始，也可以指定0开始</span></span><br/><span class=\"line\"><span class=\"comment\">]]</span></span><br/><span class=\"line\"><span class=\"comment\">-- 以负数为数组索引值</span></span><br/><span class=\"line\">array={}</span><br/><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">-2</span>,<span class=\"number\">2</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">    array[i]=i*<span class=\"number\">2</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">-2</span>,<span class=\"number\">2</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(array[i])</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"多维数组\"><a href=\"#多维数组\" class=\"headerlink\" title=\"多维数组\"></a>多维数组</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 初始化数组</span></span><br/><span class=\"line\">array={}</span><br/><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,<span class=\"number\">3</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">    array[i]={}</span><br/><span class=\"line\">    <span class=\"keyword\">for</span> j=<span class=\"number\">1</span>,<span class=\"number\">3</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">        array[i][j]=i*j</span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 访问数组</span></span><br/><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1</span>,<span class=\"number\">3</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">    <span class=\"keyword\">for</span> j=<span class=\"number\">1</span>,<span class=\"number\">3</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">        <span class=\"built_in\">print</span>(array[i][j])</span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<h2 id=\"Lua迭代器\"><a href=\"#Lua迭代器\" class=\"headerlink\" title=\"Lua迭代器\"></a>Lua迭代器</h2><p>一种对象，能够用来遍历标准模板库容器中的部分或全部元素，每个迭代器对象代表容器中的确定的地址。</p>\n<p>在Lua中迭代器是一种支持指针类型的结构，它可以遍历集合的每一个元素</p>\n<h3 id=\"泛型for迭代器\"><a href=\"#泛型for迭代器\" class=\"headerlink\" title=\"泛型for迭代器\"></a>泛型for迭代器</h3><p>泛型 for 在自己内部保存迭代函数，实际上它保存三个值：迭代函数、状态常量、控制变量</p>\n<h4 id=\"泛型for的执行过程\"><a href=\"#泛型for的执行过程\" class=\"headerlink\" title=\"泛型for的执行过程\"></a>泛型for的执行过程</h4><p><a href=\"https://www.runoob.com/lua/lua-iterators.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.runoob.com/lua/lua-iterators.html</a></p>\n<h3 id=\"Lua迭代器类型\"><a href=\"#Lua迭代器类型\" class=\"headerlink\" title=\"Lua迭代器类型\"></a>Lua迭代器类型</h3><ul>\n<li>无状态的迭代器</li>\n<li>多状态的迭代器</li>\n</ul>\n<h4 id=\"无状态的迭代器\"><a href=\"#无状态的迭代器\" class=\"headerlink\" title=\"无状态的迭代器\"></a>无状态的迭代器</h4><p>不保留任何状态的迭代器，每一次迭代，迭代函数都是用<strong>两个变量</strong>（状态常量和控制变量）的值作为参数被调用，一个无状态的迭代器只利用这两个值可以获取下一个元素。如：<code>ipairs</code>函数</p>\n<h4 id=\"多状态的迭代器\"><a href=\"#多状态的迭代器\" class=\"headerlink\" title=\"多状态的迭代器\"></a>多状态的迭代器</h4><p>迭代器需要保存多个状态信息而不是简单的状态常量和控制变量，方法：</p>\n<ul>\n<li>使用闭包（类似于lambda表达式，该表达式能包含函数本身以及外部引用变量，外部引用变量类似于lambda表达式中<code>[]</code>内捕获的外部变量）</li>\n<li>将所有状态信息封装到table内</li>\n</ul>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">array={<span class=\"string\">&#34;Google&#34;</span>,<span class=\"string\">&#34;Apple&#34;</span>}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(collection)</span></span></span><br/><span class=\"line\">    <span class=\"keyword\">local</span> index=<span class=\"number\">0</span></span><br/><span class=\"line\">    <span class=\"keyword\">local</span> count=#collection</span><br/><span class=\"line\">    <span class=\"comment\">-- 闭包函数</span></span><br/><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">        index=index+<span class=\"number\">1</span></span><br/><span class=\"line\">        <span class=\"keyword\">if</span> index&lt;=count <span class=\"keyword\">then</span></span><br/><span class=\"line\">            <span class=\"keyword\">return</span> collection[index]</span><br/><span class=\"line\">        <span class=\"keyword\">end</span></span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">for</span> element <span class=\"keyword\">in</span> elementIterator(array) <span class=\"keyword\">do</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(element)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">输出结果：</span></span><br/><span class=\"line\"><span class=\"comment\">Google</span></span><br/><span class=\"line\"><span class=\"comment\">Apple</span></span><br/><span class=\"line\"><span class=\"comment\">]]</span></span><br/></pre></td></tr></tbody></table></figure>\n<h2 id=\"Lua-table（表）\"><a href=\"#Lua-table（表）\" class=\"headerlink\" title=\"Lua table（表）\"></a>Lua table（表）</h2><p>table是一种数据结构，可以用于创建不同的数据类型：数组、字典等</p>\n<p>table的特点：</p>\n<ul>\n<li>使用关联型数组，可以用任意非nil的类型作为数组的索引</li>\n<li>大小不固定，可以根据需要扩容</li>\n<li>可以用于解决模块（module）、包（package）和对象（Object）</li>\n</ul>\n<h3 id=\"table的构造\"><a href=\"#table的构造\" class=\"headerlink\" title=\"table的构造\"></a>table的构造</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 初始化表</span></span><br/><span class=\"line\">mytable={}\t\t<span class=\"comment\">-- 最简单的构造函数</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 指定值</span></span><br/><span class=\"line\">mytable[<span class=\"number\">1</span>]=<span class=\"string\">&#34;Lua&#34;</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 移除引用</span></span><br/><span class=\"line\">mytable=<span class=\"literal\">nil</span></span><br/><span class=\"line\"><span class=\"comment\">-- Lua垃圾回收会释放内存</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 注意：table间的赋值是传引用，两者指向同一个内存，只有当没有任何变量指向该内存（即所有table变量都指向了nil），Lua的垃圾回收机制才会清理相对应的内存</span></span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"table操作\"><a href=\"#table操作\" class=\"headerlink\" title=\"table操作\"></a>table操作</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/><span class=\"line\">29</span><br/><span class=\"line\">30</span><br/><span class=\"line\">31</span><br/><span class=\"line\">32</span><br/><span class=\"line\">33</span><br/><span class=\"line\">34</span><br/><span class=\"line\">35</span><br/><span class=\"line\">36</span><br/><span class=\"line\">37</span><br/><span class=\"line\">38</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">作用：列出参数中指定table的数组部分从start位置到end位置的所有元素, 元素间以指定的分隔符(sep)隔开</span></span><br/><span class=\"line\"><span class=\"comment\">参数列表：</span></span><br/><span class=\"line\"><span class=\"comment\">\ttable：操作对象</span></span><br/><span class=\"line\"><span class=\"comment\">\tsep：分隔符</span></span><br/><span class=\"line\"><span class=\"comment\">\tstart：起始索引</span></span><br/><span class=\"line\"><span class=\"comment\">\tend：末尾索引</span></span><br/><span class=\"line\"><span class=\"comment\">返回值：连接后的字符串</span></span><br/><span class=\"line\"><span class=\"comment\">]]</span></span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">concat</span>(<span class=\"built_in\">table</span>[,sep[,start[,<span class=\"keyword\">end</span>]]])</span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">作用：在table的数组部分指定位置(pos)插入值为value的一个元素</span></span><br/><span class=\"line\"><span class=\"comment\">参数列表：</span></span><br/><span class=\"line\"><span class=\"comment\">\ttable：操作对象</span></span><br/><span class=\"line\"><span class=\"comment\">\tpos：插入位置，默认为数组部分的末尾</span></span><br/><span class=\"line\"><span class=\"comment\">\tvalue：插入的值</span></span><br/><span class=\"line\"><span class=\"comment\">返回值：</span></span><br/><span class=\"line\"><span class=\"comment\">]]</span></span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">insert</span>(<span class=\"built_in\">table</span>,[pos,]value)</span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">作用：删除table数组部分位于pos位置的元素，其后的元素会被前移</span></span><br/><span class=\"line\"><span class=\"comment\">参数列表：</span></span><br/><span class=\"line\"><span class=\"comment\">\ttable：操作对象</span></span><br/><span class=\"line\"><span class=\"comment\">\tpos：删除的元素位置，默认为最后一个元素的位置</span></span><br/><span class=\"line\"><span class=\"comment\">返回值：删除的元素的值</span></span><br/><span class=\"line\"><span class=\"comment\">]]</span></span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">remove</span>(<span class=\"built_in\">table</span>[,pos])</span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">作用：对给定的table进行升序排序，数值按照数值大小，字符串按照首字母ASCCI码排序</span></span><br/><span class=\"line\"><span class=\"comment\">参数列表：</span></span><br/><span class=\"line\"><span class=\"comment\">\ttable：操作对象</span></span><br/><span class=\"line\"><span class=\"comment\">\tcomp：比较方法，接收两个参数，返回一个布尔值，为true不交换，为false交换</span></span><br/><span class=\"line\"><span class=\"comment\">返回值：nil</span></span><br/><span class=\"line\"><span class=\"comment\">]]</span></span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">sort</span>(<span class=\"built_in\">table</span>[,comp])</span><br/></pre></td></tr></tbody></table></figure>","text":"Lua数组一维数组123456789101112131415161718192021array={&#34;Lua&#34;,&#34;Java&#34;,&#34;C++&#34;}for i=0,2 do print(array[i])end输出结果：nilLuaJava结果...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Lua%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">Lua数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">一维数组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">多维数组</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Lua%E8%BF%AD%E4%BB%A3%E5%99%A8\"><span class=\"toc-text\">Lua迭代器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B3%9B%E5%9E%8Bfor%E8%BF%AD%E4%BB%A3%E5%99%A8\"><span class=\"toc-text\">泛型for迭代器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B3%9B%E5%9E%8Bfor%E7%9A%84%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">泛型for的执行过程</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Lua%E8%BF%AD%E4%BB%A3%E5%99%A8%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">Lua迭代器类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%97%A0%E7%8A%B6%E6%80%81%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8\"><span class=\"toc-text\">无状态的迭代器</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E7%8A%B6%E6%80%81%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8\"><span class=\"toc-text\">多状态的迭代器</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Lua-table%EF%BC%88%E8%A1%A8%EF%BC%89\"><span class=\"toc-text\">Lua table（表）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#table%E7%9A%84%E6%9E%84%E9%80%A0\"><span class=\"toc-text\">table的构造</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#table%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">table操作</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Mac 上 Sublime Text 3 配置 Lua 环境","uid":"37c9d4feb56f93693fa69d16a4b81f1e","slug":"zl/2016-01-01-42_Mac 上 Sublime Text 3 配置 Lua 环境","date":"2024-04-03T03:47:35.718Z","updated":"2024-04-03T03:47:35.718Z","comments":true,"path":"api/articles/zl/2016-01-01-42_Mac 上 Sublime Text 3 配置 Lua 环境.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"1.下载安装 1. 先去Lua官网下载最新版 luaRango-MBP:~ rango$ curl -R -O http://www.lua.org/ftp/lua-5.3.3.tar.gz 2. 然后解压压缩包Rango-MBP:~ rango$ tar zxf lua-5.3...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"cocos2dx lua注册事件详解","uid":"af9261daf33a3d2b8198b8c9a27ae883","slug":"zl/2016-01-01-426_cocos2dx lua注册事件详解","date":"2024-04-03T03:47:35.717Z","updated":"2024-04-03T03:47:35.718Z","comments":true,"path":"api/articles/zl/2016-01-01-426_cocos2dx lua注册事件详解.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"最近在学习cocos2dx lua的时候，遇到了一些关于事件注册的逻辑！ 结合用户实际操作和游戏的真实需求，关于事件在游戏中还是使用非常多的，所以特此记录一下 事件(源自网络) 事件是可以被控件识别的操作。如按下确定按钮，选择某个单选按钮或者复选框。每一种控件有自己可以识别的事件...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}