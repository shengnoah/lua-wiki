{"title":"Unity3D集成Lua","uid":"1ea5df9307dc634325ed99570e17d366","slug":"zl/2016-01-01-661_Unity3D集成Lua","date":"2024-04-03T03:47:35.885Z","updated":"2024-04-03T03:47:35.886Z","comments":true,"path":"api/articles/zl/2016-01-01-661_Unity3D集成Lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<section class=\"meta\">\n  <span class=\"time\">\n  </span>\n<p>|<br />\n<span class=\"categories\"><br />\n分类</p>\n<pre><code>&lt;a href=&quot;/categories/#lua之基础&quot; title=&quot;lua之基础&quot;&gt;lua之基础&lt;/a&gt; \n</code></pre>\n  </span>\n<p>|</p>\n</section>\n<section class=\"post\">\n  <p>关于Lua、C# 的语法，这里不做介绍，之前有很多文章都有涉及，可以翻看一下（本文参考资料部分会列出相关文章），OK，接下来专注于C# Lua 热更新技术</p>\n<h2 id=\"luainterface\">LuaInterface</h2>\n<p><a href=\"http://luaforge.net/projects/luainterface/\">LuaInterface</a> 包括两个核心库，一个是LuaInterface.dll，一个是Luanet.dll，可以通过LuaInterface.dll 完成Lua 与C#（CLR）之间的互相调用</p>\n<p>去<a href=\"http://files.luaforge.net/releases/luainterface/luainterface\">http://files.luaforge.net/releases/luainterface/luainterface</a> 下载相应版本的LuaInterface，比如我下载<a href=\"http://files.luaforge.net/releases/luainterface/luainterface/1.5.3\">1.5.3版本</a></p>\n<p>参考<a href=\"http://www.xumenger.com/csharp-protobuf-20190831/\">Visual Studio下使用Protobuf</a>，将解压后的lua51.dll、LuaInterface.dll、luanet.dll 放到Unity 项目的Plugins 目录下即可</p>\n<p>测试一下，在C# 中执行Lua 代码，编写代码如下</p>\n<div class=\"language-c# highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">using</span> <span class=\"nn\">System.Collections</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">UnityEngine</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">LuaInterface</span><span class=\"p\">;</span>\n<p><span class=\"k\">public</span> <span class=\"k\">class</span> <span class=\"nc\">CSharpCallLua</span> <span class=\"p\">:</span> <span class=\"n\">MonoBehaviour</span><br />\n<span class=\"p\">&#123;</span><br />\n<span class=\"k\">private</span> <span class=\"k\">void</span> <span class=\"nf\">Start</span><span class=\"p\">()</span><br />\n<span class=\"p\">&#123;</span><br />\n<span class=\"c1\">// 创建Lua解释器</span><br />\n<span class=\"n\">Lua</span> <span class=\"n\">lua</span> <span class=\"p\">=</span> <span class=\"k\">new</span> <span class=\"nf\">Lua</span><span class=\"p\">();</span></p>\n<pre><code>    &lt;span class=&quot;c1&quot;&gt;// 创建Lua整形变量&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;lua&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#34;num&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;34&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 创建Lua字符串变量&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;lua&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#34;str&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 创建表 tab = []&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;lua&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;NewTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#34;tab&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n\n    &lt;span class=&quot;n&quot;&gt;Debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lua&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#34;str&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;&#125;&lt;/span&gt;\n</code></pre>\n<p><span class=\"p\">}</span><br />\n</code></pre></div></div></p>\n<p>结果在运行的时候出现报错</p>\n<p><img src=\"http://www.xumenger.com/../media/image/2019-09-04/01.png\" alt=\"\"/></p>\n<blockquote>\n  <p>查阅一些资料，发现LuaInterface.dll 是C# 的DLL，但是Luanet.dll、lua51.dll 是C 的DLL，依赖于Windows，所以无法在MacOS 上运行</p>\n</blockquote>\n<h2 id=\"tolua\">ToLua</h2>\n<p>直接在<a href=\"https://github.com/topameng/tolua/releases\">https://github.com/topameng/tolua/releases</a>下载，解压后是这样的目录结构</p>\n<p><img src=\"http://www.xumenger.com/../media/image/2019-09-04/02.png\" alt=\"\"/></p>\n<p>直接将Assets、Unity5.x 目录拖到Unity 项目目录下，与原有的目录合并、覆盖即可</p>\n<p>等待Unity 加载完成，点击确认，目录结构如下</p>\n<p><img src=\"http://www.xumenger.com/../media/image/2019-09-04/03.png\" alt=\"\"/></p>\n<blockquote>\n  <p>Editor/CustomSettings 主要是定义哪些类作为静态类、哪些类需要导出、哪些委托需要导出，注册到Lua 中的类型也都需要在这里导入，ToLua 已经提供了Unity 大部分的基础类型，如果需要导入我们自己的类，也可以在这里添加</p>\n</blockquote>\n<p>开始编写测试代码，看C# 与Lua 的相互调用，先编写一个C# 代码如下</p>\n<pre><code class=\"language-C#\">using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class CSharpCode : MonoBehaviour\n&#123;\n    public static string GetString()\n    &#123;\n        // 直接返回一个字符串\n        return &#34;CSharp Code&#34;;\n    &#125;\n&#125;\n</code></pre>\n<p>编写这个脚本是为了给Lua 调用的，接下来再在CustomSettings 中添加我们的这个类，以供Lua 调用</p>\n<p><img src=\"http://www.xumenger.com/../media/image/2019-09-04/04.png\" alt=\"\"/></p>\n<p>然后在Unity 的【菜单栏】–&gt;【Lua】–&gt;【Clear wrap file】，可以看到重新生成新的wrap 文件</p>\n<p><img src=\"http://www.xumenger.com/../media/image/2019-09-04/05.png\" alt=\"\"/></p>\n<p>然后在Assets/Lua 下新增一个lua 文件，可以在这里调用刚才写的C# 代码，LuaCode.lua</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kd\">local</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">CSharpCode</span><span class=\"p\">.</span><span class=\"n\">GetString</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n</code></pre></div></div>\n<p>再编写一个C# 脚本，在这里调用LuaCode.lua 中的源码</p>\n<div class=\"language-c# highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">using</span> <span class=\"nn\">System.Collections</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">UnityEngine</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">LuaInterface</span><span class=\"p\">;</span>\n<p><span class=\"k\">public</span> <span class=\"k\">class</span> <span class=\"nc\">TestCallLua</span> <span class=\"p\">:</span> <span class=\"n\">MonoBehaviour</span><br />\n<span class=\"p\">&#123;</span><br />\n<span class=\"k\">private</span> <span class=\"n\">LuaState</span> <span class=\"n\">lua</span> <span class=\"p\">=</span> <span class=\"k\">null</span><span class=\"p\">;</span></p>\n<pre><code>&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;&#123;&lt;/span&gt;\n    &lt;span class=&quot;c1&quot;&gt;// 定义Lua加载器，加载Lua文件&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LuaResLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 初始化Lua虚拟机&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;lua&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LuaState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 开启Lua虚拟机&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;lua&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 向虚拟机注册wrap类&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;LuaBinder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lua&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 打开Lua文件&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;lua&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;DoFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#34;LuaCode.lua&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;&#125;&lt;/span&gt;\n</code></pre>\n<p><span class=\"p\">}</span><br />\n</code></pre></div></div></p>\n<p>运行效果如下</p>\n<p><img src=\"http://www.xumenger.com/../media/image/2019-09-04/06.png\" alt=\"\"/></p>\n<h2 id=\"使用tolua实现游戏逻辑\">使用ToLua实现游戏逻辑</h2>\n<p>之前写的一些文章中，都是使用C# 来编写游戏逻辑的，现在有了ToLua，以及后续热更新的考虑，我们将游戏逻辑写到Lua 中</p>\n<p>编写Controller.lua 如下</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">Controller</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span>\n<span class=\"kd\">local</span> <span class=\"n\">this</span> <span class=\"o\">=</span> <span class=\"n\">Controller</span>\n<span class=\"kd\">local</span> <span class=\"n\">GameObject</span> <span class=\"o\">=</span> <span class=\"n\">UnityEngine</span><span class=\"p\">.</span><span class=\"n\">GameObject</span>\n<span class=\"kd\">local</span> <span class=\"n\">Input</span> <span class=\"o\">=</span> <span class=\"n\">UnityEngine</span><span class=\"p\">.</span><span class=\"n\">Input</span>\n<span class=\"kd\">local</span> <span class=\"n\">Rigidbody</span> <span class=\"o\">=</span> <span class=\"n\">UnityEngine</span><span class=\"p\">.</span><span class=\"n\">Rigidbody</span>\n<span class=\"kd\">local</span> <span class=\"n\">Color</span> <span class=\"o\">=</span> <span class=\"n\">UnityEngine</span><span class=\"p\">.</span><span class=\"n\">Color</span>\n<p><span class=\"kd\">local</span> <span class=\"n\">Sphere</span>    <span class=\"c1\">– Unity中的一个球体</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">rigid</span>     <span class=\"c1\">– 刚体</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">force</span>     <span class=\"c1\">– 力</span></p>\n<p><span class=\"c1\">– 下面在Lua 中使用Start、Update函数名，与C# 中使用Start、Update没有任何关系</span><br />\n<span class=\"c1\">– 我们可以在Lua 中取任何名字</span></p>\n<p><span class=\"k\">function</span> <span class=\"nc\">this</span><span class=\"p\">.</span><span class=\"nf\">Start</span><span class=\"p\">()</span><br />\n<span class=\"n\">Sphere</span> <span class=\"o\">=</span> <span class=\"n\">GameObject</span><span class=\"p\">.</span><span class=\"n\">Find</span><span class=\"p\">(</span><span class=\"s2\">&quot;Sphere&quot;</span><span class=\"p\">)</span><br />\n<span class=\"c1\">– 设置颜色</span><br />\n<span class=\"n\">Sphere</span> <span class=\"p\">:</span> <span class=\"n\">GetComponent</span><span class=\"p\">(</span><span class=\"s2\">&quot;Renderer&quot;</span><span class=\"p\">).</span><span class=\"n\">material</span><span class=\"p\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span><br />\n<span class=\"c1\">– 添加刚体</span><br />\n<span class=\"n\">Sphere</span> <span class=\"p\">:</span> <span class=\"n\">AddComponent</span><span class=\"p\">(</span><span class=\"n\">typeof</span><span class=\"p\">(</span><span class=\"n\">Rigidbody</span><span class=\"p\">))</span><br />\n<span class=\"n\">rigid</span> <span class=\"o\">=</span> <span class=\"n\">Sphere</span> <span class=\"p\">:</span> <span class=\"n\">GetComponent</span><span class=\"p\">(</span><span class=\"s2\">&quot;Rigidbody&quot;</span><span class=\"p\">)</span></p>\n<pre><code>&lt;span class=&quot;c1&quot;&gt;-- 设置力&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;force&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;\n</code></pre>\n<p><span class=\"k\">end</span></p>\n<p><span class=\"k\">function</span> <span class=\"nc\">this</span><span class=\"p\">.</span><span class=\"nf\">Update</span><span class=\"p\">()</span><br />\n<span class=\"c1\">– 获取键盘输入</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">Input</span><span class=\"p\">.</span><span class=\"n\">GetAxis</span><span class=\"p\">(</span><span class=\"s2\">&quot;Horizontal&quot;</span><span class=\"p\">)</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">Input</span><span class=\"p\">.</span><span class=\"n\">GetAxis</span><span class=\"p\">(</span><span class=\"s2\">&quot;Vertical&quot;</span><span class=\"p\">)</span></p>\n<pre><code>&lt;span class=&quot;c1&quot;&gt;-- 在对应方向上对刚体施加力&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;rigid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AddForce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Vector3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;force&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n</code></pre>\n<p><span class=\"k\">end</span><br />\n</code></pre></div></div></p>\n<blockquote>\n  <p>使用Lua 编写游戏逻辑的时候，没办法像在Visual Studio 中编写C# 那样有语法提示，所以极有可能写错且无法及时得到通知，当代码量很大的时候，一定要注意Lua 代码可能存在的各种语法、逻辑问题！</p>\n</blockquote>\n<blockquote>\n  <p>Lua 原生并不支持面向对象，可以用Lua 表来模拟面向对象的语法！</p>\n</blockquote>\n<p>编写C# 代码如下，可以在C# 中直接调用Lua 代码，然后将这个C# 文件拖到某个游戏物体上即可实现对其的逻辑控制</p>\n<div class=\"language-c# highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">using</span> <span class=\"nn\">System.Collections</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">System.Collections.Generic</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">UnityEngine</span><span class=\"p\">;</span>\n<span class=\"k\">using</span> <span class=\"nn\">LuaInterface</span><span class=\"p\">;</span>\n<p><span class=\"k\">public</span> <span class=\"k\">class</span> <span class=\"nc\">TestCallLua</span> <span class=\"p\">:</span> <span class=\"n\">MonoBehaviour</span><br />\n<span class=\"p\">&#123;</span><br />\n<span class=\"k\">private</span> <span class=\"n\">LuaState</span> <span class=\"n\">lua</span> <span class=\"p\">=</span> <span class=\"k\">null</span><span class=\"p\">;</span></p>\n<pre><code>&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;&#123;&lt;/span&gt;\n    &lt;span class=&quot;c1&quot;&gt;// 定义Lua加载器，加载Lua文件&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LuaResLoader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 初始化Lua虚拟机&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;lua&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;LuaState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 开启Lua虚拟机&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;lua&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 向虚拟机注册wrap类&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;LuaBinder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lua&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 打开Lua文件&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;lua&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;DoFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#34;Controller.lua&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n\n    &lt;span class=&quot;nf&quot;&gt;CallLuaFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#34;Controller.Start&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;&#125;&lt;/span&gt;\n\n&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;&#123;&lt;/span&gt;\n    &lt;span class=&quot;nf&quot;&gt;CallLuaFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#34;Controller.Update&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;&#125;&lt;/span&gt;\n\n&lt;span class=&quot;c1&quot;&gt;// 调用函数&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CallLuaFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;func_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;&#123;&lt;/span&gt;\n    &lt;span class=&quot;c1&quot;&gt;// 获取Lua 方法&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;LuaFunction&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;luaFunc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lua&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;func_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;// 执行Lua 方法&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;luaFunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;&#125;&lt;/span&gt;\n</code></pre>\n<p><span class=\"p\">}</span><br />\n</code></pre></div></div></p>\n<blockquote>\n  <p>测试的时候，每次启动程序就直接崩溃，单步调试发现，将TestCallLua.cs 一次拖到两个Unity 对象上，导致Start() 中创建Lua 执行环境、加载Lua 脚本的逻辑执行两遍，导致直接崩溃！</p>\n</blockquote>\n<blockquote>\n  <p>写代码的时候一定要特别小心、注意这种情况</p>\n</blockquote>\n<p>操控方向键可以控制小球的移动</p>\n<p><img src=\"http://www.xumenger.com/../media/image/2019-09-04/07.gif\" alt=\"\"/></p>\n<h2 id=\"播放音乐ogg\">播放音乐(ogg)</h2>\n<p>先编写一个使用协程下载ogg 音乐并进行播放的Lua 代码</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">Music</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span>\n<span class=\"kd\">local</span> <span class=\"n\">this</span> <span class=\"o\">=</span> <span class=\"n\">Music</span>\n<p><span class=\"k\">function</span> <span class=\"nc\">this</span><span class=\"p\">.</span><span class=\"nf\">PlaySound</span><span class=\"p\">()</span><br />\n<span class=\"c1\">– 获取音乐组件（在Controller.lua 中添加的）</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">audio</span> <span class=\"o\">=</span> <span class=\"n\">UnityEngine</span><span class=\"p\">.</span><span class=\"n\">GameObject</span><span class=\"p\">.</span><span class=\"n\">Find</span><span class=\"p\">(</span><span class=\"s2\">&quot;Sphere&quot;</span><span class=\"p\">)</span> <span class=\"p\">:</span> <span class=\"n\">GetComponent</span><span class=\"p\">(</span><span class=\"s2\">&quot;AudioSource&quot;</span><span class=\"p\">)</span></p>\n<pre><code>&lt;span class=&quot;c1&quot;&gt;-- 下载音乐&lt;/span&gt;\n&lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UnityEngine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WWW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#34;https://www.music.com/music.ogg&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;c1&quot;&gt;-- 使用协程下载&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;coroutine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;www&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;c1&quot;&gt;-- 播放&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;audio&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;clip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GetAudioClip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;audio&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Play&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n</code></pre>\n<p><span class=\"k\">end</span><br />\n</code></pre></div></div></p>\n<p>然后修改原来的Controller.lua，使用协程执行Music.PlaySound</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">Controller</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span>\n<span class=\"kd\">local</span> <span class=\"n\">this</span> <span class=\"o\">=</span> <span class=\"n\">Controller</span>\n<p><span class=\"c1\">– 加载Music.lua 模块</span><br />\n<span class=\"nb\">require</span><span class=\"p\">(</span><span class=\"n\">modname</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Music&quot;</span><span class=\"p\">)</span></p>\n<p><span class=\"kd\">local</span> <span class=\"n\">GameObject</span> <span class=\"o\">=</span> <span class=\"n\">UnityEngine</span><span class=\"p\">.</span><span class=\"n\">GameObject</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">Input</span> <span class=\"o\">=</span> <span class=\"n\">UnityEngine</span><span class=\"p\">.</span><span class=\"n\">Input</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">Rigidbody</span> <span class=\"o\">=</span> <span class=\"n\">UnityEngine</span><span class=\"p\">.</span><span class=\"n\">Rigidbody</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">AudioSource</span> <span class=\"o\">=</span> <span class=\"n\">UnityEngine</span><span class=\"p\">.</span><span class=\"n\">AudioSource</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">Color</span> <span class=\"o\">=</span> <span class=\"n\">UnityEngine</span><span class=\"p\">.</span><span class=\"n\">Color</span></p>\n<p><span class=\"kd\">local</span> <span class=\"n\">Sphere</span>    <span class=\"c1\">– Unity中的一个球体</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">rigid</span>     <span class=\"c1\">– 刚体</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">force</span>     <span class=\"c1\">– 力</span></p>\n<p><span class=\"c1\">– 下面在Lua 中使用Start、Update函数名，与C# 中使用Start、Update没有任何关系</span><br />\n<span class=\"c1\">– 我们可以在Lua 中取任何名字</span></p>\n<p><span class=\"k\">function</span> <span class=\"nc\">this</span><span class=\"p\">.</span><span class=\"nf\">Start</span><span class=\"p\">()</span><br />\n<span class=\"n\">Sphere</span> <span class=\"o\">=</span> <span class=\"n\">GameObject</span><span class=\"p\">.</span><span class=\"n\">Find</span><span class=\"p\">(</span><span class=\"s2\">&quot;Sphere&quot;</span><span class=\"p\">)</span><br />\n<span class=\"c1\">– 设置颜色</span><br />\n<span class=\"n\">Sphere</span> <span class=\"p\">:</span> <span class=\"n\">GetComponent</span><span class=\"p\">(</span><span class=\"s2\">&quot;Renderer&quot;</span><span class=\"p\">).</span><span class=\"n\">material</span><span class=\"p\">.</span><span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">Color</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">.</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span></p>\n<pre><code>&lt;span class=&quot;c1&quot;&gt;-- 添加音乐组件&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;Sphere&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AddComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;AudioSource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;\n&lt;span class=&quot;c1&quot;&gt;-- 启动协程调用Music.PlaySound() 方法&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;coroutine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Music&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlaySound&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;c1&quot;&gt;-- 添加刚体&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;Sphere&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AddComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;typeof&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Rigidbody&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;rigid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Sphere&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GetComponent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#34;Rigidbody&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n\n&lt;span class=&quot;c1&quot;&gt;-- 设置力&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;force&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;\n</code></pre>\n<p><span class=\"k\">end</span></p>\n<p><span class=\"k\">function</span> <span class=\"nc\">this</span><span class=\"p\">.</span><span class=\"nf\">Update</span><span class=\"p\">()</span><br />\n<span class=\"c1\">– 获取键盘输入</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">Input</span><span class=\"p\">.</span><span class=\"n\">GetAxis</span><span class=\"p\">(</span><span class=\"s2\">&quot;Horizontal&quot;</span><span class=\"p\">)</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">Input</span><span class=\"p\">.</span><span class=\"n\">GetAxis</span><span class=\"p\">(</span><span class=\"s2\">&quot;Vertical&quot;</span><span class=\"p\">)</span></p>\n<pre><code>&lt;span class=&quot;c1&quot;&gt;-- 在对应方向上对刚体施加力&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;rigid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AddForce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Vector3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;force&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n</code></pre>\n<p><span class=\"k\">end</span><br />\n</code></pre></div></div></p>\n<h2 id=\"参考资料\">参考资料</h2>\n<ul>\n  <li><a href=\"http://www.xumenger.com/csharp-protobuf-20190831/\">Visual Studio下使用Protobuf</a></li>\n  <li><a href=\"http://www.xumenger.com/csharp-il-20190630/\">C# IL指令速查</a></li>\n  <li><a href=\"http://www.xumenger.com/luaintf-20190607/\">lua-intf使用手册</a></li>\n  <li><a href=\"http://www.xumenger.com/lua-c-cpp-20180202/\">Lua与C/C++混合编程</a></li>\n  <li><a href=\"http://www.xumenger.com/lua-redis-20180127/\">Redis下使用Lua脚本</a></li>\n  <li><a href=\"http://www.xumenger.com/lua-20180126/\">Lua简明教程</a></li>\n  <li><a href=\"https://www.cnblogs.com/fuyunzzy/p/6424381.html\">Lua与.net的CLR相互调用</a></li>\n  <li><a href=\"https://blog.csdn.net/e295166319/article/details/60769275\">Unity热更新专题(三)Unity热更新之LuaInterface(上)</a></li>\n  <li><a href=\"http://www.sikiedu.com/classroom/5/thread/535\">MAC 系统无法使用LuaInterface.dll</a></li>\n</ul>\n</section>\n<p><br/><hr/><br/><br />\n如果本篇文章对您有所帮助，您可以通过微信(左)或支付宝(右)对作者进行打赏！<br />\n<br/><br/><br />\n<img src=\"http://www.xumenger.com/../media/image/xumenger.png\" width=\"60%\"/></p>\n<section align=\"right\">\n  <br/>\n  <span>\n    <a href=\"/csharp-protobuf-20190831/\" class=\"pageNav\">上一篇</a>\n       \n    <a href=\"/blender-example-01-20190907/\" class=\"pageNav\">下一篇</a>\n  </span>\n</section>\n<pre><code>&lt;div id=&quot;uyan_frame&quot;&gt;&lt;/div&gt;\n&lt;script type=&quot;text/javascript&quot; src=&quot;http://v2.uyan.cc/code/uyan.js?uid=2066802&quot;&gt;&lt;/script&gt;\n</code></pre>\n","text":" | 分类 &lt;a href=&quot;/categories/#lua之基础&quot; title=&quot;lua之基础&quot;&gt;lua之基础&lt;/a&gt; | 关于Lua、C# 的语法，这里不做介绍，之前有很多文章都有涉及，可以翻看一下（本文参考资...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"16 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#luainterface\"><span class=\"toc-text\">LuaInterface</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#tolua\"><span class=\"toc-text\">ToLua</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8tolua%E5%AE%9E%E7%8E%B0%E6%B8%B8%E6%88%8F%E9%80%BB%E8%BE%91\"><span class=\"toc-text\">使用ToLua实现游戏逻辑</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%92%AD%E6%94%BE%E9%9F%B3%E4%B9%90ogg\"><span class=\"toc-text\">播放音乐(ogg)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99\"><span class=\"toc-text\">参考资料</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua Future","uid":"22e76e1efe2eb097760450e1c86ac2c2","slug":"zl/2016-01-01-662_Lua Future","date":"2024-04-03T03:47:35.886Z","updated":"2024-04-03T03:47:35.887Z","comments":true,"path":"api/articles/zl/2016-01-01-662_Lua Future.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Future模式：参见http://www.cnblogs.com/zhiranok/archive/2011/03/26/Future_Pattern.html 使用future的好处是即利用了异步的并行能力，又保证主逻辑串行执行，保持简单。 Lua 协程sina Timyan...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua入门教程：编译、执行和错误","uid":"4ae02dbeefb32d47e6d19e874dd82a9f","slug":"zl/2016-01-01-660_Lua入门教程：编译、执行和错误","date":"2024-04-03T03:47:35.884Z","updated":"2024-04-03T03:47:35.885Z","comments":true,"path":"api/articles/zl/2016-01-01-660_Lua入门教程：编译、执行和错误.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"dofile 与 loadfile 函数dofile 是一个辅助函数，函数 loadfile 才完成了真正的核心工作。 两个函数都是从文件中加载 Lua 代码，但它不会运行，只是编译代码，然后把编译后的代码作为函数返回。与 dofile 不同，loadfile 不会抛出异常，只会...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}