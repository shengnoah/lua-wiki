{"title":"php+redis+lua","uid":"47b6c60d1f4ce31d7b8bf3e7b08c7ddf","slug":"zl/2016-01-01-81_php+redis+lua","date":"2024-04-03T03:47:36.066Z","updated":"2024-04-03T03:47:36.066Z","comments":true,"path":"api/articles/zl/2016-01-01-81_php+redis+lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>发两个php+redis+lua的例子。<br/></p>\n<h2 id=\"一、直接在redis上运行命令demo\"><a href=\"#一、直接在redis上运行命令demo\" class=\"headerlink\" title=\"一、直接在redis上运行命令demo\"></a>一、直接在redis上运行命令demo</h2><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">eval &#34;return {KEYS[1],KEYS[2],ARGV[1],ARGV[2]}&#34; 2 key1 key2 first second</span><br/></pre></td></tr></tbody></table></figure>\n<ul>\n<li>eval 命令代表后面接的是lua脚本，需要redis使用lua解析器；</li>\n<li>2 代表接下来两个参数为为KEY的参数，即为 key1 key2；</li>\n<li>first、second代表ARGV的附加参数；</li>\n</ul>\n<h2 id=\"二、PHP的demo\"><a href=\"#二、PHP的demo\" class=\"headerlink\" title=\"二、PHP的demo\"></a>二、PHP的demo</h2><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">$lua = &#34;return {KEYS[1],KEYS[2],ARGV[1],ARGV[2]}&#34;;</span><br/><span class=\"line\">$s = $redis-&gt;eval($lua,array(&#39;key1&#39;,&#39;key2&#39;,&#39;first&#39;,&#39;second&#39;),2);</span><br/></pre></td></tr></tbody></table></figure>\n<ul>\n<li>eval(lua脚本字符串,参数数组,前几个为key参数);</li>\n</ul>\n<h4 id=\"1、一次性获取所有的hash结构的所有值\"><a href=\"#1、一次性获取所有的hash结构的所有值\" class=\"headerlink\" title=\"1、一次性获取所有的hash结构的所有值\"></a>1、一次性获取所有的hash结构的所有值</h4><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">$lua = &#34;local ret={}; for i,v in pairs(KEYS) do ret[i]=redis.call(&#39;hgetall&#39;, v) end; return ret&#34;;</span><br/><span class=\"line\">$obj = new Dao_RedisBase();</span><br/><span class=\"line\">$arr_hash_key = [&#39;hash1&#39;,&#39;hash2&#39;,&#39;hash3&#39;,&#39;hash4&#39;];</span><br/><span class=\"line\">$hashresult=$obj-&gt;getCon()-&gt;eval($lua,$arr_hash_key,count($arr_hash_key));</span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"2、如果值一样则删除\"><a href=\"#2、如果值一样则删除\" class=\"headerlink\" title=\"2、如果值一样则删除\"></a>2、如果值一样则删除</h4><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">if redis.call(&#34;get&#34;,KEYS[1]) == ARGV[1] then</span><br/><span class=\"line\">    return redis.call(&#34;del&#34;,KEYS[1])</span><br/><span class=\"line\">else</span><br/><span class=\"line\">    return 0</span><br/><span class=\"line\">end</span><br/></pre></td></tr></tbody></table></figure>\n<h2 id=\"注意：\"><a href=\"#注意：\" class=\"headerlink\" title=\"注意：\"></a>注意：</h2><h4 id=\"redis的proxy可能不支持lua脚本。至少百度修改的Twemproxy就不支持proxy。所以如果你的redis集群是分布式，含有多个分片。使用了proxy，需要先判断能不能使用lua脚本。\"><a href=\"#redis的proxy可能不支持lua脚本。至少百度修改的Twemproxy就不支持proxy。所以如果你的redis集群是分布式，含有多个分片。使用了proxy，需要先判断能不能使用lua脚本。\" class=\"headerlink\" title=\"redis的proxy可能不支持lua脚本。至少百度修改的Twemproxy就不支持proxy。所以如果你的redis集群是分布式，含有多个分片。使用了proxy，需要先判断能不能使用lua脚本。\"></a>redis的proxy可能不支持lua脚本。至少百度修改的Twemproxy就不支持proxy。所以如果你的redis集群是分布式，含有多个分片。使用了proxy，需要先判断能不能使用lua脚本。</h4>","text":"发两个php+redis+lua的例子。 一、直接在redis上运行命令demo1eval &#34;return {KEYS[1],KEYS[2],ARGV[1],ARGV[2]}&#34; 2 key1 key2 first second eval 命令代表后面接的是lua脚...","link":"","photos":[],"count_time":{"symbolsCount":982,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E7%9B%B4%E6%8E%A5%E5%9C%A8redis%E4%B8%8A%E8%BF%90%E8%A1%8C%E5%91%BD%E4%BB%A4demo\"><span class=\"toc-text\">一、直接在redis上运行命令demo</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81PHP%E7%9A%84demo\"><span class=\"toc-text\">二、PHP的demo</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1%E3%80%81%E4%B8%80%E6%AC%A1%E6%80%A7%E8%8E%B7%E5%8F%96%E6%89%80%E6%9C%89%E7%9A%84hash%E7%BB%93%E6%9E%84%E7%9A%84%E6%89%80%E6%9C%89%E5%80%BC\"><span class=\"toc-text\">1、一次性获取所有的hash结构的所有值</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2%E3%80%81%E5%A6%82%E6%9E%9C%E5%80%BC%E4%B8%80%E6%A0%B7%E5%88%99%E5%88%A0%E9%99%A4\"><span class=\"toc-text\">2、如果值一样则删除</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%EF%BC%9A\"><span class=\"toc-text\">注意：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#redis%E7%9A%84proxy%E5%8F%AF%E8%83%BD%E4%B8%8D%E6%94%AF%E6%8C%81lua%E8%84%9A%E6%9C%AC%E3%80%82%E8%87%B3%E5%B0%91%E7%99%BE%E5%BA%A6%E4%BF%AE%E6%94%B9%E7%9A%84Twemproxy%E5%B0%B1%E4%B8%8D%E6%94%AF%E6%8C%81proxy%E3%80%82%E6%89%80%E4%BB%A5%E5%A6%82%E6%9E%9C%E4%BD%A0%E7%9A%84redis%E9%9B%86%E7%BE%A4%E6%98%AF%E5%88%86%E5%B8%83%E5%BC%8F%EF%BC%8C%E5%90%AB%E6%9C%89%E5%A4%9A%E4%B8%AA%E5%88%86%E7%89%87%E3%80%82%E4%BD%BF%E7%94%A8%E4%BA%86proxy%EF%BC%8C%E9%9C%80%E8%A6%81%E5%85%88%E5%88%A4%E6%96%AD%E8%83%BD%E4%B8%8D%E8%83%BD%E4%BD%BF%E7%94%A8lua%E8%84%9A%E6%9C%AC%E3%80%82\"><span class=\"toc-text\">redis的proxy可能不支持lua脚本。至少百度修改的Twemproxy就不支持proxy。所以如果你的redis集群是分布式，含有多个分片。使用了proxy，需要先判断能不能使用lua脚本。</span></a></li></ol></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua和C++的交互","uid":"4c0cbe37244e982275e6a931b2589d5a","slug":"zl/2016-01-01-821_Lua和C++的交互 ","date":"2024-04-03T03:47:36.067Z","updated":"2024-04-03T03:47:36.071Z","comments":true,"path":"api/articles/zl/2016-01-01-821_Lua和C++的交互 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"目录 Lua堆栈 Lua堆栈操作 C++调用lua Lua调用C++ There is something beautiful， just to find it. Lua堆栈 要理解Lua和C++的交互，首先要清楚Lua堆栈。简单来说Lua和C++交互是通过一个无处不在的虚拟堆栈...","link":"","photos":[],"count_time":{"symbolsCount":"28k","symbolsTime":"25 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua笔记 迭代器","uid":"f6ae2766b323b6d77308e0bcd268c058","slug":"zl/2016-01-01-820_Lua笔记 迭代器","date":"2024-04-03T03:47:36.066Z","updated":"2024-04-03T03:47:36.067Z","comments":true,"path":"api/articles/zl/2016-01-01-820_Lua笔记 迭代器.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua中的迭代器提供的是一种遍历表中所有元素的机制，它通常是函数的形式，每次调用函数，返回“下一个”值。Lua中的迭代器有两种实现方式，基于闭包（closure）或者基于协程（coroutine）。以下会通过一个实例来分别讨论两种迭代器的实现。 为更好演示迭代器的功能并逐步实现一...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}