{"title":"Lua进程设计（5）","uid":"d0b187144aba9fb0a587a12b0c875dec","slug":"zl/2016-01-01-266_Lua进程设计（5）","date":"2024-04-03T03:47:33.129Z","updated":"2024-04-03T03:47:33.129Z","comments":true,"path":"api/articles/zl/2016-01-01-266_Lua进程设计（5）.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<pre><code>    &lt;p&gt;Lua中的闭包。&lt;/p&gt;\n</code></pre>\n<h2 id=\"闭包\"><a href=\"https://bitzhangmo.github.io/#%E9%97%AD%E5%8C%85\" class=\"headerlink\" title=\"闭包\"></a>闭包</h2><p>在Lua语言中，函数是严格遵循词法定界的第一类值。</p>\n<p>“第一类值”意味着Lua语言中的函数与与其他常见类型的值具有同等权限（<strong>函数也是值</strong>）：</p>\n<ul>\n<li>一个进程可以将某个函数保存到变量中或表中</li>\n<li>可以将某个函数作为参数传递给其他函数</li>\n<li>还可以将某个函数作为其他函数的返回值返回。</li>\n</ul>\n<p>“词法定界”意味着Lua语言中的函数可以访问包含其自身的外部函数中的变量。</p>\n<h3 id=\"函数是第一类值：\"><a href=\"https://bitzhangmo.github.io/#%E5%87%BD%E6%95%B0%E6%98%AF%E7%AC%AC%E4%B8%80%E7%B1%BB%E5%80%BC%EF%BC%9A\" class=\"headerlink\" title=\"函数是第一类值：\"></a>函数是第一类值：</h3><p>Lua中常见的函数定义方式如下：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(x)</span></span> <span class=\"keyword\">return</span> <span class=\"number\">2</span>*x <span class=\"keyword\">end</span> </span><br><span class=\"line\"></span><br><span class=\"line\">foo = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(x)</span></span> <span class=\"keyword\">return</span> <span class=\"number\">2</span>*x <span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>赋值语句右边的表达式就是函数构造器。</p>\n<p>在Lua语言中，所有的函数都是匿名的，像其他所有的值一样，函数并没有名字，在讨论函数名时，<strong>实际上指的是保存该函数的变量名</strong>。</p>\n<p>以另一个函数为参数的函数，称为<strong>高阶函数</strong>（例如函数sort）。高阶函数是一种强大的编程机制，而利用匿名函数作为参数正是其灵活性的来源。</p>\n<h3 id=\"非全局函数\"><a href=\"https://bitzhangmo.github.io/#%E9%9D%9E%E5%85%A8%E5%B1%80%E5%87%BD%E6%95%B0\" class=\"headerlink\" title=\"非全局函数\"></a>非全局函数</h3><p>函数不仅可以被存储在全局变量中，还可以被存储在表字段和局部变量中。</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">Lib = {}</span><br><span class=\"line\">Lib.foo = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(x,y)</span></span> <span class=\"keyword\">return</span> x + y <span class=\"keyword\">end</span></span><br><span class=\"line\">Lib.goo = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(x,y)</span></span> <span class=\"keyword\">return</span> x - y <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Lib = {</span><br><span class=\"line\">\tfoo = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(x,y)</span></span> <span class=\"keyword\">return</span> x + y <span class=\"keyword\">end</span></span><br><span class=\"line\">\tgoo = <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(x,y)</span></span> <span class=\"keyword\">return</span> x - y <span class=\"keyword\">end</span></span><br><span class=\"line\">}</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 一种特殊的语法</span></span><br><span class=\"line\">Lib = {}</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>  <span class=\"params\">(x,y)</span></span> <span class=\"keyword\">return</span> x + y <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Lib.goo</span> <span class=\"params\">(x,y)</span></span> <span class=\"keyword\">return</span> x - y <span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>当把一个函数存储到局部变量中，就得到了一个局部函数，即<strong>一个被限定在指定作用域中使用的函数</strong>。由于Lua语言将每个进程段作为一个函数处理，所以在一段进程中声明的函数就是局部函数，这些局部函数只在该进程段中可见。</p>\n<h3 id=\"词法定界\"><a href=\"https://bitzhangmo.github.io/#%E8%AF%8D%E6%B3%95%E5%AE%9A%E7%95%8C\" class=\"headerlink\" title=\"词法定界\"></a>词法定界</h3><p><strong>当编写一个被其他函数B包含的函数A时，被包含的函数A可以访问包含其的函数B的所有全局变量。</strong></p>\n<p>假入想建立一个函数来对学生姓名排序，可以：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sortbygrade</span><span class=\"params\">(names,grades)</span></span></span><br><span class=\"line\">\t<span class=\"built_in\">table</span>.<span class=\"built_in\">sort</span>(names,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(n1,n2)</span></span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> grades[n1] &gt; grades[n2]</span><br><span class=\"line\">\t\t<span class=\"keyword\">end</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>注意：传给函数sort的匿名函数可以访问grades，而grades是包含匿名函数的外层函数sortbygrades的形参，在该匿名函数中，grades既不是全局变量，也不是局部变量，而是非全局变量，也称上值（upvalue）。</p>\n<p>简单的说，<strong>一个闭包就是一个函数外加能够使该函数正确访问非局部变量所需的其他机制</strong>。</p>","text":" &lt;p&gt;Lua中的闭包。&lt;/p&gt; 闭包在Lua语言中，函数是严格遵循词法定界的第一类值。 “第一类值”意味着Lua语言中的函数与与其他常见类型的值具有同等权限（函数也是值）： 一个进程可以将某个函数保存到变量中或表中 可以将某个函数作为参数传递给其他函数 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%97%AD%E5%8C%85\"><span class=\"toc-text\">闭包</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0%E6%98%AF%E7%AC%AC%E4%B8%80%E7%B1%BB%E5%80%BC%EF%BC%9A\"><span class=\"toc-text\">函数是第一类值：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%9E%E5%85%A8%E5%B1%80%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">非全局函数</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%8D%E6%B3%95%E5%AE%9A%E7%95%8C\"><span class=\"toc-text\">词法定界</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"nginx+lua应对在线状态服务","uid":"435845a09ea1fa9e5995c6990db247aa","slug":"zl/2016-01-01-270_nginx+lua应对在线状态服务","date":"2024-04-03T03:47:33.130Z","updated":"2024-04-03T03:47:33.131Z","comments":true,"path":"api/articles/zl/2016-01-01-270_nginx+lua应对在线状态服务.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;几天前在@ideawu的博客上看到了其一篇文章中讲到的技术题.&lt;br&gt;&lt;a href=&quot;http://www.ideawu.net/blog/archives/732.html&quot; target=&quot;_blank&q...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua 学习 chapter8","uid":"b020154404f2b064b17fafcacd3513a2","slug":"zl/2016-01-01-267_Lua 学习 chapter8 ","date":"2024-04-03T03:47:33.129Z","updated":"2024-04-03T03:47:33.129Z","comments":true,"path":"api/articles/zl/2016-01-01-267_Lua 学习 chapter8 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;h3 id=&quot;目录&quot;&gt;目录&lt;/h3&gt; 局部变量和代码块 控制结构 break,return和goto 局部变量和代码块 Lua语言中的变量默认情况下是全局变量，所有的局部变量在使用前必须声明。一个代码块是一个控制结构的主体，或是函数...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}