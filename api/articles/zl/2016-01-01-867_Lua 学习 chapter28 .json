{"title":"Lua 学习 chapter28","uid":"d56fd4747fe73803499c91e5213a9b1a","slug":"zl/2016-01-01-867_Lua 学习 chapter28 ","date":"2024-04-03T03:47:36.134Z","updated":"2024-04-03T03:47:36.138Z","comments":true,"path":"api/articles/zl/2016-01-01-867_Lua 学习 chapter28 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h3 id=\"目录\">目录</h3>\n<ol>\n  <li>基础知识</li>\n  <li>操作表</li>\n  <li>一些简便方法</li>\n  <li>调用lua函数</li>\n</ol>\n<blockquote>\n  <p>回顾复习加巩固，自己应该认真地学习复习和巩固，并不是只有学习新知识是自己最重要的，而是复习和巩固才是自己最重要的，所以自己每天必须抽出一定的时间对自己的学习进行复习和巩固。</p>\n</blockquote>\n<h2 id=\"基础知识\">基础知识</h2>\n<p>lua可以作为配置文件来供c语言使用，例如我们来定义一个窗口的大小。</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre>width = 200\nheight = 300\n</pre></td></tr></tbody></table></code></pre></div></div>\n<p>然后我们使用LuaAPI来指挥lua语言解析该文件，并获取width和height的值。</p>\n<ul>\n  <li>luaL_loadfile(lua_State *L, fname):加载文件并且编译，返回一个执行这个文件的函数，放到栈顶</li>\n  <li>lua_pcall(L,0,0,0):调用栈中的函数，第二个参数为函数参数的个数，第三个参数为返回值的个数，第四个参数为错误处理函数。在压入结果之前，pcall函数会将参数和函数出栈，将返回值从第一个按照顺序压入栈中。至于最后一个参数为零，则lua会把错误信息作为string压倒栈中，如果是函数，第四个参数为它在栈中的索引，一般这个错误处理函数应该在被压入栈且位于待调用函数之下。</li>\n  <li>lua_getglobal(lua_State *L, const char *key):根据key值获取全局变量，并放到栈顶。</li>\n</ul>\n<div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n</pre></td><td class=\"rouge-code\"><pre><span class=\"cp\">#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n#include&lt;stdarg.h&gt;\n#include&lt;stdlib.h&gt;\n</span><span class=\"k\">extern</span> <span class=\"s\">&#34;C&#34;</span> <span class=\"p\">&#123;</span>\n<span class=\"cp\">#include &lt;lua.h&gt;\n#include &lt;lauxlib.h&gt;\n#include &lt;lualib.h&gt;\n</span><span class=\"p\">&#125;</span>\n<p><span class=\"kt\">int</span> <span class=\"nf\">getglobint</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">var</span><span class=\"p\">);</span><br />\n<span class=\"kt\">void</span> <span class=\"nf\">load</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\"><em></span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\"></em></span> <span class=\"n\">h</span><span class=\"p\">);</span><br />\n<span class=\"kt\">void</span> <span class=\"nf\">error</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">fmt</span><span class=\"p\">,</span> <span class=\"p\">…);</span></p>\n<p><span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><br />\n<span class=\"p\">&#123;</span><br />\n<span class=\"n\">lua_State</span><span class=\"o\">*</span> <span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"n\">luaL_newstate</span><span class=\"p\">();</span><span class=\"c1\">//打开lua</span><br />\n<span class=\"n\">luaL_openlibs</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">);</span><span class=\"c1\">//打开标准库</span></p>\n<pre><code>&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#34;config&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#34;%d %d&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n</code></pre>\n<p><span class=\"p\">}</span></p>\n<p><span class=\"kt\">int</span> <span class=\"nf\">getglobint</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">var</span><span class=\"p\">)</span><br />\n<span class=\"p\">{</span><br />\n<span class=\"kt\">int</span> <span class=\"n\">isnum</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">;</span><br />\n<span class=\"n\">lua_getglobal</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">var</span><span class=\"p\">);</span><span class=\"c1\">//将相应的全局变量的值压入到栈中。</span><br />\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">lua_tointegerx</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">isnum</span><span class=\"p\">);</span><br />\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">isnum</span><span class=\"p\">)</span><br />\n<span class=\"p\">{</span><br />\n<span class=\"n\">error</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"s\">&quot;'%s' should be a number </span><span class=\"se\">n</span><span class=\"s\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">var</span><span class=\"p\">);</span><br />\n<span class=\"p\">}</span><br />\n<span class=\"n\">lua_pop</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">);</span><br />\n<span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">;</span><br />\n<span class=\"p\">}</span></p>\n<p><span class=\"kt\">void</span> <span class=\"nf\">load</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\"><em></span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\"></em></span> <span class=\"n\">h</span><span class=\"p\">)</span><br />\n<span class=\"p\">{</span><br />\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">luaL_loadfile</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span><span class=\"n\">fname</span><span class=\"p\">)</span> <span class=\"o\">||</span> <span class=\"n\">lua_pcall</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">))</span><span class=\"c1\">//loadfile加载代码，pcall运行编译后的代码段</span><br />\n<span class=\"p\">{</span><br />\n<span class=\"n\">error</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"s\">&quot;cannot  run config. file %s&quot;</span><span class=\"p\">,</span> <span class=\"n\">lua_tostring</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">));</span><br />\n<span class=\"p\">}</span><br />\n<span class=\"o\"><em></span><span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">getglobint</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"s\">&quot;width&quot;</span><span class=\"p\">);</span><br />\n<span class=\"o\"></em></span><span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">getglobint</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"s\">&quot;height&quot;</span><span class=\"p\">);</span><br />\n<span class=\"p\">}</span></p>\n<p><span class=\"kt\">void</span> <span class=\"nf\">error</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">fmt</span><span class=\"p\">,</span> <span class=\"p\">…)</span><br />\n<span class=\"p\">{</span><br />\n<span class=\"kt\">va_list</span> <span class=\"n\">argp</span><span class=\"p\">;</span><br />\n<span class=\"n\">va_start</span><span class=\"p\">(</span><span class=\"n\">argp</span><span class=\"p\">,</span> <span class=\"n\">fmt</span><span class=\"p\">);</span><br />\n<span class=\"n\">vfprintf</span><span class=\"p\">(</span><span class=\"n\">stderr</span><span class=\"p\">,</span> <span class=\"n\">fmt</span><span class=\"p\">,</span> <span class=\"n\">argp</span><span class=\"p\">);</span><br />\n<span class=\"n\">va_end</span><span class=\"p\">(</span><span class=\"n\">argp</span><span class=\"p\">);</span><br />\n<span class=\"n\">lua_close</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">);</span><br />\n<span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"n\">EXIT_FAILURE</span><span class=\"p\">);</span><br />\n<span class=\"p\">}</span></p>\n<p><span class=\"err\">}</span><br />\n</pre></td></tr></tbody></table></code></pre></div></div></p>\n<h2 id=\"操作表\">操作表</h2>\n<p>现在我们要为每个窗口配置一种背景色，假设最终的颜色格式是由三个数字分量组成的RGB颜色。</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre>width = 200\nheight = 300\nBLUE = &#123;red = 0,green = 0,blue = 1.0&#125;\nbackground = BLUE\n</pre></td></tr></tbody></table></code></pre></div></div>\n<p>我们可以对表进行操作，具体用到的函数：</p>\n<ul>\n  <li>lua_pushstring(L,key)</li>\n  <li>lua_gettable(L,-2) //-2是表的索引，它会pop出key，然后根据key取值，并把值放到栈中</li>\n  <li>lua_getfield(L,-1,key)//相当于上面的两步，这个函数会返回结果的类型</li>\n  <li>lua_pushnumber(L,val)</li>\n  <li>lua_pushstring(L,key)</li>\n  <li>lua_settable(L,-3)// -3是表的索引，它会pop出val，key，然后给表设置值。</li>\n  <li>lua_setfield(L,-2,key)// 相当于上面的两步，它会pop出val然后根据key设置值。</li>\n  <li>lua_createtable(L,int narr,int nrec):narr,表示连续的值个数，nrec表示hash的值个数。</li>\n</ul>\n<div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n</pre></td><td class=\"rouge-code\"><pre><span class=\"cp\">#include&lt;stdio.h&gt;\n#include&lt;string.h&gt;\n#include&lt;stdarg.h&gt;\n#include&lt;stdlib.h&gt;\n</span><span class=\"k\">extern</span> <span class=\"s\">&#34;C&#34;</span> <span class=\"p\">&#123;</span>\n<span class=\"cp\">#include &lt;lua.h&gt;\n#include &lt;lauxlib.h&gt;\n#include &lt;lualib.h&gt;\n</span><span class=\"p\">&#125;</span>\n<p><span class=\"k\">const</span> <span class=\"kt\">int</span> <span class=\"n\">MAX_COLOR</span> <span class=\"o\">=</span> <span class=\"mi\">255</span><span class=\"p\">;</span></p>\n<p><span class=\"k\">struct</span> <span class=\"n\">ColorTable</span><br />\n<span class=\"p\">&#123;</span><br />\n<span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\">*</span> <span class=\"n\">name</span><span class=\"p\">;</span><br />\n<span class=\"kt\">unsigned</span> <span class=\"kt\">char</span> <span class=\"n\">red</span><span class=\"p\">,</span> <span class=\"n\">green</span><span class=\"p\">,</span> <span class=\"n\">blue</span><span class=\"p\">;</span><br />\n<span class=\"p\">&#125;</span><span class=\"n\">colortable</span><span class=\"p\">[]</span> <span class=\"o\">=</span> <span class=\"p\">&#123;</span><br />\n<span class=\"p\">&#123;</span><span class=\"s\">&quot;WHITE&quot;</span><span class=\"p\">,</span> <span class=\"n\">MAX_COLOR</span><span class=\"p\">,</span> <span class=\"n\">MAX_COLOR</span><span class=\"p\">,</span> <span class=\"n\">MAX_COLOR</span><span class=\"p\">&#125;,</span><br />\n<span class=\"p\">&#123;</span><span class=\"s\">&quot;RED&quot;</span><span class=\"p\">,</span> <span class=\"n\">MAX_COLOR</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">&#125;,</span><br />\n<span class=\"p\">&#123;</span><span class=\"s\">&quot;GREEN&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">MAX_COLOR</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">&#125;,</span><br />\n<span class=\"p\">&#123;</span><span class=\"s\">&quot;BLUE&quot;</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">MAX_COLOR</span><span class=\"p\">&#125;,</span><br />\n<span class=\"p\">&#123;</span><span class=\"nb\">NULL</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">&#125;</span><br />\n<span class=\"p\">&#125;;</span></p>\n<p><span class=\"kt\">int</span> <span class=\"nf\">getglobint</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">var</span><span class=\"p\">);</span><br />\n<span class=\"kt\">void</span> <span class=\"nf\">load</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\"><em></span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\"></em></span> <span class=\"n\">h</span><span class=\"p\">);</span><br />\n<span class=\"kt\">void</span> <span class=\"nf\">error</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">fmt</span><span class=\"p\">,</span> <span class=\"p\">…);</span><br />\n<span class=\"kt\">void</span> <span class=\"nf\">getColor</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">what</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\"><em></span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\"></em></span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\"><em></span> <span class=\"n\">b</span><span class=\"p\">);</span><br />\n<span class=\"kt\">int</span> <span class=\"nf\">getcolorfield</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"></em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"><em></span> <span class=\"n\">key</span><span class=\"p\">);</span><br />\n<span class=\"kt\">void</span> <span class=\"nf\">setcolor</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"></em></span> <span class=\"n\">L</span><span class=\"p\">,</span><span class=\"k\">struct</span> <span class=\"n\">ColorTable</span> <span class=\"o\"><em></span><span class=\"n\">ct</span><span class=\"p\">);</span><br />\n<span class=\"kt\">void</span> <span class=\"nf\">setcolorfield</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"></em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\">*</span> <span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">value</span><span class=\"p\">);</span></p>\n<p><span class=\"kt\">int</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"kt\">void</span><span class=\"p\">)</span><br />\n<span class=\"p\">&#123;</span><br />\n<span class=\"n\">lua_State</span><span class=\"o\">*</span> <span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"n\">luaL_newstate</span><span class=\"p\">();</span><span class=\"c1\">//打开lua</span><br />\n<span class=\"n\">luaL_openlibs</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">);</span><span class=\"c1\">//打开标准库</span></p>\n<pre><code>&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#34;config&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#34;%d %d &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;getColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#34;background&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#34;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;colortable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;&#123;&lt;/span&gt;\n\t&lt;span class=&quot;n&quot;&gt;setcolor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;colortable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;&#125;&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n</code></pre>\n<p><span class=\"p\">}</span></p>\n<p><span class=\"kt\">int</span> <span class=\"nf\">getglobint</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">var</span><span class=\"p\">)</span><br />\n<span class=\"p\">{</span><br />\n<span class=\"kt\">int</span> <span class=\"n\">isnum</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">;</span><br />\n<span class=\"n\">lua_getglobal</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">var</span><span class=\"p\">);</span><br />\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)</span><span class=\"n\">lua_tointegerx</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">isnum</span><span class=\"p\">);</span><br />\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">isnum</span><span class=\"p\">)</span><br />\n<span class=\"p\">{</span><br />\n<span class=\"n\">error</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"s\">&quot;'%s' should be a number </span><span class=\"se\">n</span><span class=\"s\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">var</span><span class=\"p\">);</span><br />\n<span class=\"p\">}</span><br />\n<span class=\"n\">lua_pop</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">);</span><br />\n<span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">;</span><br />\n<span class=\"p\">}</span></p>\n<p><span class=\"kt\">void</span> <span class=\"nf\">load</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">fname</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\"><em></span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\"></em></span> <span class=\"n\">h</span><span class=\"p\">)</span><br />\n<span class=\"p\">{</span><br />\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">luaL_loadfile</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span><span class=\"n\">fname</span><span class=\"p\">)</span> <span class=\"o\">||</span> <span class=\"n\">lua_pcall</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">))</span><br />\n<span class=\"p\">{</span><br />\n<span class=\"n\">error</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"s\">&quot;cannot  run config. file %s&quot;</span><span class=\"p\">,</span> <span class=\"n\">lua_tostring</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">));</span><br />\n<span class=\"p\">}</span><br />\n<span class=\"o\"><em></span><span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">getglobint</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"s\">&quot;width&quot;</span><span class=\"p\">);</span><br />\n<span class=\"o\"></em></span><span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">getglobint</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"s\">&quot;height&quot;</span><span class=\"p\">);</span><br />\n<span class=\"p\">}</span></p>\n<p><span class=\"kt\">void</span> <span class=\"nf\">error</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">fmt</span><span class=\"p\">,</span> <span class=\"p\">…)</span><br />\n<span class=\"p\">{</span><br />\n<span class=\"kt\">va_list</span> <span class=\"n\">argp</span><span class=\"p\">;</span><br />\n<span class=\"n\">va_start</span><span class=\"p\">(</span><span class=\"n\">argp</span><span class=\"p\">,</span> <span class=\"n\">fmt</span><span class=\"p\">);</span><br />\n<span class=\"n\">vfprintf</span><span class=\"p\">(</span><span class=\"n\">stderr</span><span class=\"p\">,</span> <span class=\"n\">fmt</span><span class=\"p\">,</span> <span class=\"n\">argp</span><span class=\"p\">);</span><br />\n<span class=\"n\">va_end</span><span class=\"p\">(</span><span class=\"n\">argp</span><span class=\"p\">);</span><br />\n<span class=\"n\">lua_close</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">);</span><br />\n<span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"n\">EXIT_FAILURE</span><span class=\"p\">);</span><br />\n<span class=\"p\">}</span></p>\n<p><span class=\"kt\">void</span> <span class=\"nf\">getColor</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">what</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\"><em></span> <span class=\"n\">r</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\"></em></span> <span class=\"n\">g</span><span class=\"p\">,</span> <span class=\"kt\">int</span><span class=\"o\">*</span> <span class=\"n\">b</span><span class=\"p\">)</span><br />\n<span class=\"p\">{</span><br />\n<span class=\"n\">lua_getglobal</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">what</span><span class=\"p\">);</span><br />\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">lua_istable</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">))</span><br />\n<span class=\"p\">{</span><br />\n<span class=\"n\">error</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"s\">&quot;'%s' is not a table&quot;</span><span class=\"p\">,</span> <span class=\"n\">what</span><span class=\"p\">);</span><br />\n<span class=\"p\">}</span></p>\n<pre><code>&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getcolorfield&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;g&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getcolorfield&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#34;green&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getcolorfield&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n</code></pre>\n<p><span class=\"p\">}</span></p>\n<p><span class=\"kt\">int</span> <span class=\"nf\">getcolorfield</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">key</span><span class=\"p\">)</span><br />\n<span class=\"p\">{</span><br />\n<span class=\"kt\">int</span> <span class=\"n\">result</span><span class=\"p\">,</span> <span class=\"n\">isnum</span><span class=\"p\">;</span><br />\n<span class=\"n\">lua_getfield</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">);</span><br />\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"kt\">int</span><span class=\"p\">)(</span><span class=\"n\">lua_tonumberx</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">&amp;</span><span class=\"n\">isnum</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">MAX_COLOR</span><span class=\"p\">);</span><br />\n<span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"n\">isnum</span><span class=\"p\">)</span><br />\n<span class=\"p\">{</span><br />\n<span class=\"n\">error</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"s\">&quot;invalid component '%s' in color&quot;</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">);</span><br />\n<span class=\"p\">}</span><br />\n<span class=\"n\">lua_pop</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">);</span><br />\n<span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">;</span><br />\n<span class=\"p\">}</span></p>\n<p><span class=\"kt\">void</span> <span class=\"nf\">setcolor</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">ColorTable</span><span class=\"o\"></em></span> <span class=\"n\">ct</span><span class=\"p\">)</span><br />\n<span class=\"p\">{</span><br />\n<span class=\"n\">lua_newtable</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">);</span><br />\n<span class=\"n\">setcolorfield</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"s\">&quot;red&quot;</span><span class=\"p\">,</span> <span class=\"n\">ct</span><span class=\"o\">-&gt;</span><span class=\"n\">red</span><span class=\"p\">);</span><br />\n<span class=\"n\">setcolorfield</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"s\">&quot;green&quot;</span><span class=\"p\">,</span> <span class=\"n\">ct</span><span class=\"o\">-&gt;</span><span class=\"n\">green</span><span class=\"p\">);</span><br />\n<span class=\"n\">setcolorfield</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"s\">&quot;blue&quot;</span><span class=\"p\">,</span> <span class=\"n\">ct</span><span class=\"o\">-&gt;</span><span class=\"n\">blue</span><span class=\"p\">);</span><br />\n<span class=\"n\">lua_setglobal</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">ct</span><span class=\"o\">-&gt;</span><span class=\"n\">name</span><span class=\"p\">);</span><br />\n<span class=\"p\">}</span></p>\n<p><span class=\"kt\">void</span> <span class=\"nf\">setcolorfield</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\"><em></span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\"></em></span> <span class=\"n\">index</span><span class=\"p\">,</span> <span class=\"kt\">int</span> <span class=\"n\">value</span><span class=\"p\">)</span><br />\n<span class=\"p\">{</span><br />\n<span class=\"n\">lua_pushstring</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">index</span><span class=\"p\">);</span><br />\n<span class=\"n\">lua_pushnumber</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"kt\">double</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">MAX_COLOR</span><span class=\"p\">);</span><br />\n<span class=\"n\">lua_settable</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">);</span><br />\n<span class=\"c1\">//lua_setfield(L, -2, index); lua_setfield是将pushstring和settable结合起来的</span><br />\n<span class=\"p\">}</span></p>\n<p></pre></td></tr></tbody></table></code></pre></div></div></p>\n<h2 id=\"调用lua函数\">调用lua函数</h2>\n<div class=\"language-c highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n</pre></td><td class=\"rouge-code\"><pre><span class=\"c1\">//一个通用的调用函数</span>\n<span class=\"c1\">//这里vl其实就是一个指针，指向了参数的地址。</span>\n<span class=\"c1\">//</span>\n<span class=\"c1\">//va_start()所做的就是让vl指向函数的最后一个确定的参数（声明程序中是sig）的下一个参数的地址。</span>\n<span class=\"c1\">//</span>\n<span class=\"c1\">//va_arg()所做的就是根据vl指向的地址，和第二个参数所确定的类型，将这个参数的中的数据提取出来，作为返回值，同时让ap指向下一个参数。</span>\n<span class=\"c1\">//</span>\n<span class=\"c1\">//va_end()所做的就是让vl这个指针指向0。</span>\n<span class=\"kt\">void</span> <span class=\"nf\">call_va</span><span class=\"p\">(</span><span class=\"n\">lua_State</span><span class=\"o\">*</span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\">*</span> <span class=\"n\">func</span><span class=\"p\">,</span> <span class=\"k\">const</span> <span class=\"kt\">char</span><span class=\"o\">*</span> <span class=\"n\">sig</span><span class=\"p\">,</span> <span class=\"p\">...)</span> <span class=\"p\">&#123;</span>\n\t<span class=\"kt\">va_list</span> <span class=\"n\">vl</span><span class=\"p\">;</span>\n\t<span class=\"kt\">int</span> <span class=\"n\">narg</span><span class=\"p\">,</span> <span class=\"n\">nres</span><span class=\"p\">;</span> <span class=\"c1\">//参数和结果的个数</span>\n<pre><code>&lt;span class=&quot;n&quot;&gt;va_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vl&lt;/span&gt;&lt;span c\n</code></pre>\n","text":"目录 基础知识 操作表 一些简便方法 调用lua函数 回顾复习加巩固，自己应该认真地学习复习和巩固，并不是只有学习新知识是自己最重要的，而是复习和巩固才是自己最重要的，所以自己每天必须抽出一定的时间对自己的学习进行复习和巩固。 基础知识 lua可以作为配置文件来供c语言使用，例如...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"12 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">目录</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">基础知识</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%93%8D%E4%BD%9C%E8%A1%A8\"><span class=\"toc-text\">操作表</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B0%83%E7%94%A8lua%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">调用lua函数</span></a>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Nginx_Lua_Module扩展的安装与配置_适用于Ubuntu系统","uid":"c8f0056864d5f78dae05a2d947e131e3","slug":"zl/2016-01-01-866_Nginx_Lua_Module扩展的安装与配置_适用于Ubuntu系统","date":"2024-04-03T03:47:36.134Z","updated":"2024-04-03T03:47:36.134Z","comments":true,"path":"api/articles/zl/2016-01-01-866_Nginx_Lua_Module扩展的安装与配置_适用于Ubuntu系统.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua 是一个简洁、轻量、可扩展的脚本语言，也是号称性能最高的脚本语言，用在很多需要性能的地方，比如：游戏脚本，nginx，wireshark的脚本。很多应用程序使用Lua作为自己的嵌入式脚本语言，以此来实现可配置性、可扩展性。Lua原生支持的数据类型非常之少，它只提供了nil、...","link":"","photos":[],"count_time":{"symbolsCount":"33k","symbolsTime":"30 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Evaluation methods for unsupervised word embeddings","uid":"aa4d284a20cdc4b4ae187da2aa448bdf","slug":"zl/2016-01-01-865_Evaluation methods for unsupervised word embedding","date":"2024-04-03T03:47:36.133Z","updated":"2024-04-03T03:47:36.134Z","comments":true,"path":"api/articles/zl/2016-01-01-865_Evaluation methods for unsupervised word embedding.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"本文研究了无监督词向量的评价方法。 动机 词向量的评价可分为外在评价和内在评价。外在评价将词向量运用在下游任务观察性能的提升，但只能显示出词向量的好处，无法清晰地将词向量与性能度量连接在一起。内在评价通过回答词语之间的语义关系和句法关系的询问得到。但这些数据集都是收集自过去其他领...","link":"","photos":[],"count_time":{"symbolsCount":827,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}