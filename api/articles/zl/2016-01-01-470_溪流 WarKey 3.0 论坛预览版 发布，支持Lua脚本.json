{"title":"溪流 WarKey 3.0 论坛预览版 发布，支持Lua脚本","uid":"10b11cff4c48bcbd38346c27bd294825","slug":"zl/2016-01-01-470_溪流 WarKey 3.0 论坛预览版 发布，支持Lua脚本","date":"2024-04-03T03:47:35.751Z","updated":"2024-04-03T03:47:35.751Z","comments":true,"path":"api/articles/zl/2016-01-01-470_溪流 WarKey 3.0 论坛预览版 发布，支持Lua脚本.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>昨晚搞到近 2 点，终于把相关部分搞完了，放出个预览版玩玩。这一版本将支持组合键，比如，可以分别改Q、Ctrl+Q、Alt+Q 等，也将支持所有鼠标操作。此外，增加了一个脚本系统，允许用户进行更大程度上的自定义。</p>\n<p><a href=\"http://www.cppblog.com/Files/Streamlet/xlWarKey30_preview1.rar\">猛击这里下载</a></p>\n<p>脚本使用 lua 语言，格式大致为（正式版出来之前可能还会有改动）：</p>\n<div class=\"highlight\"><pre style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-lua\" data-lang=\"lua\"><span style=\"color:#008000\">-----------------------------------------------------------------------------</span>\n<span style=\"color:#008000\">-- SampleExtension.lua</span>\nExtension =\n&#123;\n    Application = <span style=\"color:#a31515\">&#34;xlWarKey&#34;</span>, <span style=\"color:#008000\">--请勿修改</span>\n    Version = <span style=\"color:#a31515\">&#34;3.0&#34;</span>, <span style=\"color:#008000\">--请勿修改</span>\n    NameSpace = <span style=\"color:#a31515\">&#34;http://www.streamlet.org/api/xlwarkey/3.0&#34;</span>, <span style=\"color:#008000\">--请勿修改</span>\n<pre><code>ExtensionName = &lt;span style=&quot;color:#a31515&quot;&gt;&amp;#34;SampleExtension&amp;#34;&lt;/span&gt;, &lt;span style=&quot;color:#008000&quot;&gt;--请勿修改&lt;/span&gt;\nDescription = &lt;span style=&quot;color:#a31515&quot;&gt;&amp;#34;This is a sample extension.&amp;#34;&lt;/span&gt;,\n\nConfiguration =\n&#123;\n    setting1 = &lt;span style=&quot;color:#008000&quot;&gt;--设置项1（本例不使用）&lt;/span&gt;\n    &#123;\n        Type = &lt;span style=&quot;color:#a31515&quot;&gt;&amp;#34;number&amp;#34;&lt;/span&gt;,\n        Desc = &lt;span style=&quot;color:#a31515&quot;&gt;&amp;#34;Please input an integer.&amp;#34;&lt;/span&gt;\n    &#125;,\n    setting2 = &lt;span style=&quot;color:#008000&quot;&gt;--设置项2（本例不使用）&lt;/span&gt;\n    &#123;\n        Type = &lt;span style=&quot;color:#a31515&quot;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;,\n        Desc = &lt;span style=&quot;color:#a31515&quot;&gt;&amp;#34;Please input a string.&amp;#34;&lt;/span&gt;\n    &#125;\n    &lt;span style=&quot;color:#008000&quot;&gt;--其他设置项&lt;/span&gt;\n&#125;,\n\nEntrance = &lt;span style=&quot;color:#00f&quot;&gt;function&lt;/span&gt; (id) &lt;span style=&quot;color:#008000&quot;&gt;-- 入口函数&lt;/span&gt;\n    &lt;span style=&quot;color:#008000&quot;&gt;-- 所有代码都请写在这里&lt;/span&gt;\n    &lt;span style=&quot;color:#00f&quot;&gt;return&lt;/span&gt; &lt;span style=&quot;color:#00f&quot;&gt;true&lt;/span&gt;; &lt;span style=&quot;color:#008000&quot;&gt;--必须返回 true 或者 false。返回值意义目前暂未定义。&lt;/span&gt;\n&lt;span style=&quot;color:#00f&quot;&gt;end&lt;/span&gt;\n</code></pre>\n<p>};<br />\n<span style=\"color:#008000\">----------------------------------------------------------------------------</span></code></pre></div></p>\n<p>目前支持的 API 有：</p>\n<div class=\"highlight\"><pre style=\"background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4\"><code class=\"language-lua\" data-lang=\"lua\">void PressKey(number vkcode [,\n              boolean ctrl [, boolean shift [, boolean alt [, boolean win]]]])\n<p><span style=\"\">按下某键。</span><br />\n<span style=\"\">第一个参数为虚拟键码，也就是</span> Windows <span style=\"\">的</span> VK_<em><span style=\"\">，脚本里给出了一个</span> Keys <span style=\"\">变量，可以直接使用</span> Keys.VK_</em><span style=\"\">。其中</span> 0 - 9 <span style=\"\">用</span> Keys.VK_0<span style=\"\">、……、</span>Keys.VK_9<span style=\"\">，字母键用</span> Keys.VK_A<span style=\"\">、……、</span>Keys.VK_Z<span style=\"\">。</span><br />\n<span style=\"\">后面四个表示状态键是否被按下。默认</span> <span style=\"color:#00f\">false</span><span style=\"\">。</span><br />\n<span style=\"\">若要按下</span> Ctrl+1<span style=\"\">，可写成</span> PressKey(Keys.VK_1, <span style=\"color:#00f\">true</span>, <span style=\"color:#00f\">false</span>, <span style=\"color:#00f\">false</span>, <span style=\"color:#00f\">false</span>);<br />\n<span style=\"\">也可简写为</span> PressKey(Keys.VK_1, <span style=\"color:#00f\">true</span>)<span style=\"\">。</span></p>\n<p>void ReleaseKey(number vkcode [,<br />\nboolean ctrl [, boolean shift [, boolean alt [, boolean win]]]])</p>\n<p><span style=\"\">同上，放开某键。</span></p>\n<p>void MoveMouse(number x, number y)</p>\n<p><span style=\"\">移动鼠标到</span> (x, y) <span style=\"\">位置。此坐标是相对于屏幕上最前面的那个窗口的客户区的左上角的（以后将相对于魔兽窗口）。</span></p>\n<p>void PressMouseButton(number button)<br />\nbutton: 1 - Left<br />\n2 - Right<br />\n3 - XButton1<br />\n4 - XButton2</p>\n<p><span style=\"\">按下鼠标按钮</span></p>\n<p>void ReleaseMouseButton(number button)<br />\nbutton: 1 - Left<br />\n2 - Right<br />\n3 - XButton1<br />\n4 - XButton2</p>\n<p><span style=\"\">放开鼠标按钮</span></p>\n<p>void MouseWheel(number button, number delta)<br />\nbutton: 1 - VWheel<br />\n2 - HWheel</p>\n<p><span style=\"\">滚动鼠标滚轮</span></p>\n<p>void SetClipboard(string str)</p>\n<p><span style=\"\">将一个字符串放到剪贴板</span></p>\n<p>string AnsiToUtf8(string ansi)</p>\n<p><span style=\"\">将</span> Ansi <span style=\"\">字符串转换为</span> UTF-8</p>\n<p>width, height GetClientSize()</p>\n<p><span style=\"\">取客户区大小。目前是取屏幕上最前面的那个窗口的客户区的大小（以后将会是魔兽窗口的大小）。</span></p>\n<p>x, y GetCursorPosition()</p>\n<p><span style=\"\">取鼠标光标当前位置。此坐标是相对于屏幕上最前面的那个窗口的客户区的左上角的（以后将相对于魔兽窗口）。</span></p>\n<p>void Delay(number milliseconds)</p>\n<p><span style=\"\">等待一段时间，参数的单位是毫秒。</span></code></pre></div></p>\n<p>上面附件中的示例脚本实现了一次性扔掉物品栏所有物品的功能。请打开魔兽，然后按 Alt+1 来看效果。</p>\n<p>论坛相应主题：<a href=\"http://forum.streamlet.org/thread-236-1-1.html\">http://forum.streamlet.org/thread-236-1-1.html</a></p>\n<p>介绍到此结束。</p>\n<p>最后，如果有兴趣的，希望探讨下，目前的脚本格式定义是否合理，API 设置是否合理，脚本安全性如何控制，等等。</p>\n<p>欢迎在下面评论中跟帖。</p>\n<hr/>\n<p>首发：<a href=\"http://www.cppblog.com/Streamlet/archive/2010/05/10/114988.html\">http://www.cppblog.com/Streamlet/archive/2010/05/10/114988.html</a></p>","text":"昨晚搞到近 2 点，终于把相关部分搞完了，放出个预览版玩玩。这一版本将支持组合键，比如，可以分别改Q、Ctrl+Q、Alt+Q 等，也将支持所有鼠标操作。此外，增加了一个脚本系统，允许用户进行更大程度上的自定义。 猛击这里下载 脚本使用 lua 语言，格式大致为（正式版出来之前可...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"cocos2dx lua (伪)面向对象理解与实战应用","uid":"9031c35a0fe6df7d970064b52b48b4cb","slug":"zl/2016-01-01-473_cocos2dx lua (伪)面向对象理解与实战应用","date":"2024-04-03T03:47:35.755Z","updated":"2024-04-03T03:47:35.755Z","comments":true,"path":"api/articles/zl/2016-01-01-473_cocos2dx lua (伪)面向对象理解与实战应用.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 面向对象 &gt;&gt; 把一组数据结构和处理它们的方法组成对象（object），把相同行为的对象归纳为类（class） &gt;&gt; 通过类的封装（encapsulation）隐藏内部细节 &gt;&gt; 通过继承（inheritance）实现类的特化（special...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua模块的包管理器LuaRocks","uid":"7755b8b7ecbc305e4191ff4b734992cd","slug":"zl/2016-01-01-471_Lua模块的包管理器LuaRocks","date":"2024-04-03T03:47:35.751Z","updated":"2024-04-03T03:47:35.755Z","comments":true,"path":"api/articles/zl/2016-01-01-471_Lua模块的包管理器LuaRocks.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" LuaRocks是Lua模块的包管理器。它允许你创建和安装Lua模块，作为独立包名为rocks。 您可以在Unix和Windows上下载并安装LuaRocks。LuaRocks是免费软件，使用与Lua相同的许可证。 @[TOC] 官方 ：https://luarocks.org...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}