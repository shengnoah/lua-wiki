{"title":"Lua学习笔记——时间和日期","uid":"3c6c860a219c59b8db2e893adbe18723","slug":"zl/2016-01-01-843_Lua学习笔记——时间和日期","date":"2024-04-03T03:47:36.094Z","updated":"2024-04-03T03:47:36.094Z","comments":true,"path":"api/articles/zl/2016-01-01-843_Lua学习笔记——时间和日期.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h3 id=\"思维导图\"><a href=\"#思维导图\" class=\"headerlink\" title=\"思维导图\"></a>思维导图</h3><p>首先我们看一张思维导图：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/quanxiaoye/ImgHosting/root/%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE.jpg\" alt=\"\"/></p>\n<p><strong>备注：</strong></p>\n<p><strong>1. 纪元：</strong>一个固定日期，在 POSIX 和 Windows 平台中这个固定日期是 Jan 01, 1970, 00:00 UTC。</p>\n<p><strong>2. 日期表：</strong>在 lua 中表示时间的一种方式，这个表具有以下几个重要字段：year、month、day、hour、        min、sec、wday、yday、isdst。</p>\n<ul>\n<li><p>wday：本周中的第几天（第一天是星期日）</p>\n</li>\n<li><p>yday：当年中的第几天</p>\n</li>\n<li><p>isdst：布尔类型。如果使用夏令时则为真。</p>\n</li>\n<li><p>例如：Sep 16,1998,23:48:10 用日期表的格式表示为：<br/>{year=1998, month=9, day=16, yday=259, wday=4, hour=23, min=48, sec=10, isdst=false}</p>\n</li>\n</ul>\n<p>日期表中各个参数的范围如下：（秒的最大范围是60，允许闰秒的存在。）</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">字段</th>\n<th align=\"center\">范围</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">year</td>\n<td align=\"center\">一整年</td>\n</tr>\n<tr>\n<td align=\"center\">month</td>\n<td align=\"center\">1~12</td>\n</tr>\n<tr>\n<td align=\"center\">day</td>\n<td align=\"center\">1~31</td>\n</tr>\n<tr>\n<td align=\"center\">hour</td>\n<td align=\"center\">0~23</td>\n</tr>\n<tr>\n<td align=\"center\">min</td>\n<td align=\"center\">0~59</td>\n</tr>\n<tr>\n<td align=\"center\">sec</td>\n<td align=\"center\">0~60</td>\n</tr>\n<tr>\n<td align=\"center\">wday</td>\n<td align=\"center\">1~7</td>\n</tr>\n<tr>\n<td align=\"center\">yday</td>\n<td align=\"center\">1~366</td>\n</tr>\n</tbody></table>\n<p><strong>3. os.clock()：</strong>在性能测试中，可用来记录程序的运行时间。如下：</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> x = <span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>()</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">os</span>.<span class=\"built_in\">clock</span>() - x)</span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"实际使用\"><a href=\"#实际使用\" class=\"headerlink\" title=\"实际使用\"></a>实际使用</h3><h4 id=\"1-获取当前时间的整数表达\"><a href=\"#1-获取当前时间的整数表达\" class=\"headerlink\" title=\"1. 获取当前时间的整数表达\"></a>1. 获取当前时间的整数表达</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 当前时间为 2019-10-8 19:00:00</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">os</span>.<span class=\"built_in\">time</span>())      <span class=\"comment\">-- 1570532400</span></span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"2-获取当前时间的格式化表示\"><a href=\"#2-获取当前时间的格式化表示\" class=\"headerlink\" title=\"2. 获取当前时间的格式化表示\"></a>2. 获取当前时间的格式化表示</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 当前时间为 2019-10-8 19:00:00</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">os</span>.<span class=\"built_in\">date</span>())      <span class=\"comment\">-- Tue Oct  8 19:00:00 2019</span></span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"3-获取指定天数之后的日期\"><a href=\"#3-获取指定天数之后的日期\" class=\"headerlink\" title=\"3. 获取指定天数之后的日期\"></a>3. 获取指定天数之后的日期</h4><p>下面我们先看一个计算当前天数 40 天之后的日期的例子：</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 当前时间为 2019-10-8 19:00:00</span></span><br/><span class=\"line\">t = <span class=\"built_in\">os</span>.<span class=\"built_in\">date</span>(<span class=\"string\">&#34;*t&#34;</span>)     <span class=\"comment\">-- 获取当前日期</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">os</span>.<span class=\"built_in\">date</span>(<span class=\"string\">&#34;%Y/%m/%d&#34;</span>, <span class=\"built_in\">os</span>.<span class=\"built_in\">time</span>(t)))    <span class=\"comment\">-- 2019-10-8</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(t.day, t.month)    <span class=\"comment\">-- 8 10</span></span><br/><span class=\"line\">t.day = t.day + <span class=\"number\">40</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(t.day, t.month)    <span class=\"comment\">-- 48 10</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">os</span>.<span class=\"built_in\">date</span>(<span class=\"string\">&#34;%Y/%m/%d&#34;</span>, <span class=\"built_in\">os</span>.<span class=\"built_in\">time</span>(t)))    <span class=\"comment\">-- 2019-11-17  (归一化)</span></span><br/><span class=\"line\">t = <span class=\"built_in\">os</span>.<span class=\"built_in\">date</span>(<span class=\"string\">&#34;*t&#34;</span>, <span class=\"built_in\">os</span>.<span class=\"built_in\">time</span>(t))</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(t.day, t.month)    <span class=\"comment\">-- 17 11 -- 2019-11-17  (归一化)</span></span><br/><span class=\"line\">t.month = t.month + <span class=\"number\">1</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(t.day, t.month)    <span class=\"comment\">-- 17 12</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">os</span>.<span class=\"built_in\">date</span>(<span class=\"string\">&#34;%Y/%m/%d&#34;</span>, <span class=\"built_in\">os</span>.<span class=\"built_in\">time</span>(t)))    <span class=\"comment\">-- 2019-12-17</span></span><br/></pre></td></tr></tbody></table></figure>\n<p>在上面的例子中，我们看到，在加完天数之后，我们先将我们的日期表使用 os.time() 转换成整数，然后再用 os.date() 就可以做到日期的归一化显示。</p>","text":"思维导图首先我们看一张思维导图： 备注： 1. 纪元：一个固定日期，在 POSIX 和 Windows 平台中这个固定日期是 Jan 01, 1970, 00:00 UTC。 2. 日期表：在 lua 中表示时间的一种方式，这个表具有以下几个重要字段：year、month、day...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE\"><span class=\"toc-text\">思维导图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E9%99%85%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">实际使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#1-%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4%E7%9A%84%E6%95%B4%E6%95%B0%E8%A1%A8%E8%BE%BE\"><span class=\"toc-text\">1. 获取当前时间的整数表达</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#2-%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4%E7%9A%84%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%A1%A8%E7%A4%BA\"><span class=\"toc-text\">2. 获取当前时间的格式化表示</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#3-%E8%8E%B7%E5%8F%96%E6%8C%87%E5%AE%9A%E5%A4%A9%E6%95%B0%E4%B9%8B%E5%90%8E%E7%9A%84%E6%97%A5%E6%9C%9F\"><span class=\"toc-text\">3. 获取指定天数之后的日期</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua语法","uid":"6fd8143c3b34ef934d677c24fc2719a0","slug":"zl/2016-01-01-842_lua语法","date":"2024-04-03T03:47:36.094Z","updated":"2024-04-03T03:47:36.094Z","comments":true,"path":"api/articles/zl/2016-01-01-842_lua语法.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"lua特性开源，轻量级，c语言编写实现，实现面向对象有点绕，执行效率高 lua开发环境 linux 123456789101112131415-- 下载lua包、解压wget -c http://www.lua.org/ftp/lua-5.3.0.tar.gztar zxvf l...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"lua学习笔记（二）","uid":"e07778deeaf81d4e352e39b31a6e0149","slug":"zl/2016-01-01-841_lua学习笔记（二）","date":"2024-04-03T03:47:36.093Z","updated":"2024-04-03T03:47:36.094Z","comments":true,"path":"api/articles/zl/2016-01-01-841_lua学习笔记（二）.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua变量12345678910111213141516171819202122232425Lua变量三种类型：全局变量（储存在名称为_G的table中）、局部变量、table中的域Lua中的变量全都是全局变量，即使在语句块或函数里，除非用local显式声明为局部变量局部变量作用...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}