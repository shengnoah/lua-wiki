{"title":"openresty_balancer_by_lua_file","uid":"a2411ddd503448beb656773fa1e82fb8","slug":"zl/2016-01-01-1078_openresty_balancer_by_lua_file","date":"2024-04-03T03:47:32.992Z","updated":"2024-04-03T03:47:32.993Z","comments":true,"path":"api/articles/zl/2016-01-01-1078_openresty_balancer_by_lua_file.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h3 id=\"set-the-balancer-in-nginx-conf\"><a href=\"#set-the-balancer-in-nginx-conf\" class=\"headerlink\" title=\"set the balancer in nginx.conf\"></a>set the balancer in nginx.conf</h3><figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">upstream default_doc_upstream {</span><br/><span class=\"line\">\t</span><br/><span class=\"line\">\tserver 192.168.1.170:8081;</span><br/><span class=\"line\">\t<span class=\"comment\"># tomcat-8</span></span><br/><span class=\"line\">\tserver 192.168.1.170:8082;</span><br/><span class=\"line\">\t<span class=\"comment\"># tomcat-9</span></span><br/><span class=\"line\">\tserver 192.168.1.170:8083;</span><br/><span class=\"line\"></span><br/><span class=\"line\">\tbalancer_by_lua_file\t/opt/openresty/balancer.lua;</span><br/><span class=\"line\">}</span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"traffic-control\"><a href=\"#traffic-control\" class=\"headerlink\" title=\"traffic control\"></a>traffic control</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/><span class=\"line\">29</span><br/><span class=\"line\">30</span><br/><span class=\"line\">31</span><br/><span class=\"line\">32</span><br/><span class=\"line\">33</span><br/><span class=\"line\">34</span><br/><span class=\"line\">35</span><br/><span class=\"line\">36</span><br/><span class=\"line\">37</span><br/><span class=\"line\">38</span><br/><span class=\"line\">39</span><br/><span class=\"line\">40</span><br/><span class=\"line\">41</span><br/><span class=\"line\">42</span><br/><span class=\"line\">43</span><br/><span class=\"line\">44</span><br/><span class=\"line\">45</span><br/><span class=\"line\">46</span><br/><span class=\"line\">47</span><br/><span class=\"line\">48</span><br/><span class=\"line\">49</span><br/><span class=\"line\">50</span><br/><span class=\"line\">51</span><br/><span class=\"line\">52</span><br/><span class=\"line\">53</span><br/><span class=\"line\">54</span><br/><span class=\"line\">55</span><br/><span class=\"line\">56</span><br/><span class=\"line\">57</span><br/><span class=\"line\">58</span><br/><span class=\"line\">59</span><br/><span class=\"line\">60</span><br/><span class=\"line\">61</span><br/><span class=\"line\">62</span><br/><span class=\"line\">63</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"built_in\">math</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#39;math&#39;</span>);</span><br/><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"built_in\">string</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#39;string&#39;</span>);</span><br/><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"built_in\">table</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&#39;table&#39;</span>);</span><br/><span class=\"line\"><span class=\"keyword\">local</span> cjson = <span class=\"built_in\">require</span>(<span class=\"string\">&#39;cjson&#39;</span>);</span><br/><span class=\"line\"><span class=\"keyword\">local</span> balancer = <span class=\"built_in\">require</span>(<span class=\"string\">&#39;ngx.balancer&#39;</span>);</span><br/><span class=\"line\"><span class=\"keyword\">local</span> p = <span class=\"built_in\">require</span>(<span class=\"string\">&#39;peer&#39;</span>);</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">nil</span> ~= <span class=\"built_in\">string</span>.<span class=\"built_in\">find</span>(ngx.var.request_uri, <span class=\"string\">&#39;favicon.ico&#39;</span>) <span class=\"keyword\">then</span></span><br/><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> is_download_action = <span class=\"literal\">nil</span> == <span class=\"built_in\">string</span>.<span class=\"built_in\">find</span>(ngx.var.request_uri, <span class=\"string\">&#39;docs/&#39;</span>);</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> cache_request_history = ngx.shared.cache_request_history;</span><br/><span class=\"line\"><span class=\"keyword\">local</span> remote_addr = ngx.var.remote_addr;</span><br/><span class=\"line\"><span class=\"comment\">-- local http_host = ngx.var.http_host;</span></span><br/><span class=\"line\"><span class=\"comment\">-- local http_user_agent = ngx.var.http_user_agent;</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> host = <span class=\"string\">&#39;192.168.1.170&#39;</span>;</span><br/><span class=\"line\"><span class=\"keyword\">local</span> port = {<span class=\"number\">8081</span>, <span class=\"number\">8082</span>, <span class=\"number\">8083</span>};</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> peers = { peer:new(<span class=\"literal\">nil</span>, <span class=\"string\">&#39;192.168.1.170&#39;</span>, <span class=\"number\">8081</span>),</span><br/><span class=\"line\">                peer:new(<span class=\"literal\">nil</span>, <span class=\"string\">&#39;192.168.1.170&#39;</span>, <span class=\"number\">8082</span>),</span><br/><span class=\"line\">                peer:new(<span class=\"literal\">nil</span>, <span class=\"string\">&#39;192.168.1.170&#39;</span>, <span class=\"number\">8083</span>)};</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> access;</span><br/><span class=\"line\"><span class=\"keyword\">local</span> succ, err, forcible;</span><br/><span class=\"line\"><span class=\"keyword\">if</span> cache_request_history:get(remote_addr) == <span class=\"literal\">nil</span> <span class=\"keyword\">then</span></span><br/><span class=\"line\">    access = {remote_addr=remote_addr, mapping=<span class=\"literal\">nil</span>, times=<span class=\"number\">0</span>, scheme=<span class=\"literal\">nil</span>, server_addr=<span class=\"literal\">nil</span>, request_uri=<span class=\"literal\">nil</span>};</span><br/><span class=\"line\">    succ, err, forcible = cache_request_history:set(remote_addr, cjson.encode(access));</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">access = cjson.decode( cache_request_history:get(remote_addr) );</span><br/><span class=\"line\"><span class=\"comment\">-- force reset the current server_addr to previous server_addr if</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> prev_remote_addr = access[<span class=\"string\">&#39;remote_addr&#39;</span>];</span><br/><span class=\"line\"><span class=\"keyword\">local</span> prev_server_addr = access[<span class=\"string\">&#39;server_addr&#39;</span>];</span><br/><span class=\"line\"><span class=\"keyword\">local</span> prev_request_uri = access[<span class=\"string\">&#39;request_uri&#39;</span>];</span><br/><span class=\"line\"><span class=\"keyword\">if</span> is_download_action <span class=\"keyword\">and</span> prev_remote_addr == ngx.var.remote_addr <span class=\"keyword\">and</span> prev_request_uri == ngx.var.request_uri <span class=\"keyword\">then</span></span><br/><span class=\"line\">    ngx.var.server_addr = prev_server_addr;</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\">access[<span class=\"string\">&#39;times&#39;</span>] = access[<span class=\"string\">&#39;times&#39;</span>] + <span class=\"number\">1</span>;</span><br/><span class=\"line\">access[<span class=\"string\">&#39;scheme&#39;</span>] = ngx.var.scheme;</span><br/><span class=\"line\">access[<span class=\"string\">&#39;server_addr&#39;</span>] = ngx.var.server_addr;</span><br/><span class=\"line\">access[<span class=\"string\">&#39;request_uri&#39;</span>] = ngx.var.request_uri;</span><br/><span class=\"line\">access[<span class=\"string\">&#39;mapping&#39;</span>] = ngx.var.request_uri;</span><br/><span class=\"line\">succ, err, forcible = cache_request_history:set(remote_addr, cjson.encode(access));</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> ok, err = balancer.set_current_peer(host, port[<span class=\"built_in\">math</span>.<span class=\"built_in\">random</span>(#port)]);</span><br/><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ok <span class=\"keyword\">then</span></span><br/><span class=\"line\">    ngx.<span class=\"built_in\">log</span>(ngx.ERR, <span class=\"string\">&#39;***********************failed to set the current peer: &#39;</span>, err);</span><br/><span class=\"line\">    <span class=\"keyword\">return</span> ngx.<span class=\"built_in\">exit</span>(<span class=\"number\">500</span>);</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">ngx.<span class=\"built_in\">log</span>(ngx.DEBUG, <span class=\"string\">&#39;***********************current peer &#39;</span>,</span><br/><span class=\"line\">    <span class=\"string\">&#39; remote_addr=&#39;</span>..ngx.var.remote_addr..</span><br/><span class=\"line\">    <span class=\"string\">&#39; upstream_addr=&#39;</span>..ngx.var.upstream_addr..</span><br/><span class=\"line\">    <span class=\"string\">&#39; server_port=&#39;</span>..ngx.var.server_port..</span><br/><span class=\"line\">    <span class=\"string\">&#39; scheme=&#39;</span>..ngx.var.scheme..</span><br/><span class=\"line\">    <span class=\"string\">&#39; server_addr=&#39;</span>..ngx.var.server_addr..</span><br/><span class=\"line\">    <span class=\"string\">&#39; request_uri=&#39;</span>..ngx.var.request_uri..</span><br/><span class=\"line\">    <span class=\"string\">&#39; uri=&#39;</span>..ngx.var.uri);</span><br/><span class=\"line\"></span><br/><span class=\"line\">ngx.<span class=\"built_in\">log</span>(ngx.INFO, <span class=\"string\">&#39;nn&#39;</span>);</span><br/></pre></td></tr></tbody></table></figure>","text":"set the balancer in nginx.conf12345678910upstream default_doc_upstream { server 192.168.1.170:8081; # tomcat-8 server 192.168.1.170:8082; # ...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#set-the-balancer-in-nginx-conf\"><span class=\"toc-text\">set the balancer in nginx.conf</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#traffic-control\"><span class=\"toc-text\">traffic control</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua学习随笔","uid":"b8151848ffa5266b284bc7d3370dae8b","slug":"zl/2016-01-01-107_Lua学习随笔","date":"2024-04-03T03:47:32.993Z","updated":"2024-04-03T03:47:32.994Z","comments":true,"path":"api/articles/zl/2016-01-01-107_Lua学习随笔.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"昨天刚立了FLAG，今天就来还愿了。因为是工作中接触到的，已经用了几次，比较熟悉。昨晚在晚上大概搜了下，看了两个教程，看进去了，今早又看了将近两小时，看到了些基础的东西。 我是在Windows上练习LUA，所以只用下个软件就可以开始了，非常方便。下载入口 下载后安装即可，使用方法...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"openresty_log_by_lua_file","uid":"016f37d344bf162f67db745edb226e62","slug":"zl/2016-01-01-1077_openresty_log_by_lua_file","date":"2024-04-03T03:47:32.992Z","updated":"2024-04-03T03:47:32.992Z","comments":true,"path":"api/articles/zl/2016-01-01-1077_openresty_log_by_lua_file.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"set the log in nginx.conf1234567891011121314location /docs { keepalive_timeout 0; default_type &#39;text/html&#39;; set $res &#34;&#34;; set...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}