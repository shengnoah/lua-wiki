{"title":"MetaTable and MetaMethod","uid":"72927ad26134ebab5809a173eb40d065","slug":"zl/2016-01-01-327_[Lua] MetaTable and MetaMethod","date":"2024-04-03T03:47:35.607Z","updated":"2024-04-03T03:47:35.607Z","comments":true,"path":"api/articles/zl/2016-01-01-327_[Lua] MetaTable and MetaMethod.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>比如，我们有两个分数：</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">fraction_a</span> <span class=\"o\">=</span> <span class=\"p\">&#123;</span><span class=\"n\">numerator</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">denominator</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">&#125;</span>\n<span class=\"n\">fraction_b</span> <span class=\"o\">=</span> <span class=\"p\">&#123;</span><span class=\"n\">numerator</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">denominator</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">&#125;</span>\n</code></pre></div></div>\n<p>我们想实现分数间的相加：2/3 + 4/7，我们如果要执行： fraction_a + fraction_b，会报错的。</p>\n<p>所以，我们可以动用MetaTable，如下所示：</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">fraction_op</span><span class=\"o\">=</span><span class=\"p\">&#123;&#125;</span>\n<span class=\"k\">function</span> <span class=\"nc\">fraction_op</span><span class=\"p\">.</span><span class=\"nf\">__add</span><span class=\"p\">(</span><span class=\"n\">f1</span><span class=\"p\">,</span> <span class=\"n\">f2</span><span class=\"p\">)</span>\n    <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span>\n    <span class=\"n\">ret</span><span class=\"p\">.</span><span class=\"n\">numerator</span> <span class=\"o\">=</span> <span class=\"n\">f1</span><span class=\"p\">.</span><span class=\"n\">numerator</span> <span class=\"o\">*</span> <span class=\"n\">f2</span><span class=\"p\">.</span><span class=\"n\">denominator</span> <span class=\"o\">+</span> <span class=\"n\">f2</span><span class=\"p\">.</span><span class=\"n\">numerator</span> <span class=\"o\">*</span> <span class=\"n\">f1</span><span class=\"p\">.</span><span class=\"n\">denominator</span>\n    <span class=\"n\">ret</span><span class=\"p\">.</span><span class=\"n\">denominator</span> <span class=\"o\">=</span> <span class=\"n\">f1</span><span class=\"p\">.</span><span class=\"n\">denominator</span> <span class=\"o\">*</span> <span class=\"n\">f2</span><span class=\"p\">.</span><span class=\"n\">denominator</span>\n    <span class=\"k\">return</span> <span class=\"n\">ret</span>\n<span class=\"k\">end</span>\n</code></pre></div></div>\n<p>为之前定义的两个table设置MetaTable：（其中的setmetatble是库函数）</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">setmetatable</span><span class=\"p\">(</span><span class=\"n\">fraction_a</span><span class=\"p\">,</span> <span class=\"n\">fraction_op</span><span class=\"p\">)</span>\n<span class=\"nb\">setmetatable</span><span class=\"p\">(</span><span class=\"n\">fraction_b</span><span class=\"p\">,</span> <span class=\"n\">fraction_op</span><span class=\"p\">)</span>\n</code></pre></div></div>\n<p>于是你就可以这样干了：（调用的是fraction_op.__add()函数）</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">fraction_s</span> <span class=\"o\">=</span> <span class=\"n\">fraction_a</span> <span class=\"o\">+</span> <span class=\"n\">fraction_b</span>\n</code></pre></div></div>\n<p>至于__add这是MetaMethod，这是Lua内建约定的，其它的还有如下的MetaMethod：</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">__add</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>                     <span class=\"err\">对应表达式</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"n\">b</span>\n<span class=\"n\">__sub</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>                     <span class=\"err\">对应表达式</span> <span class=\"n\">a</span> <span class=\"o\">-</span> <span class=\"n\">b</span>\n<span class=\"n\">__mul</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>                     <span class=\"err\">对应表达式</span> <span class=\"n\">a</span> <span class=\"o\">*</span> <span class=\"n\">b</span>\n<span class=\"n\">__div</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>                     <span class=\"err\">对应表达式</span> <span class=\"n\">a</span> <span class=\"o\">/</span> <span class=\"n\">b</span>\n<span class=\"n\">__mod</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>                     <span class=\"err\">对应表达式</span> <span class=\"n\">a</span> <span class=\"o\">%</span> <span class=\"n\">b</span>\n<span class=\"n\">__pow</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>                     <span class=\"err\">对应表达式</span> <span class=\"n\">a</span> <span class=\"o\">^</span> <span class=\"n\">b</span>\n<span class=\"n\">__unm</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>                        <span class=\"err\">对应表达式</span> <span class=\"o\">-</span><span class=\"n\">a</span>\n<span class=\"n\">__concat</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>                  <span class=\"err\">对应表达式</span> <span class=\"n\">a</span> <span class=\"o\">..</span> <span class=\"n\">b</span>\n<span class=\"n\">__len</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>                        <span class=\"err\">对应表达式</span> <span class=\"o\">#</span><span class=\"n\">a</span>\n<span class=\"n\">__eq</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>                      <span class=\"err\">对应表达式</span> <span class=\"n\">a</span> <span class=\"o\">==</span> <span class=\"n\">b</span>\n<span class=\"n\">__lt</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>                      <span class=\"err\">对应表达式</span> <span class=\"n\">a</span> <span class=\"o\">&lt;</span> <span class=\"n\">b</span>\n<span class=\"n\">__le</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>                      <span class=\"err\">对应表达式</span> <span class=\"n\">a</span> <span class=\"o\">&lt;=</span> <span class=\"n\">b</span>\n<span class=\"n\">__index</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span>                   <span class=\"err\">对应表达式</span> <span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">b</span>\n<span class=\"n\">__newindex</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"p\">)</span>             <span class=\"err\">对应表达式</span> <span class=\"n\">a</span><span class=\"p\">.</span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">c</span>\n<span class=\"n\">__call</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>                  <span class=\"err\">对应表达式</span> <span class=\"n\">a</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n</code></pre></div></div>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">Set</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span>\n<span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">mt</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span> <span class=\"c1\">-- metatable for sets</span>\n<p><span class=\"k\">function</span> <span class=\"nc\">Set</span><span class=\"p\">.</span><span class=\"nf\">new</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span><br />\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">t</span> <span class=\"ow\">or</span> <span class=\"p\">&#123;&#125;</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">set</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span><br />\n<span class=\"nb\">setmetatable</span><span class=\"p\">(</span><span class=\"n\">set</span><span class=\"p\">,</span> <span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">mt</span><span class=\"p\">)</span><br />\n<span class=\"k\">for</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">l</span> <span class=\"k\">in</span> <span class=\"nb\">ipairs</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"k\">do</span><br />\n<span class=\"n\">set</span><span class=\"p\">[</span><span class=\"n\">l</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">return</span> <span class=\"n\">set</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"k\">function</span> <span class=\"nc\">Set</span><span class=\"p\">.</span><span class=\"nf\">union</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span></p>\n<pre><code>&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;getmetatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mt&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt;\n    &lt;span class=&quot;nb&quot;&gt;getmetatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mt&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;\n    &lt;span class=&quot;nb&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#34;Attempt to &amp;#39;add&amp;#39; a set with a not-set value&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;\n\n&lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pairs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pairs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;\n    &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;res&lt;/span&gt;\n</code></pre>\n<p><span class=\"k\">end</span></p>\n<p><span class=\"k\">function</span> <span class=\"nc\">Set</span><span class=\"p\">.</span><span class=\"nf\">intersection</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">)</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">new</span><span class=\"p\">()</span><br />\n<span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"k\">in</span> <span class=\"nb\">pairs</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"k\">do</span><br />\n<span class=\"n\">res</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"n\">k</span><span class=\"p\">]</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">return</span> <span class=\"n\">res</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"k\">function</span> <span class=\"nc\">Set</span><span class=\"p\">.</span><span class=\"nf\">tostring</span><span class=\"p\">(</span><span class=\"n\">set</span><span class=\"p\">)</span><br />\n<span class=\"n\">set</span> <span class=\"o\">=</span> <span class=\"n\">set</span> <span class=\"ow\">or</span> <span class=\"p\">{}</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;{&quot;</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">sep</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span><br />\n<span class=\"k\">for</span> <span class=\"n\">e</span> <span class=\"k\">in</span> <span class=\"nb\">pairs</span><span class=\"p\">(</span><span class=\"n\">set</span><span class=\"p\">)</span> <span class=\"k\">do</span><br />\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">s</span> <span class=\"o\">…</span> <span class=\"n\">sep</span> <span class=\"o\">…</span> <span class=\"n\">e</span><br />\n<span class=\"n\">sep</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;, &quot;</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">return</span> <span class=\"n\">s</span> <span class=\"o\">…</span> <span class=\"s2\">&quot;}&quot;</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"k\">function</span> <span class=\"nc\">Set</span><span class=\"p\">.</span><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">tostring</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">))</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"c1\">– 相加</span><br />\n<span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">mt</span><span class=\"p\">.</span><span class=\"n\">__add</span> <span class=\"o\">=</span> <span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">union</span></p>\n<p><span class=\"c1\">– 相乘，交集</span><br />\n<span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">mt</span><span class=\"p\">.</span><span class=\"n\">__mul</span> <span class=\"o\">=</span> <span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">intersection</span></p>\n<p><span class=\"n\">s1</span> <span class=\"o\">=</span> <span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">new</span><span class=\"p\">({</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">50</span><span class=\"p\">})</span><br />\n<span class=\"n\">s2</span> <span class=\"o\">=</span> <span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">new</span><span class=\"p\">({</span><span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">})</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">getmetatable</span><span class=\"p\">(</span><span class=\"n\">s1</span><span class=\"p\">))</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">getmetatable</span><span class=\"p\">(</span><span class=\"n\">s2</span><span class=\"p\">))</span></p>\n<p><span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">s1</span><span class=\"p\">)</span><br />\n<span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">s2</span><span class=\"p\">)</span></p>\n<p><span class=\"n\">s3</span> <span class=\"o\">=</span> <span class=\"n\">s1</span> <span class=\"o\">+</span> <span class=\"n\">s2</span><br />\n<span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">s3</span><span class=\"p\">)</span></p>\n<p><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">new</span><span class=\"p\">({</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">})</span><br />\n<span class=\"c1\">– s = s + 8    – table加上一个数字</span></p>\n<p><span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">s1</span> <span class=\"o\">*</span> <span class=\"n\">s2</span><span class=\"p\">)</span></p>\n<p><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;--------------&quot;</span><span class=\"p\">)</span></p>\n<p><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s1</span><span class=\"p\">)</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s2</span><span class=\"p\">)</span><br />\n<span class=\"c1\">– print会自动调用__tostring，我们在这里修改了__tostring</span><br />\n<span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">mt</span><span class=\"p\">.</span><span class=\"n\">__tostring</span> <span class=\"o\">=</span> <span class=\"n\">Set</span><span class=\"p\">.</span><span class=\"n\">tostring</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s1</span><span class=\"p\">)</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s2</span><span class=\"p\">)</span></p>\n<p></code></pre></div></div></p>\n<p>参考链接：</p>\n<p><a href=\"http://coolshell.cn/articles/10739.html\" target=\"_blank\" rel=\"noopener noreferrer\">http://coolshell.cn/articles/10739.html</a></p>\n<p><a href=\"http://book.luaer.cn/\" target=\"_blank\" rel=\"noopener noreferrer\">http://book.luaer.cn/</a></p>","text":"比如，我们有两个分数： fraction_a = &#123;numerator=2, denominator=3&#125; fraction_b = &#123;numerator=4, denominator=7&#125; 我们想实现分数间的相加：2/3 + 4/7，我们...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua Tabel(数据集","uid":"689a35ba12751d316517b7fec661699f","slug":"zl/2016-01-01-326_Lua Tabel(数据集","date":"2024-04-03T03:47:35.607Z","updated":"2024-04-03T03:47:35.607Z","comments":true,"path":"api/articles/zl/2016-01-01-326_Lua Tabel(数据集.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"k是键值对还是索引 mytable = &#123; k = &#34;a&#34; -- 这里的k是键值对 &#125; print(mytable[k]) -- nil print(mytable[&#34;k&#34;]) -- a k = &quot;ok&quot; m...","link":"","photos":[],"count_time":{"symbolsCount":655,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua Math函数","uid":"34e5d37a9a9acc953f9de0f9079500c6","slug":"zl/2016-01-01-329_Lua Math函数","date":"2024-04-03T03:47:35.607Z","updated":"2024-04-03T03:47:35.608Z","comments":true,"path":"api/articles/zl/2016-01-01-329_Lua Math函数.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"os.time()获取系统时间戳print(os.time()) 三角形转角转弧度求sin–调用math.sin函数print(math.sin(30))–将角度转换成弧度math.deg(x)–将弧度转换成角度math.rad(x) 取整函数local num = 1.34–向...","link":"","photos":[],"count_time":{"symbolsCount":578,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}