{"title":"服务器端图片压缩之nginx+lua_nginx module+graphicsmagick","uid":"be939c17a900adc440adcbd16c0ca61d","slug":"zl/2016-01-01-1028_服务器端图片压缩之nginx+lua_nginx module+graphicsmagick","date":"2024-04-03T03:47:32.972Z","updated":"2024-04-03T03:47:32.972Z","comments":true,"path":"api/articles/zl/2016-01-01-1028_服务器端图片压缩之nginx+lua_nginx module+graphicsmagick.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p><img src=\"https://xydcom.cn//images/banner/banner_12.jpg\" alt=\"\"/></p>\n<blockquote>\n<p>在开发电子商务网站时，同一个图片需要不同尺寸的缩略图片，一般有两种策略生成缩略图，一种在上传图片时，生成需要的缩略图，另一种是请求指定尺寸的图片时生存缩略图片，第一种方式有一定限制，就是需要提前知道所有尺寸的图片，如果前端ui设计改变了图片大小，需要重新生成。而第二种方式更加灵活，这里采用第二种方    ，只是淘宝使用ImageMagick）。</p>\n</blockquote>\n<p>这里主要借助lua_nginx module调用GraphicsMagick命令生存生存缩略图片，缩略图片的尺寸包含在请求图片名称中，例如：xxxxx.jpg.80x80.jpg返回的就是xxx.jpg的80x80尺寸的图片大小。nginx配置如下：</p>\n<p>上传图片名称使用32位随机字符替换掉，图片存放目录为图片名称前六个字母，每两个一组，构造三层目录结构存放，这样可以均匀存放图片在不同目录。避免目录存放文件数量限制。<br/>为了避免随意生成不同尺寸的缩略图，这里做了限制，在image_sizes中定义了需要的缩略图尺寸。</p>\n<ul>\n<li><p>初次版本</p>\n<figure class=\"highlight xml\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/><span class=\"line\">29</span><br/><span class=\"line\">30</span><br/><span class=\"line\">31</span><br/><span class=\"line\">32</span><br/><span class=\"line\">33</span><br/><span class=\"line\">34</span><br/><span class=\"line\">35</span><br/><span class=\"line\">36</span><br/><span class=\"line\">37</span><br/><span class=\"line\">38</span><br/><span class=\"line\">39</span><br/><span class=\"line\">40</span><br/><span class=\"line\">41</span><br/><span class=\"line\">42</span><br/><span class=\"line\">43</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">location /testImg/ {  </span><br/><span class=\"line\">    rewrite_by_lua &#39;  </span><br/><span class=\"line\">        local image_root = &#34;/home/tomcat/eisp-files&#34;;  </span><br/><span class=\"line\">        function file_notexists(name)  </span><br/><span class=\"line\">           local f=io.open(name,&#34;r&#34;)  </span><br/><span class=\"line\">           if f~=nil then io.close(f) return false else return true end  </span><br/><span class=\"line\">        end  </span><br/><span class=\"line\"></span><br/><span class=\"line\">local uri = ngx.re.sub(ngx.var.uri, &#34;/testImg/([0-9a-zA-Z]+)/([0-9a-zA-Z]{2})([0-9a-zA-Z]{2})([0-9a-zA-Z]{2})([0-9a-zA-Z]+).([0-9a-zA-Z]+)&#34;, &#34;/images/$1/$2/$3/$4/$2$3$4$5.$6&#34;, &#34;o&#34;);  </span><br/><span class=\"line\">        local index = string.find(uri, &#34;([0-9]+)x([0-9]+)&#34;);  </span><br/><span class=\"line\">        local originalUri = string.sub(uri, 0, index-2);  </span><br/><span class=\"line\">        local area = string.sub(uri, index);  </span><br/><span class=\"line\">        index = string.find(area, &#34;([.])&#34;);  </span><br/><span class=\"line\">        area = string.sub(area, 0, index-1);  </span><br/><span class=\"line\"></span><br/><span class=\"line\">        if file_notexists(image_root .. uri) then  </span><br/><span class=\"line\">           local image_sizes = {&#34;80x80&#34;, &#34;800x600&#34;, &#34;40x40&#34;};  </span><br/><span class=\"line\">           function table.contains(table, element)  </span><br/><span class=\"line\">              for _, value in pairs(table) do  </span><br/><span class=\"line\">                 if value == element then  </span><br/><span class=\"line\">                    return true  </span><br/><span class=\"line\">                 end  </span><br/><span class=\"line\">              end  </span><br/><span class=\"line\">              return false  </span><br/><span class=\"line\">           end  </span><br/><span class=\"line\"></span><br/><span class=\"line\">           if table.contains(image_sizes, area) then  </span><br/><span class=\"line\">               local command = &#34;gm convert &#34; .. image_root ..  originalUri  .. &#34; -thumbnail &#34; .. area .. &#34; -background gray -gravity center -extent &#34; .. area .. &#34; &#34; .. image_root .. uri;  </span><br/><span class=\"line\">               os.execute(command);  </span><br/><span class=\"line\">               ngx.req.set_uri(uri, true);  </span><br/><span class=\"line\">           else  </span><br/><span class=\"line\">               ngx.exit(404);  </span><br/><span class=\"line\">           end;  </span><br/><span class=\"line\">        else  </span><br/><span class=\"line\">           ngx.req.set_uri(uri, true);  </span><br/><span class=\"line\">        end;  </span><br/><span class=\"line\">    &#39;;  </span><br/><span class=\"line\">}  </span><br/><span class=\"line\"></span><br/><span class=\"line\">location /images/ {  </span><br/><span class=\"line\">    alias /home/tomcat/eisp-files/images/;  </span><br/><span class=\"line\">    expires 7d;  </span><br/><span class=\"line\">}</span><br/></pre></td></tr></tbody></table></figure>\n</li>\n<li><p>最后一次修改版本</p>\n<figure class=\"highlight\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/><span class=\"line\">29</span><br/><span class=\"line\">30</span><br/><span class=\"line\">31</span><br/><span class=\"line\">32</span><br/><span class=\"line\">33</span><br/><span class=\"line\">34</span><br/><span class=\"line\">35</span><br/><span class=\"line\">36</span><br/><span class=\"line\">37</span><br/><span class=\"line\">38</span><br/><span class=\"line\">39</span><br/><span class=\"line\">40</span><br/><span class=\"line\">41</span><br/><span class=\"line\">42</span><br/><span class=\"line\">43</span><br/><span class=\"line\">44</span><br/><span class=\"line\">45</span><br/><span class=\"line\">46</span><br/><span class=\"line\">47</span><br/><span class=\"line\">48</span><br/><span class=\"line\">49</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">location /images/ {  </span><br/><span class=\"line\">    set $image_root /home/nds/nds-files;  </span><br/><span class=\"line\"></span><br/><span class=\"line\">    if ($uri ~* &#34;/images/([0-9a-zA-Z]+)/([0-9a-zA-Z]{2})([0-9a-zA-Z]{2})([0-9a-zA-Z]{2})([0-9a-zA-Z]+).(.*)&#34;) {  </span><br/><span class=\"line\">       set $filePath &#34;$image_root/$1/$2/$3/$4/$2$3$4$5.$6&#34;;  </span><br/><span class=\"line\">       set $reqPath  &#34;/$1/$2/$3/$4/$2$3$4$5.$6&#34;;  </span><br/><span class=\"line\">    }  </span><br/><span class=\"line\"></span><br/><span class=\"line\">    set $file &#34;$image_root$reqPath&#34;;  </span><br/><span class=\"line\"></span><br/><span class=\"line\">    if (-f $file) {  </span><br/><span class=\"line\">       rewrite &#34;/images/(.+)&#34; /innerImages$reqPath last;  </span><br/><span class=\"line\">    }  </span><br/><span class=\"line\"></span><br/><span class=\"line\">    if (!-f $file) {  </span><br/><span class=\"line\">       rewrite_by_lua &#39;  </span><br/><span class=\"line\">          local index = string.find(ngx.var.filePath, &#34;([0-9]+)x([0-9]+)&#34;);  </span><br/><span class=\"line\">          local originalUri = string.sub(ngx.var.filePath, 0, index-2);  </span><br/><span class=\"line\">          local area = string.sub(ngx.var.filePath, index);  </span><br/><span class=\"line\">          index = string.find(area, &#34;([.])&#34;);  </span><br/><span class=\"line\">          area = string.sub(area, 0, index-1);  </span><br/><span class=\"line\"></span><br/><span class=\"line\">          local image_sizes = {&#34;155x155&#34;, &#34;400x400&#34;,&#34;104x104&#34;, &#34;50x50&#34;, &#34;40x40&#34;, &#34;56x56&#34;, &#34;172x172&#34;,&#34;800x600&#34;};  </span><br/><span class=\"line\">          function table.contains(table, element)  </span><br/><span class=\"line\">             for _, value in pairs(table) do  </span><br/><span class=\"line\">                if value == element then  </span><br/><span class=\"line\">                   return true  </span><br/><span class=\"line\">                end  </span><br/><span class=\"line\">             end  </span><br/><span class=\"line\">             return false  </span><br/><span class=\"line\">          end  </span><br/><span class=\"line\"></span><br/><span class=\"line\">          if table.contains(image_sizes, area) then  </span><br/><span class=\"line\">             local command = &#34;gm convert &#34; ..  originalUri  .. &#34; -thumbnail &#34; .. area .. &#34; -background white -gravity center -extent &#34; .. area .. &#34; &#34; .. ngx.var.file;  </span><br/><span class=\"line\">             os.execute(command);  </span><br/><span class=\"line\">             ngx.req.set_uri(&#34;/innerImages&#34; .. ngx.var.reqPath, true);  </span><br/><span class=\"line\">          else  </span><br/><span class=\"line\">             ngx.exit(404);  </span><br/><span class=\"line\">          end;  </span><br/><span class=\"line\">       &#39;;  </span><br/><span class=\"line\">    }  </span><br/><span class=\"line\">}  </span><br/><span class=\"line\"></span><br/><span class=\"line\">location /innerImages/ {  </span><br/><span class=\"line\">    alias /home/nds/nds-files/;  </span><br/><span class=\"line\">    expires max;   </span><br/><span class=\"line\">    tcp_nodelay off;   </span><br/><span class=\"line\">    tcp_nopush on;  </span><br/><span class=\"line\">}</span><br/></pre></td></tr></tbody></table></figure>\n</li>\n</ul>\n<p>本文引自<a href=\"http://www.iteye.com/topic/1125126\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.iteye.com/topic/1125126</a></p>","text":" 在开发电子商务网站时，同一个图片需要不同尺寸的缩略图片，一般有两种策略生成缩略图，一种在上传图片时，生成需要的缩略图，另一种是请求指定尺寸的图片时生存缩略图片，第一种方式有一定限制，就是需要提前知道所有尺寸的图片，如果前端ui设计改变了图片大小，需要重新生成。而第二种方式更加灵...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua骚操作一览","uid":"3d246ac977a7b510c17a843ba9ddc5b7","slug":"zl/2016-01-01-1029_lua骚操作一览","date":"2024-04-03T03:47:32.972Z","updated":"2024-04-03T03:47:32.973Z","comments":true,"path":"api/articles/zl/2016-01-01-1029_lua骚操作一览.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"前言做了三年的游戏开发，其中有两年都在使用Lua这一脚本语言，想着是时候写点什么东西输出一下，算是给个交代。本文既不是讲Lua入门，也不会讲到Lua虚拟机那么深，读者尽可放大心随意看。 类的实现原生Lua是不支持面向对象编程的。那怎么办呢？使用prototype模式即可。 首先读...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"lua应用","uid":"c16e54ecf80e8a9e799758f755e7171d","slug":"zl/2016-01-01-1026_lua应用","date":"2024-04-03T03:47:32.971Z","updated":"2024-04-03T03:47:32.971Z","comments":true,"path":"api/articles/zl/2016-01-01-1026_lua应用.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"关于Lua脚本语言在太阳神三国杀中的应用 关于神杀太阳神三国杀，是一款基于C++ QT GUI框架的三国杀非官方开源软件，开发者：Moligaloo（太阳神上），现在由Mogara团队继续维护源码。在实现游卡三国杀游戏规则的基础上，还拥有自己独特的功能和元素：原创技能卡牌配音；原...","link":"","photos":[],"count_time":{"symbolsCount":"9k","symbolsTime":"8 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}