{"title":"install luajit in nginx","uid":"2381fbd75bf299a3ede5392073adf7ee","slug":"zl/2016-01-01-1168_install luajit in nginx","date":"2024-04-03T03:47:33.023Z","updated":"2024-04-03T03:47:33.023Z","comments":true,"path":"api/articles/zl/2016-01-01-1168_install luajit in nginx.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<div class=\"text\" id=\"js-post-content\">\n        <p>https://github.com/openresty/lua-nginx-module</p>\n<h4 id=\"安装\">安装</h4>\n<ul>\n  <li>安装 <a href=\"http://luajit.org/download.html\">LuaJit</a></li>\n  <li>下载 <a href=\"https://github.com/simpl/ngx_devel_kit/tags\">ngx_devel_kit</a></li>\n  <li>下载 <a href=\"https://github.com/openresty/lua-nginx-module/tags\">ngx_lua</a></li>\n  <li>下载 <a href=\"http://nginx.org/en/download.html\">Nginx</a></li>\n</ul>\n<figure class=\"highlight\"><pre><code class=\"language-shell\" data-lang=\"shell\"> wget <span class=\"s1\">&#39;http://nginx.org/download/nginx-1.9.7.tar.gz&#39;</span>\n <span class=\"nb\">tar</span> <span class=\"nt\">-xzvf</span> nginx-1.9.7.tar.gz\n <span class=\"nb\">cd </span>nginx-1.9.7/\n<p><span class=\"c\"># tell nginx's build system where to find LuaJIT 2.0:</span><br />\n<span class=\"nb\">export </span><span class=\"nv\">LUAJIT_LIB</span><span class=\"o\">=</span>/path/to/luajit/lib<br />\n<span class=\"nb\">export </span><span class=\"nv\">LUAJIT_INC</span><span class=\"o\">=</span>/path/to/luajit/include/luajit-2.0</p>\n<p><span class=\"c\"># tell nginx's build system where to find LuaJIT 2.1:</span><br />\n<span class=\"nb\">export </span><span class=\"nv\">LUAJIT_LIB</span><span class=\"o\">=</span>/path/to/luajit/lib<br />\n<span class=\"nb\">export </span><span class=\"nv\">LUAJIT_INC</span><span class=\"o\">=</span>/path/to/luajit/include/luajit-2.1</p>\n<p><span class=\"c\"># or tell where to find Lua if using Lua instead:</span><br />\n<span class=\"c\">#export LUA_LIB=/path/to/lua/lib</span><br />\n<span class=\"c\">#export LUA_INC=/path/to/lua/include</span></p>\n<p><span class=\"c\"># Here we assume Nginx is to be installed under /opt/nginx/.</span><br />\n./configure <span class=\"nt\">–prefix</span><span class=\"o\">=</span>/opt/nginx <span class=\"se\"></span><br />\n<span class=\"nt\">–with-ld-opt</span><span class=\"o\">=</span><span class=\"s2\">&quot;-Wl,-rpath,/path/to/luajit-or-lua/lib&quot;</span> <span class=\"se\"></span><br />\n<span class=\"nt\">–add-module</span><span class=\"o\">=</span>/path/to/ngx_devel_kit <span class=\"se\"></span><br />\n<span class=\"nt\">–add-module</span><span class=\"o\">=</span>/path/to/lua-nginx-module</p>\n<p>make <span class=\"nt\">-j2</span><br />\nmake <span class=\"nb\">install</span></code></pre></figure></p>\n<h4 id=\"测试\">测试</h4>\n<p>在nginx.conf中添加下面部分内容</p>\n<figure class=\"highlight\"><pre><code class=\"language-conf\" data-lang=\"conf\"><span class=\"n\">location</span> /<span class=\"n\">hello</span> &#123;\n    <span class=\"n\">default_type</span> <span class=\"s1\">&#39;text/plain&#39;</span>;\n    <span class=\"n\">content_by_lua</span> <span class=\"s1\">&#39;ngx.say(&#34;hello, world&#34;)&#39;</span>;\n&#125;</code></pre></figure>\n<h5 id=\"验证结果\">验证结果</h5>\n<div class=\"language-shell highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"o\">[</span>root@1184c0eeaa0a nginx-1.8.1]# curl 127.0.0.1:8080/hello\nhello, world\n</code></pre></div></div>\n<h4 id=\"示例2-操作redis\">示例2 操作Redis</h4>\n<p>github地址: <a href=\"https://github.com/openresty/lua-resty-redis\">lua-resty-redis</a></p>\n<p>下载lib/resty/redis.lua文件到pato/lib/resty/redis.lua</p>\n<p>修改nginx.conf文件</p>\n<figure class=\"highlight\"><pre><code class=\"language-lua\" data-lang=\"lua\"><span class=\"o\">#</span> <span class=\"n\">you</span> <span class=\"k\">do</span> <span class=\"ow\">not</span> <span class=\"n\">need</span> <span class=\"n\">the</span> <span class=\"n\">following</span> <span class=\"n\">line</span> <span class=\"k\">if</span> <span class=\"n\">you</span> <span class=\"n\">are</span> <span class=\"n\">using</span>\n<span class=\"o\">#</span> <span class=\"n\">the</span> <span class=\"n\">OpenResty</span> <span class=\"n\">bundle</span><span class=\"p\">:</span>\n<span class=\"n\">lua_package_path</span> <span class=\"s2\">&#34;/path/to/lua-resty-redis/lib/?.lua;;&#34;</span><span class=\"p\">;</span>\n<p><span class=\"n\">server</span> <span class=\"p\">&#123;</span><br />\n<span class=\"n\">location</span> <span class=\"o\">/</span><span class=\"n\">test</span> <span class=\"p\">&#123;</span><br />\n<span class=\"n\">content_by_lua</span> <span class=\"s1\">'<br />\nlocal redis = require &quot;resty.redis&quot;<br />\nlocal red = redis:new()</p>\n<pre><code>        red:set_timeout(1000) -- 1 sec\n\n        -- or connect to a unix domain socket file listened\n        -- by a redis server:\n        --     local ok, err = red:connect(&amp;#34;unix:/path/to/redis.sock&amp;#34;)\n\n        local ok, err = red:connect(&amp;#34;127.0.0.1&amp;#34;, 6379)\n        if not ok then\n            ngx.say(&amp;#34;failed to connect: &amp;#34;, err)\n            return\n        end\n\n        ok, err = red:set(&amp;#34;dog&amp;#34;, &amp;#34;an animal&amp;#34;)\n        if not ok then\n            ngx.say(&amp;#34;failed to set dog: &amp;#34;, err)\n            return\n        end\n\n        ngx.say(&amp;#34;set result: &amp;#34;, ok)\n\n        local res, err = red:get(&amp;#34;dog&amp;#34;)\n        if not res then\n            ngx.say(&amp;#34;failed to get dog: &amp;#34;, err)\n            return\n        end\n\n        if res == ngx.null then\n            ngx.say(&amp;#34;dog not found.&amp;#34;)\n            return\n        end\n\n        ngx.say(&amp;#34;dog: &amp;#34;, res)\n\n        red:init_pipeline()\n        red:set(&amp;#34;cat&amp;#34;, &amp;#34;Marry&amp;#34;)\n        red:set(&amp;#34;horse&amp;#34;, &amp;#34;Bob&amp;#34;)\n        red:get(&amp;#34;cat&amp;#34;)\n        red:get(&amp;#34;horse&amp;#34;)\n        local results, err = red:commit_pipeline()\n        if not results then\n            ngx.say(&amp;#34;failed to commit the pipelined requests: &amp;#34;, err)\n            return\n        end\n\n        for i, res in ipairs(results) do\n            if type(res) == &amp;#34;table&amp;#34; then\n                if res[1] == false then\n                    ngx.say(&amp;#34;failed to run command &amp;#34;, i, &amp;#34;: &amp;#34;, res[2])\n                else\n                    -- process the table value\n                end\n            else\n                -- process the scalar value\n            end\n        end\n\n        -- put it into the connection pool of size 100,\n        -- with 10 seconds max idle time\n        local ok, err = red:set_keepalive(10000, 100)\n        if not ok then\n            ngx.say(&amp;#34;failed to set keepalive: &amp;#34;, err)\n            return\n        end\n\n        -- or just close the connection right away:\n        -- local ok, err = red:close()\n        -- if not ok then\n        --     ngx.say(&amp;#34;failed to close: &amp;#34;, err)\n        --     return\n        -- end\n    &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;&#125;&lt;/span&gt;\n</code></pre>\n<p><span class=\"p\">}</span></code></pre></figure></p>\n<pre><code>&lt;/div&gt;\n</code></pre>\n","text":" https://github.com/openresty/lua-nginx-module 安装 安装 LuaJit 下载 ngx_devel_kit 下载 ngx_lua 下载 Nginx wget &#39;http://nginx.org/download/nginx-1...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">安装</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">测试</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%AA%8C%E8%AF%81%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">验证结果</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B2-%E6%93%8D%E4%BD%9Credis\"><span class=\"toc-text\">示例2 操作Redis</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"centos 安装lua 5.3","uid":"c14714e77bf71d580501b56af7e47eb7","slug":"zl/2016-01-01-1174_centos 安装lua 5.3","date":"2024-04-03T03:47:33.024Z","updated":"2024-04-03T03:47:33.024Z","comments":true,"path":"api/articles/zl/2016-01-01-1174_centos 安装lua 5.3.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"按照官网教程，执行以下命令1234curl -R -O http://www.lua.org/ftp/lua-5.3.3.tar.gztar zxf lua-5.3.3.tar.gzcd lua-5.3.3make linux test 但其实lua并未安装，许多博文都是建立软链...","link":"","photos":[],"count_time":{"symbolsCount":367,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"skynet lua服务","uid":"f4eaaa78cc16cdf9752f49157200857a","slug":"zl/2016-01-01-116_skynet lua服务","date":"2024-04-03T03:47:33.023Z","updated":"2024-04-03T03:47:33.023Z","comments":true,"path":"api/articles/zl/2016-01-01-116_skynet lua服务.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"C模块的导出从skynet核心模块来看，它只认得C服务，每个服务被编译为动态库，在需要时由skynet加载。skynet提供发送消息和注册回调函数的接口，并保证消息的正确到达，并调用目标服务回调函数。其它东西，如消息调度，线程池等，对于用户来说都是透明的。 skynet服务可以由...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}