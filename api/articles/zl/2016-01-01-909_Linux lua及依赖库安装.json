{"title":"Linux lua及依赖库安装","uid":"7680d4d8820db5bc70e2cad8bc1f84a5","slug":"zl/2016-01-01-909_Linux lua及依赖库安装","date":"2024-04-03T03:47:36.182Z","updated":"2024-04-03T03:47:36.183Z","comments":true,"path":"api/articles/zl/2016-01-01-909_Linux lua及依赖库安装.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>lua5.2暂时不使用，使用lua5.1+luarocks</p>\n<ol>\n<li>看readline软件包是否安装（dpkg -l | grep -i 软件名）</li>\n<li>是否安装ncurses安装包（ncurses安装包 ）</li>\n<li>是否安装libncurses5-dev 或libncursesw5-dev软件包（apt-get install libncurses5-dev）</li>\n</ol>\n<h2 id=\"ncurses-5-9-tar-gz\"><a href=\"#ncurses-5-9-tar-gz\" class=\"headerlink\" title=\"ncurses-5.9.tar.gz\"></a>ncurses-5.9.tar.gz</h2><pre><code>$ ./configure\n$ make\n$ sudo make install</code></pre><h2 id=\"readline-6-3-tar-gz\"><a href=\"#readline-6-3-tar-gz\" class=\"headerlink\" title=\"readline-6.3.tar.gz\"></a>readline-6.3.tar.gz</h2><pre><code>$ ./configure\n$ make\n$ sudo make install\n$ sudo ldconfig</code></pre><h2 id=\"lua-5-2-3-tar-gz\"><a href=\"#lua-5-2-3-tar-gz\" class=\"headerlink\" title=\"lua-5.2.3.tar.gz\"></a>lua-5.2.3.tar.gz</h2><pre><code>$ sudo apt-get install libreadline6-dev\n$ sudo apt-get install libreadline6-dbg\n$ make linux\n$ OK</code></pre><h2 id=\"lua-cjson\"><a href=\"#lua-cjson\" class=\"headerlink\" title=\"lua-cjson\"></a>lua-cjson</h2><pre><code>$ vim Makefile\nLUA_VERSION = 5.2    \n$ make\n$ sudo make install</code></pre><h2 id=\"lua-rocks\"><a href=\"#lua-rocks\" class=\"headerlink\" title=\"lua rocks\"></a>lua rocks</h2><p>luarocks会自动安装lua版本，现在版本为5.1，如果版本不一致，会导致找不到安装包，建议使用手动方式安装需要的包；</p>\n<p>如果使用luarocks管理包，不要单独安装lua，或者必须保证版本一致为5.1</p>\n<pre><code>$ sudo apt-get install luarocks\n$ sudo luarocks install luasocket\n$ luarocks list\n$ sudo luarocks install lua-cjson\n$ luarocks search **</code></pre>","text":"lua5.2暂时不使用，使用lua5.1+luarocks 看readline软件包是否安装（dpkg -l | grep -i 软件名） 是否安装ncurses安装包（ncurses安装包 ） 是否安装libncurses5-dev 或libncursesw5-dev软件包（a...","link":"","photos":[],"count_time":{"symbolsCount":740,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ncurses-5-9-tar-gz\"><span class=\"toc-text\">ncurses-5.9.tar.gz</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#readline-6-3-tar-gz\"><span class=\"toc-text\">readline-6.3.tar.gz</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#lua-5-2-3-tar-gz\"><span class=\"toc-text\">lua-5.2.3.tar.gz</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#lua-cjson\"><span class=\"toc-text\">lua-cjson</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#lua-rocks\"><span class=\"toc-text\">lua rocks</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"每周一论文：An Empirical Evaluation of In","uid":"0b77060d08022f719138953da135e44a","slug":"zl/2016-01-01-911_每周一论文：An Empirical Evaluation of In","date":"2024-04-03T03:47:36.183Z","updated":"2024-04-03T03:47:36.183Z","comments":true,"path":"api/articles/zl/2016-01-01-911_每周一论文：An Empirical Evaluation of In.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"论文概要多版本并发控制(Multi-Version Concurrency Control，以下简称MVCC) 是当今数据库领域最流行的并发控制实现，MVCC 在最大化并发度的情况下尽可能保证事务的正确性，其好处有： 写不会阻塞读 只读事务无需数据库锁就能支持可重复读 可以很好地...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"lua 与 C 交互","uid":"408a8e44ab8f1937b2d50b08485e1398","slug":"zl/2016-01-01-908_lua 与 C 交互","date":"2024-04-03T03:47:36.179Z","updated":"2024-04-03T03:47:36.182Z","comments":true,"path":"api/articles/zl/2016-01-01-908_lua 与 C 交互.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"lua和C交互的核心就是lua栈，lua和C的所有数据交互都是通过lua栈来完成的。 一. C调用luaC调用lua很简单，通常C以lua作为配置脚本，在运行时读取脚本数据，主要步骤： 加载脚本 luaL_loadfile 运行脚本 lua_pcall 获取数据 lua_getg...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}