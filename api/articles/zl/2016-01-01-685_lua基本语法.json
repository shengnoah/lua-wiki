{"title":"lua基本语法","uid":"aee4e303f65857e7155c42b9b734660e","slug":"zl/2016-01-01-685_lua基本语法","date":"2024-04-03T03:47:35.918Z","updated":"2024-04-03T03:47:35.919Z","comments":true,"path":"api/articles/zl/2016-01-01-685_lua基本语法.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h5 id=\"关键字\"><a href=\"#关键字\" class=\"headerlink\" title=\"关键字\"></a><b>关键字</b></h5><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">and\tbreak\tdo\telse\telseif</span><br/><span class=\"line\">end\tfalse\tfor\tfunction\tif</span><br/><span class=\"line\">in\tlocal\tnil\tnot\tor</span><br/><span class=\"line\">repeat\treturn\tthen\ttrue\tuntil\twhile</span><br/></pre></td></tr></tbody></table></figure>\n<h5 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a><b>运算</b></h5><ul>\n<li><p>数字运算</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">支持+，-，*，/，…… 比如2^2 结果为4,2^4结果为16</span><br/><span class=\"line\">连接两个字符串，用&#34;..&#34;运算符</span><br/></pre></td></tr></tbody></table></figure>\n</li>\n<li><p>赋值运算</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">a,b,c,d=1,2,3,4  --多变量一起赋值</span><br/><span class=\"line\">a,b=b,a --交换变量功能</span><br/><span class=\"line\">在默认情况下，变量是全局的。如果需要使用局部变量，使用关键字loacal</span><br/><span class=\"line\">local a,b,c =1,2,3 --a,b,c都是局部变量</span><br/></pre></td></tr></tbody></table></figure>\n</li>\n<li><p>逻辑运算</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">and,or,not</span><br/><span class=\"line\">在lua 中，只有false和nil被计算为false,其他数据都被计算为true,0也是true</span><br/><span class=\"line\">and和or 的运算结果不是true和false,而是和它的两个操作数相关</span><br/><span class=\"line\"></span><br/><span class=\"line\">a and b :如果a为false,则返回a,否则返回b</span><br/><span class=\"line\">a or  b :如果a为true,则返回a,否则返回b</span><br/><span class=\"line\"></span><br/><span class=\"line\">模拟c语言中的语句：x=a?b:c,在lua中，可以写成：x=a and b or c都是局部变量</span><br/><span class=\"line\">有用的语句：x=x or v,相当于： if not x then x=v end</span><br/></pre></td></tr></tbody></table></figure>\n</li>\n</ul>\n<h5 id=\"条件判断语句\"><a href=\"#条件判断语句\" class=\"headerlink\" title=\"条件判断语句\"></a><b>条件判断语句</b></h5><ul>\n<li><p>if</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">if condition then</span><br/><span class=\"line\">\t\t...</span><br/><span class=\"line\">elseif condition then</span><br/><span class=\"line\">\t\t... else ...</span><br/><span class=\"line\">end</span><br/></pre></td></tr></tbody></table></figure>\n</li>\n<li><p>repeat</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">repeat ... until condition</span><br/></pre></td></tr></tbody></table></figure>\n</li>\n<li><p>while</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">while condition</span><br/><span class=\"line\">do</span><br/><span class=\"line\">\t...</span><br/><span class=\"line\">end</span><br/></pre></td></tr></tbody></table></figure>\n</li>\n<li><p>for</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">for var=v1,vn,step</span><br/><span class=\"line\">do</span><br/><span class=\"line\">\t...</span><br/><span class=\"line\">end</span><br/><span class=\"line\"></span><br/><span class=\"line\">for var1,var2,... varn in table</span><br/><span class=\"line\">do</span><br/><span class=\"line\">\t...</span><br/><span class=\"line\">end</span><br/></pre></td></tr></tbody></table></figure>\n</li>\n<li><p>闭包</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">eg one.</span><br/><span class=\"line\">function newCounter()</span><br/><span class=\"line\">\tlocal i=0</span><br/><span class=\"line\">\treturn function()  -- anonymous function</span><br/><span class=\"line\">\t\ti=i+1</span><br/><span class=\"line\">\t\t\treturn i</span><br/><span class=\"line\">\tend</span><br/><span class=\"line\">end</span><br/><span class=\"line\"></span><br/><span class=\"line\">c1=newCounter()</span><br/><span class=\"line\">print(c1()) --&gt;1</span><br/><span class=\"line\">print(c1()) --&gt;2</span><br/><span class=\"line\"></span><br/><span class=\"line\">eg two.</span><br/><span class=\"line\">function myPower(x)</span><br/><span class=\"line\">\treturn function(y) return y^x end</span><br/><span class=\"line\">end</span><br/><span class=\"line\"></span><br/><span class=\"line\">power2=myPower(2)</span><br/><span class=\"line\">power3=myPower(3)</span><br/><span class=\"line\"></span><br/><span class=\"line\">print(power2(4)) </span><br/><span class=\"line\">print(power3(5))</span><br/></pre></td></tr></tbody></table></figure>\n</li>\n</ul>\n<h5 id=\"常用结构\"><a href=\"#常用结构\" class=\"headerlink\" title=\"常用结构\"></a><b>常用结构</b></h5><ul>\n<li>table<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/><span class=\"line\">29</span><br/><span class=\"line\">30</span><br/><span class=\"line\">31</span><br/><span class=\"line\">32</span><br/><span class=\"line\">33</span><br/><span class=\"line\">34</span><br/><span class=\"line\">35</span><br/><span class=\"line\">36</span><br/><span class=\"line\">37</span><br/><span class=\"line\">38</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">table 是lua的重要数据类型</span><br/><span class=\"line\">table 类似于 python中的字典</span><br/><span class=\"line\">table 只能通过构造式来创建</span><br/><span class=\"line\"></span><br/><span class=\"line\">lua code</span><br/><span class=\"line\"></span><br/><span class=\"line\">tab={a=10,b=20,c=30,d=40}</span><br/><span class=\"line\">print(tab[&#34;a&#34;])</span><br/><span class=\"line\"></span><br/><span class=\"line\">comment:</span><br/><span class=\"line\">a)table中的每项要求是 key=value的形式</span><br/><span class=\"line\">b)key只能是字符串，这里的a,b,c,d都是字符串，但是不能加引号</span><br/><span class=\"line\">c)通过key来访问table的值，这时候 a必须加引号</span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\">tab={10,m=20,11,12,13}</span><br/><span class=\"line\">print(tab[1]) =10</span><br/><span class=\"line\">print(tab[2]) =11</span><br/><span class=\"line\">print(tab[3]) =12</span><br/><span class=\"line\">print(tab[4]) =13</span><br/><span class=\"line\"></span><br/><span class=\"line\">get table length</span><br/><span class=\"line\">print(table.getn(tab))  -&gt; 4</span><br/><span class=\"line\">print(#tab)             -&gt; 4</span><br/><span class=\"line\"></span><br/><span class=\"line\">for k,v in pairs(tab) do</span><br/><span class=\"line\">\t\tprint(k,&#34;:&#34;,v)</span><br/><span class=\"line\">end</span><br/><span class=\"line\"></span><br/><span class=\"line\">1:10</span><br/><span class=\"line\">2:11</span><br/><span class=\"line\">3:12</span><br/><span class=\"line\">4:13</span><br/><span class=\"line\">m:20</span><br/><span class=\"line\"></span><br/><span class=\"line\">注释：</span><br/><span class=\"line\">a)省略key,会自动以1开始编号，并跳过设置过的key</span><br/><span class=\"line\">b)获取表长度，只有当表使用1自动编号开始，可以获取</span><br/></pre></td></tr></tbody></table></figure>\n</li>\n</ul>\n<h5 id=\"lua表空判断\"><a href=\"#lua表空判断\" class=\"headerlink\" title=\"lua表空判断\"></a><b>lua表空判断</b></h5><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">local a ={}</span><br/><span class=\"line\">判断table a是否为空，有提供api table.maxn(a) 或 #a 获取表a长度，</span><br/><span class=\"line\">该情况只针对key为数字且安装递增方式。</span><br/><span class=\"line\"></span><br/><span class=\"line\">对于自定义key的情况下，获取表长度会失败，可通过lua内置next函数解决</span><br/></pre></td></tr></tbody></table></figure>\n<h5 id=\"MetaTable和MetaMethod\"><a href=\"#MetaTable和MetaMethod\" class=\"headerlink\" title=\"MetaTable和MetaMethod\"></a><b>MetaTable和MetaMethod</b></h5><p>MetaTable和MetaMethod是lua中的重要语法，MetaTable用来做类似C++重载操作符的功能</p>\n<p>假如有两个函数：<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">fraction_a ={numerator=2,denominator=3}</span><br/><span class=\"line\">fraction_b ={numerator=4,denominator=7}</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>如果要实现分数见相加：2/3+4/7,执行fraction_a+fraction_b会报错<br/>如果使用MetaTable,则如下<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">fraction_op={}</span><br/><span class=\"line\">function fraction_op.__add(f1,f2)</span><br/><span class=\"line\">\tret = {}</span><br/><span class=\"line\">\tret.numerator=f1.numerator*f2.denominator+f2.numerator*f1.denominator</span><br/><span class=\"line\">\tret.denominator=f1.denominator*f2.denominator</span><br/><span class=\"line\">\treturn ret</span><br/><span class=\"line\">end</span><br/><span class=\"line\"></span><br/><span class=\"line\">setmetatable(fraction_a,fraction_op)</span><br/><span class=\"line\">setmetatable(fraction_a,fraction_op)</span><br/><span class=\"line\"></span><br/><span class=\"line\">fraction_s = fraction_a + fraction_b</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>至于__add是MetaMethod,这是lua内建约定的，还有如下的MetaMethod：<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">__add(a,b)  \t对应a+b</span><br/><span class=\"line\">__sub(a,b)  \t对应a-b</span><br/><span class=\"line\">__mul(a,b)\t\t对应a*b</span><br/><span class=\"line\">__div(a,b)\t\t对应a/b</span><br/><span class=\"line\">__mod(a,b)\t\t对应a%b</span><br/><span class=\"line\">__pow(a,b)\t\t对应a^b </span><br/><span class=\"line\">__unm(a)\t\t对应-a</span><br/><span class=\"line\">__concat(a,b) \t对应a .. b</span><br/><span class=\"line\">__len(a)\t\t对应#a</span><br/><span class=\"line\">__eq(a,b)\t\t对应a==b</span><br/><span class=\"line\">__lt(a,b)\t\t对应a&lt;b</span><br/><span class=\"line\">__le(a,b)   \t对应a&lt;=b</span><br/><span class=\"line\">__index(a,b) \t对应a.b</span><br/><span class=\"line\">__newindex(a,b,c)\t\t对应a.b=c</span><br/><span class=\"line\">__call(a,...)\t\t对应a(...)</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p><a href=\"http://www.codingnow.com/2000/download/lua_manual.html\" target=\"_blank\" rel=\"noopener noreferrer\">Lua 5.1 参考手册</a><br/><a href=\"http://17173ops.com/2013/11/01/17173-ngx-lua-manual.shtml#toc9\" target=\"_blank\" rel=\"noopener noreferrer\">lua基本语法</a><br/><a href=\"http://book.luaer.cn/\" target=\"_blank\" rel=\"noopener noreferrer\">Programming in Lua</a></p>\n<hr/>\n<p>您的鼓励是我写作最大的动力</p>\n<p>俗话说，投资效率是最好的投资。 如果您感觉我的文章质量不错，读后收获很大，预计能为您提高 10% 的工作效率，不妨小额捐助我一下，让我有动力继续写出更多好文章。</p>\n<pre><code>  \t\t\t\t\t\t&lt;div id=&quot;donate_guide&quot; class=&quot;donate_bar center &quot;&gt;\n      \t\t\t\t\t&lt;a href=&quot;http://mypay-1253516637.costj.myqcloud.com/2000.jpg&quot; title=&quot;支付宝打赏&quot; class=&quot;fancybox&quot; rel=&quot;article0&quot; style=&quot;float:left;margin-left:25%;margin-right:2px;&quot;&gt;\n      \t\t\t\t\t&lt;img src=&quot;http://mypay-1253516637.costj.myqcloud.com/2000.jpg&quot; title=&quot;支付宝打赏&quot; height=&quot;164px&quot; width=&quot;164px&quot;/&gt;\n      \t\t\t\t\t&lt;/a&gt; \n  \t\t\t\t\t\t&lt;/div&gt;\n</code></pre>\n","text":"关键字1234and break do else elseifend false for function ifin local nil not orrepeat return then true until while 运算 数字运算 12支持+，-，*，/，…… 比如2^2 ...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%85%B3%E9%94%AE%E5%AD%97\"><span class=\"toc-text\">关键字</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">运算</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">条件判断语句</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">常用结构</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#lua%E8%A1%A8%E7%A9%BA%E5%88%A4%E6%96%AD\"><span class=\"toc-text\">lua表空判断</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#MetaTable%E5%92%8CMetaMethod\"><span class=\"toc-text\">MetaTable和MetaMethod</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Ngx_lua_waf搭建步骤","uid":"daec95cc6d5bb06273470ed3fafb0d44","slug":"zl/2016-01-01-684_Ngx_lua_waf搭建步骤","date":"2024-04-03T03:47:35.918Z","updated":"2024-04-03T03:47:35.918Z","comments":true,"path":"api/articles/zl/2016-01-01-684_Ngx_lua_waf搭建步骤.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Ngx_lua_waf是一个web防火墙，主要通过lua实现，安装简单，性能优异，由国人loveshell开发。 ngx_lua_waf是我刚入职趣游时候开发的一个基于ngx_lua的web应用防火墙。 代码很简单，开发初衷主要是使用简单，高性能和轻量级。 现在开源出来，遵从MI...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"通过lua栈了解lua与c的交互","uid":"85ff80717730fc6400f5d3d615799d7f","slug":"zl/2016-01-01-682_通过lua栈了解lua与c的交互","date":"2024-04-03T03:47:35.917Z","updated":"2024-04-03T03:47:35.918Z","comments":true,"path":"api/articles/zl/2016-01-01-682_通过lua栈了解lua与c的交互.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"其中分析、执行部分都是c语言实现的。 lua与c的关系lua的虚拟机是用c语言实现的，换句话说一段lua指令最终在执行时都是当作c语言来执行的，lua的global表，函数调用栈也都是存在c语言中的一个叫lua_State的结构体中的。举个例子，来看下lua中的加指令 OP_AD...","link":"","photos":[],"count_time":{"symbolsCount":"8.3k","symbolsTime":"8 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}