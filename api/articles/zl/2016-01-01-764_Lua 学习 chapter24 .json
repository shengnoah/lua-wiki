{"title":"Lua 学习 chapter24","uid":"cf5937e763bc5a1dbfc0ffa5262e9048","slug":"zl/2016-01-01-764_Lua 学习 chapter24 ","date":"2024-04-03T03:47:36.007Z","updated":"2024-04-03T03:47:36.007Z","comments":true,"path":"api/articles/zl/2016-01-01-764_Lua 学习 chapter24 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h3 id=\"目录\">目录</h3>\n<ol>\n  <li>将协程用作迭代器</li>\n  <li>事件驱动式编程</li>\n</ol>\n<blockquote>\n  <p>人人真真的生活过，学习过，改变过，努力过，才能创造出一个满意的自己。</p>\n</blockquote>\n<h2 id=\"将协程用作迭代器\">将协程用作迭代器</h2>\n<p>不断的resume来实现迭代。</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">local</span> <span class=\"k\">function</span> <span class=\"nf\">printResult</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">#</span><span class=\"n\">a</span> <span class=\"k\">do</span>\n        <span class=\"nb\">io.write</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"s2\">&#34; &#34;</span><span class=\"p\">)</span>\n    <span class=\"k\">end</span>\n    <span class=\"nb\">io.write</span><span class=\"p\">(</span><span class=\"s2\">&#34;</span><span class=\"se\">n</span><span class=\"s2\">&#34;</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n<p><span class=\"kd\">local</span> <span class=\"k\">function</span> <span class=\"nf\">permgen</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">n</span><span class=\"p\">)</span><br />\n<span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">n</span> <span class=\"ow\">or</span> <span class=\"o\">#</span><span class=\"n\">a</span><br />\n<span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">1</span> <span class=\"k\">then</span><br />\n<span class=\"nb\">coroutine.yield</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span><br />\n<span class=\"k\">else</span><br />\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">n</span> <span class=\"k\">do</span><br />\n<span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">],</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">]</span><br />\n<span class=\"n\">permgen</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">n</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><br />\n<span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">],</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">n</span><span class=\"p\">]</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"kd\">local</span> <span class=\"k\">function</span> <span class=\"nf\">permutations</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">co</span> <span class=\"o\">=</span> <span class=\"nb\">coroutine.create</span><span class=\"p\">(</span><span class=\"k\">function</span><span class=\"p\">()</span> <span class=\"n\">permgen</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"k\">end</span><span class=\"p\">)</span><br />\n<span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"p\">()</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">code</span><span class=\"p\">,</span> <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"nb\">coroutine.resume</span><span class=\"p\">(</span><span class=\"n\">co</span><span class=\"p\">)</span><br />\n<span class=\"k\">return</span> <span class=\"n\">res</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"k\">in</span> <span class=\"n\">permutations</span><span class=\"p\">(&#123;</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;b&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;c&quot;</span><span class=\"p\">&#125;)</span> <span class=\"k\">do</span><br />\n<span class=\"n\">printResult</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span><br />\n<span class=\"k\">end</span><br />\n</pre></td></tr></tbody></table></code></pre></div></div></p>\n<h2 id=\"事件驱动式编程\">事件驱动式编程</h2>\n<p>假设我们有一个I/O库：</p>\n<ol>\n  <li>lib.runloop()：运行事件循环，在其中处理所有发生的事件并调用对应的回调函数。</li>\n  <li>lib.readline(steam,callback)：从指定流中读取一行，并在读取完成后带着读取的结果调用指定的回调函数</li>\n  <li>lib.writeline(stream,line,callback)：该函数写入一行</li>\n  <li>lib.stop():打破循环，用于程序结束</li>\n</ol>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">local</span> <span class=\"n\">lib</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span>\n<span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">readline</span> <span class=\"o\">=</span> <span class=\"k\">function</span><span class=\"p\">(</span><span class=\"n\">callback</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&#34;等待输入：&#34;</span><span class=\"p\">)</span>\n    <span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">waitInput</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n    <span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">callback</span> <span class=\"o\">=</span> <span class=\"n\">callback</span>\n<span class=\"k\">end</span>\n<span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">writeline</span> <span class=\"o\">=</span> <span class=\"k\">function</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">,</span><span class=\"n\">callback</span><span class=\"p\">)</span>\n    <span class=\"nb\">io.write</span><span class=\"p\">(</span><span class=\"n\">line</span> <span class=\"o\">..</span> <span class=\"s2\">&#34;from others&#34;</span><span class=\"p\">)</span>\n    <span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">waitWrite</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n    <span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">callback</span> <span class=\"o\">=</span> <span class=\"n\">callback</span>\n<span class=\"k\">end</span>\n<p><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">stop</span> <span class=\"o\">=</span> <span class=\"k\">function</span><span class=\"p\">()</span><br />\n<span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">flag</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">runloop</span> <span class=\"o\">=</span> <span class=\"k\">function</span><span class=\"p\">()</span><br />\n<span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">flag</span> <span class=\"o\">=</span> <span class=\"kc\">true</span><br />\n<span class=\"k\">while</span> <span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">flag</span> <span class=\"k\">do</span><br />\n<span class=\"k\">if</span> <span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">waitInput</span> <span class=\"k\">then</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"nb\">io.read</span><span class=\"p\">()</span><br />\n<span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">waitInput</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><br />\n<span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">callback</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span><br />\n<span class=\"k\">elseif</span> <span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">waitWrite</span> <span class=\"k\">then</span><br />\n<span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">waitWrite</span> <span class=\"o\">=</span> <span class=\"kc\">false</span><br />\n<span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">callback</span><span class=\"p\">()</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"kd\">local</span> <span class=\"k\">function</span> <span class=\"nf\">run</span> <span class=\"p\">(</span><span class=\"n\">code</span><span class=\"p\">)</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">co</span> <span class=\"o\">=</span> <span class=\"nb\">coroutine.wrap</span><span class=\"p\">(</span><span class=\"k\">function</span><span class=\"p\">()</span><br />\n<span class=\"n\">code</span><span class=\"p\">()</span><br />\n<span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span><br />\n<span class=\"k\">end</span><span class=\"p\">)</span><br />\n<span class=\"n\">co</span><span class=\"p\">()</span><br />\n<span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">runloop</span><span class=\"p\">()</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"k\">function</span> <span class=\"nf\">putline</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">co</span> <span class=\"o\">=</span> <span class=\"nb\">coroutine.running</span><span class=\"p\">()</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">co</span><span class=\"p\">)</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">callback</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"k\">function</span><span class=\"p\">()</span> <span class=\"nb\">coroutine.resume</span><span class=\"p\">(</span><span class=\"n\">co</span><span class=\"p\">)</span> <span class=\"k\">end</span><span class=\"p\">)</span><br />\n<span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">writeline</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">,</span><span class=\"n\">callback</span><span class=\"p\">)</span><br />\n<span class=\"nb\">coroutine.yield</span><span class=\"p\">()</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"k\">function</span> <span class=\"nf\">getline</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">co</span> <span class=\"o\">=</span> <span class=\"nb\">coroutine.running</span><span class=\"p\">()</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">co</span><span class=\"p\">)</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">callback</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"k\">function</span><span class=\"p\">(</span><span class=\"n\">l</span><span class=\"p\">)</span><br />\n<span class=\"nb\">coroutine.resume</span><span class=\"p\">(</span><span class=\"n\">co</span><span class=\"p\">,</span><span class=\"n\">l</span><span class=\"p\">)</span><br />\n<span class=\"k\">end</span><span class=\"p\">)</span><br />\n<span class=\"n\">lib</span><span class=\"p\">.</span><span class=\"n\">readline</span><span class=\"p\">(</span><span class=\"n\">callback</span><span class=\"p\">)</span><br />\n<span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"nb\">coroutine.yield</span><span class=\"p\">()</span><br />\n<span class=\"k\">return</span> <span class=\"n\">line</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"k\">function</span> <span class=\"p\">()</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">t</span><span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span><br />\n<span class=\"k\">while</span> <span class=\"kc\">true</span> <span class=\"k\">do</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">line</span> <span class=\"o\">=</span> <span class=\"n\">getline</span><span class=\"p\">()</span><br />\n<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">line</span> <span class=\"k\">then</span><br />\n<span class=\"k\">break</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"nb\">table.insert</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span><span class=\"n\">line</span><span class=\"p\">)</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"o\">#</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"o\">-</span> <span class=\"mi\">1</span> <span class=\"k\">do</span><br />\n<span class=\"n\">putline</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">…</span> <span class=\"s2\">&quot;</span><span class=\"se\">n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">end</span><span class=\"p\">)</span><br />\n</pre></td></tr></tbody></table></code></pre></div></div></p>\n<pre><code>            &lt;hr style=&quot;visibility: hidden;&quot;/&gt;\n            \n            &lt;hr style=&quot;visibility: hidden;&quot;/&gt;\n</code></pre>\n","text":"目录 将协程用作迭代器 事件驱动式编程 人人真真的生活过，学习过，改变过，努力过，才能创造出一个满意的自己。 将协程用作迭代器 不断的resume来实现迭代。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">目录</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%86%E5%8D%8F%E7%A8%8B%E7%94%A8%E4%BD%9C%E8%BF%AD%E4%BB%A3%E5%99%A8\"><span class=\"toc-text\">将协程用作迭代器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8B%E4%BB%B6%E9%A9%B1%E5%8A%A8%E5%BC%8F%E7%BC%96%E7%A8%8B\"><span class=\"toc-text\">事件驱动式编程</span></a>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"深入 Lua Garbage Collector(五)","uid":"c301632190015e10274da49fa0008c96","slug":"zl/2016-01-01-76_深入 Lua Garbage Collector(五)","date":"2024-04-03T03:47:36.008Z","updated":"2024-04-03T03:47:36.008Z","comments":true,"path":"api/articles/zl/2016-01-01-76_深入 Lua Garbage Collector(五).json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 有了前几天的基础，我们可以从顶向下来读 lua gc 部分的代码了。慢慢的，感觉我这个系列都可以叫跟着云风一起看Lua源码了，虽然自己看的是最新的5.3。挖个坑，之后应该会真的跟着云风大大的那本readinglua一起看完lua的最新源码。 lua_gc我们知道，lua 对外的...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua string 哈希碰撞","uid":"238efc63608af17eea7a4ab65a98f6e7","slug":"zl/2016-01-01-765_Lua string 哈希碰撞 ","date":"2024-04-03T03:47:36.007Z","updated":"2024-04-03T03:47:36.007Z","comments":true,"path":"api/articles/zl/2016-01-01-765_Lua string 哈希碰撞 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua 中 40 字节以下的字符串会被内部化到一张表中(Lua 5.3)，这张表挂在 global state 结构下。对于短字符串，相同的串在同一虚拟机上只会存在一份，这被称为字符串的内部化。 其实字符串在 Lua VM 中是以两种内部形式保存的：短字符串及长字符串。其界限默认...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}