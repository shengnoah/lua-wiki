{"title":"读《Lua程序设计》笔记","uid":"b66547bac7f25a5cd196549d7dee5911","slug":"zl/2016-01-01-874_读《Lua程序设计》笔记","date":"2024-04-03T03:47:36.147Z","updated":"2024-04-03T03:47:36.147Z","comments":true,"path":"api/articles/zl/2016-01-01-874_读《Lua程序设计》笔记.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>a.多重返回值</p>\n<p>Lua允许函数返回多个结果，只需在return关键字后列出所有的返回值即可</p>\n<figure class=\"code\"><figcaption><span>查找数组中的最大元素</span></figcaption><div class=\"highlight\"><table><tbody><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class=\"line-number\">1</span>\n<span class=\"line-number\">2</span>\n<span class=\"line-number\">3</span>\n<span class=\"line-number\">4</span>\n<span class=\"line-number\">5</span>\n<span class=\"line-number\">6</span>\n<span class=\"line-number\">7</span>\n<span class=\"line-number\">8</span>\n<span class=\"line-number\">9</span>\n<span class=\"line-number\">10</span>\n<span class=\"line-number\">11</span>\n</pre></td><td class=\"code\"><pre><code class=\"lua\"><span class=\"line\"><span class=\"k\">function</span> <span class=\"nf\">maximum</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>\n</span><span class=\"line\"><span class=\"kd\">local</span> <span class=\"n\">mi</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>  <span class=\"c1\">--最大值的索引</span>\n</span><span class=\"line\"><span class=\"kd\">local</span> <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">mi</span><span class=\"p\">]</span>  <span class=\"c1\">--最大值</span>\n</span><span class=\"line\">  <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">val</span> <span class=\"k\">in</span> <span class=\"nb\">ipairs</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n</span><span class=\"line\">    <span class=\"k\">if</span> <span class=\"n\">val</span><span class=\"o\">&gt;</span><span class=\"n\">m</span> <span class=\"k\">then</span>\n</span><span class=\"line\">      <span class=\"n\">mi</span> <span class=\"o\">=</span> <span class=\"n\">i</span><span class=\"p\">;</span> <span class=\"n\">m</span><span class=\"o\">=</span><span class=\"n\">val</span>\n</span><span class=\"line\">    <span class=\"k\">end</span>\n</span><span class=\"line\">  <span class=\"k\">end</span>\n</span><span class=\"line\"><span class=\"k\">return</span> <span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"n\">mi</span>\n</span><span class=\"line\"><span class=\"k\">end</span>\n</span><span class=\"line\"><span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"n\">maximum</span><span class=\"p\">(&#123;</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">23</span><span class=\"p\">,</span><span class=\"mi\">12</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">&#125;))</span>  <span class=\"c1\">--&gt;23  3</span>\n</span></code></pre></td></tr></tbody></table></div></figure>\n<p>b.变长参数</p>\n<figure class=\"code\"><figcaption><span>返回所有参数的总和</span></figcaption><div class=\"highlight\"><table><tbody><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class=\"line-number\">1</span>\n<span class=\"line-number\">2</span>\n<span class=\"line-number\">3</span>\n<span class=\"line-number\">4</span>\n<span class=\"line-number\">5</span>\n<span class=\"line-number\">6</span>\n<span class=\"line-number\">7</span>\n<span class=\"line-number\">8</span>\n</pre></td><td class=\"code\"><pre><code class=\"lua\"><span class=\"line\"><span class=\"k\">function</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n</span><span class=\"line\">    <span class=\"kd\">local</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n</span><span class=\"line\">    <span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span><span class=\"n\">v</span> <span class=\"k\">in</span> <span class=\"nb\">ipairs</span><span class=\"p\">(&#123;</span><span class=\"o\">...</span><span class=\"p\">&#125;)</span> <span class=\"k\">do</span>  <span class=\"c1\">--ipairs(&#123;...&#125;)可以简写为ipairs&#123;...&#125;</span>\n</span><span class=\"line\">        <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">s</span> <span class=\"o\">+</span> <span class=\"n\">v</span>\n</span><span class=\"line\">    <span class=\"k\">end</span>\n</span><span class=\"line\">    <span class=\"k\">return</span> <span class=\"n\">s</span>\n</span><span class=\"line\"><span class=\"k\">end</span>\n</span><span class=\"line\"><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">25</span><span class=\"p\">,</span><span class=\"mi\">12</span><span class=\"p\">))</span> <span class=\"c1\">--&gt;54</span>\n</span></code></pre></td></tr></tbody></table></div></figure>\n<p>表达式“…”的行为类似于一个具有多重返回值的函数，它返回的是当前函数的所有变长参数</p>\n<p>c.具名参数\n虽然Lua不支持</p>\n<figure class=\"code\"><figcaption><span></span></figcaption><div class=\"highlight\"><table><tbody><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class=\"line-number\">1</span>\n</pre></td><td class=\"code\"><pre><code class=\"lua\"><span class=\"line\"><span class=\"n\">rename</span><span class=\"p\">(</span><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"s2\">&#34;</span><span class=\"s\">temp.lua&#34;</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"s2\">&#34;</span><span class=\"s\">temp1.lua&#34;</span><span class=\"p\">)</span>  <span class=\"c1\">--无效的演示代码</span>\n</span></code></pre></td></tr></tbody></table></div></figure>\n<p>这样的语法，但是可以将所有的实参组织到一个table中，并将这个table作为唯一的实参传给函数。当实参只有一个table的构造式时，函数调用中的圆括号是可有可无的：</p>\n<figure class=\"code\"><figcaption><span></span></figcaption><div class=\"highlight\"><table><tbody><tr><td class=\"gutter\"><pre class=\"line-numbers\"><span class=\"line-number\">1</span>\n<span class=\"line-number\">2</span>\n<span class=\"line-number\">3</span>\n<span class=\"line-number\">4</span>\n</pre></td><td class=\"code\"><pre><code class=\"lua\"><span class=\"line\"><span class=\"k\">function</span> <span class=\"nf\">rename</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>\n</span><span class=\"line\">    <span class=\"k\">return</span> <span class=\"nb\">os.rename</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">.</span><span class=\"n\">old</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">.</span><span class=\"n\">new</span><span class=\"p\">)</span>\n</span><span class=\"line\"><span class=\"k\">end</span>\n</span><span class=\"line\"><span class=\"n\">rename</span><span class=\"p\">&#123;</span><span class=\"n\">old</span><span class=\"o\">=</span><span class=\"s2\">&#34;</span><span class=\"s\">temp.lua&#34;</span><span class=\"p\">,</span> <span class=\"n\">new</span><span class=\"o\">=</span><span class=\"s2\">&#34;</span><span class=\"s\">temp1.lua&#34;</span><span class=\"p\">&#125;</span>\n</span></code></pre></td></tr></tbody></table></div></figure>","text":"a.多重返回值 Lua允许函数返回多个结果，只需在return关键字后列出所有的返回值即可 查找数组中的最大元素1 2 3 4 5 6 7 8 9 10 11 function maximum(a) local mi = 1 --最大值的索引 local m = a[mi] --...","link":"","photos":[],"count_time":{"symbolsCount":891,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua string.find 中的 “坑”","uid":"f0b579433247a9da11a0809ef2f14994","slug":"zl/2016-01-01-876_Lua string.find 中的 “坑” ","date":"2024-04-03T03:47:36.149Z","updated":"2024-04-03T03:47:36.150Z","comments":true,"path":"api/articles/zl/2016-01-01-876_Lua string.find 中的 “坑” .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"我们的线上环境，ngx_lua api 都是以模块形式加载到 lua 级别的 vm 中，已达到最大性能。而且我们并没有使用传统的 “包” 的形式来加载(也就是 require &#34;xx.xx.xx&#34; )，而是直接以模块名为加载( require &#34;xx&#3...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua","uid":"15b0cdc6d03f6c3f6bf8d3a7ff197317","slug":"zl/2016-01-01-875_[Lua","date":"2024-04-03T03:47:36.147Z","updated":"2024-04-03T03:47:36.149Z","comments":true,"path":"api/articles/zl/2016-01-01-875_[Lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"介绍 官网地址： http://www.lua.org/home.html Lua是脚本语言，可以自己运行，可以嵌入C语言运行，也可以把C语言嵌入Lua运行。 Lua全部都是用C语言实现的，可以到官网去下载源码，自己编译，编译过程很简单，没什么错误。 源码目录结构： 编译源码 需...","link":"","photos":[],"count_time":{"symbolsCount":932,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}