{"title":"matrix transform for luastg","uid":"1b2ddf79d527ca4d89071d1010c2e03a","slug":"zl/2016-01-01-1045_matrix transform for luastg","date":"2024-04-03T03:47:32.980Z","updated":"2024-04-03T03:47:32.980Z","comments":true,"path":"api/articles/zl/2016-01-01-1045_matrix transform for luastg.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p><del>Another time copy from css (first attempt is ease function)</del></p>\n<h2 id=\"theory\">Theory</h2>\n<p>From css3 animation, we have matrix, matrix3d method to describe transform of a image affinely.</p>\n<p>For 2d image:\n0. translate, skew and scale according to (0, 0)</p>\n<script type=\"math/tex; mode=display\">% <![CDATA[\nbegin{bmatrix} x \\ y \\ 1 end{bmatrix}  \nbegin{bmatrix}\n\ttext{scaleX} & text{skewX} & text{translateX} \\\n\ttext{skewY} & text{scaleY} & text{translateY} \\\n\t0 & 0 & 1\n end{bmatrix} %]]></script>\n<ol>\n  <li>rotation according to (0, 0)</li>\n</ol>\n<script type=\"math/tex; mode=display\">% <![CDATA[\nbegin{bmatrix} \n\tcos{theta} & -sin{theta} & 0 \\\n\tsin{theta} & cos{theta} & 0 \\\n\t0 & 0 & 1\n end{bmatrix} %]]></script>\n<p>Matrix is kinda linear transformation, so rotation matrix ($R$) + sketching matrix ($S$) = $T(=RS)$</p>\n<p>If we have matrix $A$ (invertiable), we can use eigenvalue decomposition to tween, $A=VDV^{-1}$, if separated into 10 steps, $T = VD^{1/10}V^{-1}$</p>\n<p>Also for matrix 3d on 2d image:</p>\n<p>o. translate, skew and scale according to (0, 0, 0)</p>\n<script type=\"math/tex; mode=display\">% <![CDATA[\nbegin{bmatrix} x \\ y \\ 1 end{bmatrix}  \nbegin{bmatrix}\n\ttext{scaleX} & text{skewX} & text{translateX} \\\n\ttext{skewY} & text{scaleY} & text{translateY} \\\n\ttext{skewZ} & text{translateZ} & text{scaleZ} \\\n\t0 & 0 & 1\n end{bmatrix} %]]></script>\n<p>o.rotation according to (x, y, z) <a href=\"http://blog.csdn.net/harryhare/article/details/9195053\">rotation</a> <a href=\"https://zh.wikipedia.org/wiki/%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5\">wiki</a></p>\n<script type=\"math/tex; mode=display\">% <![CDATA[\nmathcal{M}(hat{mathbf{v}},theta) = begin{bmatrix}\n   cos theta + (1 - cos theta) x^2\n & (1 - cos theta) x y - (sin theta) z \n & (1 - cos theta) x z + (sin theta) y & 0 \n\\\n   (1 - cos theta) y x + (sin theta) z \n & cos theta + (1 - cos theta) y^2\n & (1 - cos theta) y z - (sin theta) x & 0\n\\\n   (1 - cos theta) z x - (sin theta) y\n & (1 - cos theta) z y + (sin theta) x\n & cos theta + (1 - cos theta) z^2 & 0\n \\\n 0 & 0 & 0 & 1\nend{bmatrix} %]]></script>\n<p>Similarily, we can have eigenvalue decomposiiton to make tweening animation. One point is remained that for 3d object projected to xy-plane, we should make parameter equation for each surface.</p>\n<p>Finally we can use projection of surface to create beautiful bullets.</p>\n<h2 id=\"realization\">Realization</h2>\n<p>Use pyqt as gui, matplotlib.pylab, mpl_toolkits.mplot3d as drawer.\nTo simplify this problem, we only draw edges of convex polyhedron on xy-plane.</p>\n<h3 id=\"place-points-at-anticlockwise-direction-and-add-edges\">Place points at anticlockwise direction and add edges</h3>\n<p><a href=\"http://www.cnblogs.com/loveclumsybaby/p/3420795.html\">anticlockwise sort</a></p>\n<p>Calculate the mass center, $vec{OA}, vec{OB}$ as vector from mass center to point A, B. If $vec{OA} times vec{OB} &lt; 0$, then B is anticlockwise to A. Quick sort the whole point set. Add edges AB in the edges set</p>\n<h3 id=\"solve-the-convex\">Solve the convex</h3>\n<p>Accordint to anticlockwise points set and edges set, judge one edge AB and one point C. If the $CBA &lt; 90^{circ}$ then it’s concave, error.</p>\n<h2 id=\"example\">Example</h2>\n<p>Remain to be done</p>\n<pre><code>            &lt;hr/&gt;\n\n            \n            \n            \n            &lt;div class=&quot;ds-share&quot; style=&quot;text-align: right&quot; data-thread-key=&quot;/2016/05/13/LuaSTG_Matrix_Transform&quot; data-title=&quot;Matrix Transform for LuaSTG&quot; data-url=&quot;http://airtnp.github.io/2016/05/13/LuaSTG_Matrix_Transform/&quot; data-images=&quot;http://airtnp.github.io/img/post-matrix.jpg&quot; data-content=&quot;Another time copy from css (first attempt is ease function)\n</code></pre>\n<p>Theory</p>\n<p>From css… | Airtnp 的博客 | Airtnp Blog &quot;&gt;</p>\n<pre><code>            &lt;hr/&gt;\n            &lt;/div&gt;\n</code></pre>\n","text":"Another time copy from css (first attempt is ease function) Theory From css3 animation, we have matrix, matrix3d method to describe transfor...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#theory\"><span class=\"toc-text\">Theory</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#realization\"><span class=\"toc-text\">Realization</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#place-points-at-anticlockwise-direction-and-add-edges\"><span class=\"toc-text\">Place points at anticlockwise direction and add edges</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#solve-the-convex\"><span class=\"toc-text\">Solve the convex</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#example\"><span class=\"toc-text\">Example</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua学习笔记：函数深入","uid":"583c281d4ac432848ac82bd92a47e41a","slug":"zl/2016-01-01-1049_lua学习笔记：函数深入","date":"2024-04-03T03:47:32.981Z","updated":"2024-04-03T03:47:32.982Z","comments":true,"path":"api/articles/zl/2016-01-01-1049_lua学习笔记：函数深入.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" JVM学习笔记11：synchronized的实现 编程语言 ","link":"","photos":[],"count_time":{"symbolsCount":185,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"luaframework puremvc","uid":"aac50f1cbe79f9daf0b4eb6d61aa4670","slug":"zl/2016-01-01-1046_luaframework puremvc","date":"2024-04-03T03:47:32.980Z","updated":"2024-04-03T03:47:32.980Z","comments":true,"path":"api/articles/zl/2016-01-01-1046_luaframework puremvc.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" JVM学习笔记11：synchronized的实现 编程语言 ","link":"","photos":[],"count_time":{"symbolsCount":185,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}