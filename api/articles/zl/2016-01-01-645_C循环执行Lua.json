{"title":"C循环执行Lua","uid":"f20c2eb82b1c56d5b08c0f9c1345be87","slug":"zl/2016-01-01-645_C循环执行Lua","date":"2024-04-03T03:47:35.865Z","updated":"2024-04-03T03:47:35.865Z","comments":true,"path":"api/articles/zl/2016-01-01-645_C循环执行Lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<div id=\"toc\" class=\"toc-article\">\n    <strong class=\"toc-title\">文章目录</strong>\n<pre><code>&lt;/div&gt;\n\n\n&lt;h3 id=&quot;实现过程&quot;&gt;&lt;a href=&quot;#实现过程&quot; class=&quot;headerlink&quot; title=&quot;实现过程&quot;&gt;&lt;/a&gt;实现过程&lt;/h3&gt;&lt;p&gt;先定义好树莓派相关操作函数&lt;/p&gt;\n</code></pre>\n<p>在创建Lua状态机时注册函数</p>\n<p>main函数启动后，先执行初始化函数</p>\n<p>初始化函数中，获取当前程序目录，并设置相关目录路径（初始化目录和工作目录）</p>\n<p>然后扫描初始化目录，依次执行里面的Lua文件，根据执行结果选择是否跳过</p>\n<p>初始化完成后，执行循环工作处理，每次循环都扫描工作目录，依次执行里面的Lua文件，根据执行结果选择是否跳出循环</p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>运行程序后，只要往 /lua/work/ 目录中放 Lua 文件就可以了</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight plain\"><table><tbody><tr><td class=\"code\"><pre><div class=\"line\">#include &lt;stdio.h&gt;</div><div class=\"line\">#include &lt;stdlib.h&gt;</div><div class=\"line\">#include &lt;string.h&gt;</div><div class=\"line\">#include &lt;time.h&gt;</div><div class=\"line\">#include &lt;unistd.h&gt;</div><div class=\"line\">#include &lt;dirent.h&gt;</div><div class=\"line\">#include &lt;sys/types.h&gt;</div><div class=\"line\">#include &lt;sys/stat.h&gt;</div><div class=\"line\"></div><div class=\"line\">#include &lt;wiringPi.h&gt;</div><div class=\"line\"></div><div class=\"line\">#include &lt;lua/lua.h&gt;</div><div class=\"line\">#include &lt;lua/lauxlib.h&gt;</div><div class=\"line\">#include &lt;lua/lualib.h&gt;</div><div class=\"line\"></div><div class=\"line\">#define DIR_LUA_INIT &#34;/lua/init/&#34;</div><div class=\"line\">#define DIR_LUA_WORK &#34;/lua/work/&#34;</div><div class=\"line\"></div><div class=\"line\">static int G_SLEEP_TIME = 2000;</div><div class=\"line\">static char *G_DIR_LUA_INIT = NULL;</div><div class=\"line\">static char *G_DIR_LUA_WORK = NULL;</div><div class=\"line\"></div><div class=\"line\">int pi_init();</div><div class=\"line\">int pi_work();</div><div class=\"line\">int pi_scan(char *path);</div><div class=\"line\">int pi_call(char *path, char *name);</div><div class=\"line\">lua_State *pi_create_lua();</div><div class=\"line\"></div><div class=\"line\">//程序初始化</div><div class=\"line\">int pi_init() {</div><div class=\"line\">    //printf(&#34;[PI] 御风PI程序已启动!n&#34;);</div><div class=\"line\"></div><div class=\"line\">    //初始化wiringPi</div><div class=\"line\">    int rc = wiringPiSetup();</div><div class=\"line\">    if (rc == -1) {</div><div class=\"line\">        //printf(&#34;[PI] 初始化wiringPi失败!n&#34;);</div><div class=\"line\">        return -1;</div><div class=\"line\">    }</div><div class=\"line\"></div><div class=\"line\">    //获取目录</div><div class=\"line\">    char path_base[1000] = { 0 };</div><div class=\"line\">    int len_base, len_init, len_work;</div><div class=\"line\">    memset(path_base, &#39;","text":" 文章目录 &lt;/div&gt; &lt;h3 id=&quot;实现过程&quot;&gt;&lt;a href=&quot;#实现过程&quot; class=&quot;headerlink&quot; title=&quot;实现过程&quot;&gt;&lt;/a&...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">代码</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"开个坑学习一下lua","uid":"3270226bf36cd89ed96cd016a1a8b3ac","slug":"zl/2016-01-01-647_开个坑学习一下lua","date":"2024-04-03T03:47:35.869Z","updated":"2024-04-03T03:47:35.870Z","comments":true,"path":"api/articles/zl/2016-01-01-647_开个坑学习一下lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"再次好久没有更新blog，主要是感觉没有什么记录的东西。最近通读了云风大神的blog，只能感叹人与人差距之大，有时确实难以企及，但仍希望能有一丝靠近。 在工作中对lua有一些接触，开个坑mark一下，准备用一段时间通读一下lua的代码，大概20k行左右，对于一门语言来说确实足够精...","link":"","photos":[],"count_time":{"symbolsCount":153,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua学习笔记：对函数的深入理解","uid":"a4dc0fff7f26a0411253a4f7cb25eca6","slug":"zl/2016-01-01-646_Lua学习笔记：对函数的深入理解","date":"2024-04-03T03:47:35.865Z","updated":"2024-04-03T03:47:35.869Z","comments":true,"path":"api/articles/zl/2016-01-01-646_Lua学习笔记：对函数的深入理解.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 闭包 lua中的函数都可以认为是闭包，只不过为了便于理解还是用了函数的概念。 lua中函数的返回值可以是匿名函数，也就是闭包。以下面的代码为例，提出一个概念：非局部的变量。在下面的代码中，匿名函数访问了一个变量i，它对于newCount来说是局部变量，对于匿名函数来说是既不是局...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}