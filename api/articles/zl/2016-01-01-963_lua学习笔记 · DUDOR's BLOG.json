{"title":"lua学习笔记 · DUDOR's BLOG","uid":"9c34c47c46afa2c0f0858a885378d538","slug":"zl/2016-01-01-963_lua学习笔记 · DUDOR's BLOG","date":"2024-04-03T03:47:36.230Z","updated":"2024-04-03T03:47:36.230Z","comments":true,"path":"api/articles/zl/2016-01-01-963_lua学习笔记 · DUDOR's BLOG.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<div class=\"post\">\n  <p>##语法约定\nlua中的变量名定义规则和大多数编程语言一样，是任何非数字开头的由字母，数字和下划线组成的字符串。\nlua是大小写敏感的。\n##字符串\n字符串是由单引号或双引号或N级中括号定义的，比如\na = ‘dudor’\na = “dudor”\na = [[dudor]]\n上面三个值是相等的。\n其中由N级中括号定义的方式比较特别，在别的语言中很少见到。N级中括号是在两个中括号中插入N个等号定义为第N级中括号。\n##注释\n注释是用两个横线定义的，单行注释是 – ，多行注释为 –[</p>\n<p>##类型\nlua中有8种类型： nil, boolean, number, string, function, userdata, thread, and table.</p>\n<ol>\n<li>nil类似于c中的NULL,通常用来表示一个无意义的值。</li>\n<li>boolean有false和true两个值。</li>\n<li>number代表双精度浮点数字。</li>\n<li>string是上面所说的字符串。</li>\n<li>userdata用来将任意类型的c数据保存在lua变量中。它不能被lua创建和修改。</li>\n<li>thread代表了一种线程，当然和C中的线程不由，类似于UNITY3D中的coroutine，它可以在所有的系统中使用，不管系统是否支持多线程。</li>\n<li>table可以认为是一种字典类型</li>\n</ol>\n<p>##变量\n在lua中，使用变量是不需要声明的，并且它们默认是全局变量，除非在前面注明了local关键字</p>\n<p>##流程控制\n1. if … then … elseif … then … else … end\n2. while … do … end\n3. repeat … until …\n4. for 变量=初值,终值,步进 do … end\n5. for 变量1, 变量2, … 变量n in 表或枚举函数 do … end</p>\n<p>##赋值\na = 1\na,b,c = 1,2,3\n局部变量\nlocal d = 1\n##特殊注意事项\n1. 在lua中，只有nil和false才计算为假，其它值都是真，包括0\n2. ~= 表示不等于\n3. 对于function,userdata和table类型，只有==和~=操作符可以用于比较。</p>\n</div>","text":" ##语法约定 lua中的变量名定义规则和大多数编程语言一样，是任何非数字开头的由字母，数字和下划线组成的字符串。 lua是大小写敏感的。 ##字符串 字符串是由单引号或双引号或N级中括号定义的，比如 a = ‘dudor’ a = “dudor” a = [[dudor]] 上...","link":"","photos":[],"count_time":{"symbolsCount":912,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua学习笔记二","uid":"050df29370421b502767448007b1cff3","slug":"zl/2016-01-01-964_Lua学习笔记二","date":"2024-04-03T03:47:36.230Z","updated":"2024-04-03T03:47:36.230Z","comments":true,"path":"api/articles/zl/2016-01-01-964_Lua学习笔记二.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"while1234while(条件)do 循环体end 代码示例及结果： 123456a = 0while(a &lt; 10)do print(a) a = a + 1end 123456789100123456789 for123for var=值1,值2,值2 do 循环体...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua 元表和元方法","uid":"3578146204897b2ed88da7c36006379f","slug":"zl/2016-01-01-95_Lua 元表和元方法","date":"2024-04-03T03:47:36.229Z","updated":"2024-04-03T03:47:36.229Z","comments":true,"path":"api/articles/zl/2016-01-01-95_Lua 元表和元方法.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"table 作为 Lua 中唯一的数据结构，我们可以利用 table 实现面向对象编程中的类、继承、多重继承等等。在这就介绍一下和 table 密切相关的 Lua 元表和元方法。 Lua 中的每个值都有一个元表。table 和 userdata 可以有各自独立的元表，而其他类型的...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}