{"title":"Lua table 学习笔记","uid":"3c308f04254437109c4c8f5fc6f1f496","slug":"zl/2016-01-01-66_Lua table 学习笔记","date":"2024-04-03T03:47:35.893Z","updated":"2024-04-03T03:47:35.897Z","comments":true,"path":"api/articles/zl/2016-01-01-66_Lua table 学习笔记.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h2 id=\"lua-table定义\">Lua table定义</h2>\n<p>table类型实现了“关联数组”。“关联数组” 是一种具有特殊索引方式的数组，索引可为字符串string或(整)数number类型.</p>\n<div class=\"language-c highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">local</span> <span class=\"n\">corp</span> <span class=\"o\">=</span> <span class=\"p\">&#123;</span>\n    <span class=\"n\">web</span> <span class=\"o\">=</span> <span class=\"s\">&#34;www.google.com&#34;</span><span class=\"p\">,</span>   <span class=\"o\">--</span><span class=\"err\">索引为字符串，</span><span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s\">&#34;web&#34;</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"s\">&#34;www.google.com&#34;</span>\n    <span class=\"n\">telephone</span> <span class=\"o\">=</span> <span class=\"s\">&#34;12345678&#34;</span><span class=\"p\">,</span>   <span class=\"o\">--</span><span class=\"err\">索引为字符串</span>\n    <span class=\"n\">staff</span> <span class=\"o\">=</span> <span class=\"p\">&#123;</span><span class=\"s\">&#34;Jack&#34;</span><span class=\"p\">,</span> <span class=\"s\">&#34;Scott&#34;</span><span class=\"p\">,</span> <span class=\"s\">&#34;Gary&#34;</span><span class=\"p\">&#125;,</span> <span class=\"o\">--</span><span class=\"err\">索引为字符串，值也是一个表</span>\n    <span class=\"mi\">100876</span><span class=\"p\">,</span>              <span class=\"o\">--</span><span class=\"err\">相当于</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">100876</span><span class=\"err\">，此时索引为数字</span><span class=\"p\">,</span><span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"mi\">100876</span>\n    <span class=\"mi\">100191</span><span class=\"p\">,</span>              <span class=\"o\">--</span><span class=\"err\">相当于</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">100191</span><span class=\"err\">，此时索引为数字</span>\n    <span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">360</span><span class=\"p\">,</span>          <span class=\"o\">--</span><span class=\"err\">直接把数字索引给出</span>\n    <span class=\"p\">[</span><span class=\"s\">&#34;city&#34;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s\">&#34;Beijing&#34;</span> <span class=\"o\">--</span><span class=\"err\">索引为字符串</span>\n<span class=\"p\">&#125;</span>\n<p><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">corp</span><span class=\"p\">.</span><span class=\"n\">web</span><span class=\"p\">)</span>               <span class=\"o\">–&gt;</span><span class=\"n\">output</span><span class=\"o\">:</span><span class=\"n\">www</span><span class=\"p\">.</span><span class=\"n\">google</span><span class=\"p\">.</span><span class=\"n\">com</span><br />\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">corp</span><span class=\"p\">[</span><span class=\"s\">&quot;telephone&quot;</span><span class=\"p\">])</span>      <span class=\"o\">–&gt;</span><span class=\"n\">output</span><span class=\"o\">:</span><span class=\"mi\">12345678</span><br />\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">corp</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">])</span>                <span class=\"o\">–&gt;</span><span class=\"n\">output</span><span class=\"o\">:</span><span class=\"mi\">100191</span><br />\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">corp</span><span class=\"p\">[</span><span class=\"s\">&quot;city&quot;</span><span class=\"p\">])</span>           <span class=\"o\">–&gt;</span><span class=\"n\">output</span><span class=\"o\">:</span><span class=\"s\">&quot;Beijing&quot;</span><br />\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">corp</span><span class=\"p\">.</span><span class=\"n\">staff</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>          <span class=\"o\">–&gt;</span><span class=\"n\">output</span><span class=\"o\">:</span><span class=\"n\">Jack</span><br />\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">corp</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">])</span>               <span class=\"o\">–&gt;</span><span class=\"n\">output</span><span class=\"o\">:</span><span class=\"mi\">360</span><br />\n</code></pre></p>\n</div>\n<p>在定义表的时候，我们可以把所有的数据内容一起写在”{“和”}”之间，这样子是非常方便，而且很好看。比如：</p>\n<div class=\"language-c highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">T1</span><span class=\"o\">=</span> <span class=\"p\">&#123;</span> \n    <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"o\">--</span> <span class=\"err\">相当于</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">10</span> \n    <span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">40</span><span class=\"p\">,</span> \n    <span class=\"n\">John</span><span class=\"o\">=</span> <span class=\"o\">--</span> <span class=\"err\">如果你原意，你还可以写成：</span><span class=\"p\">[</span><span class=\"s\">&#34;John&#34;</span><span class=\"p\">]</span> <span class=\"o\">=</span> \n    <span class=\"p\">&#123;</span> \n        <span class=\"n\">Age</span><span class=\"o\">=</span><span class=\"mi\">27</span><span class=\"p\">,</span> <span class=\"o\">--</span> <span class=\"err\">如果你原意，你还可以写成：</span><span class=\"p\">[</span><span class=\"s\">&#34;Age&#34;</span><span class=\"p\">]</span> <span class=\"o\">=</span><span class=\"mi\">27</span> \n        <span class=\"n\">Gender</span><span class=\"o\">=</span><span class=\"n\">Male</span> <span class=\"o\">--</span> <span class=\"err\">如果你原意，你还可以写成：</span><span class=\"p\">[</span><span class=\"s\">&#34;Gender&#34;</span><span class=\"p\">]</span> <span class=\"o\">=</span><span class=\"n\">Male</span> \n    <span class=\"p\">&#125;,</span> \n    <span class=\"mi\">20</span> <span class=\"o\">--</span> <span class=\"err\">相当于</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">20</span> \n<span class=\"p\">&#125;</span>\n</code></pre>\n</div>\n<p>在构造TTable时，可以用<code class=\"highlighter-rouge\">;</code>代替<code class=\"highlighter-rouge\">,</code>分割数据项。</p>\n<div class=\"language-c highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"p\">&#123;</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">45</span><span class=\"p\">;</span> <span class=\"s\">&#34;one&#34;</span><span class=\"p\">,</span> <span class=\"s\">&#34;two&#34;</span><span class=\"p\">,</span> <span class=\"s\">&#34;three&#34;</span><span class=\"p\">&#125;</span>\n</code></pre>\n</div>\n<h2 id=\"lua-table的遍历\">Lua table的遍历</h2>\n<p>不同于其他语言的数组把 0 作为数组的初始索引，在 Lua 里表的默认初始索引一般以 1 开始. 对table的遍历，用关键字<code class=\"highlighter-rouge\">pairs</code>.</p>\n<div class=\"language-c highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">tbl</span> <span class=\"o\">=</span> <span class=\"p\">&#123;</span><span class=\"s\">&#34;apple&#34;</span><span class=\"p\">,</span> <span class=\"s\">&#34;pear&#34;</span><span class=\"p\">,</span> <span class=\"s\">&#34;orange&#34;</span><span class=\"p\">,</span> <span class=\"s\">&#34;grape&#34;</span><span class=\"p\">&#125;</span>\n<span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">val</span> <span class=\"n\">in</span> <span class=\"n\">pairs</span><span class=\"p\">(</span><span class=\"n\">tbl</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n    <span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">)</span>\n<span class=\"n\">end</span>\n<p><span class=\"o\">–&gt;</span><span class=\"n\">output</span><span class=\"o\">:</span><br />\n<span class=\"mi\">1</span>\t<span class=\"n\">apple</span><br />\n<span class=\"mi\">2</span>\t<span class=\"n\">pear</span><br />\n<span class=\"mi\">3</span>\t<span class=\"n\">orange</span><br />\n<span class=\"mi\">4</span>\t<span class=\"n\">grape</span><br />\n</code></pre></p>\n</div>\n<h2 id=\"lua-table删除元素\">Lua table删除元素</h2>\n<p>给table 表里的变量赋一个<code class=\"highlighter-rouge\">nil</code>值，等同于把它们删掉.示例如下：</p>\n<div class=\"language-c highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">tab1</span> <span class=\"o\">=</span> <span class=\"p\">&#123;</span> <span class=\"n\">key1</span> <span class=\"o\">=</span> <span class=\"s\">&#34;val1&#34;</span><span class=\"p\">,</span> <span class=\"n\">key2</span> <span class=\"o\">=</span> <span class=\"s\">&#34;val2&#34;</span><span class=\"p\">,</span> <span class=\"s\">&#34;val3&#34;</span> <span class=\"p\">&#125;</span>\n<span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"n\">in</span> <span class=\"n\">pairs</span><span class=\"p\">(</span><span class=\"n\">tab1</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n    <span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">k</span> <span class=\"p\">..</span> <span class=\"s\">&#34; - &#34;</span> <span class=\"p\">..</span> <span class=\"n\">v</span><span class=\"p\">)</span>\n<span class=\"n\">end</span>\n<p><span class=\"o\">–&gt;</span> <span class=\"n\">output</span><span class=\"o\">:</span><br />\n<span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">val3</span><br />\n<span class=\"n\">key2</span> <span class=\"o\">-</span> <span class=\"n\">val2</span><br />\n<span class=\"n\">key1</span> <span class=\"o\">-</span> <span class=\"n\">val1</span></p>\n<p><span class=\"n\">tab1</span><span class=\"p\">.</span><span class=\"n\">key1</span> <span class=\"o\">=</span> <span class=\"n\">nil</span><br />\n<span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"n\">in</span> <span class=\"n\">pairs</span><span class=\"p\">(</span><span class=\"n\">tab1</span><span class=\"p\">)</span> <span class=\"k\">do</span><br />\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">k</span> <span class=\"p\">…</span> <span class=\"s\">&quot; - &quot;</span> <span class=\"p\">…</span> <span class=\"n\">v</span><span class=\"p\">)</span><br />\n<span class=\"n\">end</span></p>\n<p><span class=\"o\">–&gt;</span> <span class=\"n\">output</span><span class=\"o\">:</span><br />\n<span class=\"mi\">1</span> <span class=\"o\">-</span> <span class=\"n\">val3</span><br />\n<span class=\"n\">key2</span> <span class=\"o\">-</span> <span class=\"n\">val2</span></p>\n<p><span class=\"n\">tab1</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">nil</span><br />\n<span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"n\">in</span> <span class=\"n\">pairs</span><span class=\"p\">(</span><span class=\"n\">tab1</span><span class=\"p\">)</span> <span class=\"k\">do</span><br />\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">k</span> <span class=\"p\">…</span> <span class=\"s\">&quot; - &quot;</span> <span class=\"p\">…</span> <span class=\"n\">v</span><span class=\"p\">)</span><br />\n<span class=\"n\">end</span></p>\n<p><span class=\"o\">–&gt;</span> <span class=\"n\">output</span><span class=\"o\">:</span><br />\n<span class=\"n\">key2</span> <span class=\"o\">-</span> <span class=\"n\">val2</span><br />\n</code></pre></p>\n</div>\n<h2 id=\"lua-table库介绍\">Lua table库介绍</h2>\n<h3 id=\"tableconcat-table--sep--i--j---\">table.concat (table [, sep [, i [, j ] ] ])</h3>\n<p>对于元素是string或者number类型的表table，返回table[i]..sep..table[i+1] ··· sep..table[j]连接成的字符串。填充字符串sep默认为空白字符串。起始索引位置i默认为1，结束索引位置j默认是table的长度。如果i大于j，返回一个空字符串。</p>\n<blockquote>\n  <p>示例代码</p>\n</blockquote>\n<div class=\"language-c highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">&#123;</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s\">&#34;hello&#34;</span> <span class=\"p\">&#125;</span>\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">concat</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">concat</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"s\">&#34;|&#34;</span><span class=\"p\">))</span>\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">concat</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"s\">&#34; &#34;</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">concat</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"s\">&#34; &#34;</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">))</span>\n<p><span class=\"o\">–&gt;</span><span class=\"n\">output</span><br />\n<span class=\"mi\">135</span><span class=\"n\">hello</span><br />\n<span class=\"mi\">1</span><span class=\"o\">|</span><span class=\"mi\">3</span><span class=\"o\">|</span><span class=\"mi\">5</span><span class=\"o\">|</span><span class=\"n\">hello</span></p>\n<p><span class=\"mi\">3</span> <span class=\"mi\">5</span> <span class=\"n\">hello</span><br />\n</code></pre></p>\n</div>\n<h3 id=\"tableinsert-table-pos--value\">table.insert (table, [pos ,] value)</h3>\n<p>在表table的pos索引位置插入value，其它元素向后移动到空的地方。pos的默认值是表的长度加一，即默认是插在表的最后。</p>\n<blockquote>\n  <p>示例代码</p>\n</blockquote>\n<div class=\"language-c highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">&#123;</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">&#125;</span>             <span class=\"o\">--</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">8</span>\n<span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>   <span class=\"o\">--</span><span class=\"err\">在表索引为</span><span class=\"mi\">1</span><span class=\"err\">处插入</span><span class=\"mi\">3</span>\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span>    <span class=\"o\">--</span><span class=\"err\">在表的最后插入</span><span class=\"mi\">10</span>\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">])</span>\n<p><span class=\"o\">–&gt;</span><span class=\"n\">output</span><br />\n<span class=\"mi\">3</span>    <span class=\"mi\">1</span>    <span class=\"mi\">8</span><br />\n<span class=\"mi\">3</span>    <span class=\"mi\">1</span>    <span class=\"mi\">8</span>    <span class=\"mi\">10</span><br />\n</code></pre></p>\n</div>\n<h3 id=\"tablemaxn-table\">table.maxn (table)</h3>\n<p>返回表table的最大索引编号；如果此表没有正的索引编号，返回0。</p>\n<blockquote>\n  <p>示例代码</p>\n</blockquote>\n<div class=\"language-c highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span>\n<span class=\"n\">a</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">maxn</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n<span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>  \n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">maxn</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>\n<p><span class=\"o\">–&gt;</span><span class=\"n\">output</span><br />\n<span class=\"mi\">0</span><br />\n<span class=\"mi\">5</span><br />\n</code></pre></p>\n</div>\n<h3 id=\"tableremove-table--pos\">table.remove (table [, pos])</h3>\n<p>在表table中删除索引为pos（pos只能是number型）的元素，并返回这个被删除的元素，它后面所有元素的索引值都会减一。pos的默认值是表的长度，即默认是删除表的最后一个元素。</p>\n<blockquote>\n  <p>示例代码</p>\n</blockquote>\n<div class=\"language-c highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">&#123;</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">&#125;</span>\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span> <span class=\"o\">--</span><span class=\"err\">删除速索引为</span><span class=\"mi\">1</span><span class=\"err\">的元素</span>\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">])</span>\n<p><span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">))</span>   <span class=\"o\">–</span><span class=\"err\">删除最后一个元素</span><br />\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">])</span></p>\n<p><span class=\"o\">–&gt;</span><span class=\"n\">output</span><br />\n<span class=\"mi\">1</span><br />\n<span class=\"mi\">2</span>    <span class=\"mi\">3</span>    <span class=\"mi\">4</span>    <span class=\"n\">nil</span><br />\n<span class=\"mi\">4</span><br />\n<span class=\"mi\">2</span>    <span class=\"mi\">3</span>    <span class=\"n\">nil</span>    <span class=\"n\">nil</span><br />\n</code></pre></p>\n</div>\n<h3 id=\"tablesort-table--comp\">table.sort (table [, comp])</h3>\n<p>按照给定的比较函数comp给表table排序，也就是从table[1]到table[n]，这里n表示table的长度。 比较函数有两个参数，如果希望第一个参数排在第二个的前面，就应该返回true，否则返回false。 如果比较函数comp没有给出，默认从小到大排序。</p>\n<blockquote>\n  <p>示例代码</p>\n</blockquote>\n<div class=\"language-c highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">function</span> <span class=\"n\">compare</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"o\">--</span><span class=\"err\">从大到小排序</span>\n   <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">&gt;</span> <span class=\"n\">y</span>    <span class=\"o\">--</span><span class=\"err\">如果第一个参数大于第二个就返回</span><span class=\"nb\">true</span><span class=\"err\">，否则返回</span><span class=\"nb\">false</span>\n<span class=\"n\">end</span>\n<p><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"p\">&#123;</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">&#125;</span><br />\n<span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span>         <span class=\"o\">–</span><span class=\"err\">默认从小到大排序</span><br />\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">])</span><br />\n<span class=\"n\">table</span><span class=\"p\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">compare</span><span class=\"p\">)</span> <span class=\"o\">–</span><span class=\"err\">使用比较函数进行排序</span><br />\n<span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">])</span></p>\n<p><span class=\"o\">–&gt;</span><span class=\"n\">output</span><br />\n<span class=\"mi\">1</span>    <span class=\"mi\">3</span>    <span class=\"mi\">4</span>    <span class=\"mi\">7</span>    <span class=\"mi\">25</span><br />\n<span class=\"mi\">25</span>    <span class=\"mi\">7</span>    <span class=\"mi\">4</span>    <span class=\"mi\">3</span>    <span class=\"mi\">1</span><br />\n</code></pre></p>\n</div>\n<h3 id=\"table一些有用的函数\">table一些有用的函数</h3>\n<div class=\"language-c highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">local</span> <span class=\"n\">function</span> <span class=\"n\">table_is_empty</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">next</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">nil</span>\n<span class=\"n\">end</span>\n<p><span class=\"n\">local</span> <span class=\"n\">function</span> <span class=\"n\">table_is_array</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span><br />\n<span class=\"k\">if</span> <span class=\"n\">type</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"o\">~=</span> <span class=\"s\">&quot;table&quot;</span> <span class=\"n\">then</span> <span class=\"k\">return</span> <span class=\"nb\">false</span> <span class=\"n\">end</span><br />\n<span class=\"n\">local</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><br />\n<span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"n\">in</span> <span class=\"n\">pairs</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"k\">do</span><br />\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><br />\n<span class=\"k\">if</span> <span class=\"n\">t</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">nil</span> <span class=\"n\">then</span> <span class=\"k\">return</span> <span class=\"nb\">false</span> <span class=\"n\">end</span><br />\n<span class=\"n\">end</span><br />\n<span class=\"k\">return</span> <span class=\"nb\">true</span><br />\n<span class=\"n\">end</span></p>\n<p><span class=\"n\">local</span> <span class=\"n\">function</span> <span class=\"n\">table_is_map</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span><br />\n<span class=\"k\">if</span> <span class=\"n\">type</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"o\">~=</span> <span class=\"s\">&quot;table&quot;</span> <span class=\"n\">then</span> <span class=\"k\">return</span> <span class=\"nb\">false</span> <span class=\"n\">end</span><br />\n<span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span><span class=\"n\">_</span> <span class=\"n\">in</span> <span class=\"n\">pairs</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span> <span class=\"k\">do</span><br />\n<span class=\"k\">if</span> <span class=\"n\">type</span><span class=\"p\">(</span><span class=\"n\">k</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s\">&quot;number&quot;</span> <span class=\"n\">then</span>  <span class=\"k\">return</span> <span class=\"nb\">false</span> <span class=\"n\">end</span><br />\n<span class=\"n\">end</span><br />\n<span class=\"k\">return</span> <span class=\"nb\">true</span><br />\n<span class=\"n\">end</span><br />\n</code></pre></p>\n</div>\n<pre><code>            &lt;hr/&gt;\n\n            \n            \n            \n            &lt;div class=&quot;ds-share&quot; style=&quot;text-align: right&quot; data-thread-key=&quot;/2015/11/23/lua_table&quot; data-title=&quot;Lua table 学习笔记&quot; data-url=&quot;http://hooting.github.io/2015/11/23/lua_table/&quot; data-images=&quot;http://hooting.github.io/img/post-bg-2015.jpg&quot; data-content=&quot;Lua table定义\n</code></pre>\n<p>table类型实现了“关联数组”。“关联数组” 是一种具有特殊索引方式的数组，索引可为字符串string或(整)数number类型… | Hooting Blog &quot;&gt;</p>\n<pre><code>            &lt;hr/&gt;\n            &lt;/div&gt;\n</code></pre>\n","text":"Lua table定义 table类型实现了“关联数组”。“关联数组” 是一种具有特殊索引方式的数组，索引可为字符串string或(整)数number类型. local corp = &#123; web = &#34;www.google.com&#34;, --索引为字符串，...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#lua-table%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">Lua table定义</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#lua-table%E7%9A%84%E9%81%8D%E5%8E%86\"><span class=\"toc-text\">Lua table的遍历</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#lua-table%E5%88%A0%E9%99%A4%E5%85%83%E7%B4%A0\"><span class=\"toc-text\">Lua table删除元素</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#lua-table%E5%BA%93%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">Lua table库介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#tableconcat-table--sep--i--j---\"><span class=\"toc-text\">table.concat (table [, sep [, i [, j ] ] ])</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#tableinsert-table-pos--value\"><span class=\"toc-text\">table.insert (table, [pos ,] value)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#tablemaxn-table\"><span class=\"toc-text\">table.maxn (table)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#tableremove-table--pos\"><span class=\"toc-text\">table.remove (table [, pos])</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#tablesort-table--comp\"><span class=\"toc-text\">table.sort (table [, comp])</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#table%E4%B8%80%E4%BA%9B%E6%9C%89%E7%94%A8%E7%9A%84%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">table一些有用的函数</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua C API","uid":"0d1fbef5ebee69a60fb3f2ffbd51dab1","slug":"zl/2016-01-01-669_Lua C API","date":"2024-04-03T03:47:35.893Z","updated":"2024-04-03T03:47:35.893Z","comments":true,"path":"api/articles/zl/2016-01-01-669_Lua C API.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 云风Blog：Lua C API 的正确用法 C读取和调用Lua文件的库：lua.h, lauxlib.h, lualib.h 包括：读写Lua全局变量的函数、调用Lua函数的函数、运行Lua代码片段的函数、注册C函数然后可以在Lua中被调用的函数 C和Lua之间的数据交换，通...","link":"","photos":[],"count_time":{"symbolsCount":596,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua oop","uid":"3d3912f23542b320334cb8de75667ab4","slug":"zl/2016-01-01-668_Lua oop","date":"2024-04-03T03:47:35.892Z","updated":"2024-04-03T03:47:35.892Z","comments":true,"path":"api/articles/zl/2016-01-01-668_Lua oop.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua 是一门很简单的语言. 本身语言设计中没有原生的 oop 设计, 但是我们可以使用 setmetatable 来做一个伪装的 class. setmetatable setmetatable 类似于 python 中 __metaclass__， 是用来设置一个 table...","link":"","photos":[],"count_time":{"symbolsCount":"9.1k","symbolsTime":"8 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}