{"title":"Lua 有趣的语法特性","uid":"84ea8062aa5bfb9f0b90119d5879542b","slug":"zl/2016-01-01-479_Lua 有趣的语法特性","date":"2024-04-03T03:47:35.760Z","updated":"2024-04-03T03:47:35.761Z","comments":true,"path":"api/articles/zl/2016-01-01-479_Lua 有趣的语法特性.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<ul>\n<li><a href=\"#使用函数作为函数返回\">使用函数作为函数返回</a></li>\n<li><a href=\"#table关联数组的多种访问形式\">table关联数组的多种访问形式</a></li>\n<li><a href=\"#table计数的问题\">table计数的问题</a></li>\n<li><a href=\"#函数其实也是变量\">函数其实也是变量</a></li>\n<li><a href=\"#local-和-global-函数在调用的时候会有所区别\">local 和 global 函数在调用的时候会有所区别</a></li>\n<li><a href=\"#可变参数51\">可变参数（5.1）</a></li>\n<li><a href=\"#参数默认值\">参数默认值</a></li>\n<li><a href=\"#三元表达式\">三元表达式</a></li>\n<li><a href=\"#不同变量类型比较时不存在自动转换\">不同变量类型比较时不存在自动转换</a></li>\n<li><a href=\"#只有-nil-和-false-是假0-都是真\">只有 <code>nil</code> 和 <code>false</code> 是假，<code>0</code>,<code>&#123;&#125;</code>,<code>&#34;&#34;</code> 都是真</a></li>\n<li><a href=\"#for循环\">for循环</a></li>\n<li><a href=\"#对象方法的调用\">对象方法的调用</a></li>\n<li><a href=\"#函数多个返回值\">函数多个返回值</a></li>\n<li><a href=\"#泛型调用和-unpack\">泛型调用和 <code>unpack</code></a></li>\n<li><a href=\"#高级函数-和-函数的本质\">高级函数 和 函数的本质</a></li>\n<li><a href=\"#多行字符串\">多行字符串</a></li>\n</ul>\n<h2><span id=\"使用函数作为函数返回\">使用函数作为函数返回</span></h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>  <span class=\"params\">(t)</span></span></span><br/><span class=\"line\">    <span class=\"keyword\">local</span> i = <span class=\"number\">0</span></span><br/><span class=\"line\">    <span class=\"keyword\">local</span> n = <span class=\"built_in\">table</span>.<span class=\"built_in\">getn</span>(t)</span><br/><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span></span></span><br/><span class=\"line\">        i=i+<span class=\"number\">1</span></span><br/><span class=\"line\">        <span class=\"keyword\">if</span> i &lt;= n <span class=\"keyword\">then</span> <span class=\"keyword\">return</span> t[i] <span class=\"keyword\">end</span></span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">t = {<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">for</span> e <span class=\"keyword\">in</span> list_iter(t) <span class=\"keyword\">do</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(e)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<h2><span id=\"table关联数组的多种访问形式\">table关联数组的多种访问形式</span></h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">u = {name=rming,age=<span class=\"number\">25</span>,hello=<span class=\"string\">&#39;hi~&#39;</span>}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(u.hello)</span><br/><span class=\"line\"><span class=\"comment\">-- 关联数组形式</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(u[<span class=\"string\">&#39;hello&#39;</span>])</span><br/></pre></td></tr></tbody></table></figure>\n<h2><span id=\"table计数的问题\">table计数的问题</span></h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 一个nil元素的时候，碰到nil就停止计数了</span></span><br/><span class=\"line\">t = {<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"literal\">nil</span>}</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(#t)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">table</span>.<span class=\"built_in\">getn</span>(t))</span><br/><span class=\"line\"><span class=\"comment\">-- 多个nil的时候就没有规律了</span></span><br/><span class=\"line\">t = {<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"literal\">nil</span>,<span class=\"literal\">nil</span>,<span class=\"number\">6</span>}</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(#t)</span><br/><span class=\"line\">t = {<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"literal\">nil</span>,<span class=\"literal\">nil</span>,<span class=\"number\">6</span>,<span class=\"literal\">nil</span>}</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(#t)</span><br/><span class=\"line\"><span class=\"comment\">-- 这个key，不认识了，没有计数</span></span><br/><span class=\"line\">t = {[<span class=\"number\">2</span>]=<span class=\"number\">1</span>}</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(#t)</span><br/><span class=\"line\"><span class=\"comment\">-- 所以，计数还是自己写个吧</span></span><br/><span class=\"line\">t_count = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(t)</span></span></span><br/><span class=\"line\">    <span class=\"keyword\">local</span> count = <span class=\"number\">0</span></span><br/><span class=\"line\">    <span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(t) <span class=\"keyword\">do</span></span><br/><span class=\"line\">        <span class=\"keyword\">if</span> v <span class=\"keyword\">then</span></span><br/><span class=\"line\">            count = count+<span class=\"number\">1</span></span><br/><span class=\"line\">        <span class=\"keyword\">end</span></span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\">    <span class=\"keyword\">return</span> count</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(t_count(t))</span><br/></pre></td></tr></tbody></table></figure>\n<h2><span id=\"函数其实也是变量\">函数其实也是变量</span></h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">s = {p=<span class=\"built_in\">print</span>}</span><br/><span class=\"line\">s.p(<span class=\"string\">&#39;halo&#39;</span>)</span><br/></pre></td></tr></tbody></table></figure>\n<h2><span id=\"local-和-global-函数在调用的时候会有所区别\">local 和 global 函数在调用的时候会有所区别</span></h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> f</span><br/><span class=\"line\">f = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#39;this is a local function&#39;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#39;this is a local function&#39;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">gf</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#39;this is a global function&#39;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<h2><span id=\"可变参数51\">可变参数（5.1）</span></h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> f = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">( ... )</span></span></span><br/><span class=\"line\">    <span class=\"keyword\">local</span> <span class=\"built_in\">arg</span> = {...}</span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#39;------------------------&#39;</span>)</span><br/><span class=\"line\">    <span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(<span class=\"built_in\">arg</span>) <span class=\"keyword\">do</span></span><br/><span class=\"line\">        <span class=\"built_in\">print</span>(v)</span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#39;------------------------&#39;</span>)</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"comment\">--[[</span></span><br/><span class=\"line\"><span class=\"comment\">    for v in ... do</span></span><br/><span class=\"line\"><span class=\"comment\">        print(v)</span></span><br/><span class=\"line\"><span class=\"comment\">    end</span></span><br/><span class=\"line\"><span class=\"comment\">    ]]</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\">f(<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>)</span><br/></pre></td></tr></tbody></table></figure>\n<h2><span id=\"参数默认值\">参数默认值</span></h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ff</span><span class=\"params\">(name,age)</span></span></span><br/><span class=\"line\">    name = name <span class=\"keyword\">or</span> <span class=\"string\">&#39;rming&#39;</span></span><br/><span class=\"line\">    age  = age <span class=\"keyword\">or</span> <span class=\"number\">20</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(name)</span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(age)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\">ff()</span><br/></pre></td></tr></tbody></table></figure>\n<h2><span id=\"三元表达式\">三元表达式</span></h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- a==b ? &#39;yes&#39; : &#39;no&#39;</span></span><br/><span class=\"line\">res = a==b <span class=\"keyword\">and</span> <span class=\"string\">&#39;yes&#39;</span> <span class=\"keyword\">or</span> <span class=\"string\">&#39;no&#39;</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(res)</span><br/></pre></td></tr></tbody></table></figure>\n<h2><span id=\"不同变量类型比较时不存在自动转换\">不同变量类型比较时不存在自动转换</span></h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#39;0&#39;</span>==<span class=\"number\">0</span>)</span><br/><span class=\"line\"><span class=\"comment\">--false</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#39;2&#39;</span>&lt;<span class=\"string\">&#39;15&#39;</span>)</span><br/><span class=\"line\"><span class=\"comment\">--false</span></span><br/><span class=\"line\"><span class=\"comment\">--tostring() 和  tonumber() 是不错的解决办法    </span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">tonumber</span>(<span class=\"string\">&#39;0&#39;</span>)==<span class=\"number\">0</span>)</span><br/><span class=\"line\"><span class=\"comment\">--true</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">tostring</span>(<span class=\"number\">0</span>)==<span class=\"string\">&#39;0&#39;</span>)   </span><br/><span class=\"line\"><span class=\"comment\">--true</span></span><br/></pre></td></tr></tbody></table></figure>\n<h2><span id=\"只有-nil-和-false-是假0quotquot-都是真\">只有 <code>nil</code> 和 <code>false</code> 是假，<code>0</code>,<code>&#123;&#125;</code>,<code>&#34;&#34;</code> 都是真</span></h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"keyword\">if</span> <span class=\"literal\">nil</span> <span class=\"keyword\">then</span> <span class=\"built_in\">print</span>(<span class=\"string\">&#39;true&#39;</span>) <span class=\"keyword\">else</span> <span class=\"built_in\">print</span>(<span class=\"string\">&#39;false&#39;</span>) <span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"literal\">false</span></span><br/><span class=\"line\">&gt; <span class=\"keyword\">if</span> <span class=\"literal\">false</span> <span class=\"keyword\">then</span> <span class=\"built_in\">print</span>(<span class=\"string\">&#39;true&#39;</span>) <span class=\"keyword\">else</span> <span class=\"built_in\">print</span>(<span class=\"string\">&#39;false&#39;</span>) <span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"literal\">false</span></span><br/><span class=\"line\">&gt; <span class=\"keyword\">if</span> <span class=\"number\">0</span> <span class=\"keyword\">then</span> <span class=\"built_in\">print</span>(<span class=\"string\">&#39;true&#39;</span>) <span class=\"keyword\">else</span> <span class=\"built_in\">print</span>(<span class=\"string\">&#39;false&#39;</span>) <span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"literal\">true</span></span><br/><span class=\"line\">&gt; <span class=\"keyword\">if</span> {} <span class=\"keyword\">then</span> <span class=\"built_in\">print</span>(<span class=\"string\">&#39;true&#39;</span>) <span class=\"keyword\">else</span> <span class=\"built_in\">print</span>(<span class=\"string\">&#39;false&#39;</span>) <span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"literal\">true</span></span><br/><span class=\"line\">&gt; <span class=\"keyword\">if</span> <span class=\"string\">&#39;&#39;</span> <span class=\"keyword\">then</span> <span class=\"built_in\">print</span>(<span class=\"string\">&#39;true&#39;</span>) <span class=\"keyword\">else</span> <span class=\"built_in\">print</span>(<span class=\"string\">&#39;false&#39;</span>) <span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"literal\">true</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"keyword\">not</span> <span class=\"literal\">nil</span>) <span class=\"comment\">--&gt; true</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"keyword\">not</span> <span class=\"literal\">false</span>) <span class=\"comment\">--&gt; true</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"keyword\">not</span> <span class=\"number\">0</span>) <span class=\"comment\">--&gt; false</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"keyword\">not</span> <span class=\"keyword\">not</span> <span class=\"literal\">nil</span>) <span class=\"comment\">--&gt; false</span></span><br/></pre></td></tr></tbody></table></figure>\n<h2><span id=\"for循环\">for循环</span></h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- print all values of array &#39;a&#39;</span></span><br/><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(a) <span class=\"keyword\">do</span> <span class=\"built_in\">print</span>(v) <span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"comment\">-- print all keys of table &#39;t&#39;</span></span><br/><span class=\"line\"><span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(t) <span class=\"keyword\">do</span> <span class=\"built_in\">print</span>(k) <span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<h2><span id=\"对象方法的调用\">对象方法的调用</span></h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; a={p=<span class=\"built_in\">print</span>}</span><br/><span class=\"line\">&gt; a:p(<span class=\"string\">&#39;hello&#39;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">table</span>: <span class=\"number\">0x7fa95bf00510</span>   hello</span><br/><span class=\"line\">&gt; a.p(<span class=\"string\">&#39;hello&#39;</span>)</span><br/><span class=\"line\">hello</span><br/></pre></td></tr></tbody></table></figure>\n<h2><span id=\"函数多个返回值\">函数多个返回值</span></h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; s,e=<span class=\"built_in\">string</span>.<span class=\"built_in\">find</span>(<span class=\"string\">&#39;this is a string &#39;</span>, <span class=\"string\">&#39;string&#39;</span>)</span><br/><span class=\"line\">&gt; <span class=\"built_in\">print</span>(s,e)</span><br/><span class=\"line\"><span class=\"number\">11</span>      <span class=\"number\">16</span></span><br/></pre></td></tr></tbody></table></figure>\n<h2><span id=\"泛型调用和-unpack\">泛型调用和 <code>unpack</code></span></h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; f = <span class=\"built_in\">string</span>.<span class=\"built_in\">find</span></span><br/><span class=\"line\">&gt; t = {<span class=\"string\">&#39;this is a string&#39;</span>, <span class=\"string\">&#39;is&#39;</span>}</span><br/><span class=\"line\">&gt; <span class=\"built_in\">print</span>(f(<span class=\"built_in\">unpack</span>(t)))</span><br/><span class=\"line\"><span class=\"number\">3</span>       <span class=\"number\">4</span></span><br/><span class=\"line\"><span class=\"comment\">-- unpack的lua实现</span></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">unpack</span><span class=\"params\">(t, i)</span></span></span><br/><span class=\"line\">    i = i <span class=\"keyword\">or</span> <span class=\"number\">1</span></span><br/><span class=\"line\">    <span class=\"keyword\">if</span> t[i] <span class=\"keyword\">then</span></span><br/><span class=\"line\">       <span class=\"keyword\">return</span> t[i], <span class=\"built_in\">unpack</span>(t, i + <span class=\"number\">1</span>)</span><br/><span class=\"line\">    <span class=\"keyword\">end</span> </span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<h2><span id=\"高级函数-和-函数的本质\">高级函数 和 函数的本质</span></h2><p>Lua中的函数是带有词法定界的第一类值().</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 高级函数</span></span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">sort</span>(network, <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(a,b)</span></span></span><br/><span class=\"line\">   <span class=\"keyword\">return</span> (a.name &gt; b.name)</span><br/><span class=\"line\"><span class=\"keyword\">end</span>)</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 函数定义仅仅是赋值</span></span><br/><span class=\"line\">func = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(v)</span></span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span> v</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<h2><span id=\"多行字符串\">多行字符串</span></h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> page = <span class=\"string\">[[</span></span><br/><span class=\"line\"><span class=\"string\">     &lt;html xmlns=&#34;http://www.w3.org/1999/xhtml&#34;&gt;</span></span><br/><span class=\"line\"><span class=\"string\">          &lt;head&gt;</span></span><br/><span class=\"line\"><span class=\"string\">               &lt;title&gt;xxxx&lt;/title&gt;</span></span><br/><span class=\"line\"><span class=\"string\">          &lt;/head&gt;</span></span><br/><span class=\"line\"><span class=\"string\">          &lt;body&gt;</span></span><br/><span class=\"line\"><span class=\"string\">          &lt;/body&gt;</span></span><br/><span class=\"line\"><span class=\"string\">     &lt;/html&gt;</span></span><br/><span class=\"line\"><span class=\"string\">]]</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(page)</span><br/></pre></td></tr></tbody></table></figure>","text":" 使用函数作为函数返回 table关联数组的多种访问形式 table计数的问题 函数其实也是变量 local 和 global 函数在调用的时候会有所区别 可变参数（5.1） 参数默认值 三元表达式 不同变量类型比较时不存在自动转换 只有 nil 和 false 是假，0,&#1...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">使用函数作为函数返回</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">table关联数组的多种访问形式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">table计数的问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">函数其实也是变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">local 和 global 函数在调用的时候会有所区别</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">可变参数（5.1）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">参数默认值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">三元表达式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">不同变量类型比较时不存在自动转换</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">只有 nil 和 false 是假，0,{},&quot;&quot; 都是真</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">for循环</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">对象方法的调用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">函数多个返回值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">泛型调用和 unpack</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">高级函数 和 函数的本质</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">多行字符串</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Coroutine协程","uid":"94a6b6597c466125d27dcf26efe96b41","slug":"zl/2016-01-01-480_[Lua] Coroutine协程","date":"2024-04-03T03:47:35.761Z","updated":"2024-04-03T03:47:35.762Z","comments":true,"path":"api/articles/zl/2016-01-01-480_[Lua] Coroutine协程.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Coroutine Manipulation coroutine.create (f) Creates a new coroutine, with body f. f must be a function. Returns this new coroutine, an objec...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua中关于table对象引用传递的注意事项","uid":"701786e387900af8ad697a179cb3c175","slug":"zl/2016-01-01-478_Lua中关于table对象引用传递的注意事项","date":"2024-04-03T03:47:35.760Z","updated":"2024-04-03T03:47:35.760Z","comments":true,"path":"api/articles/zl/2016-01-01-478_Lua中关于table对象引用传递的注意事项.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"最近写了挺长一段时间的Lua，发现Lua这个语言真的是很随意，产生这种感觉的根本原因应该是它把“函数” 作为了“第一类值”，也就是说函数也可以作为变量的“值”，这使得Lua可以随处定义函数，进而改变逻辑的走向，整个流程任你摆布。 虽说把一个函数来回设置方便了许多，但是同样带来了一...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}