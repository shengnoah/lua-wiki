{"title":"leetcode 150. evaluate reverse polish notation","uid":"b9432e082351f84ea61e4f03fba9e823","slug":"zl/2016-01-01-1037_leetcode 150. evaluate reverse polish notation","date":"2024-04-03T03:47:32.976Z","updated":"2024-04-03T03:47:32.976Z","comments":true,"path":"api/articles/zl/2016-01-01-1037_leetcode 150. evaluate reverse polish notation.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p><excerpt in=\"\" index=\"\" |=\"\" 首页摘要=\"\"><br/></excerpt></p>\n<p><the rest=\"\" of=\"\" contents=\"\" |=\"\" 余下全文=\"\"></the></p>\n<ol start=\"150\">\n<li>Evaluate Reverse Polish Notation:<a href=\"https://leetcode.com/problems/evaluate-reverse-polish-notation/\" target=\"_blank\" rel=\"noopener noreferrer\">题目链接</a></li>\n</ol>\n<p><strong><code>AC code:</code></strong><br/></p><figure class=\"highlight c\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/><span class=\"line\">29</span><br/><span class=\"line\">30</span><br/><span class=\"line\">31</span><br/><span class=\"line\">32</span><br/><span class=\"line\">33</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">基本思想：因为已经是后缀表达式了，遍历给出的表达式，遇到数字进栈，遇到符号出栈两个数进行运算再存入栈中，最后栈顶元素就是答案</span></span><br/><span class=\"line\"><span class=\"comment\">*/</span></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"params\">(<span class=\"keyword\">char</span> **tokens, <span class=\"keyword\">int</span> tokensSize)</span> </span>{</span><br/><span class=\"line\">    <span class=\"keyword\">int</span> <span class=\"built_in\">stack</span>[<span class=\"number\">10000</span>]; <span class=\"comment\">// 用数组模拟栈</span></span><br/><span class=\"line\">    <span class=\"keyword\">int</span> top = <span class=\"number\">-1</span>;</span><br/><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; tokensSize; ++i) {</span><br/><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">isdigit</span>(tokens[i][<span class=\"number\">0</span>]) || (tokens[i][<span class=\"number\">0</span>] == <span class=\"string\">&#39;-&#39;</span> &amp;&amp; <span class=\"built_in\">isdigit</span>(tokens[i][<span class=\"number\">1</span>]))) { <span class=\"comment\">//如果是数字  &#34;-11&#34;单独考虑</span></span><br/><span class=\"line\">            <span class=\"built_in\">stack</span>[++top] = atoi(tokens[i]);</span><br/><span class=\"line\">        } <span class=\"keyword\">else</span> { <span class=\"comment\">// 操作符</span></span><br/><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&#34;%sn&#34;</span>, tokens[i]);</span><br/><span class=\"line\">            <span class=\"keyword\">switch</span> (tokens[i][<span class=\"number\">0</span>]) {</span><br/><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#39;+&#39;</span>:</span><br/><span class=\"line\">                    <span class=\"built_in\">stack</span>[top - <span class=\"number\">1</span>] = <span class=\"built_in\">stack</span>[top - <span class=\"number\">1</span>] + <span class=\"built_in\">stack</span>[top];</span><br/><span class=\"line\">                    top--;</span><br/><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br/><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#39;-&#39;</span>:</span><br/><span class=\"line\">                    <span class=\"built_in\">stack</span>[top - <span class=\"number\">1</span>] = <span class=\"built_in\">stack</span>[top - <span class=\"number\">1</span>] - <span class=\"built_in\">stack</span>[top];</span><br/><span class=\"line\">                    top--;</span><br/><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br/><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#39;*&#39;</span>:</span><br/><span class=\"line\">                    <span class=\"built_in\">stack</span>[top - <span class=\"number\">1</span>] = <span class=\"built_in\">stack</span>[top - <span class=\"number\">1</span>] * <span class=\"built_in\">stack</span>[top];</span><br/><span class=\"line\">                    top--;</span><br/><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br/><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#39;/&#39;</span>:</span><br/><span class=\"line\">                    <span class=\"built_in\">stack</span>[top - <span class=\"number\">1</span>] = <span class=\"built_in\">stack</span>[top - <span class=\"number\">1</span>] / <span class=\"built_in\">stack</span>[top];</span><br/><span class=\"line\">                    top--;</span><br/><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br/><span class=\"line\">            }</span><br/><span class=\"line\">        }</span><br/><span class=\"line\">    }</span><br/><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">stack</span>[top];</span><br/><span class=\"line\">}</span><br/></pre></td></tr></tbody></table></figure><p></p>","text":" Evaluate Reverse Polish Notation:题目链接 AC code:123456789101112131415161718192021222324252627282930313233基本思想：因为已经是后缀表达式了，遍历给出的表达式，遇到数字进栈，遇到符...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"sistema de monitoreo y evaluación de impacto del programa probolivia/ jiwasa 2017","uid":"53f1385e99284d2bd4b2bdc3d72b2cfb","slug":"zl/2016-01-01-1039_sistema de monitoreo y evaluación de impacto del p","date":"2024-04-03T03:47:32.977Z","updated":"2024-04-03T03:47:32.977Z","comments":true,"path":"api/articles/zl/2016-01-01-1039_sistema de monitoreo y evaluación de impacto del p.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"CONTACTOS Bolivia La Paz Prov Murillo Unidad de Datos, 0 Fundación ARU Metadatos &lt;ul class=&quot;col-lg-6 col-md-6 col-sm-6&quot;&gt; &lt...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"evaluation of deep learning toolkits","uid":"7b1fb6ea0b8f1dbd03c29f60e8c63d16","slug":"zl/2016-01-01-1038_evaluation of deep learning toolkits","date":"2024-04-03T03:47:32.976Z","updated":"2024-04-03T03:47:32.977Z","comments":true,"path":"api/articles/zl/2016-01-01-1038_evaluation of deep learning toolkits.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Abstract. In this study, I evaluate some popular deep learning toolkits. The candidates are listed in alphabetical order: Caffe, CNTK, Tenso...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}