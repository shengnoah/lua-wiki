{"title":"Lua 笔记","uid":"ae7aefc0bc12da0c129eeca96c4d42db","slug":"zl/2016-01-01-650_Lua 笔记","date":"2024-04-03T03:47:35.871Z","updated":"2024-04-03T03:47:35.871Z","comments":true,"path":"api/articles/zl/2016-01-01-650_Lua 笔记.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h2 id=\"词法约定\"><a href=\"#词法约定\" class=\"headerlink\" title=\"词法约定\"></a>词法约定</h2><p>变量是以字母或下划线开头的字母下划线数字序列，不要使用下划线加大写字母的标识符，因为Lua的保留字是这种形式<br/>Lua的保留字：</p>\n<table>\n<thead>\n<tr>\n<th>and</th>\n<th>break</th>\n<th>do</th>\n<th>else</th>\n<th>elseif</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>end</td>\n<td>false</td>\n<td>for</td>\n<td>function</td>\n<td>if</td>\n</tr>\n<tr>\n<td>in</td>\n<td>local</td>\n<td>nil</td>\n<td>not</td>\n<td>or</td>\n</tr>\n<tr>\n<td>repeat</td>\n<td>return</td>\n<td>then</td>\n<td>true</td>\n<td>until</td>\n</tr>\n<tr>\n<td>while</td>\n</tr>\n</tbody>\n</table>\n<p>在Lua中大小写敏感，如and是保留字，And和AND则不是保留字</p>\n<h2 id=\"代码规范\"><a href=\"#代码规范\" class=\"headerlink\" title=\"代码规范\"></a>代码规范</h2><p>Lua 的多条语句之间并不要求任何分隔符， 如 C 语言的分号(;)， 其中换行符也同样不能起到语句分隔的<br/>作用</p>\n<p>Lua的注释有两种：单行注释，使用两个减号（–）开头就行了<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">--单行注释</div></pre></td></tr></tbody></table></figure><p></p>\n<p>多行注释，两个减号（–）后面紧跟两个正中括弧（[[），后面就是注释语句，结束时减减（–）紧跟两个反中括弧（]]）<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">--[[我是</div><div class=\"line\">跨行注</div><div class=\"line\">释语</div><div class=\"line\">句</div><div class=\"line\">--]]</div></pre></td></tr></tbody></table></figure><p></p>\n<h2 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h2><p>Lua中分全局变量和局部变量。<br/>默认创建的就是全局变量，访问一个没有初始化的全局变量是不会出错的，只不过结果是 <strong>nil</strong> ，这就相当于 <strong>null</strong>，想要删除一个全局变量时，将其赋值为nil就行了。<br/>局部变量要通过 <strong>local</strong> 进行声明，局部变量只在声明的代码块中有效<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">local m = 9</div><div class=\"line\">if m&lt;=10 then</div><div class=\"line\">\tlocal m = 5</div><div class=\"line\">\tprint(m)</div><div class=\"line\">end</div></pre></td></tr></tbody></table></figure><p></p>\n<p>如上代码中m为5</p>\n<p>Lua是动态类型语言，声明时不要类型定义，赋值什么类型变量就是什么类型。使用 <strong>type（）</strong> 函数可以获取变量的类型信息。</p>\n<h2 id=\"变量的类型\"><a href=\"#变量的类型\" class=\"headerlink\" title=\"变量的类型\"></a>变量的类型</h2><p>Lua有 nil、 boolean、 number、 string、 userdata、 function、 thread 和 table共计8种变量类型。</p>\n<ol>\n<li>nil型只有一个值，就是nil，用于表示无效值。</li>\n<li>boolean 有false和true两种值。Lua中所有的值都可以作为条件，只有 <strong>false和nil</strong> 视为假，其余的均视为真，如数字0和空字符串。</li>\n<li>number就是实数</li>\n<li><p>string 就是字符串,lua的string可以包含任何数值字符，包括嵌入的0。例：</p>\n <figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">m =&#34;979899&#34;</div><div class=\"line\">print(m)       -----&gt;abc</div><div class=\"line\">print(&#34;","text":"词法约定变量是以字母或下划线开头的字母下划线数字序列，不要使用下划线加大写字母的标识符，因为Lua的保留字是这种形式Lua的保留字： and break do else elseif end false for function if in local nil not or re...","link":"","photos":[],"count_time":{"symbolsCount":958,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%8D%E6%B3%95%E7%BA%A6%E5%AE%9A\"><span class=\"toc-text\">词法约定</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">代码规范</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E7%9A%84%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">变量的类型</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Evaluate Reverse Polish Notation","uid":"bcdbc000a93c3724373ebc77548d116e","slug":"zl/2016-01-01-64_[LeetCode]Evaluate Reverse Polish Notation","date":"2024-04-03T03:47:35.871Z","updated":"2024-04-03T03:47:35.871Z","comments":true,"path":"api/articles/zl/2016-01-01-64_[LeetCode]Evaluate Reverse Polish Notation.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"题目描述Evaluate the value of an arithmetic expression in Reverse Polish Notation. Valid operators are +, -, *, /. Each operand may be an intege...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"lua","uid":"df60e476b394b1dd4755ec96c53302ff","slug":"zl/2016-01-01-651_lua","date":"2024-04-03T03:47:35.871Z","updated":"2024-04-03T03:47:35.872Z","comments":true,"path":"api/articles/zl/2016-01-01-651_lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" | 分类 &lt;a href=&quot;/categories/#lua之基础&quot; title=&quot;lua之基础&quot;&gt;lua之基础&lt;/a&gt; | “翻译”自https://github.com/SteveKChiu/lua-intf ...","link":"","photos":[],"count_time":{"symbolsCount":"19k","symbolsTime":"17 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}