{"title":"LeetCode 399. Evaluate Division  ","uid":"cb334b4622db6fe8d9c4092b783ee545","slug":"zl/2016-01-01-16_LeetCode 399. Evaluate Division  ","date":"2024-04-03T03:47:33.059Z","updated":"2024-04-03T03:47:33.059Z","comments":true,"path":"api/articles/zl/2016-01-01-16_LeetCode 399. Evaluate Division  .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<pre><code>\t\t\t&lt;i class=&quot;mobile-toggle&quot; style=&quot;display:none;&quot;&gt;&lt;img src=&quot;https://img.dazhuanlan.com/2019/11/26/5ddcf6326f021.png&quot;&gt;&lt;/i&gt;\n\t\t\t&lt;div class=&quot;content-article-box&quot;&gt;\n\t\t\t\t&lt;article class=&quot;article  article-post&quot;&gt;\n\n&lt;div class=&quot;article-con&quot;&gt;\n    \n    &lt;h3 id=&quot;题目描述&quot;&gt;\n</code></pre>\n<p><a href=\"http://shaocheng.me/#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h3></p>\n<p>给出方程序 A / B = k, 其中 A 和 B 均为代表字符串的变量， k 是一个浮点型数字。根据已知方程序求解问题，并返回计算结果。如果结果不存在，则返回 -1.0。</p>\n<p>输入总是有效的。你可以假设除法运算中不会出现除数为0的情况，且不存在任何矛盾的结果。</p>\n<h3 id=\"tag\">\n<a href=\"http://shaocheng.me/#tag\" class=\"headerlink\" title=\"tag\"></a>tag</h3>\n<p>DFS BFS 图 并查集</p>\n<h3 id=\"样例\">\n<a href=\"http://shaocheng.me/#%E6%A0%B7%E4%BE%8B\" class=\"headerlink\" title=\"样例\"></a>样例</h3>\n<figure class=\"highlight plain\"><table><tr>\n<td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td>\n<td class=\"code\"><pre><span class=\"line\">示例 :</span><br><span class=\"line\">给定 a / b = 2.0, b / c = 3.0</span><br><span class=\"line\">问题: a / c = ?, b / a = ?, a / e = ?, a / a = ?, x / x = ? </span><br><span class=\"line\">返回 [6.0, 0.5, -1.0, 1.0, -1.0 ]</span><br><span class=\"line\"></span><br><span class=\"line\">输入为: vector&lt;pair&lt;string, string&gt;&gt; equations, vector&lt;double&gt;&amp; values, vector&lt;pair&lt;string, string&gt;&gt; queries(方程序，方程序结果，问题方程序)， 其中 equations.size() == values.size()，即方程序的长度与方程序结果长度相等（程序与结果一一对应），并且结果值均为正数。以上为方程序的描述。 返回vector&lt;double&gt;类型。</span><br><span class=\"line\"></span><br><span class=\"line\">基于上述例子，输入如下：</span><br><span class=\"line\"></span><br><span class=\"line\">equations(方程序) = [ [\"a\", \"b\"], [\"b\", \"c\"] ],</span><br><span class=\"line\">values(方程序结果) = [2.0, 3.0],</span><br><span class=\"line\">queries(问题方程序) = [ [\"a\", \"c\"], [\"b\", \"a\"], [\"a\", \"e\"], [\"a\", \"a\"], [\"x\", \"x\"] ].</span><br></pre></td>\n</tr></table></figure>\n<h3 id=\"算法1\">\n<a href=\"http://shaocheng.me/#%E7%AE%97%E6%B3%951\" class=\"headerlink\" title=\"算法1\"></a>算法1</h3>\n<h5 id=\"DFS-O\">\n<a href=\"http://shaocheng.me/#DFS-O\" class=\"headerlink\" title=\"(DFS)  O()\"></a>(DFS)  O()</h5>\n<h5 id=\"思路\">\n<a href=\"http://shaocheng.me/#%E6%80%9D%E8%B7%AF\" class=\"headerlink\" title=\"思路\"></a>思路</h5>\n<p>先构造图，使用dict实现，其天然的hash可以在in判断时做到O(1)复杂度。</p>\n<p>对每个equation如”a/b=v”构造a到b的带权v的有向边和b到a的带权1/v的有向边，</p>\n<p>之后对每个query，只需要进行dfs并将路径上的边权重叠乘就是结果了，如果路径不可达则结果为-1。</p>\n<h5 id=\"复杂度分析：\">\n<a href=\"http://shaocheng.me/#%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90%EF%BC%9A\" class=\"headerlink\" title=\"复杂度分析：\"></a>复杂度分析：</h5>\n<h5 id=\"python-代码\">\n<a href=\"http://shaocheng.me/#python-%E4%BB%A3%E7%A0%81\" class=\"headerlink\" title=\"python 代码\"></a>python 代码</h5>\n<figure class=\"highlight python\"><table><tr>\n<td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td>\n<td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> :</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">calcEquation</span><span class=\"params\">(self, equations: List[List[str]], values: List[float], queries: List[List[str]])</span> -&gt; List[float]:</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        graph = {}</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (x, y), v <span class=\"keyword\">in</span> zip(equations, values):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> x <span class=\"keyword\">in</span> graph:</span><br><span class=\"line\">                graph[x][y] = v</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                graph[x] = {y: v}</span><br><span class=\"line\">                </span><br><span class=\"line\">            <span class=\"keyword\">if</span> y <span class=\"keyword\">in</span> graph:</span><br><span class=\"line\">                graph[y][x] = <span class=\"number\">1</span> / v</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                graph[y] = {x: <span class=\"number\">1</span> / v}</span><br><span class=\"line\">        </span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">_dfs</span><span class=\"params\">(s, t)</span>:</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> s <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> graph:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> t == s:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> node <span class=\"keyword\">in</span> graph[s].keys():</span><br><span class=\"line\">                <span class=\"keyword\">if</span> node == t:</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> graph[s][node]</span><br><span class=\"line\">                <span class=\"keyword\">elif</span> node <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> visited:</span><br><span class=\"line\">                    visited.add(node) </span><br><span class=\"line\">                    v = _dfs(node, t)</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> v != <span class=\"number\">-1</span>:</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> graph[s][node] * v</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">-1</span></span><br><span class=\"line\"></span><br><span class=\"line\">        res = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> qs, qt <span class=\"keyword\">in</span> queries:</span><br><span class=\"line\">            visited = set()</span><br><span class=\"line\">            res.append(_dfs(qs, qt))</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res</span><br><span class=\"line\"></span><br><span class=\"line\">先构造图，使用dict实现，其天然的hash可以在<span class=\"keyword\">in</span>判断时做到O(<span class=\"number\">1</span>)复杂度。</span><br><span class=\"line\"></span><br><span class=\"line\">对每个equation如<span class=\"string\">\"a/b=v\"</span>构造a到b的带权v的有向边和b到a的带权<span class=\"number\">1</span>/v的有向边，</span><br><span class=\"line\"></span><br><span class=\"line\">之后对每个query，只需要进行dfs并将路径上的边权重叠乘就是结果了，如果路径不可达则结果为<span class=\"number\">-1</span>。</span><br><span class=\"line\"></span><br><span class=\"line\">作者：mai-mai-mai-mai-zi</span><br><span class=\"line\">链接：https://leetcode-cn.com/problems/two-sum/solution/xian-gou-zao-tu-zai-dfsde-pythonshi-xian-by-mai-ma/</span><br><span class=\"line\">来源：力扣（LeetCode）</span><br><br></pre></td>\n</tr></table></figure>\n<hr>\n<h3 id=\"算法2\">\n<a href=\"http://shaocheng.me/#%E7%AE%97%E6%B3%952\" class=\"headerlink\" title=\"算法2\"></a>算法2</h3>\n<h5 id=\"BFS-O\">\n<a href=\"http://shaocheng.me/#BFS-O\" class=\"headerlink\" title=\"(BFS)  O()\"></a>(BFS)  O()</h5>\n<h5 id=\"思路-1\">\n<a href=\"http://shaocheng.me/#%E6%80%9D%E8%B7%AF-1\" class=\"headerlink\" title=\"思路\"></a>思路</h5>\n<p><a href=\"https://leetcode.com/problems/evaluate-division/discuss/88275/Python-fast-BFS-solution-with-detailed-explantion\" target=\"_blank\" rel=\"noopener noreferrer\">https://leetcode.com/problems/evaluate-division/discuss/88275/Python-fast-BFS-solution-with-detailed-explantion</a></p>\n<h5 id=\"复杂度分析：-1\">\n<a href=\"http://shaocheng.me/#%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90%EF%BC%9A-1\" class=\"headerlink\" title=\"复杂度分析：\"></a>复杂度分析：</h5>\n<h5 id=\"python-代码-1\">\n<a href=\"http://shaocheng.me/#python-%E4%BB%A3%E7%A0%81-1\" class=\"headerlink\" title=\"python 代码\"></a>python 代码</h5>\n<figure class=\"highlight python\"><table><tr>\n<td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td>\n<td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td>\n</tr></table></figure>\n<h3 id=\"算法3\">\n<a href=\"http://shaocheng.me/#%E7%AE%97%E6%B3%953\" class=\"headerlink\" title=\"算法3\"></a>算法3</h3>\n<h5 id=\"并查集-O\">\n<a href=\"http://shaocheng.me/#%E5%B9%B6%E6%9F%A5%E9%9B%86-O\" class=\"headerlink\" title=\"(并查集)  O()\"></a>(并查集)  O()</h5>\n<h5 id=\"思路-2\">\n<a href=\"http://shaocheng.me/#%E6%80%9D%E8%B7%AF-2\" class=\"headerlink\" title=\"思路\"></a>思路</h5>\n<p><a href=\"https://leetcode.com/problems/evaluate-division/discuss/162493/Python-Union-Find-Solution\" target=\"_blank\" rel=\"noopener noreferrer\">https://leetcode.com/problems/evaluate-division/discuss/162493/Python-Union-Find-Solution</a></p>\n<p><a href=\"https://leetcode.com/problems/evaluate-division/discuss/270993/Python-BFS-and-UF(detailed-explanation\" target=\"_blank\" rel=\"noopener noreferrer\">https://leetcode.com/problems/evaluate-division/discuss/270993/Python-BFS-and-UF(detailed-explanation)</a>)</p>\n<h5 id=\"复杂度分析：-2\">\n<a href=\"http://shaocheng.me/#%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90%EF%BC%9A-2\" class=\"headerlink\" title=\"复杂度分析：\"></a>复杂度分析：</h5>\n<h5 id=\"python-代码-2\">\n<a href=\"http://shaocheng.me/#python-%E4%BB%A3%E7%A0%81-2\" class=\"headerlink\" title=\"python 代码\"></a>python 代码</h5>\n<figure class=\"highlight python\"><table><tr>\n<td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td>\n<td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td>\n</tr></table></figure>\n<pre><code>&lt;/div&gt;\n\n&lt;div class=&quot;article-navgition&quot;&gt;\n    &lt;div class=&quot;navgition-wrap&quot;&gt;\n        \n            &lt;div class=&quot;navgition-prev&quot;&gt;\n                &lt;h2 class=&quot;navgition-title&quot;&gt;上一篇: &lt;a href=&quot;http://shaocheng.me/2019/07/18/LeetCode-253-Meeting-Rooms-II/&quot;&gt; LeetCode 253. Meeting Rooms II &lt;/a&gt;\n</code></pre>\n</h2>\n                </div>\n<pre><code>            &lt;div class=&quot;navgition-next&quot;&gt;\n                &lt;h2 class=&quot;navgition-title&quot;&gt;下一篇: &lt;a href=&quot;http://shaocheng.me/2019/07/18/LeetCode-494-Target-Sum/&quot;&gt;LeetCode 494. Target Sum  &lt;/a&gt;\n</code></pre>\n</h2>\n                </div>\n<pre><code>    &lt;/div&gt;\n&lt;/div&gt;\n</code></pre>\n</article>\n<pre><code>\t\t\t&lt;/div&gt;\n</code></pre>\n","text":" &lt;i class=&quot;mobile-toggle&quot; style=&quot;display:none;&quot;&gt;&lt;img src=&quot;https://img.dazhuanlan.com/2019/11/26/5ddcf6326f...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#tag\"><span class=\"toc-text\">\ntag</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A0%B7%E4%BE%8B\"><span class=\"toc-text\">\n样例</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%951\"><span class=\"toc-text\">\n算法1</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#DFS-O\"><span class=\"toc-text\">\n(DFS)  O()</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">\n思路</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90%EF%BC%9A\"><span class=\"toc-text\">\n复杂度分析：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#python-%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">\npython 代码</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%952\"><span class=\"toc-text\">\n算法2</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#BFS-O\"><span class=\"toc-text\">\n(BFS)  O()</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF-1\"><span class=\"toc-text\">\n思路</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90%EF%BC%9A-1\"><span class=\"toc-text\">\n复杂度分析：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#python-%E4%BB%A3%E7%A0%81-1\"><span class=\"toc-text\">\npython 代码</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%97%E6%B3%953\"><span class=\"toc-text\">\n算法3</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%B9%B6%E6%9F%A5%E9%9B%86-O\"><span class=\"toc-text\">\n(并查集)  O()</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF-2\"><span class=\"toc-text\">\n思路</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%88%86%E6%9E%90%EF%BC%9A-2\"><span class=\"toc-text\">\n复杂度分析：</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#python-%E4%BB%A3%E7%A0%81-2\"><span class=\"toc-text\">\npython 代码</span></a></li></ol></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua与Cpp传递参数接口介绍","uid":"394309a2e844b8a4a4af9139e80bc213","slug":"zl/2016-01-01-171_lua与Cpp传递参数接口介绍","date":"2024-04-03T03:47:33.060Z","updated":"2024-04-03T03:47:33.061Z","comments":true,"path":"api/articles/zl/2016-01-01-171_lua与Cpp传递参数接口介绍.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"最近在开源代码中遇到MySQL-Proxy, 其允许lua脚本实现用户的个性化配置, lua脚本可以引用C/C++的动态链接库完成一些复杂的功能. 本文对最近接触到的lua和C/C++混合的相关接口使用做个总结. 本文的完整代码在文末的附录中, 代码测试在Ubuntu16.04+...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua的一些坑的记录","uid":"7568e7cf6fdf0fe69d16d835e9f09b0a","slug":"zl/2016-01-01-169_Lua的一些坑的记录","date":"2024-04-03T03:47:33.055Z","updated":"2024-04-03T03:47:33.059Z","comments":true,"path":"api/articles/zl/2016-01-01-169_Lua的一些坑的记录.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua是一门很小巧的编程语言，不过使用过程中发下一些容易出现问题的地方，这里记录一下（API正常使用不记录）。记录时使用的版本是官方Lua 5.3.4版本源码. Lua的table区分数组部分和哈希表部分，数组部分索引从1开始，而不是0-based Lua的C API中的lua_...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}