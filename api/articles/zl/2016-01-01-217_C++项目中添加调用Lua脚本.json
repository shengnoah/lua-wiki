{"title":"C++项目中添加调用Lua脚本","uid":"e7db23bc50608c8f5fa8074570c0d23f","slug":"zl/2016-01-01-217_C++项目中添加调用Lua脚本","date":"2024-04-03T03:47:33.092Z","updated":"2024-04-03T03:47:33.092Z","comments":true,"path":"api/articles/zl/2016-01-01-217_C++项目中添加调用Lua脚本.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<pre><code>    &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;http://xtutu.me/#%E5%89%8D%E8%A8%80&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近想着，如果进程在运行时，可以调用Lua、JS之类的脚本语言，那么对于策划来说，原本需要填很多行的数据，现在只需填一个公式就搞定了。但是一开始对于这些的需求，我是拒绝的，因为一直觉得在C++环境中添加脚本支持是非常复杂的一件事情。&lt;br&gt;&lt;/p&gt;\n</code></pre>\n<h2 id=\"JS-or-Lua\"><a href=\"http://xtutu.me/#JS-or-Lua\" class=\"headerlink\" title=\"JS or Lua ?\"></a>JS or Lua ?</h2><p>既然想着用脚本，那么首先想到的就是js、lua。因为之前做过cocos2dx-js开发的，它用的js引擎是SpiderMonkey，太庞大了，所以不做考虑…<br>然后就剩下lua了，做了这么多年开发，听到过不少关于lua的话题。比如ios下的一个按键精灵的进程，就是可以让用户用lua来写进程。而且cocos2dx本身也有一个lua的版本，也是被很多开发者所采用的，所以技术上应该没什么问题。再加上lua语言本身就具有与C++语言交互方便的优势，所以就决定选择Lua。</p>\n<h2 id=\"实现\"><a href=\"http://xtutu.me/#%E5%AE%9E%E7%8E%B0\" class=\"headerlink\" title=\"实现\"></a>实现</h2><p>既然确定用lua了，那就开始动手了。<br><a href=\"http://www.lua.org\" target=\"_blank\" rel=\"noopener noreferrer\">官网地址</a><br>在下载页面可以看到，官网已经提供了lua的源码，以及各个平台的二进制版本的下载。因为考虑到不同平台下的二进制文档不一样。所以这里我下载的源码（直接把源码加到工程里面编译）<br>把下载下来的源码文档加到工程里面去，这里需要注意的是：需要去掉其中的lua.c 和luac.c这两个文档。<br>执行编译，顺利完成！</p>\n<h2 id=\"测试\"><a href=\"http://xtutu.me/#%E6%B5%8B%E8%AF%95\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>在测试的c++文档中引用lua的头文档<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ifdef __cplusplus </span><br><span class=\"line\">    extern <span class=\"string\">\"C\"</span></span><br><span class=\"line\">{</span><br><span class=\"line\">    #endif</span><br><span class=\"line\">    #include \"lua.h\"</span><br><span class=\"line\">    #include \"lualib.h\"</span><br><span class=\"line\">    #include \"lauxlib.h\"</span><br><span class=\"line\">    #ifdef __cplusplus</span><br><span class=\"line\">}</span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure></p>\n<p>测试lua脚本的执行<br><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lua_State * state = luaL_newstate();</span><br><span class=\"line\">luaL_openlibs(state);</span><br><span class=\"line\">luaL_dostring(state, <span class=\"string\">\"print(\"hello lua\")\"</span>);</span><br><span class=\"line\">lua_close(state);</span><br></pre></td></tr></table></figure></p>\n<p>成功输出hello lua！（这一步完成，就已经说明在c++代码中使用lua脚本，完全没有问题了）<br><em>lua也提供了luaL_dofile()的函数，可以执行lua文档。</em></p>\n<h2 id=\"进一步了解\"><a href=\"http://xtutu.me/#%E8%BF%9B%E4%B8%80%E6%AD%A5%E4%BA%86%E8%A7%A3\" class=\"headerlink\" title=\"进一步了解\"></a>进一步了解</h2><p>接下就是c++与lua之间传递数据的方式，所用到的堆栈结构也是挺巧妙的。这里就不再展开了，大家自行研究。</p>\n<hr>\n<h2 id=\"小结\"><a href=\"http://xtutu.me/#%E5%B0%8F%E7%BB%93\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>把lua嵌入到c++中，整个过程也就半个小时，对lua的印象还是相当不错的~</p>","text":" &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;http://xtutu.me/#%E5%89%8D%E8%A8%80&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#JS-or-Lua\"><span class=\"toc-text\">JS or Lua ?</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">实现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">测试</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E4%B8%80%E6%AD%A5%E4%BA%86%E8%A7%A3\"><span class=\"toc-text\">进一步了解</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B0%8F%E7%BB%93\"><span class=\"toc-text\">小结</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua编程6之table","uid":"5c91f2cbb96287806d0dbd5a22b1647f","slug":"zl/2016-01-01-216_Lua编程6之table","date":"2024-04-03T03:47:33.092Z","updated":"2024-04-03T03:47:33.092Z","comments":true,"path":"api/articles/zl/2016-01-01-216_Lua编程6之table.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;思考并回答以下问题：&lt;br&gt;1.如何初始化表并指定值？&lt;br&gt;2.a和b指向同一个table1，a设置为nil，b还可以访问table1的元素吗？&lt;br&gt;3.table.concat、table.insert、table.r...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"XLua","uid":"8694e34b8398544a8555a3d595186270","slug":"zl/2016-01-01-218_XLua","date":"2024-04-03T03:47:33.092Z","updated":"2024-04-03T03:47:33.093Z","comments":true,"path":"api/articles/zl/2016-01-01-218_XLua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;blockquote&gt; 从这里下载一个zip压缩包，解压后会有Assets等几个文档夹，其他文档夹放进你所创建的unity工程的Assets同级的目录下，然后把加压出来的Assets里的文档和文档夹复制进unity项目的Assets文档夹里即可。 XLua教程XL...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}