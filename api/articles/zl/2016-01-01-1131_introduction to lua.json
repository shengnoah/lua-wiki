{"title":"introduction to lua","uid":"9ef090dfd0a78f804b874a1a1aabc31e","slug":"zl/2016-01-01-1131_introduction to lua","date":"2024-04-03T03:47:33.011Z","updated":"2024-04-03T03:47:33.011Z","comments":true,"path":"api/articles/zl/2016-01-01-1131_introduction to lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>print</p>\n<div class=\"language-lua highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&#34;hello world&#34;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n<p>comment</p>\n<div class=\"language-lua highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"c1\">-- one line</span>\n<span class=\"cm\">--[[\n\tmultiple lines\n--]]</span>\n</code></pre>\n</div>\n<p>global variable, value is treated as global by default, only you use “local” to define it. if you awnt to delete it, just set it as nil.</p>\n<p>Lua data type：nil、boolean、number、string、userdata、function、thread、table.\nLogic operations: and, or, not</p>\n<div class=\"language-lua highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"s2\">&#34;hello world&#34;</span><span class=\"p\">))</span>\n<span class=\"c1\">-- string</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">))</span>\n<span class=\"c1\">-- boolean</span>\n</code></pre>\n</div>\n<p>string</p>\n<div class=\"language-lua highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">string1</span> <span class=\"o\">=</span> <span class=\"s2\">&#34;hello world&#34;</span>\n<span class=\"n\">string2</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;hello world&#39;</span>\n<span class=\"n\">string3</span> <span class=\"o\">=</span> <span class=\"s\">[[\n\thello world\n]]</span>\n<p><span class=\"c1\">– string append</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;a&quot;</span><span class=\"o\">…</span><span class=\"s1\">'b'</span><span class=\"p\">)</span><br />\n<span class=\"c1\">– string length #</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"o\">#</span><span class=\"n\">string2</span><span class=\"p\">)</span><br />\n<span class=\"nb\">string.len</span><span class=\"p\">(</span><span class=\"s2\">&quot;abc&quot;</span><span class=\"p\">)</span><br />\n<span class=\"c1\">– string to upper</span><br />\n<span class=\"nb\">string.upper</span><span class=\"p\">(</span><span class=\"n\">argument</span><span class=\"p\">)</span><br />\n<span class=\"c1\">– string to lower</span><br />\n<span class=\"nb\">string.lower</span><span class=\"p\">(</span><span class=\"n\">argument</span><span class=\"p\">)</span><br />\n<span class=\"c1\">– string replace </span><br />\n<span class=\"nb\">string.gsub</span><span class=\"p\">(</span><span class=\"n\">mainString</span><span class=\"p\">,</span><span class=\"n\">findString</span><span class=\"p\">,</span><span class=\"n\">replaceString</span><span class=\"p\">,</span><span class=\"n\">num</span><span class=\"p\">)</span><br />\n<span class=\"nb\">string.gsub</span><span class=\"p\">(</span><span class=\"s2\">&quot;aaaa&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;z&quot;</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">)</span><br />\n<span class=\"c1\">– return zzza, 3</span><br />\n<span class=\"c1\">– find the index, 1 as the begin point</span><br />\n<span class=\"nb\">string.find</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello Lua user&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Lua&quot;</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span><br />\n<span class=\"c1\">– reverse the string</span><br />\n<span class=\"nb\">string.reverse</span><span class=\"p\">(</span><span class=\"s2\">&quot;lua&quot;</span><span class=\"p\">)</span><br />\n<span class=\"c1\">– string copy</span><br />\n<span class=\"nb\">string.rep</span><span class=\"p\">(</span><span class=\"s2\">&quot;abc&quot;</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span><br />\n</code></pre></p>\n</div>\n<p>table</p>\n<div class=\"language-lua highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"kd\">local</span> <span class=\"n\">tbl2</span> <span class=\"o\">=</span> <span class=\"p\">&#123;</span><span class=\"s2\">&#34;apple&#34;</span><span class=\"p\">,</span> <span class=\"s2\">&#34;pear&#34;</span><span class=\"p\">,</span> <span class=\"s2\">&#34;orange&#34;</span><span class=\"p\">,</span> <span class=\"s2\">&#34;grape&#34;</span><span class=\"p\">&#125;</span>\n<p><span class=\"c1\">– table contact</span><br />\n<span class=\"n\">fruits</span> <span class=\"o\">=</span> <span class=\"p\">&#123;</span><span class=\"s2\">&quot;banana&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;orange&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;apple&quot;</span><span class=\"p\">&#125;</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">table.concat</span><span class=\"p\">(</span><span class=\"n\">fruits</span><span class=\"p\">))</span><br />\n<span class=\"c1\">– return bananaorangeapple</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">table.concat</span><span class=\"p\">(</span><span class=\"n\">fruits</span><span class=\"p\">,</span><span class=\"s2\">&quot;, &quot;</span><span class=\"p\">))</span><br />\n<span class=\"c1\">– return banana, orange, apple</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">table.concat</span><span class=\"p\">(</span><span class=\"n\">fruits</span><span class=\"p\">,</span><span class=\"s2\">&quot;, &quot;</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">))</span><br />\n<span class=\"c1\">– return orange, apple</span></p>\n<p><span class=\"c1\">– remove </span><br />\n<span class=\"nb\">table.remove</span><span class=\"p\">(</span><span class=\"n\">fruits</span><span class=\"p\">,</span> <span class=\"n\">pos</span><span class=\"p\">)</span></p>\n<p><span class=\"c1\">– insert</span><br />\n<span class=\"nb\">table.insert</span><span class=\"p\">(</span><span class=\"n\">fruits</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s2\">&quot;mongo&quot;</span><span class=\"p\">)</span></p>\n<p><span class=\"c1\">–sort</span><br />\n<span class=\"nb\">table.sort</span><span class=\"p\">(</span><span class=\"n\">fruits</span><span class=\"p\">)</span><br />\n</code></pre></p>\n</div>\n<p>function</p>\n<div class=\"language-lua highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"k\">function</span> <span class=\"nf\">factorial1</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n\t<span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"k\">then</span>\n    \t<span class=\"k\">return</span> <span class=\"mi\">1</span>\n\t<span class=\"k\">else</span>\n    \t<span class=\"k\">return</span> <span class=\"n\">n</span> <span class=\"o\">*</span> <span class=\"n\">factorial1</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n\t<span class=\"k\">end</span>\n<span class=\"k\">end</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">factorial1</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"n\">factorial2</span> <span class=\"o\">=</span> <span class=\"n\">factorial1</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">factorial2</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n<p><span class=\"c1\">– it can also return multiple values</span><br />\n<span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"nb\">string.find</span><span class=\"p\">(</span><span class=\"s2\">&quot;www.runoob.com&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;runoob&quot;</span><span class=\"p\">)</span><br />\n<span class=\"c1\">– return 5 10</span><br />\n</code></pre></p>\n</div>\n<p>user data: user can define the data type and value at any style</p>\n<p>assignment</p>\n<div class=\"language-lua highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">t</span><span class=\"p\">.</span><span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"p\">.</span><span class=\"n\">n</span> <span class=\"o\">+</span> <span class=\"mi\">1</span>\n<span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"o\">*</span><span class=\"n\">x</span>       <span class=\"o\">&lt;</span><span class=\"c1\">--&gt;       a=10; b=2*x</span>\n<span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">],</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>         <span class=\"c1\">-- swap &#39;a[i]&#39; for &#39;a[j]&#39;</span>\n<span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">,</span><span class=\"n\">c</span><span class=\"p\">)</span>             <span class=\"c1\">--&gt; 0   1   nil</span>\n\t<span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">+</span><span class=\"mi\">2</span>     <span class=\"c1\">-- value of b+2 is ignored</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span><span class=\"n\">b</span><span class=\"p\">)</span>               <span class=\"c1\">--&gt; 1   2</span>\n</code></pre>\n</div>\n<p>index</p>\n<div class=\"language-lua highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">t</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\n<span class=\"n\">t</span><span class=\"p\">.</span><span class=\"n\">i</span>\n</code></pre>\n</div>\n<p>loop</p>\n<div class=\"language-lua highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"c1\">-- false and nil are false, true and non-nil are true, so 0 is false</span>\n<span class=\"k\">if</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"k\">then</span>\n\t<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&#34;0 is true&#34;</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n<p><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">condition1</span><span class=\"p\">)</span><br />\n<span class=\"k\">then</span><br />\n<span class=\"k\">do</span> <span class=\"n\">sth1</span><br />\n<span class=\"k\">elseif</span> <span class=\"p\">(</span><span class=\"n\">condition2</span><span class=\"p\">)</span><br />\n<span class=\"k\">then</span><br />\n<span class=\"k\">do</span> <span class=\"n\">sth2</span><br />\n<span class=\"k\">else</span><br />\n<span class=\"k\">do</span> <span class=\"n\">sth3</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"k\">while</span><span class=\"p\">(</span> <span class=\"kc\">true</span> <span class=\"p\">)</span><br />\n<span class=\"k\">do</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">&quot;loop forever&quot;</span><span class=\"p\">)</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">do</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"o\">-</span><span class=\"mi\">1</span> <span class=\"k\">do</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"n\">days</span> <span class=\"o\">=</span> <span class=\"p\">&#123;</span><span class=\"s2\">&quot;Suanday&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;Monday&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;Tuesday&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;Wednesday&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;Thursday&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;Friday&quot;</span><span class=\"p\">,</span><span class=\"s2\">&quot;Saturday&quot;</span><span class=\"p\">&#125;</span><br />\n<span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"k\">in</span> <span class=\"nb\">ipairs</span><span class=\"p\">(</span><span class=\"n\">days</span><span class=\"p\">)</span>\t<span class=\"k\">do</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"p\">)</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"k\">repeat</span><br />\n<span class=\"n\">statements</span><br />\n<span class=\"k\">until</span><span class=\"p\">(</span> <span class=\"n\">condition</span> <span class=\"p\">)</span></p>\n<p><span class=\"c1\">– can use break </span><br />\n</code></pre></p>\n</div>\n<p>module</p>\n<div class=\"language-lua highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"p\">&#123;&#125;</span>\n<span class=\"n\">module</span><span class=\"p\">.</span><span class=\"n\">constant</span> <span class=\"o\">=</span> <span class=\"s2\">&#34;value&#34;</span>\n<span class=\"k\">function</span> <span class=\"nc\">module</span><span class=\"p\">.</span><span class=\"nf\">func</span><span class=\"p\">()</span>\n\t<span class=\"nb\">io.write</span><span class=\"p\">(</span><span class=\"s2\">&#34;a public function&#34;</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n<span class=\"c1\">-- load a module</span>\n<span class=\"nb\">require</span> <span class=\"s2\">&#34;module&#34;</span>\n</code></pre>\n</div>\n<p>IO</p>\n<div class=\"language-lua highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"c1\">-- only read</span>\n<span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"nb\">io.open</span><span class=\"p\">(</span><span class=\"s2\">&#34;test.lua&#34;</span><span class=\"p\">,</span> <span class=\"s2\">&#34;r&#34;</span><span class=\"p\">)</span>\n<span class=\"nb\">io.input</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">)</span>\n<span class=\"nb\">io.close</span><span class=\"p\">(</span><span class=\"n\">file</span><span class=\"p\">)</span>\n<span class=\"nb\">io.write</span><span class=\"p\">(</span><span class=\"s2\">&#34;--  test.lua 文件末尾注释&#34;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n<p>coroutine</p>\n<div class=\"language-lua highlighter-rouge\"><pre class=\"highlight\"><code><span class=\"c1\">-- use producer and consumer as the example</span>\n<span class=\"kd\">local</span> <span class=\"n\">newProductor</span>\n<p><span class=\"k\">function</span> <span class=\"nf\">productor</span><span class=\"p\">()</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><br />\n<span class=\"k\">while</span> <span class=\"kc\">true</span> <span class=\"k\">do</span><br />\n<span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><br />\n<span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>     <span class=\"c1\">– send the products to consumers</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"k\">function</span> <span class=\"nf\">consumer</span><span class=\"p\">()</span><br />\n<span class=\"k\">while</span> <span class=\"kc\">true</span> <span class=\"k\">do</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">i</span> <span class=\"o\">=</span> <span class=\"n\">receive</span><span class=\"p\">()</span>     <span class=\"c1\">– get the products from the productor</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><br />\n<span class=\"k\">end</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"k\">function</span> <span class=\"nf\">receive</span><span class=\"p\">()</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"nb\">coroutine.resume</span><span class=\"p\">(</span><span class=\"n\">newProductor</span><span class=\"p\">)</span><br />\n<span class=\"k\">return</span> <span class=\"n\">value</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"k\">function</span> <span class=\"nf\">send</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><br />\n<span class=\"nb\">coroutine.yield</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>     <span class=\"c1\">– x is the value, coroutine</span><br />\n<span class=\"k\">end</span></p>\n<p><span class=\"c1\">– start</span><br />\n<span class=\"n\">newProductor</span> <span class=\"o\">=</span> <span class=\"nb\">coroutine.create</span><span class=\"p\">(</span><span class=\"n\">productor</span><span class=\"p\">)</span><br />\n<span class=\"n\">consumer</span><span class=\"p\">()</span><br />\n</code></pre></p>\n</div>","text":"print print(&#34;hello world&#34;) comment -- one line --[[ multiple lines --]] global variable, value is treated as global by default, only...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"xcode support lua","uid":"4401d4c7e5eb56f024517d1e1ceff086","slug":"zl/2016-01-01-1136_xcode support lua","date":"2024-04-03T03:47:33.012Z","updated":"2024-04-03T03:47:33.012Z","comments":true,"path":"api/articles/zl/2016-01-01-1136_xcode support lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 在lua开发时，我是用mac开发的，需要用Xcode进行调试，这就需要Xcode支持lua,并代码高亮。但默认是不支持的，这就需要我们设置了。 ####最简单的办法: 下载Lua-In-Xcode 按照说明在shll中执行sudo ./Add-Lua.sh --beta 重启X...","link":"","photos":[],"count_time":{"symbolsCount":183,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"4. lua 专栏","uid":"98f702a8e3a9f3f7a8478466c02a340f","slug":"zl/2016-01-01-1132_4. lua 专栏","date":"2024-04-03T03:47:33.011Z","updated":"2024-04-03T03:47:33.011Z","comments":true,"path":"api/articles/zl/2016-01-01-1132_4. lua 专栏.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"4、Lua 专栏 4.1、 Lua程序设计 &amp; LuaFramework �","link":"","photos":[],"count_time":{"symbolsCount":46,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}