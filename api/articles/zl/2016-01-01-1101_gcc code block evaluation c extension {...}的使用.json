{"title":"gcc code block evaluation c extension {...}的使用","uid":"d0ef74f1a0a1fc5ac476bd23eaad147f","slug":"zl/2016-01-01-1101_gcc code block evaluation c extension {...}的使用","date":"2024-04-03T03:47:33.002Z","updated":"2024-04-03T03:47:33.002Z","comments":true,"path":"api/articles/zl/2016-01-01-1101_gcc code block evaluation c extension {...}的使用.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>重写UI的getter方法，把初始化方法放在getter中，可以有效的较少viewDidLoad的负荷，也能使整个页面变得清晰。同时，可以利用GCC Code Block Evaluation C Extension ({…})的语法，结构化局部变量的初始化和逻辑处理，增加了代码的可读性。</p>\n<p>例子:</p>\n<figure class=\"highlight objc\"><table><tbody><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">- (<span class=\"built_in\">UIView</span> *)demoView{</div><div class=\"line\">        <span class=\"keyword\">if</span> (!_demoView) {</div><div class=\"line\">            _demoView = ({</div><div class=\"line\">                    <span class=\"built_in\">UIView</span> *demoView = [[<span class=\"built_in\">UIView</span> alloc] initWithFrame:({</div><div class=\"line\">                    <span class=\"built_in\">CGRect</span> rect = <span class=\"built_in\">CGRectMake</span>(SCREEN_WIDTH/<span class=\"number\">2</span><span class=\"number\">-50</span>, SCREEN_HEIGHT/  <span class=\"number\">2</span><span class=\"number\">-100</span>,<span class=\"number\">100</span> ,<span class=\"number\">100</span> );</div><div class=\"line\">                    rect;</div><div class=\"line\">                })];</div><div class=\"line\">                demoView.backgroundColor = [<span class=\"built_in\">UIColor</span> redColor];</div><div class=\"line\">                demoView;</div><div class=\"line\">            });</div><div class=\"line\">        }</div><div class=\"line\">        <span class=\"keyword\">return</span> _demoView;</div><div class=\"line\">    }</div></pre></td></tr></tbody></table></figure>","text":"重写UI的getter方法，把初始化方法放在getter中，可以有效的较少viewDidLoad的负荷，也能使整个页面变得清晰。同时，可以利用GCC Code Block Evaluation C Extension ({…})的语法，结构化局部变量的初始化和逻辑处理，增加了代码...","link":"","photos":[],"count_time":{"symbolsCount":593,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"design pattern - factory pattern in c++ and lua","uid":"05bfa2829029949c47276089d7947eea","slug":"zl/2016-01-01-1107_design pattern - factory pattern in c++ and lua","date":"2024-04-03T03:47:33.003Z","updated":"2024-04-03T03:47:33.003Z","comments":true,"path":"api/articles/zl/2016-01-01-1107_design pattern - factory pattern in c++ and lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" What is Factory Pattern Example in C++ Example in Lua Factory Pattern Wiki In object-oriented programming (OOP), a factory is an object for...","link":"","photos":[],"count_time":{"symbolsCount":"8.3k","symbolsTime":"8 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"vs2012 编译luasocket","uid":"93ae805172a6587584748dc89d1de3a9","slug":"zl/2016-01-01-1103_vs2012 编译luasocket","date":"2024-04-03T03:47:33.002Z","updated":"2024-04-03T03:47:33.002Z","comments":true,"path":"api/articles/zl/2016-01-01-1103_vs2012 编译luasocket.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Content ","link":"","photos":[],"count_time":{"symbolsCount":42,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}