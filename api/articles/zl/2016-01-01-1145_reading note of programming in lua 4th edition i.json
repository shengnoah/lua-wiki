{"title":"reading note of programming in lua 4th edition i","uid":"47d55f1a8d24b34c0ada9ad598b8b7b3","slug":"zl/2016-01-01-1145_reading note of programming in lua 4th edition i","date":"2024-04-03T03:47:33.015Z","updated":"2024-04-03T03:47:33.015Z","comments":true,"path":"api/articles/zl/2016-01-01-1145_reading note of programming in lua 4th edition i.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<div class=\"entry\">\n<pre><code>      &lt;div id=&quot;toc&quot; class=&quot;toc-article&quot;&gt;\n        &lt;strong class=&quot;toc-title aligncenter&quot;&gt;Content&lt;/strong&gt;\n        &lt;hr/&gt;\n        \n      &lt;/div&gt;\n  \n  \n    &lt;p&gt;Here is the summary of reading note about some Lua basic grammar and data structures.&lt;/p&gt;\n</code></pre>\n<h3 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><h4 id=\"Stand-Alone-Interpreter\"><a href=\"#Stand-Alone-Interpreter\" class=\"headerlink\" title=\"Stand-Alone Interpreter\"></a>Stand-Alone Interpreter</h4><ul>\n<li>Useful Lua idiom<ul>\n<li><code>x = x or v</code> is equivalent to <code>if not x then x = v end</code>.</li>\n<li><code>((a and b)or c) is equivalent to C expression</code>a?b:c`.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Arithmetic-Operators\"><a href=\"#Arithmetic-Operators\" class=\"headerlink\" title=\"Arithmetic Operators\"></a>Arithmetic Operators</h4><ul>\n<li>Division<ul>\n<li>float division is <code>/</code>, which is the same as other programming lanuage.</li>\n<li>integer division is <code>//</code>, which is called “floor division”.</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Strings\"><a href=\"#Strings\" class=\"headerlink\" title=\"Strings\"></a>Strings</h4><ul>\n<li>Strings in Lua are immutable values.</li>\n<li>Strings in Lua are subject to automatic memory management, like all other Lua objects (table, functions, etc).</li>\n<li><p>Use <code>..</code> to concatenate two strings.</p>\n</li>\n<li><p>Any numeric operation applied to a string tries to convert the string to a number. This coersion is also applied in other places that expect a number, such as the argument to <code>math.sin</code>.</p>\n</li>\n</ul>\n<hr/>\n<h3 id=\"Tables\"><a href=\"#Tables\" class=\"headerlink\" title=\"Tables\"></a>Tables</h3><h4 id=\"Safe-Navigation\"><a href=\"#Safe-Navigation\" class=\"headerlink\" title=\"Safe Navigation\"></a>Safe Navigation</h4><p>To know whether a given function from a given library is present, use this statement: <code>res = lib?.object1?.object2?.function</code> or <code>res = (((lib or &#123;&#125;).object1 or &#123;&#125;).object2 or &#123;&#125;).function</code>.</p>\n<h4 id=\"Libraries\"><a href=\"#Libraries\" class=\"headerlink\" title=\"Libraries\"></a>Libraries</h4><ul>\n<li>table.insert: insert an element in a given position of a sequence.</li>\n<li>table.remove: removes and returns an element from the given position in a sequence.</li>\n<li>table.move: moves the elements in table a from index f until e (both inclusive) to position t or another table.</li>\n<li>table.pack: receive any number of arguments and returns a new table with all its arguments (just like {…}).</li>\n<li>table.unpack: transform a real Lua list (a table) into a return list, which can be given as the parameter list to another function.</li>\n</ul>\n<hr/>\n<h3 id=\"Functions\"><a href=\"#Functions\" class=\"headerlink\" title=\"Functions\"></a>Functions</h3><h4 id=\"Generic\"><a href=\"#Generic\" class=\"headerlink\" title=\"Generic\"></a>Generic</h4><ul>\n<li>Return multiple results from a function: <code>return res1, res2, res3</code>. And a statement like <code>return (f(x))</code> always returns one single value.</li>\n<li>Variadic function, taking a variable number of arguments, uses three dots(…) in the parameter list:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">function func(...)</span><br/><span class=\"line\">   do sth</span><br/><span class=\"line\">end</span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"Tail-Calls\"><a href=\"#Tail-Calls\" class=\"headerlink\" title=\"Tail Calls\"></a>Tail Calls</h4><ul>\n<li>Lua does tail-call elimination. So in following code:</li>\n</ul>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">function f(x)</span><br/><span class=\"line\">\tx = x + 1</span><br/><span class=\"line\">\treturn g(x)</span><br/><span class=\"line\">end</span><br/></pre></td></tr></tbody></table></figure>\n<p>When g returns, control will return directly to the point calling f, and thus, do not use any extra stack space when doing a tail call.</p>\n<hr/>\n<h3 id=\"IO\"><a href=\"#IO\" class=\"headerlink\" title=\"IO\"></a>IO</h3><ul>\n<li>io.read: read strings from current input stream. The input parameter includes <code>&#34;a&#34;, &#34;l&#34;, &#34;L&#34;, &#34;n&#34; and number</code>.</li>\n<li>io.write: write strings to current output stream. Use <code>string.format</code> for full control over the numbers to strings conversion.</li>\n<li>io.open: open a file.</li>\n<li>io.flush: flush the current output stream.</li>\n<li>io.popen: runs a system command and connects the command output (or input) to a new local stream and returns that stream.</li>\n<li>os.exit: terminates the execution of a program.</li>\n<li>os.getenv: gets the value of an environment variable. ex: <code>os.getenv(&#34;HOME&#34;)</code>.</li>\n<li>os.execute: runs a system command.</li>\n</ul>\n<hr/>\n<h3 id=\"Variable-and-Control-Structure\"><a href=\"#Variable-and-Control-Structure\" class=\"headerlink\" title=\"Variable and Control Structure\"></a>Variable and Control Structure</h3><ul>\n<li>Lua treats all values (including 0 and empty string) as true except false and nil.</li>\n</ul>\n<pre><code>&lt;/div&gt;\n\n&lt;footer&gt;\n    &lt;div class=&quot;alignright&quot;&gt;\n      \n      &lt;a href=&quot;javascript:void(0)&quot; class=&quot;share-link bdsharebuttonbox&quot; data-cmd=&quot;more&quot;&gt;Share&lt;/a&gt;\n    &lt;/div&gt;\n    \n    \n\n\n\n    \n  &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;\n&lt;/footer&gt;\n</code></pre>\n","text":" &lt;div id=&quot;toc&quot; class=&quot;toc-article&quot;&gt; &lt;strong class=&quot;toc-title aligncenter&quot;&gt;Content&lt;/strong&gt; &...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Basic\"><span class=\"toc-text\">Basic</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Stand-Alone-Interpreter\"><span class=\"toc-text\">Stand-Alone Interpreter</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Arithmetic-Operators\"><span class=\"toc-text\">Arithmetic Operators</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Strings\"><span class=\"toc-text\">Strings</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Tables\"><span class=\"toc-text\">Tables</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Safe-Navigation\"><span class=\"toc-text\">Safe Navigation</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Libraries\"><span class=\"toc-text\">Libraries</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Functions\"><span class=\"toc-text\">Functions</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Generic\"><span class=\"toc-text\">Generic</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Tail-Calls\"><span class=\"toc-text\">Tail Calls</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#IO\"><span class=\"toc-text\">IO</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Variable-and-Control-Structure\"><span class=\"toc-text\">Variable and Control Structure</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua mongodb quickstart","uid":"dcfa146d03cff7d7d8e3fb653130f0b9","slug":"zl/2016-01-01-1148_lua mongodb quickstart","date":"2024-04-03T03:47:33.016Z","updated":"2024-04-03T03:47:33.016Z","comments":true,"path":"api/articles/zl/2016-01-01-1148_lua mongodb quickstart.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;Here is the tutorial to write and build Lua application that can communicate with MongoDB database.&lt;/p&gt; Dependency Installat...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"(week6) 01 evaluating a learning algorithm","uid":"b7b71e6e105a2e8cd0605b901a8bfe28","slug":"zl/2016-01-01-1144_(week6) 01 evaluating a learning algorithm","date":"2024-04-03T03:47:33.015Z","updated":"2024-04-03T03:47:33.015Z","comments":true,"path":"api/articles/zl/2016-01-01-1144_(week6) 01 evaluating a learning algorithm.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;col-md-8 col-md-offset-2&quot;&gt; &lt;h2 id=&quot;Evaluating-a-Learning-Algorithm&quot;&gt;&...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}