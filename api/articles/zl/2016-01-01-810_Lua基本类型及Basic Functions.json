{"title":"Lua基本类型及Basic Functions","uid":"832209621f9ee266a7ca0e324979ce03","slug":"zl/2016-01-01-810_Lua基本类型及Basic Functions","date":"2024-04-03T03:47:36.057Z","updated":"2024-04-03T03:47:36.057Z","comments":true,"path":"api/articles/zl/2016-01-01-810_Lua基本类型及Basic Functions.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h2>Lua基本类型及Basic Functions </h2>\n    <div class=\"post_info\">\n<pre><code>&lt;/div&gt;\n&lt;div class=&quot;content&quot;&gt;\n</code></pre>\n<h4 id=\"section\">概述</h4>\n<h4 id=\"lua\">Lua的基本类型</h4>\n<h6 id=\"section-1\">基本类型</h6>\n<p><img src=\"https://moorle.github.io//image/lua_data_type.png\" alt=\"lua data type\"/></p>\n<h6 id=\"eg\">e.g.</h6>\n<div class=\"highlight\"><pre><code class=\"language-lua\" data-lang=\"lua\"><span class=\"k\">function</span> <span class=\"nf\">testType</span><span class=\"p\">()</span>\n\t<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"nb\">string.format</span><span class=\"p\">(</span><span class=\"s2\">&#34;</span><span class=\"s\">the type of _G = %s &#34;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"nb\">_G</span><span class=\"p\">)))</span>\n\t<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"nb\">string.format</span><span class=\"p\">(</span><span class=\"s2\">&#34;</span><span class=\"s\">the type of _VERSION = %s &#34;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"nb\">_VERSION</span><span class=\"p\">)))</span>\n\t<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"nb\">string.format</span><span class=\"p\">(</span><span class=\"s2\">&#34;</span><span class=\"s\">the type of X = %s &#34;</span><span class=\"p\">,</span> <span class=\"n\">X</span><span class=\"p\">))</span>\n\t<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"nb\">string.format</span><span class=\"p\">(</span><span class=\"s2\">&#34;</span><span class=\"s\">the type of nil = %s &#34;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"kc\">nil</span><span class=\"p\">)))</span>\n\t<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"nb\">string.format</span><span class=\"p\">(</span><span class=\"s2\">&#34;</span><span class=\"s\">the type of 1 + 1 = %s &#34;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)))</span>\n\t<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"nb\">string.format</span><span class=\"p\">(</span><span class=\"s2\">&#34;</span><span class=\"s\">the type of &#123;a=&#39;a&#39;&#125; = %s &#34;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(&#123;</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">&#39;</span><span class=\"s\">a&#39;</span><span class=\"p\">&#125;)))</span>\n\t<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"nb\">string.format</span><span class=\"p\">(</span><span class=\"s2\">&#34;</span><span class=\"s\">the type of true = %s &#34;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"kc\">true</span><span class=\"p\">)))</span>\n\t<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"nb\">string.format</span><span class=\"p\">(</span><span class=\"s2\">&#34;</span><span class=\"s\">the type of Hello world = %s &#34;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"s2\">&#34;</span><span class=\"s\">Hello world&#34;</span><span class=\"p\">)))</span>\n\t<span class=\"nb\">print</span> <span class=\"p\">(</span><span class=\"nb\">string.format</span><span class=\"p\">(</span><span class=\"s2\">&#34;</span><span class=\"s\">the type of testType = %s &#34;</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">testType</span><span class=\"p\">)))</span>\n<span class=\"k\">end</span>\n<p><span class=\"n\">output</span><span class=\"p\">:</span><br />\n<span class=\"n\">the</span> <span class=\"nb\">type</span> <span class=\"n\">of</span> <span class=\"nb\">_G</span> <span class=\"o\">=</span> <span class=\"n\">table</span><br />\n<span class=\"n\">the</span> <span class=\"nb\">type</span> <span class=\"n\">of</span> <span class=\"nb\">_VERSION</span> <span class=\"o\">=</span> <span class=\"n\">string</span><br />\n<span class=\"n\">the</span> <span class=\"nb\">type</span> <span class=\"n\">of</span> <span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"kc\">nil</span><br />\n<span class=\"n\">the</span> <span class=\"nb\">type</span> <span class=\"n\">of</span> <span class=\"kc\">nil</span> <span class=\"o\">=</span> <span class=\"kc\">nil</span><br />\n<span class=\"n\">the</span> <span class=\"nb\">type</span> <span class=\"n\">of</span> <span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"mi\">1</span> <span class=\"o\">=</span> <span class=\"n\">number</span><br />\n<span class=\"n\">the</span> <span class=\"nb\">type</span> <span class=\"n\">of</span> <span class=\"p\">&#123;</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"s\">a'</span><span class=\"p\">&#125;</span> <span class=\"o\">=</span> <span class=\"n\">table</span><br />\n<span class=\"n\">the</span> <span class=\"nb\">type</span> <span class=\"n\">of</span> <span class=\"kc\">true</span> <span class=\"o\">=</span> <span class=\"n\">boolean</span><br />\n<span class=\"n\">the</span> <span class=\"nb\">type</span> <span class=\"n\">of</span> <span class=\"n\">Hello</span> <span class=\"n\">world</span> <span class=\"o\">=</span> <span class=\"n\">string</span><br />\n<span class=\"n\">the</span> <span class=\"nb\">type</span> <span class=\"n\">of</span> <span class=\"n\">testType</span> <span class=\"o\">=</span> <span class=\"k\">function</span></code></pre></div></p>\n<h6 id=\"section-2\">注意事项</h6>\n<ul>\n  <li>在Lua中，false和nil会被逻辑运算符当成false，其他都为true(0也是true)</li>\n</ul>\n<h4 id=\"basic-functions\">Basic Functions</h4>\n<p>Lua语言built-in方法其实并不多，最基本的也就二十几个，比起其他语言可谓是小巫见大巫。现在罗列一下以便以后查阅。</p>\n<table>\n  <thead>\n    <tr>\n      <th>sequence</th>\n      <th>function or variable</th>\n      <th>des</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>1</td>\n      <td>assert (v [, message])</td>\n      <td>assert函数检查其第一个参数是否为true。若为true，则简单地返回该参数；否则(为false或nil)就会引发一个错误</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>collectgarbage ([limit])</td>\n      <td>Sets the garbage-collection threshold to the given limit (in Kbytes) and checks it against the byte counter</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>dofile (filename)</td>\n      <td>读入文件编译并执行, 本质上位辅助函数，真正实现其功能的是loadfile()</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>error (message [, level])</td>\n      <td>Terminates the last protected function called and returns message as the error message. Function error never returns</td>\n    </tr>\n    <tr>\n      <td>5</td>\n      <td>_G</td>\n      <td>holds the global environment (that is, _G._G = _G)</td>\n    </tr>\n    <tr>\n      <td>6</td>\n      <td>getfenv (f)</td>\n      <td>返回当前函数的运行环境，如果f为0，则返回全局环境变量；只有setfenv了环境，getfenv才能生效。</td>\n    </tr>\n    <tr>\n      <td>7</td>\n      <td>getmetatable (object)</td>\n      <td>返回对象的元表(metatable)             [如果元表(metatable)中存在__metatable键值，当返回__metatable的值]</td>\n    </tr>\n    <tr>\n      <td>8</td>\n      <td>gcinfo ()</td>\n      <td>Returns two results: the number of Kbytes of dynamic memory that Lua is using and the current garbage collector threshold (also in Kbytes)</td>\n    </tr>\n    <tr>\n      <td>9</td>\n      <td>ipairs (t)</td>\n      <td>Returns an iterator function</td>\n    </tr>\n    <tr>\n      <td>10</td>\n      <td>loadfile (filename)</td>\n      <td>Loads a file as a Lua chunk (without running it)</td>\n    </tr>\n    <tr>\n      <td>11</td>\n      <td>loadlib (libname, funcname)</td>\n      <td>Links the program with the dynamic C library libname</td>\n    </tr>\n    <tr>\n      <td>12</td>\n      <td>loadstring (string [, chunkname])</td>\n      <td>Loads a string as a Lua chunk (without running it)</td>\n    </tr>\n    <tr>\n      <td>13</td>\n      <td>next (table [, index])</td>\n      <td>Allows a program to traverse all fields of a table</td>\n    </tr>\n    <tr>\n      <td>14</td>\n      <td>pairs (t)</td>\n      <td>Returns the next function and the table t (plus a nil), so that the construction for k,v in pairs(t) do … end will iterate over all key–value pairs of table t.</td>\n    </tr>\n    <tr>\n      <td>15</td>\n      <td>pcall (f, arg1, arg2, …)</td>\n      <td>Calls function f with the given arguments in protected mode</td>\n    </tr>\n    <tr>\n      <td>16</td>\n      <td>print (e1, e2, …)</td>\n      <td>Receives any number of arguments, and prints their values in stdout, using the tostring function to convert them to strings</td>\n    </tr>\n    <tr>\n      <td>17</td>\n      <td>rawequal (v1, v2)</td>\n      <td>Checks whether v1 is equal to v2, without invoking any metamethod. Returns a boolean.</td>\n    </tr>\n    <tr>\n      <td>18</td>\n      <td>rawget (table, index)</td>\n      <td>Gets the real value of table[index], without invoking any metamethod</td>\n    </tr>\n    <tr>\n      <td>19</td>\n      <td>rawset (table, index, value)</td>\n      <td>Sets the real value of table[index] to value, without invoking any metamethod</td>\n    </tr>\n    <tr>\n      <td>20</td>\n      <td>require (packagename)</td>\n      <td>Loads the given package</td>\n    </tr>\n    <tr>\n      <td>21</td>\n      <td>setfenv (f, table)</td>\n      <td>Sets the current environment to be used by the given function</td>\n    </tr>\n    <tr>\n      <td>22</td>\n      <td>setmetatable (table, metatable)</td>\n      <td>Sets the metatable for the given table</td>\n    </tr>\n    <tr>\n      <td>23</td>\n      <td>tonumber (e [, base])</td>\n      <td>Tries to convert its argument to a number</td>\n    </tr>\n    <tr>\n      <td>24</td>\n      <td>tostring (e)</td>\n      <td>Receives an argument of any type and converts it to a string in a reasonable format</td>\n    </tr>\n    <tr>\n      <td>25</td>\n      <td>type (v)</td>\n      <td>Returns the type of its only argument, coded as a string. The possible results of this function are “nil” (a string, not the value nil), “number”, “string”, “boolean, “table”, “function”, “thread”, and “userdata”.</td>\n    </tr>\n    <tr>\n      <td>27</td>\n      <td>unpack (list)</td>\n      <td>Returns all elements from the given list</td>\n    </tr>\n    <tr>\n      <td>28</td>\n      <td>_VERSION</td>\n      <td>A global variable (not a function) that holds a string containing the current interpreter version.</td>\n    </tr>\n    <tr>\n      <td>29</td>\n      <td>xpcall (f, err)</td>\n      <td>A global variable (not a function) that holds a string containing the current interpreter version.</td>\n    </tr>\n  </tbody>\n</table>\n<pre><code>&lt;/div&gt;\n\n\n&lt;ul class=&quot;tag_box inline&quot;&gt;\n  &lt;li&gt;&lt;i class=&quot;icon-tags&quot;&gt;&lt;/i&gt;&lt;/li&gt;\n  \n  \n\n&lt;li&gt;&lt;a href=&quot;/posts.html#Lua&quot;&gt;Lua &lt;span&gt;2&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;\n\n\n\n\n&lt;/ul&gt;\n  \n\n&lt;hr/&gt;\n\n&lt;br/&gt;\n&lt;div id=&quot;comment-hook&quot;&gt;&lt;/div&gt;\n</code></pre>\n","text":"Lua基本类型及Basic Functions &lt;/div&gt; &lt;div class=&quot;content&quot;&gt; 概述 Lua的基本类型 基本类型 e.g. function testType() print (string.format(&#...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">Lua基本类型及Basic Functions </span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#section\"><span class=\"toc-text\">概述</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#lua\"><span class=\"toc-text\">Lua的基本类型</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#section-1\"><span class=\"toc-text\">基本类型</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#eg\"><span class=\"toc-text\">e.g.</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#section-2\"><span class=\"toc-text\">注意事项</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#basic-functions\"><span class=\"toc-text\">Basic Functions</span></a></li></ol></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua使用教程","uid":"bb366af0997ddf8c4e47511bb8d73383","slug":"zl/2016-01-01-812_lua使用教程","date":"2024-04-03T03:47:36.058Z","updated":"2024-04-03T03:47:36.059Z","comments":true,"path":"api/articles/zl/2016-01-01-812_lua使用教程.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 文章目录 &lt;/div&gt; &lt;p&gt;闲来无趣，稍微看了一会lua…&lt;/p&gt; 运行1.命令行运行lua命令，在lua的shell中执行语句12345zhubenshuli@raspberrypi /var/www/lua_program $ luaL...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"结合Fluentd实现ngx_lua_waf页面展示","uid":"d818020fe9b5ded46e6f72a0b4292602","slug":"zl/2016-01-01-811_结合Fluentd实现ngx_lua_waf页面展示","date":"2024-04-03T03:47:36.057Z","updated":"2024-04-03T03:47:36.058Z","comments":true,"path":"api/articles/zl/2016-01-01-811_结合Fluentd实现ngx_lua_waf页面展示.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"0x00 概述最近在看lua_waf,看看怎么搞个web界面出来，于是有了这篇笔记。 上图是大佬分享的waf日志处理流程，不过我这篇文章讲的就简单多了，如下, 纯属搞着玩儿： ngx_lua_waf简介 ngx_lua_waf，是一个轻量级、高性能的WAF模块。 防止sql注入，...","link":"","photos":[],"count_time":{"symbolsCount":"8.8k","symbolsTime":"8 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}