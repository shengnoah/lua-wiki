{"title":"Lua数据结构 — TValue（一）","uid":"a882b094071ae3457c1fc477076c7f1e","slug":"zl/2016-01-01-582_Lua数据结构 — TValue（一）","date":"2024-04-03T03:47:35.830Z","updated":"2024-04-03T03:47:35.830Z","comments":true,"path":"api/articles/zl/2016-01-01-582_Lua数据结构 — TValue（一）.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>数据结构的设计，在一定程度上奠定了整个系统的设计，所以决定写一个对Lua主要数据结构的分析文章，本来打算写一篇就好了，但是每个数据类型其实都有点复杂，一篇的话篇幅太长，所以就拆开几篇来写了。</p>\n<p>为什么是从TValue说起，<strong>TValue是实现Lua弱数据类型的主要数据结构</strong>，不但在脚本中的值使用了TValue，连Lua的实现中，很多数据结构也依赖于TValue，TValue一定程度上贯穿了整个Lua。先说一下Lua里面的<strong>数据类型</strong>:（lua.h :69）</p>\n<p><img src=\"https://keepmovingxin.github.io//images/luaTValue/lua-tvalue-01.png\" alt=\"\"/></p>\n<p>从上面的定义中可以看到，<strong>Lua的值类型有9种</strong>，其中LUA_TNONE是用于判断这个变量是否等于为空使用的，这个是Lua内部使用的，后面再详细说明。现在来看Lua里面的<strong>TValue数据结构</strong>:（lobject.h 71-75）</p>\n<p><img src=\"https://keepmovingxin.github.io//images/luaTValue/lua-tvalue-02.png\" alt=\"\"/></p>\n<p>在Lua里面，一个变量使用TValue这个类型来存储的，int tt就是上面宏的类型值（4个字节），而Value则是一个union（8个字节）。在这个union中，其实分工也十分明确:</p>\n<p><img src=\"https://keepmovingxin.github.io//images/luaTValue/lua-tvalue-03.png\" alt=\"\"/></p>\n<p>在Value中，void* p、lua_Number n、int b都是不用回收的值类型，而GCObject* gc则都是需要回收的对象，下面是<strong>GCObject数据结构</strong>:（lstate.h 133-145）</p>\n<p><img src=\"https://keepmovingxin.github.io//images/luaTValue/lua-tvalue-04.png\" alt=\"\"/></p>\n<p>GCObject也是一个union，存储了一个GCheader，这个GCHeader主要用于<strong>GC回收机制</strong>使用，GC回收机制超出了这次讨论话题，暂时先忽略。真正存储值的结构是TString、Udata、Closure等等，每个存储数据的结构都会有GCheader，接下来几篇文章将会开始逐个数据类型进行解释。</p>\n<p><img src=\"https://keepmovingxin.github.io//images/luaTValue/lua-tvalue-05.png\" alt=\"\"/></p>\n<p><strong>Lua数据结构</strong>系列转自阿里云博客，作者是<strong>罗日健</strong>。<br/>原文链接：<a href=\"http://blog.aliyun.com/761\" target=\"_blank\" rel=\"external noopener noreferrer\">http://blog.aliyun.com/761</a></p>\n<hr/>\n<p>扫描二维码或在微信中搜索 KeepMovingXin<br/><img src=\"https://keepmovingxin.github.io//images/qrcode.jpg\" alt=\"欢迎关注微信公众号！\"/></p>","text":"数据结构的设计，在一定程度上奠定了整个系统的设计，所以决定写一个对Lua主要数据结构的分析文章，本来打算写一篇就好了，但是每个数据类型其实都有点复杂，一篇的话篇幅太长，所以就拆开几篇来写了。 为什么是从TValue说起，TValue是实现Lua弱数据类型的主要数据结构，不但在脚本...","link":"","photos":[],"count_time":{"symbolsCount":777,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua入门学习","uid":"613f6d850733375f9556ed225c486d2c","slug":"zl/2016-01-01-584_Lua入门学习","date":"2024-04-03T03:47:35.831Z","updated":"2024-04-03T03:47:35.831Z","comments":true,"path":"api/articles/zl/2016-01-01-584_Lua入门学习.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;aside class=&quot;aside clearfix&quot;&gt; &lt;a class=&quot;tag label label-info&quot; href=&quot;/tags/lua.html&quot;&gt;lua&lt;/a&gt...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"基于openResty+lua的权限校验","uid":"9ecca8ee741639f8022967247f82079d","slug":"zl/2016-01-01-583_基于openResty+lua的权限校验","date":"2024-04-03T03:47:35.830Z","updated":"2024-04-03T03:47:35.830Z","comments":true,"path":"api/articles/zl/2016-01-01-583_基于openResty+lua的权限校验.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 之前在这篇文章想进openResty的坑里说要做个和权限相关的大实例，这篇算给做的东西一个详细点的README，代码已经丢到github 之前是在Google随便搜了shiro和openResty的关键字，看到了这个，其实他的权限校验是在后台用go语言做的，nginx只是在前面...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}