{"title":"Lua语句段 · 花生肉泥","uid":"82d70b1b5facde5290424415786eeaf4","slug":"zl/2016-01-01-514_Lua语句段 · 花生肉泥","date":"2024-04-03T03:47:35.789Z","updated":"2024-04-03T03:47:35.789Z","comments":true,"path":"api/articles/zl/2016-01-01-514_Lua语句段 · 花生肉泥.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h3 id=\"chunk语句组\"><a href=\"#chunk语句组\" class=\"headerlink\" title=\"chunk语句组\"></a>chunk语句组</h3><p>chunk是一系列语句，lua执行的每一块语句，比如一个文件或者交互模式下的每一行都是一个chunk</p>\n<h3 id=\"语句块\"><a href=\"#语句块\" class=\"headerlink\" title=\"语句块\"></a>语句块</h3><p>显式的语句块对于控制变量的作用范围很有用，有时候，显式的语句块被用来在另一个语句块中插入retuen或是break</p>\n<h3 id=\"赋值语句\"><a href=\"#赋值语句\" class=\"headerlink\" title=\"赋值语句\"></a>赋值语句</h3><p>lua允许多重赋值，因此，赋值的语法定义是等号左边放一系列变量，而等号右边放一系列的表达式，两边的元素都用逗号间开<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> a,b,c,d,e = <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>当变量个数和值的个数不一致时：<br/>if 变量个数 &gt; 值的个数<br/>     按变量个数补足nil<br/>if 变量个数 &lt; 值的个数<br/>     多余的值会被忽略<br/>备注：lua会先计算右边所有的值后才赋值，所以交换可以这么写，x,y = y,x<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> a,b,c = <span class=\"number\">1</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(a,b,c)</span><br/><span class=\"line\"><span class=\"keyword\">local</span> a,b,c,d,e = <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(a,b,c,d,e)</span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\">=====结果=====</span><br/><span class=\"line\"><span class=\"number\">1</span>     <span class=\"literal\">nil</span>     <span class=\"literal\">nil</span></span><br/><span class=\"line\"><span class=\"number\">1</span>     <span class=\"number\">2</span>     <span class=\"number\">3</span>     <span class=\"number\">4</span>     <span class=\"number\">5</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>注意：如果要对多个变量赋值必须依次对每个变量赋值</p>\n<h3 id=\"控制结构语句\"><a href=\"#控制结构语句\" class=\"headerlink\" title=\"控制结构语句\"></a>控制结构语句</h3><p>if while 以及repeat这些控制结构符合通常的意义，而且也有类似的语法</p>\n<h4 id=\"if使用：\"><a href=\"#if使用：\" class=\"headerlink\" title=\"if使用：\"></a>if使用：</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br/><span class=\"line\"><span class=\"keyword\">if</span> conditions <span class=\"keyword\">then</span></span><br/><span class=\"line\">     <span class=\"keyword\">then</span> - part</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">if</span> conditions <span class=\"keyword\">then</span></span><br/><span class=\"line\">     <span class=\"keyword\">then</span> - part</span><br/><span class=\"line\"><span class=\"keyword\">else</span></span><br/><span class=\"line\">     <span class=\"keyword\">then</span> - part</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">if</span> conditions <span class=\"keyword\">then</span> </span><br/><span class=\"line\">     <span class=\"keyword\">then</span> - part</span><br/><span class=\"line\"><span class=\"keyword\">elseif</span> conditions <span class=\"keyword\">then</span></span><br/><span class=\"line\">     <span class=\"keyword\">elseif</span> - part</span><br/><span class=\"line\">...     <span class=\"comment\">-- 多个elseif</span></span><br/><span class=\"line\"><span class=\"keyword\">else</span></span><br/><span class=\"line\">     <span class=\"keyword\">else</span> - part</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 第一种</span></span><br/><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"number\">21</span> &gt; <span class=\"number\">2</span> <span class=\"keyword\">then</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span>(<span class=\"string\">&#34;what?&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 第二种</span></span><br/><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"number\">1</span> &gt; <span class=\"number\">2</span> <span class=\"keyword\">then</span></span><br/><span class=\"line\"><span class=\"keyword\">else</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span> <span class=\"string\">&#34;what?&#34;</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--第三种</span></span><br/><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"number\">1</span> &gt; <span class=\"number\">2</span> <span class=\"keyword\">then</span></span><br/><span class=\"line\"><span class=\"keyword\">elseif</span> <span class=\"number\">1</span>&gt;<span class=\"number\">1</span> <span class=\"keyword\">then</span></span><br/><span class=\"line\"><span class=\"keyword\">else</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span> <span class=\"string\">&#34;what?&#34;</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\">=====结果=====</span><br/><span class=\"line\">what?</span><br/><span class=\"line\">what?</span><br/><span class=\"line\">what?</span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"while使用：\"><a href=\"#while使用：\" class=\"headerlink\" title=\"while使用：\"></a>while使用：</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">while</span> condition <span class=\"keyword\">do</span></span><br/><span class=\"line\">     statements</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> i,s = <span class=\"number\">1</span>,<span class=\"number\">0</span></span><br/><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span>&lt;<span class=\"number\">10</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">     a = a + <span class=\"number\">10</span></span><br/><span class=\"line\">     i = i + <span class=\"number\">1</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\">=====结果=====</span><br/><span class=\"line\"><span class=\"number\">90</span></span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"repeat使用-等同于do-while-：\"><a href=\"#repeat使用-等同于do-while-：\" class=\"headerlink\" title=\"repeat使用(等同于do-while)：\"></a>repeat使用(等同于do-while)：</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">repeat</span></span><br/><span class=\"line\">     statements</span><br/><span class=\"line\"><span class=\"keyword\">until</span> conditions</span><br/></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> i,a = <span class=\"number\">1</span>,<span class=\"number\">0</span></span><br/><span class=\"line\"><span class=\"keyword\">repeat</span></span><br/><span class=\"line\">     a = a + <span class=\"number\">10</span></span><br/><span class=\"line\">     i = i + <span class=\"number\">1</span></span><br/><span class=\"line\"><span class=\"keyword\">until</span> i &gt;= <span class=\"number\">10</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\">=====结果=====</span><br/><span class=\"line\"><span class=\"number\">90</span></span><br/></pre></td></tr></tbody></table></figure>\n<p>内部语句块的结束点不是在until这个关键字处，它还包括了其后的条件表达式</p>\n<h3 id=\"for语句\"><a href=\"#for语句\" class=\"headerlink\" title=\"for语句\"></a>for语句</h3><p>for语句有两大类，数值for循环，范围for循环<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 数值for</span></span><br/><span class=\"line\"><span class=\"keyword\">for</span> var = exp1,exp2,exp3 <span class=\"keyword\">do</span></span><br/><span class=\"line\">     loop = part</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 范型for</span></span><br/><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"built_in\">ipairs</span>(a) <span class=\"keyword\">do</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span>(i,v)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<h4 id=\"数值for循环\"><a href=\"#数值for循环\" class=\"headerlink\" title=\"数值for循环\"></a>数值for循环</h4><p>var自动会被申明，并且只在循环内有效果，循环过程中不要改过它的值<br/>exp3可以省略，默认是1，三个表达式只会在循环前触发一次，可以使函数返回值c<br/>循环过程中不要改变控制变量的值，那样做的结果是不可预知的，如果要退出循环，使用break语句<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> a = <span class=\"number\">0</span></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span></span></span><br/><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"number\">2</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">for</span> k = <span class=\"number\">1</span>,<span class=\"number\">10</span>,foo() <span class=\"keyword\">do</span></span><br/><span class=\"line\">     a = a + <span class=\"number\">1</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\">=====结果=====</span><br/><span class=\"line\"><span class=\"number\">5</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<h4 id=\"范型for循环\"><a href=\"#范型for循环\" class=\"headerlink\" title=\"范型for循环\"></a>范型for循环</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- print all values of array &#39;a&#39;</span></span><br/><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(a) <span class=\"keyword\">do</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span>(v)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<p>范型for遍历迭代子函数返回的每一个值。范型for和数值for有两点相同<br/>控制变量是局部变量<br/>不要修改控制变量的值<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> tdays = {<span class=\"string\">&#34;Sunday&#34;</span>,<span class=\"string\">&#34;Monday&#34;</span>,<span class=\"string\">&#34;Tuesday&#34;</span>,<span class=\"string\">&#34;Wednesday&#34;</span>,<span class=\"string\">&#34;Thursday&#34;</span>,<span class=\"string\">&#34;Friday&#34;</span>,<span class=\"string\">&#34;Saturday&#34;</span>}</span><br/><span class=\"line\"><span class=\"comment\">-- 范型for</span></span><br/><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(tdays) <span class=\"keyword\">do</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span>(v)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">-- 求t表中数的和</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> t = {<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">10</span>,<span class=\"number\">20</span>}</span><br/><span class=\"line\"><span class=\"keyword\">local</span> sum = <span class=\"number\">0</span></span><br/><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(t) <span class=\"keyword\">do</span></span><br/><span class=\"line\">     sum = sum + v</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(sum)</span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"break和return语句\"><a href=\"#break和return语句\" class=\"headerlink\" title=\"break和return语句\"></a>break和return语句</h3><p>break语句用来退出当前循环(for，repeat，while)。在循环外部不可以使用<br/>return语句，返回某个值，均只能放在某个语句块最后一句，end、else、until之前；若中途想用可用do..end来实现，例如 do return end<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> t = {<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"string\">&#34;&#34;</span>,<span class=\"string\">&#34;&#34;</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>}</span><br/><span class=\"line\"><span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(t) <span class=\"keyword\">do</span></span><br/><span class=\"line\">     <span class=\"keyword\">if</span> k == <span class=\"number\">2</span> <span class=\"keyword\">then</span></span><br/><span class=\"line\">          <span class=\"built_in\">print</span>(k,v)</span><br/><span class=\"line\">          <span class=\"keyword\">return</span></span><br/><span class=\"line\">     <span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure><p></p>","text":"chunk语句组chunk是一系列语句，lua执行的每一块语句，比如一个文件或者交互模式下的每一行都是一个chunk 语句块显式的语句块对于控制变量的作用范围很有用，有时候，显式的语句块被用来在另一个语句块中插入retuen或是break 赋值语句lua允许多重赋值，因此，赋值的...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#chunk%E8%AF%AD%E5%8F%A5%E7%BB%84\"><span class=\"toc-text\">chunk语句组</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E5%8F%A5%E5%9D%97\"><span class=\"toc-text\">语句块</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B5%8B%E5%80%BC%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">赋值语句</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A7%E5%88%B6%E7%BB%93%E6%9E%84%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">控制结构语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#if%E4%BD%BF%E7%94%A8%EF%BC%9A\"><span class=\"toc-text\">if使用：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#while%E4%BD%BF%E7%94%A8%EF%BC%9A\"><span class=\"toc-text\">while使用：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#repeat%E4%BD%BF%E7%94%A8-%E7%AD%89%E5%90%8C%E4%BA%8Edo-while-%EF%BC%9A\"><span class=\"toc-text\">repeat使用(等同于do-while)：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#for%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">for语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%80%BCfor%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">数值for循环</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%8C%83%E5%9E%8Bfor%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">范型for循环</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#break%E5%92%8Creturn%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">break和return语句</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"openresty通过lua增加随机traceid","uid":"1173ab172ce65d0ed152ddc459d93ed4","slug":"zl/2016-01-01-513_openresty通过lua增加随机traceid","date":"2024-04-03T03:47:35.789Z","updated":"2024-04-03T03:47:35.789Z","comments":true,"path":"api/articles/zl/2016-01-01-513_openresty通过lua增加随机traceid.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"在没有引入zipkin（或者阿里的鹰眼，百度的华佗）这种trace系统的时候，排查问题的一般思路都是按照请求链路来寻找问题源。因此如果能在请求链路中有一个唯一的标识就最好了，而在nginx/openresty做接入层的架构中，可以通过lua脚本生成一个随机traceid。随机数的...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Kafka cluaster partitions replicas group","uid":"6de49941c0e06cf59df272961068cd7b","slug":"zl/2016-01-01-510_Kafka cluaster partitions replicas group","date":"2024-04-03T03:47:35.788Z","updated":"2024-04-03T03:47:35.788Z","comments":true,"path":"api/articles/zl/2016-01-01-510_Kafka cluaster partitions replicas group.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Partition &amp; Replicas Kafka 集群默认自动分配解析 下面以一个Kafka集群中4个Broker举例，创建1个topic包含4个Partition，2 Replication；数据Producer流动如图所示： Broker1 Broker2 Bro...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}