{"title":"Lua Module 实践 · Pan's paper","uid":"c28313c3ad519923794454007fb8295e","slug":"zl/2016-01-01-711_Lua Module 实践 · Pan's paper","date":"2024-04-03T03:47:35.945Z","updated":"2024-04-03T03:47:35.946Z","comments":true,"path":"api/articles/zl/2016-01-01-711_Lua Module 实践 · Pan's paper.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>最近用openresty写接口，每个接口都要要链接数据库，写一个通用的模块来实现，顺便学习下lua module的相关知识。</p>\n<h3 id=\"lua-模块\"><a href=\"#lua-模块\" class=\"headerlink\" title=\"lua 模块\"></a>lua 模块</h3><p>Lua中的一个模块就是一个table，table元素包括变量，函数等。“因此创建一个模块很简单，就是创建一个 table，然后把需要导出的常量、函数放入其中，最后返回这个 table”。</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 定义一个名为 module 的模块</span></span><br/><span class=\"line\"><span class=\"built_in\">module</span> = {}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 定义一个常量</span></span><br/><span class=\"line\"><span class=\"built_in\">module</span>.constant = <span class=\"string\">&#34;这是一个常量&#34;</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 定义一个函数</span></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span></span></span><br/><span class=\"line\">    <span class=\"built_in\">io</span>.write(<span class=\"string\">&#34;这是一个公有函数！n&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">func2</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;这是一个私有函数！&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">module.func3</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">    func2()</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"built_in\">module</span></span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"require函数\"><a href=\"#require函数\" class=\"headerlink\" title=\"require函数\"></a>require函数</h4><p>require函数用来加载模块。</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&#34;&lt;模块名&gt;&#34;</span>)</span><br/><span class=\"line\"><span class=\"comment\">-- 或</span></span><br/><span class=\"line\"><span class=\"built_in\">require</span><span class=\"string\">&#34;&lt;模块名&gt;&#34;</span></span><br/></pre></td></tr></tbody></table></figure>\n<p>也可以给模块一个别名，方便调用</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> m = <span class=\"built_in\">require</span>(<span class=\"string\">&#34;module&#34;</span>)</span><br/><span class=\"line\"></span><br/><span class=\"line\">m.func1</span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"加载机制\"><a href=\"#加载机制\" class=\"headerlink\" title=\"加载机制\"></a>加载机制</h4><p>对于我们自定义的模块，并不是放在那个目录都行，require有一套自己的文件加载机制。</p>\n<blockquote>\n<p>require 用于搜索 Lua 文件的路径是存放在全局变量 package.path 中，当 Lua 启动后，会以环境变量 LUA_PATH 的值来初始这个环境变量。如果没有找到该环境变量，则使用一个编译时定义的默认路径来初始化。</p>\n</blockquote>\n<p>如果我们设置LUA_PATH环境变量（参考1）</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#LUA_PATH</span></span><br/><span class=\"line\"><span class=\"built_in\">export</span> LUA_PATH=<span class=\"string\">&#34;~/lua/?.lua&#34;</span></span><br/></pre></td></tr></tbody></table></figure>\n<p>那么调用 require(“module”) 时就会尝试打开以下文件目录去搜索目标。</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">/Users/dengjoe/lua/module.lua;</span><br/><span class=\"line\">./module.lua</span><br/><span class=\"line\">/usr/local/share/lua/5.1/module.lua</span><br/><span class=\"line\">/usr/local/share/lua/5.1/module/init.lua</span><br/><span class=\"line\">/usr/local/lib/lua/5.1/module.lua</span><br/><span class=\"line\">/usr/local/lib/lua/5.1/module/init.lua</span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"openresty-实践\"><a href=\"#openresty-实践\" class=\"headerlink\" title=\"openresty 实践\"></a>openresty 实践</h3><p>写一个链接数据库的module</p>\n<h4 id=\"设置module路径\"><a href=\"#设置module路径\" class=\"headerlink\" title=\"设置module路径\"></a>设置module路径</h4><p>在openresty中设置module路径的方式：</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">lua_package_path <span class=\"string\">&#39;lua/?.lua;/Users/zhangpan/Project/XinanServer/XinanServer/lua/module/?.lua;;&#39;</span>;</span><br/></pre></td></tr></tbody></table></figure>\n<p>其中<code>lua/?.lua;</code> 代表的绝对路径是 <code>~/lua/?.lua;</code>；后面一个是绝对路径。</p>\n<h4 id=\"设计module\"><a href=\"#设计module\" class=\"headerlink\" title=\"设计module\"></a>设计module</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">xinandb = {}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 创建数据库链接实例</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> mysql = <span class=\"built_in\">require</span> <span class=\"string\">&#34;resty.mysql&#34;</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">xinandb.db = mysql:new()</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 连接数据库</span></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">xinandb.connect</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">     <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> xinandb.db <span class=\"keyword\">then</span></span><br/><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"keyword\">false</span></span><br/><span class=\"line\">     <span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">     <span class=\"keyword\">local</span> ok, err, errno, sqlstate = (xinandb.db):connect {</span><br/><span class=\"line\">                    host = <span class=\"string\">&#34;127.0.0.1&#34;</span>,</span><br/><span class=\"line\">                    port = <span class=\"number\">3306</span>,</span><br/><span class=\"line\">                    database = <span class=\"string\">&#34;xinan&#34;</span>,</span><br/><span class=\"line\">                    user = <span class=\"string\">&#34;***&#34;</span>,</span><br/><span class=\"line\">                    password = <span class=\"string\">&#34;***&#34;</span>,</span><br/><span class=\"line\">                    max_packet_size = <span class=\"number\">1024</span> * <span class=\"number\">1024</span> }</span><br/><span class=\"line\">     <span class=\"keyword\">return</span> ok               </span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">return</span> xinandb</span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"yield\"><a href=\"#yield\" class=\"headerlink\" title=\"yield\"></a>yield</h4><p>这里遇到的一个问题：开始想创建db时就直接链接</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">xinandb.db = mysql:new()</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> ok, err, errno, sqlstate = (xinandb.db):connect {</span><br/><span class=\"line\">                    host = <span class=\"string\">&#34;127.0.0.1&#34;</span>,</span><br/><span class=\"line\">                    port = <span class=\"number\">3306</span>,</span><br/><span class=\"line\">                    database = <span class=\"string\">&#34;xinan&#34;</span>,</span><br/><span class=\"line\">                    user = <span class=\"string\">&#34;***&#34;</span>,</span><br/><span class=\"line\">                    password = <span class=\"string\">&#34;***&#34;</span>,</span><br/><span class=\"line\">                    max_packet_size = <span class=\"number\">1024</span> * <span class=\"number\">1024</span> }</span><br/></pre></td></tr></tbody></table></figure>\n<p>这样就会报一个错误</p>\n<blockquote>\n<p>[error] 7091#0: *291 lua entry thread aborted: runtime error: attempt to yield across C-call boundary</p>\n</blockquote>\n<p>最终参考文章<a href=\"https://orchina.org/topic/50/view\" target=\"_blank\" rel=\"external noopener noreferrer\">关于在config.lua中加入resolver包，出现跨界问题</a>解决。</p>\n<p>解决方式：把连接数据库操作封装在一个函数中供调用。</p>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><p>使用就比较简单了，和其他一样</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 连接DB</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> xinandb = <span class=\"built_in\">require</span>(<span class=\"string\">&#34;xinandb&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">local</span> res = xinandb:connect()</span><br/><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> res <span class=\"keyword\">then</span></span><br/><span class=\"line\">\tngx.say(<span class=\"string\">&#34;{&#34;errorCode&#34; : 1003, &#34;errorMessage&#34; : &#34;连接数据库错误&#34;}&#34;</span>)</span><br/><span class=\"line\">\t<span class=\"keyword\">return</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> db = xinandb.db;</span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><h4 id=\"参考1：设置环境变量的方式：\"><a href=\"#参考1：设置环境变量的方式：\" class=\"headerlink\" title=\"参考1：设置环境变量的方式：\"></a>参考1：设置环境变量的方式：</h4><blockquote>\n<p>如果没有 LUA_PATH 这个环境变量，也可以自定义设置，在当前用户根目录下打开 .profile文件（没有则创建，打开 .bashrc 文件也可以），例如把 “~/lua/“ 路径加入 LUA_PATH 环境变量里;</p>\n</blockquote>\n<p>然后执行</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.profile</span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"坑：再次打开终端环境变量失效\"><a href=\"#坑：再次打开终端环境变量失效\" class=\"headerlink\" title=\"坑：再次打开终端环境变量失效\"></a>坑：再次打开终端环境变量失效</h4><p>用的是Mac系统，shell是zsh。按照上面的方式设置了环境变量后，关闭终端，再次打开后环境变量就失效了。</p>\n<p>解决方式：将LUA_PATH添加到.zshrc 执行</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ~/.zshrc</span><br/></pre></td></tr></tbody></table></figure>","text":"最近用openresty写接口，每个接口都要要链接数据库，写一个通用的模块来实现，顺便学习下lua module的相关知识。 lua 模块Lua中的一个模块就是一个table，table元素包括变量，函数等。“因此创建一个模块很简单，就是创建一个 table，然后把需要导出的常量...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#lua-%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">lua 模块</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#require%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">require函数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6\"><span class=\"toc-text\">加载机制</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#openresty-%E5%AE%9E%E8%B7%B5\"><span class=\"toc-text\">openresty 实践</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AEmodule%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">设置module路径</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E8%AE%A1module\"><span class=\"toc-text\">设计module</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#yield\"><span class=\"toc-text\">yield</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">使用</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%831%EF%BC%9A%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84%E6%96%B9%E5%BC%8F%EF%BC%9A\"><span class=\"toc-text\">参考1：设置环境变量的方式：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9D%91%EF%BC%9A%E5%86%8D%E6%AC%A1%E6%89%93%E5%BC%80%E7%BB%88%E7%AB%AF%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E5%A4%B1%E6%95%88\"><span class=\"toc-text\">坑：再次打开终端环境变量失效</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua读取redis数据的null判断","uid":"f3a7845e6db0af3e539b51ace62eadf8","slug":"zl/2016-01-01-712_lua读取redis数据的null判断","date":"2024-04-03T03:47:35.946Z","updated":"2024-04-03T03:47:35.946Z","comments":true,"path":"api/articles/zl/2016-01-01-712_lua读取redis数据的null判断.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"最近在配合移动端调试的时候，被抓去debug一个在清除redis缓存之后才会出现的网关错误。于是打开服务器上的log定位到类似错误: 1[error] 7#7: *12030 lua entry thread aborted: runtime error: /data/share...","link":"","photos":[],"count_time":{"symbolsCount":964,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua元表","uid":"0498ed7eca93166bac9cec9951eb31df","slug":"zl/2016-01-01-710_Lua元表 [ Chuang Yu ]","date":"2024-04-03T03:47:35.945Z","updated":"2024-04-03T03:47:35.945Z","comments":true,"path":"api/articles/zl/2016-01-01-710_Lua元表 [ Chuang Yu ].json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"javascript语言本身不支持面向对象，ES2015中增加了class关键字，却不过是prototype语法糖而已，本质上prototype形式的面向对象只能算是一种“模拟”，这其中很重要的原因之一是js从来没有一套完美的深拷贝方案，子类只能借助原型链获取父类方法的引用，这不...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}