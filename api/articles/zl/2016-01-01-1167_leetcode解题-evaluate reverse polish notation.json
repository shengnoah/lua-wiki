{"title":"leetcode解题-evaluate reverse polish notation","uid":"3b56f38f203407e078d4484adbbe57c0","slug":"zl/2016-01-01-1167_leetcode解题-evaluate reverse polish notation","date":"2024-04-03T03:47:33.022Z","updated":"2024-04-03T03:47:33.023Z","comments":true,"path":"api/articles/zl/2016-01-01-1167_leetcode解题-evaluate reverse polish notation.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p><span itemprop=\"articleBody\"><h2 id=\"描述\">描述</h2><blockquote></p>\n<p>Evaluate the value of an arithmetic expression in Reverse Polish Notation.</p>\n<p>Valid operators are +, -, *, /. Each operand may be an integer or another expression.</p>\n<p>Some examples:<br/>  [“2”, “1”, “+”, “3”, “*“] -&gt; ((2 + 1) * 3) -&gt; 9<br/>  [“4”, “13”, “5”, “/“, “+”] -&gt; (4 + (13 / 5)) -&gt; 6</p>\n</blockquote>\n<h2 id=\"分析\">分析</h2><p>逆波兰式求值，比较简单，注意代码里除法<code>int(float(a) / b))</code>是因为Python 2有一个奇葩的设置就是除法结果是负数的时候是向下取整的（我们需要向0取整）。</p>\n<h2 id=\"代码\">代码</h2><h3 id=\"Python\">Python</h3><figure class=\"highlight python\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"params\">(object)</span>:</span></span><br/><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">eval</span><span class=\"params\">(self, op, a, b)</span>:</span></span><br/><span class=\"line\">        <span class=\"keyword\">if</span> op == <span class=\"string\">&#39;+&#39;</span>:</span><br/><span class=\"line\">            <span class=\"keyword\">return</span> a + b</span><br/><span class=\"line\">        <span class=\"keyword\">elif</span> op == <span class=\"string\">&#39;-&#39;</span>:</span><br/><span class=\"line\">            <span class=\"keyword\">return</span> a - b</span><br/><span class=\"line\">        <span class=\"keyword\">elif</span> op == <span class=\"string\">&#39;*&#39;</span>:</span><br/><span class=\"line\">            <span class=\"keyword\">return</span> a * b</span><br/><span class=\"line\">        <span class=\"keyword\">elif</span> op == <span class=\"string\">&#39;/&#39;</span>:</span><br/><span class=\"line\">            <span class=\"keyword\">return</span> int(float(a) / b)</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">evalRPN</span><span class=\"params\">(self, tokens)</span>:</span></span><br/><span class=\"line\">        <span class=\"string\">&#34;&#34;&#34;</span><br/><span class=\"line\">        :type tokens: List[str]</span><br/><span class=\"line\">        :rtype: int</span><br/><span class=\"line\">        &#34;&#34;&#34;</span></span><br/><span class=\"line\">        ss = []</span><br/><span class=\"line\">        <span class=\"keyword\">for</span> t <span class=\"keyword\">in</span> tokens:</span><br/><span class=\"line\">            <span class=\"keyword\">if</span> t <span class=\"keyword\">in</span> <span class=\"string\">&#39;+-*/&#39;</span>:</span><br/><span class=\"line\">                b = ss.pop()</span><br/><span class=\"line\">                a = ss.pop()</span><br/><span class=\"line\">                ss.append(self.eval(t, a, b))</span><br/><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br/><span class=\"line\">                ss.append(int(t))</span><br/><span class=\"line\">        <span class=\"keyword\">return</span> ss[-<span class=\"number\">1</span>]</span><br/></pre></td></tr></tbody></table></figure>\n</span>","text":"描述 Evaluate the value of an arithmetic expression in Reverse Polish Notation. Valid operators are +, -, *, /. Each operand may be an integer...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">描述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%86%E6%9E%90\"><span class=\"toc-text\">分析</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">代码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Python\"><span class=\"toc-text\">Python</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua中匪夷所思的table长度","uid":"9021bd9835a131c8e48098fdd26e102c","slug":"zl/2016-01-01-1165_lua中匪夷所思的table长度","date":"2024-04-03T03:47:33.022Z","updated":"2024-04-03T03:47:33.022Z","comments":true,"path":"api/articles/zl/2016-01-01-1165_lua中匪夷所思的table长度.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"s = { 1, 2, 3, 4, 5, 6 } print(#s) -- output: 6 s[4] = nil print(#s) -- output: 6 s[7] = nil print(#s) -- output: 3 s[4] = 4 print(#s) -- ou...","link":"","photos":[],"count_time":{"symbolsCount":605,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"mac下编码调试cocos2dx lua的工具","uid":"eaac9a587df989315ec9ccff36214068","slug":"zl/2016-01-01-1161_mac下编码调试cocos2dx lua的工具","date":"2024-04-03T03:47:33.021Z","updated":"2024-04-03T03:47:33.021Z","comments":true,"path":"api/articles/zl/2016-01-01-1161_mac下编码调试cocos2dx lua的工具.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Content ","link":"","photos":[],"count_time":{"symbolsCount":42,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}