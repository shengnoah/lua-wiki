{"title":"lua table深拷贝","uid":"edf7212f56a6607561f8cb09a5c0dcb3","slug":"zl/2016-01-01-971_lua table深拷贝","date":"2024-04-03T03:47:36.232Z","updated":"2024-04-03T03:47:36.233Z","comments":true,"path":"api/articles/zl/2016-01-01-971_lua table深拷贝.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>深拷贝，只需要对table类型进行递归拷贝即可，其他类型直接用赋值拷贝或浅拷贝。</p>\n<p>还有，拷贝后的table应与原table具有相同的元表，and元表不需要递归拷贝。</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">function</span> <span class=\"nf\">deepcopy</span><span class=\"p\">(</span> <span class=\"n\">src</span> <span class=\"p\">)</span>\n\t<span class=\"kd\">local</span> <span class=\"n\">lookup_table</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span>\n\t<span class=\"kd\">local</span> <span class=\"k\">function</span> <span class=\"nf\">_copy</span><span class=\"p\">(</span> <span class=\"n\">object</span> <span class=\"p\">)</span>\n\t\t<span class=\"k\">if</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">object</span><span class=\"p\">)</span> <span class=\"o\">~=</span> <span class=\"s2\">&#34;table&#34;</span> <span class=\"k\">then</span>\n\t\t\t<span class=\"k\">return</span> <span class=\"n\">object</span>\n\t\t<span class=\"k\">elseif</span> <span class=\"n\">lookup_table</span><span class=\"p\">[</span><span class=\"n\">object</span><span class=\"p\">]</span> <span class=\"k\">then</span>\n\t\t\t<span class=\"k\">return</span> <span class=\"n\">lookup_table</span><span class=\"p\">[</span><span class=\"n\">object</span><span class=\"p\">]</span>\n\t\t<span class=\"k\">end</span>\n<pre><code>\t&lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_table&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&#123;&#125;&lt;/span&gt;\n\t&lt;span class=&quot;n&quot;&gt;lookup_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_table&lt;/span&gt;\n\t&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pairs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;\n        &lt;span class=&quot;c1&quot;&gt;--table的key可以是任意基本类型，所以不仅需要对value进行递归拷贝，也要对key进行递归拷贝&lt;/span&gt;\n\t\t&lt;span class=&quot;n&quot;&gt;new_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n\t&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;\n\n    &lt;span class=&quot;c1&quot;&gt;--设置元表&lt;/span&gt;\n\t&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;setmetatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;getmetatable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;\n&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;\n\n&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_copy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;\n</code></pre>\n<p><span class=\"k\">end</span></p>\n<p><span class=\"kd\">local</span> <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">}</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">tt</span> <span class=\"o\">=</span> <span class=\"p\">{</span><br />\n<span class=\"n\">t1</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"p\">,</span><br />\n<span class=\"n\">t2</span> <span class=\"o\">=</span> <span class=\"n\">t</span><br />\n<span class=\"p\">}</span></p>\n<p><span class=\"kd\">local</span> <span class=\"n\">tcopy</span> <span class=\"o\">=</span> <span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">tt</span><span class=\"p\">)</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tt</span><span class=\"p\">.</span><span class=\"n\">t1</span><span class=\"p\">,</span> <span class=\"n\">tt</span><span class=\"p\">.</span><span class=\"n\">t2</span><span class=\"p\">)</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tcopy</span><span class=\"p\">.</span><span class=\"n\">t1</span><span class=\"p\">,</span> <span class=\"n\">tcopy</span><span class=\"p\">.</span><span class=\"n\">t2</span><span class=\"p\">)</span></p>\n<p><span class=\"c1\">–输出</span><br />\n<span class=\"c1\">–table: 0074D710</span><br />\n<span class=\"c1\">–table: 0074D710 table: 0074D710</span><br />\n<span class=\"c1\">–table: 0074CAA0 table: 0074CAA0</span><br />\n<span class=\"c1\">–可以看到，tt里面的t1和t2其实是同一个table，所以进行深拷贝的时候要保持这种联系，而不是在深拷贝后里面变成两个独立的table，使用了lookup_table来保存已经拷贝过的对象。</span><br />\n<span class=\"c1\">–而且使用lookup_table还避免了下面这种情况</span></p>\n<p><span class=\"n\">t</span><span class=\"p\">.</span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">t</span> <span class=\"c1\">– 有个索引指向自己，如果不用lookup_table的话保存的话会进入死循环</span><br />\n<span class=\"kd\">local</span> <span class=\"n\">t1</span> <span class=\"o\">=</span> <span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">.</span><span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">t1</span><span class=\"p\">.</span><span class=\"n\">b</span><span class=\"p\">)</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">t1</span><span class=\"p\">)</span><br />\n<span class=\"c1\">–输出</span><br />\n<span class=\"c1\">–table: 007EAEA8 table: 007ED1B8</span><br />\n<span class=\"c1\">–table: 007EAEA8 table: 007ED1B8</span><br />\n</code></pre></div></div></p>\n","text":"深拷贝，只需要对table类型进行递归拷贝即可，其他类型直接用赋值拷贝或浅拷贝。 还有，拷贝后的table应与原table具有相同的元表，and元表不需要递归拷贝。 function deepcopy( src ) local lookup_table = &#123;&#125...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Centos7安装Nginx整合Lua","uid":"b2ed6721ac7c046b1a394babb74083fa","slug":"zl/2016-01-01-970_Centos7安装Nginx整合Lua","date":"2024-04-03T03:47:36.232Z","updated":"2024-04-03T03:47:36.232Z","comments":true,"path":"api/articles/zl/2016-01-01-970_Centos7安装Nginx整合Lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"(adsbygoogle=window.adsbygoogle||[]).push({})背景Lua 是一种轻量小巧的脚本语言，用标准C语言编写并以源代码形式开放， 其设计目的是为了嵌入应用程序中，从而为应用程序提供灵活的扩展和定制功能。现在通常把lua迁入nginx中，根据lu...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"如何搭建Lua开发环境","uid":"087f35f4fb5b860f15b04244dbbcbdea","slug":"zl/2016-01-01-96_如何搭建Lua开发环境","date":"2024-04-03T03:47:36.232Z","updated":"2024-04-03T03:47:36.232Z","comments":true,"path":"api/articles/zl/2016-01-01-96_如何搭建Lua开发环境.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 摘要 工欲善其事必先利其器，在开发Lua代码之前，我们必须要搭建好一个Lua开发环境。下面是在MAC上面搭建Lua环境的步骤。 Linux上面的步骤与其基本相似，而Windows与之有所差异，在最后将补充说明。 环境清单 lua 5.3.3 luarocks 2.3.0 安装过...","link":"","photos":[],"count_time":{"symbolsCount":666,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}