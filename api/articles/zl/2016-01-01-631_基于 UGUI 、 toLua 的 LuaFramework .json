{"title":"基于 UGUI 、 toLua 的 LuaFramework","uid":"0c6771ffefa78cdb4b5206606b16ff16","slug":"zl/2016-01-01-631_基于 UGUI 、 toLua 的 LuaFramework ","date":"2024-04-03T03:47:35.855Z","updated":"2024-04-03T03:47:35.859Z","comments":true,"path":"api/articles/zl/2016-01-01-631_基于 UGUI 、 toLua 的 LuaFramework .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h3 id=\"怎么做到热更新的\">怎么做到热更新的</h3>\n<p>开始游戏时对比本地和服务器的files.txt,其中包含了每个AssetBundle的名字和MD5码，如果有文件不存在过MD5码不同则进行更新下载，进而实现更新内容。</p>\n<h4 id=\"个人理解\">个人理解</h4>\n<p>luaframework的好处：</p>\n<ol>\n  <li>不需要在Unity内考虑如何调用lua脚本</li>\n  <li>只需要完善相应panel界面以及Ctrl和Panel脚本即可</li>\n</ol>\n<h4 id=\"使用过程\">使用过程：</h4>\n<ol>\n  <li>Unity项目标题栏LuaFramework根据项目平台进行Build<br/>\n会有错误出现，无关紧要的错误注释即可</li>\n  <li>安装资源管理服务器，将StreamingAssets文件夹放入其中</li>\n  <li>配置AppConst.cs内容<br/>\nUpdateMode（更新模式-默认关闭）、GameFrameRate（游戏帧频）、WebUrl（测试更新地址）</li>\n  <li>打开Sences/main场景，正常显示测试场景内容即可</li>\n  <li>将场景打包发布对应平台</li>\n  <li>在Unity中更改main场景中对应的panel</li>\n  <li>Unity标题栏LuaFramework选项根据对应项目平台重新进行Build</li>\n  <li>将StreamingAssets文件夹重新放入资源管理服务器</li>\n  <li>在模拟器中打开相应app查看场景内容是否改变</li>\n</ol>\n<h5 id=\"建议\">建议：</h5>\n<ol>\n  <li>发布windows平台exe应用无法进行内容的更新显示，始终是打包时的内容，建议打包成 Android apk</li>\n  <li>打包安卓 apk 时会报错，需要把Plugins文件加下的ios,x86,x64文件夹删除即可正常打包</li>\n</ol>\n<h4 id=\"添加panel流程\">添加Panel流程：</h4>\n<p>如果你想要添加一个Panel,你需要一下几个东西：</p>\n<ol>\n  <li>在unity中的Panel预制体</li>\n  <li>需要有两个lua脚本，<br/>\n一个panel.lua，用来控制该界面元素的显隐操作<br/>\n一个ctrl.lua，用来编写该界面的逻辑内容<br/>\n类似于PromptPanel和PromptCtrl</li>\n  <li>把panel.lua放进define脚本中的PanelNames中</li>\n  <li>把ctrl.lua放进define脚本中的CtrlNames中</li>\n  <li>在CtrlManager中require所有的lua的Ctrl脚本</li>\n  <li>在CtrlManager的Init方法中添加相应的数据</li>\n</ol>\n<h5 id=\"注意点\">注意点：</h5>\n<ol>\n  <li>在CustomSetting.cs中的customTypeList可添加要导出注册到lua的类型列表</li>\n  <li>如果有新的资源需要打包，需要在Packager的HandleExampleBundle()方法中添加，每一行就是一个包</li>\n</ol>\n<h4 id=\"在lua中调用unity的静态类\">在lua中调用unity的静态类</h4>\n<ol>\n  <li>在CustomSetting.cs中的customTypeList、staticClassTypes注册类</li>\n  <li>在LuaFramework/ToLua/Lua中的tolua.lua中reqire要注册的类</li>\n  <li>点击Lua/Generate All Lua</li>\n  <li>即可在Lua脚本中直接调用静态类中的方法</li>\n</ol>\n<h5 id=\"注意点-1\">注意点：</h5>\n<ol>\n  <li>lua中调用Unity的静态类的属性和方法都只需要一个点\n例如PlayerPrefs.GetString(username)</li>\n</ol>\n<h4 id=\"在lua中调用unity的非静态类\">在lua中调用unity的非静态类</h4>\n<ol>\n  <li>在CustomSetting.cs中的customTypeList中注册类</li>\n  <li>类似lua中Ctrl脚本的panelMgr:CreatePanel(‘Login’, this.OnCreate);回调OnCreate把unity中的对象传到lua中，所以OnCreate有一个obj参数，function LoginCtrl.OnCreate(obj)</li>\n</ol>\n<h5 id=\"注意点-2\">注意点：</h5>\n<ol>\n  <li>在lua中调用unity中的非静态类的属性时用一个点，调用方法时用冒号<br/>\n例如：transform = obj.transform;<br/>\n panel = transform:GetComponent(‘UIPanel’);</li>\n</ol>\n<h4 id=\"常见错误\">常见错误</h4>\n<ol>\n  <li>\n    <p>OnStreamingAssets—»xxxxxx\n解决方法：未成功生成相应平台资源包，重新点击Unity标题栏LuaFramework选项根据对应项目平台重新进行Build</p>\n  </li>\n  <li>\n    <p>打开一个panel后关闭它，然后再重新打开，可能会出现背景图片消失的情况\n解决方法：将预制物打一个包即可，背景图片无需另外打一个包</p>\n  </li>\n</ol>\n<pre><code>            &lt;hr style=&quot;visibility: hidden;&quot;/&gt;\n</code></pre>\n","text":"怎么做到热更新的 开始游戏时对比本地和服务器的files.txt,其中包含了每个AssetBundle的名字和MD5码，如果有文件不存在过MD5码不同则进行更新下载，进而实现更新内容。 个人理解 luaframework的好处： 不需要在Unity内考虑如何调用lua脚本 只需要...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%8E%E4%B9%88%E5%81%9A%E5%88%B0%E7%83%AD%E6%9B%B4%E6%96%B0%E7%9A%84\"><span class=\"toc-text\">怎么做到热更新的</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%AA%E4%BA%BA%E7%90%86%E8%A7%A3\"><span class=\"toc-text\">个人理解</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">使用过程：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%BB%BA%E8%AE%AE\"><span class=\"toc-text\">建议：</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0panel%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">添加Panel流程：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E7%82%B9\"><span class=\"toc-text\">注意点：</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9C%A8lua%E4%B8%AD%E8%B0%83%E7%94%A8unity%E7%9A%84%E9%9D%99%E6%80%81%E7%B1%BB\"><span class=\"toc-text\">在lua中调用unity的静态类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E7%82%B9-1\"><span class=\"toc-text\">注意点：</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%9C%A8lua%E4%B8%AD%E8%B0%83%E7%94%A8unity%E7%9A%84%E9%9D%9E%E9%9D%99%E6%80%81%E7%B1%BB\"><span class=\"toc-text\">在lua中调用unity的非静态类</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E7%82%B9-2\"><span class=\"toc-text\">注意点：</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF\"><span class=\"toc-text\">常见错误</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"nginx+nginx_lua实现WAF防护功能","uid":"fb5e643e6b664b70a86ae4c86017db1c","slug":"zl/2016-01-01-632_nginx+nginx_lua实现WAF防护功能","date":"2024-04-03T03:47:35.859Z","updated":"2024-04-03T03:47:35.860Z","comments":true,"path":"api/articles/zl/2016-01-01-632_nginx+nginx_lua实现WAF防护功能.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Do one thing at a time, and do well.nginx_luanginx_lua模块是nginx的第三方模块，它可以将lua语言嵌入到nginx配置中，从而极大的扩展了nginx的能力，nginx以高并发而知名，而lua作为嵌入式语言轻便，两者的结合可...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua中ipairs和pairs的区别与使用","uid":"ee708369e43d7b01905981d2b3485e2f","slug":"zl/2016-01-01-630_Lua中ipairs和pairs的区别与使用","date":"2024-04-03T03:47:35.854Z","updated":"2024-04-03T03:47:35.855Z","comments":true,"path":"api/articles/zl/2016-01-01-630_Lua中ipairs和pairs的区别与使用.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;a href=&quot;/2015/11/11/lua_cpp_toluapp_tutorial/&quot; rel=&quot;next&quot; title=&quot;tolua++安装&quot;&gt; &lt;i class=&quot;fa fa-c...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}