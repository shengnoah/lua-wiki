{"title":"Lua正则表达式","uid":"0fb98131247c865eb6ecfbafce819c65","slug":"zl/2016-01-01-1001_Lua正则表达式","date":"2024-04-03T03:47:32.956Z","updated":"2024-04-03T03:47:32.957Z","comments":true,"path":"api/articles/zl/2016-01-01-1001_Lua正则表达式.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>几乎所有的编程语言都有正则表达式的支持，<code>Lua</code>也不例外，但是<code>Lua</code>的正则表达式和其他编程语言不太一样，不是标准的通用正则表达式，<code>Lua</code>有自己的一套表示方式。</p>\n<h2 id=\"匹配模式\"><a href=\"#匹配模式\" class=\"headerlink\" title=\"匹配模式\"></a>匹配模式</h2><p><code>Lua</code>的匹配模式主要是用于<code>Lua</code>字符串处理函数<code>string.find, string.match，string.gmatch, string.gsub</code>服务的。</p>\n<h3 id=\"字符类\"><a href=\"#字符类\" class=\"headerlink\" title=\"字符类\"></a>字符类</h3><table>\n<thead>\n<tr>\n<th>字符</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>x</td>\n<td>表示字符<code>x</code>本身，<code>x</code>不能是魔法字符<code>^ $ ( ) % . [ ] * + - ?</code></td>\n</tr>\n<tr>\n<td>%x</td>\n<td>表示字符<code>x</code>本身，<code>x</code>为所有非字母数字字符（包括魔法字符，标点符号等）</td>\n</tr>\n<tr>\n<td>.</td>\n<td>表示所有字符</td>\n</tr>\n<tr>\n<td>%a</td>\n<td>表示所有字母</td>\n</tr>\n<tr>\n<td>%A</td>\n<td><code>%a</code>的补集</td>\n</tr>\n<tr>\n<td>%c</td>\n<td>表示所有控制字符</td>\n</tr>\n<tr>\n<td>%C</td>\n<td><code>%c</code>的补集</td>\n</tr>\n<tr>\n<td>%d</td>\n<td>表示所有数字</td>\n</tr>\n<tr>\n<td>%D</td>\n<td><code>%d</code>的补集</td>\n</tr>\n<tr>\n<td>%g</td>\n<td>表示除空白字符以外的所有可打印字符</td>\n</tr>\n<tr>\n<td>%G</td>\n<td><code>%g</code>的补集</td>\n</tr>\n<tr>\n<td>%l</td>\n<td>表示所有小写字母</td>\n</tr>\n<tr>\n<td>%L</td>\n<td><code>%l</code>的补集</td>\n</tr>\n<tr>\n<td>%p</td>\n<td>表示所有标点符号</td>\n</tr>\n<tr>\n<td>%P</td>\n<td><code>%p</code>的补集</td>\n</tr>\n<tr>\n<td>%s</td>\n<td>表示所有空白字符</td>\n</tr>\n<tr>\n<td>%S</td>\n<td><code>%s</code>的补集</td>\n</tr>\n<tr>\n<td>%u</td>\n<td>表示所有大写字母</td>\n</tr>\n<tr>\n<td>%U</td>\n<td><code>%u</code>的补集</td>\n</tr>\n<tr>\n<td>%w</td>\n<td>表示所有字母及数字</td>\n</tr>\n<tr>\n<td>%W</td>\n<td><code>%w</code>的补集</td>\n</tr>\n<tr>\n<td>%x</td>\n<td>表示所有16进制数字符号</td>\n</tr>\n<tr>\n<td>%X</td>\n<td><code>%x</code>的补集</td>\n</tr>\n<tr>\n<td>[set]</td>\n<td>表示<code>set</code>中的字符组合, 可以使用<code>-</code>来表示范围，例如<code>[0-7%l%-]</code>表示<code>8</code>进制数字加小写字母与<code>-</code>字符。交叉使用类和范围的行为未定义，像<code>[%a-z]</code>或<code>[a-%%]</code>这样的模式串没有意义。</td>\n</tr>\n<tr>\n<td>[^set]</td>\n<td>表示<code>set</code>的补集</td>\n</tr>\n</tbody></table>\n<ul>\n<li>如何定义字母、空格、或是其他字符组取决于当前的区域设置。特别注意：<code>[a-z]</code>未必等价于<code>%l</code>。</li>\n<li>上述单个字符类匹配该类别中任意单个字符。</li>\n</ul>\n<h3 id=\"模式条目\"><a href=\"#模式条目\" class=\"headerlink\" title=\"模式条目\"></a>模式条目</h3><table>\n<thead>\n<tr>\n<th>字符</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>+</td>\n<td>将匹配一或多个该类的字符，这个条目总是匹配尽可能长的串</td>\n</tr>\n<tr>\n<td>*</td>\n<td>将匹配零或多个该类的字符，这个条目总是匹配尽可能长的串</td>\n</tr>\n<tr>\n<td>-</td>\n<td>将匹配零或多个该类的字符，和<code>*</code>不同，这个条目总是匹配尽可能短的串</td>\n</tr>\n<tr>\n<td>？</td>\n<td>将匹配零或一个该类的字符，只要有可能，它会匹配一个</td>\n</tr>\n<tr>\n<td>%n</td>\n<td>将匹配一个等于第<code>n</code>号捕获物的子串，<code>n</code>可以从<code>1</code>到<code>9</code></td>\n</tr>\n<tr>\n<td>%bxy</td>\n<td>将匹配以<code>x</code>开始<code>y</code>结束，且其中<code>x</code>和<code>y</code>保持平衡的字符串， 例如<code>%b(), %b[], %&lt;&gt;, %&#123;&#125;</code>可以匹配到括号平衡的表达式</td>\n</tr>\n<tr>\n<td>%f[set]</td>\n<td>将匹配一个空串（<code>边境模式</code>），仅当后一个字符属于<code>set</code>，前一个字符不属于<code>set</code>。 注意单个字符也必须写在<code>[]</code>中</td>\n</tr>\n</tbody></table>\n<h3 id=\"模式\"><a href=\"#模式\" class=\"headerlink\" title=\"模式\"></a>模式</h3><ul>\n<li>模式指一个模式条目的序列。</li>\n<li>在模式最前面加上符号<code>^</code>将锚定从字符串的开始处做匹配。</li>\n<li>在模式最后面加上符号<code>$</code>将使匹配过程锚定到字符串的结尾。</li>\n<li>如果<code>^</code>和<code>$</code>出现在其它位置，它们均没有特殊含义表示自身。</li>\n</ul>\n<h3 id=\"捕获\"><a href=\"#捕获\" class=\"headerlink\" title=\"捕获\"></a>捕获</h3><ul>\n<li>模式可以在内部用小括号括起一个子模式，这些子模式被称为捕获物。当匹配成功时，由捕获物匹配到的子串被保存起来用于未来的用途。捕获物以它们左括号的次序来编号。</li>\n<li>作为一个特例，空的捕获<code>()</code>将捕获到当前字符串的索引位置（它是一个数字）。例如，如果将模式<code>()aa()</code> 作用到字符串<code>flaaap</code>上，将产生两个捕获物：<code>3</code>和<code>5</code>。</li>\n</ul>\n<h2 id=\"string-find\"><a href=\"#string-find\" class=\"headerlink\" title=\"string.find\"></a>string.find</h2><ul>\n<li>函数原型：<code>string.find(s, pattern [, init [, plain]])</code></li>\n<li>查找字符串<code>s</code>中匹配到<code>pattern</code>的第一个字符串，若找到一个匹配，则返回匹配到的字符串在<code>s</code>中起始和结束位置的索引，没找到，则返回<code>nil</code>。</li>\n<li>第三个参数<code>init</code>表示从哪里开始查找，默认值为<code>1</code>，可以为负值，表示从字符串末尾反向索引。</li>\n<li>第四个参数<code>plain</code>表示是否关闭<code>pattern</code>所表示的模式匹配，<code>true</code>表示关闭，默认是<code>false</code>表示开启模式匹配。</li>\n<li>如果在模式中定义了捕获，捕获到的若干值也会在两个索引之后返回。</li>\n</ul>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> s = <span class=\"string\">&#34;Lua ^5.3.4$ was released on 30/01/2017&#34;</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">find</span>(s, <span class=\"string\">&#34;Lua&#34;</span>))       <span class=\"comment\">-- 1 3</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">find</span>(s, <span class=\"string\">&#34;Lua&#34;</span>, <span class=\"number\">2</span>))    <span class=\"comment\">-- nil</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">find</span>(s, <span class=\"string\">&#34;Lua&#34;</span>, <span class=\"number\">-100</span>)) <span class=\"comment\">-- 1 3</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- close the pattern</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> i, j = <span class=\"built_in\">string</span>.<span class=\"built_in\">find</span>(s, <span class=\"string\">&#34;%d+/%d+/%d+&#34;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(i, j, <span class=\"string\">&#34;&#39;&#34;</span> .. <span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>(s, i, j) .. <span class=\"string\">&#34;&#39;&#34;</span>) <span class=\"comment\">-- 29 38 &#39;30/01/2017&#39;</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">find</span>(s, <span class=\"string\">&#34;%d+/%d+/%d+&#34;</span>, <span class=\"number\">1</span>, <span class=\"literal\">true</span>))  <span class=\"comment\">-- nil</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- ^, $ position in a pattern, has different meaning</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">find</span>(s, <span class=\"string\">&#34;%d+$&#34;</span>)) <span class=\"comment\">-- 35 38</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> i, j = <span class=\"built_in\">string</span>.<span class=\"built_in\">find</span>(s, <span class=\"string\">&#34;%d$.%a+&#34;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(i, j, <span class=\"string\">&#34;&#39;&#34;</span> .. <span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>(s, i, j) .. <span class=\"string\">&#34;&#39;&#34;</span>) <span class=\"comment\">-- 10 15 &#39;4$ was&#39;</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">find</span>(s, <span class=\"string\">&#34;^%a+&#34;</span>)) <span class=\"comment\">-- 1 3</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> i, j = <span class=\"built_in\">string</span>.<span class=\"built_in\">find</span>(s, <span class=\"string\">&#34;.^%d%.%d&#34;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(i, j, <span class=\"string\">&#34;&#39;&#34;</span> .. <span class=\"built_in\">string</span>.<span class=\"built_in\">sub</span>(s, i, j) .. <span class=\"string\">&#34;&#39;&#34;</span>) <span class=\"comment\">-- 4 8 &#39; ^5.3&#39;</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- captures</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> i, j, cap1, cap2, cap3 = <span class=\"built_in\">string</span>.<span class=\"built_in\">find</span>(s, <span class=\"string\">&#34;(%d+)/(%d+)/(%d+)&#34;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(i, j, cap1, cap2, cap3) <span class=\"comment\">-- 29 38 30 01 2017</span></span><br/></pre></td></tr></tbody></table></figure>\n<h2 id=\"string-match\"><a href=\"#string-match\" class=\"headerlink\" title=\"string.match\"></a>string.match</h2><ul>\n<li><p>函数原型：<code>string.match(s, pattern [, init])</code></p>\n</li>\n<li><p>查找字符串<code>s</code>中匹配到<code>pattern</code>的第一个字符串，若没找到，则返回<code>nil</code>，若找到了一个匹配：</p>\n<ul>\n<li><p>如果<code>pattern</code>不包含任何捕获，则返回整个匹配到的字符串</p>\n</li>\n<li><p>如果<code>pattern</code>包含捕获，则只按顺序返回捕获的部分</p>\n</li>\n</ul>\n</li>\n<li><p>第三个参数<code>init</code>表示从哪里开始查找，默认值为<code>1</code>，可以为负值，表示从字符串末尾反向索引。</p>\n</li>\n</ul>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- string.match</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> s = <span class=\"string\">&#34;Lua ^5.3.4$ was released on 30/01/2017&#34;</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">match</span>(s, <span class=\"string\">&#34;Lua&#34;</span>)) <span class=\"comment\">-- Lua</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">match</span>(s, <span class=\"string\">&#34;%d+/%d+/%d+&#34;</span>)) <span class=\"comment\">-- 30/01/2017</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- pattern contains captures</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">match</span>(s, <span class=\"string\">&#34;%d+/(%d+)/(%d+)&#34;</span>)) <span class=\"comment\">-- 01 2017</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- quote match</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> s = <span class=\"string\">[[then he said: &#34;it&#39;s all right&#34;!]]</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> q, quotedPart = <span class=\"built_in\">string</span>.<span class=\"built_in\">match</span>(s, <span class=\"string\">&#34;([&#34;&#39;])(.-)%1&#34;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(quotedPart) <span class=\"comment\">-- it&#39;s all right</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(q) <span class=\"comment\">-- &#34;</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- %bxy pattern</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> s = <span class=\"string\">&#34;a (enclosed (in) parentheses) line&#34;</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">match</span>(s, <span class=\"string\">&#34;%b()&#34;</span>)) <span class=\"comment\">-- (enclosed (in) parentheses)</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- empty captures</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">match</span>(<span class=\"string\">&#34;hello&#34;</span>, <span class=\"string\">&#34;()ll()&#34;</span>)) <span class=\"comment\">-- 3 5</span></span><br/></pre></td></tr></tbody></table></figure>\n<h2 id=\"string-gmatch\"><a href=\"#string-gmatch\" class=\"headerlink\" title=\"string.gmatch\"></a>string.gmatch</h2><ul>\n<li>函数原型：<code>string.gmatch(s, pattern)</code></li>\n<li>返回一个迭代器函数，每次调用这个函数都会返回<code>s</code>中匹配到<code>pattern</code>的下一个捕获。 如果<code>pattern</code>不包含任何捕获，则返回整个匹配到的字符串。</li>\n</ul>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- string.gmatch</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> s = <span class=\"string\">&#34;Lua ^5.3.4$ was released on 30/01/2017&#34;</span></span><br/><span class=\"line\"><span class=\"keyword\">for</span> w <span class=\"keyword\">in</span> <span class=\"built_in\">string</span>.<span class=\"built_in\">gmatch</span>(s, <span class=\"string\">&#34;%a+&#34;</span>) <span class=\"keyword\">do</span></span><br/><span class=\"line\">  <span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">upper</span>(w))</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"comment\">--[[</span></span><br/><span class=\"line\"><span class=\"comment\">LUA</span></span><br/><span class=\"line\"><span class=\"comment\">WAS</span></span><br/><span class=\"line\"><span class=\"comment\">RELEASED</span></span><br/><span class=\"line\"><span class=\"comment\">ON</span></span><br/><span class=\"line\"><span class=\"comment\">]]</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- pattern contains captures</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> t = {}</span><br/><span class=\"line\"><span class=\"keyword\">local</span> s = <span class=\"string\">&#34;from=world, to=Lua&#34;</span></span><br/><span class=\"line\"><span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> <span class=\"built_in\">string</span>.<span class=\"built_in\">gmatch</span>(s, <span class=\"string\">&#34;(%w+)=(%w+)&#34;</span>) <span class=\"keyword\">do</span></span><br/><span class=\"line\">  t[k] = v</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<h2 id=\"string-gsub\"><a href=\"#string-gsub\" class=\"headerlink\" title=\"string.gsub\"></a>string.gsub</h2><ul>\n<li>函数原型：<code>string.gsub(s, pattern, repl [, n])</code></li>\n<li>将字符串<code>s</code>中所有（或者前<code>n</code>个）匹配到<code>pattern</code>的内容都替换成<code>repl</code>指定的内容，并返回其副本。<code>repl</code>可以是字符串、表、或函数。<code>gsub</code>还会在第二个返回值中返回一共发生了多少次匹配。</li>\n<li>如果<code>repl</code>是一个字符串，那么把这个字符串作为替换品。字符<code>%</code>是一个转义符：<code>repl</code>中的所有形式为<code>%d</code>的串表示第<code>d</code>个捕获到的子串，<code>d</code>可以是<code>1</code>到<code>9</code>，<code>%0</code>表示整个匹配。</li>\n<li>如果<code>repl</code>是张表，每次匹配时都会用第一个捕获物作为键去查这张表来获取要替换的字符串。</li>\n<li>如果<code>repl</code>是个函数，则在每次匹配发生时都会调用这个函数。所有捕获到的子串依次作为参数传入来获取要替换的字符串。</li>\n<li>如果表的查询结果或函数的返回结果是一个字符串或是个数字，都将其作为替换用串；而在返回<code>false</code>或<code>nil</code>时不作替换。</li>\n<li>任何情况下，<code>pattern</code>中没有设定捕获都看成是捕获整个<code>pattern</code>。</li>\n</ul>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- string.gsub</span></span><br/><span class=\"line\"><span class=\"comment\">-- %f[set], 2 times of replacement</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> s = <span class=\"string\">&#34;the anthem is the theme&#34;</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">gsub</span>(s, <span class=\"string\">&#34;%f[%w]the%f[%W]&#34;</span>, <span class=\"string\">&#34;one&#34;</span>)) <span class=\"comment\">-- one anthem is one theme 2</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- %0, %1~9</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> s = <span class=\"string\">&#34;Lua 5.3.4 was released on 30/01/2017&#34;</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> s1, n = <span class=\"built_in\">string</span>.<span class=\"built_in\">gsub</span>(s, <span class=\"string\">&#34;(%d+)/(%d+)/(%d+)&#34;</span>, <span class=\"string\">&#34;%0 [%3-%2-%1]&#34;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(s1, n) <span class=\"comment\">-- Lua 5.3.4 was released on 30/01/2017 [2017-01-30] 1</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">gsub</span>(<span class=\"string\">&#34;hello world&#34;</span>, <span class=\"string\">&#34;(%w+)&#34;</span>, <span class=\"string\">&#34;%1 %1&#34;</span>))  <span class=\"comment\">-- hello hello world world 2</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- only one time of replacement</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">gsub</span>(<span class=\"string\">&#34;hello world&#34;</span>, <span class=\"string\">&#34;(%w+)&#34;</span>, <span class=\"string\">&#34;%1 %1&#34;</span>, <span class=\"number\">1</span>)) <span class=\"comment\">-- hello hello world 1</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">gsub</span>(<span class=\"string\">&#34;hello world from Lua&#34;</span>, <span class=\"string\">&#34;(%w+)%s*(%w+)&#34;</span>, <span class=\"string\">&#34;%2 %1&#34;</span>)) <span class=\"comment\">-- world hello Lua from 2</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- os.getenv</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> str = <span class=\"built_in\">string</span>.<span class=\"built_in\">gsub</span>(<span class=\"string\">&#34;HOME=$HOME, JAVA_HOME=$JAVA_HOME&#34;</span>, <span class=\"string\">&#34;%$([%w_]+)&#34;</span>, <span class=\"built_in\">os</span>.<span class=\"built_in\">getenv</span>)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(str) <span class=\"comment\">-- HOME=/Users/jtcheng, JAVA_HOME=$JAVA_HOME</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- table t do not contains a key &#34;TAR&#34;</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> t = {name=<span class=\"string\">&#34;lua&#34;</span>, version=<span class=\"string\">&#34;5.3.4&#34;</span>}</span><br/><span class=\"line\"><span class=\"keyword\">local</span> s2, n = <span class=\"built_in\">string</span>.<span class=\"built_in\">gsub</span>(<span class=\"string\">&#34;$TAR -zxvf $name-$version.tar.gz&#34;</span>, <span class=\"string\">&#34;%$(%w+)&#34;</span>, t)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(s2, n) <span class=\"comment\">-- $TAR -zxvf lua-5.3.4.tar.gz 3</span></span><br/></pre></td></tr></tbody></table></figure>","text":"几乎所有的编程语言都有正则表达式的支持，Lua也不例外，但是Lua的正则表达式和其他编程语言不太一样，不是标准的通用正则表达式，Lua有自己的一套表示方式。 匹配模式Lua的匹配模式主要是用于Lua字符串处理函数string.find, string.match，string.g...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8C%B9%E9%85%8D%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">匹配模式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E7%B1%BB\"><span class=\"toc-text\">字符类</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E5%BC%8F%E6%9D%A1%E7%9B%AE\"><span class=\"toc-text\">模式条目</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E5%BC%8F\"><span class=\"toc-text\">模式</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8D%95%E8%8E%B7\"><span class=\"toc-text\">捕获</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#string-find\"><span class=\"toc-text\">string.find</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#string-match\"><span class=\"toc-text\">string.match</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#string-gmatch\"><span class=\"toc-text\">string.gmatch</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#string-gsub\"><span class=\"toc-text\">string.gsub</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua 学习 chapter7","uid":"d1f12ad6b4cafc4f9e33f041f7e58f17","slug":"zl/2016-01-01-1002_Lua 学习 chapter7 ","date":"2024-04-03T03:47:32.957Z","updated":"2024-04-03T03:47:32.958Z","comments":true,"path":"api/articles/zl/2016-01-01-1002_Lua 学习 chapter7 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"目录 简单I/O模型 完整I/O模型 其它文件操作 其它系统调用 I want to have a talk with you my heart. 简单I/O模型 对于文件操作，I/O提供了两种不同的模型。简单模型虚拟了一个当前输入流和一个当前的输出流，其I/O是通过这些流实现的...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"AutoToolboxPopluate","uid":"d72911d6138a43fb366bdf9c4bbc95d4","slug":"zl/2016-01-01-2_AutoToolboxPopluate","date":"2024-04-03T02:49:57.028Z","updated":"2024-04-03T02:49:57.028Z","comments":true,"path":"api/articles/zl/2016-01-01-2_AutoToolboxPopluate.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;摘要:AutoToolboxPopluate&lt;/p&gt; &lt;br /&gt; &lt;p&gt;从 Visual Studio 2005 之后就会把 User Control 是否显示在 Toolbox 透过设定来决定是否显示(载入)，&lt;b...","link":"","photos":[],"count_time":{"symbolsCount":355,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}