{"title":"在原有的nginx上面安装Openresty和lua相关的模块","uid":"0d892d9759f4be16a021241761f801c2","slug":"zl/2016-01-01-870_在原有的nginx上面安装Openresty和lua相关的模块","date":"2024-04-03T03:47:36.141Z","updated":"2024-04-03T03:47:36.141Z","comments":true,"path":"api/articles/zl/2016-01-01-870_在原有的nginx上面安装Openresty和lua相关的模块.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>突然有一天出了个需求，做文件防盗链的，而且需要通过nginx来做，这个时候必然想到了<code>Openresty</code>，Openresty本身其实已经安装有nginx了，但是要求在公司原有的nginx上面装一些Openresty里面的模块，这个时候就有点复杂了，但是最终还是研究出来了，庆幸啊，这里做一个笔记，以便下次安装使用。<br/></p>\n<h1 id=\"安装openresty\"><a href=\"#安装openresty\" class=\"headerlink\" title=\"安装openresty\"></a>安装openresty</h1><ol>\n<li>下载openresty  </li>\n</ol>\n<p>下载地址：<a href=\"https://github.com/openresty/openresty/releases\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/openresty/openresty/releases</a><br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/openresty/openresty/releases/download/v1.13.6.1/openresty-1.13.6.1.tar.gz</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<ol start=\"2\">\n<li>编译安装  </li>\n</ol>\n<p>解压<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xvf openresty-1.13.6.1.tar.gz</span><br/><span class=\"line\"></span><br/><span class=\"line\">cd openresty-1.13.6.1</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>编译安装<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">./configure -j2</span><br/><span class=\"line\"></span><br/><span class=\"line\">gmake</span><br/><span class=\"line\"></span><br/><span class=\"line\">gmake install</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<h1 id=\"安装lua\"><a href=\"#安装lua\" class=\"headerlink\" title=\"安装lua\"></a>安装lua</h1><p>在下载<code>openresty</code>安装包的时候，里面其实已经依赖了<code>lua</code>了，只需要安装就好了</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">cd openresty-1.13.6.1/bundle/LuaJIT-2.1-20171103/</span><br/><span class=\"line\"></span><br/><span class=\"line\">make</span><br/><span class=\"line\"></span><br/><span class=\"line\">make install</span><br/></pre></td></tr></tbody></table></figure>\n<h1 id=\"nginx添加相关模块\"><a href=\"#nginx添加相关模块\" class=\"headerlink\" title=\"nginx添加相关模块\"></a>nginx添加相关模块</h1><ol>\n<li>配置lua位置  </li>\n</ol>\n<p>找到以前<code>nginx</code>的源码包，配置lua位置</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">cd nginx-1.15.0</span><br/><span class=\"line\"></span><br/><span class=\"line\">export LUAJIT_LIB=/usr/local/openresty/lualib/</span><br/><span class=\"line\">export LUAJIT_INC=/usr/local/openresty/luajit/include/luajit-2.1/</span><br/></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>重新编译nginx  </li>\n</ol>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/usr/local/nginx --with-cc-opt=-O2 --add-module=/root/openresty-1.13.6.1/bundle/ngx_devel_kit-0.3.0 --add-module=/root/openresty-1.13.6.1/bundle/echo-nginx-module-0.61 --add-module=/root/openresty-1.13.6.1/bundle/xss-nginx-module-0.05 --add-module=/root/openresty-1.13.6.1/bundle/ngx_coolkit-0.2rc3 --add-module=/root/openresty-1.13.6.1/bundle/set-misc-nginx-module-0.31 --add-module=/root/openresty-1.13.6.1/bundle/form-input-nginx-module-0.12 --add-module=/root/openresty-1.13.6.1/bundle/encrypted-session-nginx-module-0.07 --add-module=/root/openresty-1.13.6.1/bundle/srcache-nginx-module-0.31 --add-module=/root/openresty-1.13.6.1/bundle/ngx_lua-0.10.11 --add-module=/root/openresty-1.13.6.1/bundle/ngx_lua_upstream-0.07 --add-module=/root/openresty-1.13.6.1/bundle/headers-more-nginx-module-0.33 --add-module=/root/openresty-1.13.6.1/bundle/array-var-nginx-module-0.05 --add-module=/root/openresty-1.13.6.1/bundle/memc-nginx-module-0.18 --add-module=/root/openresty-1.13.6.1/bundle/redis2-nginx-module-0.14 --add-module=/root/openresty-1.13.6.1/bundle/redis-nginx-module-0.3.7 --add-module=/root/openresty-1.13.6.1/bundle/rds-json-nginx-module-0.15 --add-module=/root/openresty-1.13.6.1/bundle/rds-csv-nginx-module-0.08 --add-module=/root/openresty-1.13.6.1/bundle/ngx_stream_lua-0.0.3 --with-ld-opt=-Wl,-rpath,/usr/local/lib/ --with-stream --with-stream_ssl_module --with-http_ssl_module</span><br/></pre></td></tr></tbody></table></figure>\n<p>编译完成了，执行<code>make</code>，记住，这里不要执行<code>make install</code>，不然会把以前安装的会覆盖的</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">make</span><br/></pre></td></tr></tbody></table></figure>\n<p>这里有几个参数说明一下：</p>\n<ul>\n<li>–prefix=/usr/local/nginx：nginx安装目录</li>\n<li>–add-module=/root/openresty-1.13.6.1/bundle：这个是刚刚下载的openresty安装包</li>\n<li>–with-ld-opt=-Wl,-rpath,/usr/local/lib/：lua安装的路径，上面lua安装的时候，默认是这个位置的</li>\n</ul>\n<p>编译完成后，会新生成一个nginx执行文件，在nginx-1.15.0/objs目录下，测试一下对应的依赖有没有装上</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">cd nginx-1.15.0/objs</span><br/><span class=\"line\"></span><br/><span class=\"line\">./nginx -V</span><br/></pre></td></tr></tbody></table></figure>\n<p>显示以下，说明完美<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">nginx version: nginx/1.15.0</span><br/><span class=\"line\">built by gcc 4.8.5 20150623 (Red Hat 4.8.5-28) (GCC)</span><br/><span class=\"line\">built with OpenSSL 1.0.2k-fips  26 Jan 2017</span><br/><span class=\"line\">TLS SNI support enabled</span><br/><span class=\"line\">configure arguments: --prefix=/usr/local/nginx --with-cc-opt=-O2 --add-module=/root/openresty-1.13.6.1/bundle/ngx_devel_kit-0.3.0 --add-module=/root/openresty-1.13.6.1/bundle/echo-nginx-module-0.61 --add-module=/root/openresty-1.13.6.1/bundle/xss-nginx-module-0.05 --add-module=/root/openresty-1.13.6.1/bundle/ngx_coolkit-0.2rc3 --add-module=/root/openresty-1.13.6.1/bundle/set-misc-nginx-module-0.31 --add-module=/root/openresty-1.13.6.1/bundle/form-input-nginx-module-0.12 --add-module=/root/openresty-1.13.6.1/bundle/encrypted-session-nginx-module-0.07 --add-module=/root/openresty-1.13.6.1/bundle/srcache-nginx-module-0.31 --add-module=/root/openresty-1.13.6.1/bundle/ngx_lua-0.10.11 --add-module=/root/openresty-1.13.6.1/bundle/ngx_lua_upstream-0.07 --add-module=/root/openresty-1.13.6.1/bundle/headers-more-nginx-module-0.33 --add-module=/root/openresty-1.13.6.1/bundle/array-var-nginx-module-0.05 --add-module=/root/openresty-1.13.6.1/bundle/memc-nginx-module-0.18 --add-module=/root/openresty-1.13.6.1/bundle/redis2-nginx-module-0.14 --add-module=/root/openresty-1.13.6.1/bundle/redis-nginx-module-0.3.7 --add-module=/root/openresty-1.13.6.1/bundle/rds-json-nginx-module-0.15 --add-module=/root/openresty-1.13.6.1/bundle/rds-csv-nginx-module-0.08 --add-module=/root/openresty-1.13.6.1/bundle/ngx_stream_lua-0.0.3 --with-ld-opt=-Wl,-rpath,/usr/local/lib/ --with-stream --with-stream_ssl_module --with-http_ssl_module</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<ol start=\"3\">\n<li>复制nginx命令覆盖以前的nginx  </li>\n</ol>\n<p>复制前，最好把之前的nginx备份一下，以防不测<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/nginx/sbin/</span><br/><span class=\"line\"></span><br/><span class=\"line\">cp nginx nginx.old</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>赢新的覆盖,覆盖之前，最好停掉nginx<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">cd nginx-1.15.0/</span><br/><span class=\"line\"></span><br/><span class=\"line\">cp objs/nginx /usr/local/nginx/sbin/</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>这里会提示是否覆盖，输入y，然后回车就好了</p>\n<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><ol>\n<li>先测试nginx有没有被玩坏，先检查一下</li>\n</ol>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/nginx</span><br/><span class=\"line\"></span><br/><span class=\"line\">./sbin/nginx -t</span><br/><span class=\"line\"></span><br/><span class=\"line\">./sbin/nginx</span><br/></pre></td></tr></tbody></table></figure>\n<p>启动完成，访问下以前的站点还能不能正常打开，目测是没问题的</p>\n<ol start=\"2\">\n<li>测试lua模块</li>\n</ol>\n<p>创建一个专门存放lua文件的文件夹,我习惯创建在nginx目录下<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/nginx</span><br/><span class=\"line\"></span><br/><span class=\"line\">mkdir lua</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>创建一个lua文件<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">vim hello.lua</span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\">ngx.log(ngx.ERR,&#34;hello&#34;);</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>把这个lua文件依赖到nginx里面试试<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">location / {</span><br/><span class=\"line\">        root /workspace/hexo/public/;</span><br/><span class=\"line\">        index index.html index.htm;</span><br/><span class=\"line\">        access_by_lua_file lua/hello.lua;</span><br/><span class=\"line\">}</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>老规矩，先检查下有没问题没，然后重启<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/nginx</span><br/><span class=\"line\"></span><br/><span class=\"line\">./sbin/nginx -t</span><br/><span class=\"line\"></span><br/><span class=\"line\">./sbin/nginx -s reload</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>然后打开日志，准备看有没有打印对应的日志信息<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">tail -f logs/error.log</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>正常会看到以下日志<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">2018/07/04 11:58:38 [error] 15646#0: *52 [lua] hello.lua:2: hello,</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>完美！</p>\n<pre><code>            &lt;hr size=&quot;1&quot;/&gt;\n            &lt;br/&gt;\n</code></pre>\n<p class=\"pink-link-context\">\n    <a href=\"/tech/cheng-xu-yuan-bi-bei-kai-fa-gong-ju-ti-gao-gong-zuo-xiao-lv/\" rel=\"next\" title=\"程序员必备开发工具，提高开发效率的神兵利器，大多都是免费的哦\">\n    上一篇：程序员必备开发工具，提高开发效率的神兵利器，大多都是免费的哦\n  </a>\n</p>\n<p class=\"pink-link-context\">\n    <a href=\"/tech/apollo-pei-zhi-zhong-xin-an-zhuang-bu-shu/\" rel=\"next\" title=\"Apollo分布式配置中心部署以及使用\">\n    下一篇：Apollo分布式配置中心部署以及使用\n  </a>\n</p>","text":"突然有一天出了个需求，做文件防盗链的，而且需要通过nginx来做，这个时候必然想到了Openresty，Openresty本身其实已经安装有nginx了，但是要求在公司原有的nginx上面装一些Openresty里面的模块，这个时候就有点复杂了，但是最终还是研究出来了，庆幸啊，这...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85openresty\"><span class=\"toc-text\">安装openresty</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85lua\"><span class=\"toc-text\">安装lua</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#nginx%E6%B7%BB%E5%8A%A0%E7%9B%B8%E5%85%B3%E6%A8%A1%E5%9D%97\"><span class=\"toc-text\">nginx添加相关模块</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">测试</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"塔dang時會倒luai？～～Pisa ki 塔[比薩斜塔] 張春凰","uid":"2872b1d6f1a5cdc7ae42551207a3d098","slug":"zl/2016-01-01-873_塔dang時會倒luai？～～Pisa ki 塔[比薩斜塔] 張春凰","date":"2024-04-03T03:47:36.143Z","updated":"2024-04-03T03:47:36.147Z","comments":true,"path":"api/articles/zl/2016-01-01-873_塔dang時會倒luai？～～Pisa ki 塔[比薩斜塔] 張春凰.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"塔dang時會倒luai？～～Pisa ki 塔[比薩斜塔] Pisa 是zit gai義大利旅遊上尾後落腳ｅ一站lo。 觀光區ｅ四箍笠仔，真特殊，一落遊覽車，路攤排ｅ紀念品，除了ki塔ｅ模型，義大利境內ｅ景點卡片，Pinocchioｅ複製品等等之外，真濟非洲人di zia de...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua 在 Android 中应用上,如何引入 Lua","uid":"bb9230b411dc55a2fbf212ffc7592664","slug":"zl/2016-01-01-871_Lua 在 Android 中应用上,如何引入 Lua","date":"2024-04-03T03:47:36.141Z","updated":"2024-04-03T03:47:36.142Z","comments":true,"path":"api/articles/zl/2016-01-01-871_Lua 在 Android 中应用上,如何引入 Lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"转载请附原文链接：Lua 在 Android 中应用上,如何引入 Lua 一、概要注：该部分适合不熟悉 NDK 编译的新手看，老司机请绕行 最近公司在做一个项目，利用一份 XML 文件来布局绘制 Android 和 iOS 界面，界面与用户的交互逻辑部分开始是根据自己定义的协议进...","link":"","photos":[],"count_time":{"symbolsCount":"5.1k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}