{"title":"Nginx 使用 lua","uid":"b2a7e9b111087d85b75d3fcb8b23cc07","slug":"zl/2016-01-01-937_Nginx 使用 lua","date":"2024-04-03T03:47:36.207Z","updated":"2024-04-03T03:47:36.208Z","comments":true,"path":"api/articles/zl/2016-01-01-937_Nginx 使用 lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<ul id=\"markdown-toc\">\n  <li><a href=\"#1-软件版本\" id=\"markdown-toc-1-软件版本\">1. 软件版本</a></li>\n  <li><a href=\"#2-环境准备\" id=\"markdown-toc-2-环境准备\">2. 环境准备</a></li>\n  <li><a href=\"#3-软件安装\" id=\"markdown-toc-3-软件安装\">3. 软件安装</a></li>\n  <li><a href=\"#4--配置lua脚本\" id=\"markdown-toc-4--配置lua脚本\">4.  配置lua脚本</a></li>\n  <li><a href=\"#5-配置php\" id=\"markdown-toc-5-配置php\">5. 配置php</a></li>\n  <li><a href=\"#6-配置日志记录post请求的request_body-和response_body\" id=\"markdown-toc-6-配置日志记录post请求的request_body-和response_body\">6. 配置日志，记录post请求的request_body 和response_body</a></li>\n</ul>\n<h2 id=\"1-软件版本\">1. 软件版本</h2>\n<ul>\n  <li>系统  <code class=\"language-plaintext highlighter-rouge\">centos6.7X86_64</code></li>\n  <li>nginx   <code class=\"language-plaintext highlighter-rouge\">1.11.5</code></li>\n  <li>lua-nginx-module  <code class=\"language-plaintext highlighter-rouge\">0.10.7</code></li>\n  <li>PHP   <code class=\"language-plaintext highlighter-rouge\">5.6.27</code></li>\n</ul>\n<h2 id=\"2-环境准备\">2. 环境准备</h2>\n<p>配置yum仓库</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>wget -O /etc/yum.repos.d/CentOS-Base.repo[https://lug.ustc.edu.cn/wiki/_export/code/mirrors/help/centos?codeblock=2](https://lug.ustc.edu.cn/wiki/_export/code/mirrors/help/centos?codeblock=2)\nwget -O /etc/yum.repos.d/epel.repo[https://lug.ustc.edu.cn/wiki/_export/code/mirrors/help/epel?codeblock=0](https://lug.ustc.edu.cn/wiki/_export/code/mirrors/help/epel?codeblock=0)\nwget -O /etc/yum.repos.d/epel-testing.repo[https://lug.ustc.edu.cn/wiki/_export/code/mirrors/help/epel?codeblock=1](https://lug.ustc.edu.cn/wiki/_export/code/mirrors/help/epel?codeblock=1)\n/usr/sbin/ntpdate  asia.pool.ntp.org\n</code></pre></div></div>\n<p>安装编译所需的依赖</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>yum -y install gcc gcc-c++ make libtool zlib zlib-devel openssl openssl-devel pcre  pcre-devel\n</code></pre></div></div>\n<h2 id=\"3-软件安装\">3. 软件安装</h2>\n<p>安装php5.6</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>rpm -Uvh https://mirror.webtatic.com/yum/el6/latest.rpm\nyum -y install php56w-cli php56w-mysql php56w-xml php56w-mbstring php56w-pdo php56w-bcmath php56w-mcrypt php56w-fpm \n</code></pre></div></div>\n<p>编译安装nginx</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>cd /opt/software/\nwget https://codeload.github.com/openresty/lua-nginx-module/tar.gz/v0.10.7\nwget http://luajit.org/download/LuaJIT-2.0.4.tar.gz\nwget https://nginx.org/download/nginx-1.11.5.tar.gz\n<p>groupadd nginx<br />\nuseradd -g nginx -s /sbin/nologin nginx<br />\nmkdir -p /var/tmp/nginx/client/<br />\nmkdir -p /usr/local/nginx</p>\n<p>tar zxf v0.10.7<br />\ntar zxf LuaJIT-2.0.4.tar.gz<br />\ntar zxf nginx-1.11.5.tar.gz</p>\n<p>cd LuaJIT-2.0.4/<br />\nmake &amp;&amp; make install</p>\n<p>cat &gt;&gt; /etc/profile &lt;&lt;EOF<br />\nexport LUAJIT_LIB=/usr/local/lib<br />\nexport LUAJIT_INC=/usr/local/include/luajit-2.0<br />\nexport LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH<br />\nEOF<br />\nsource /etc/profile</p>\n<p>cd …/nginx-1.11.5/<br />\n./configure   --prefix=/usr/local/nginx   --user=nginx   --group=nginx   --with-http_ssl_module   --with-http_flv_module   --with-http_stub_status_module   --with-http_gzip_static_module   --with-http_realip_module   --http-client-body-temp-path=/var/tmp/nginx/client/   --http-proxy-temp-path=/var/tmp/nginx/proxy/   --http-fastcgi-temp-path=/var/tmp/nginx/fcgi/   --http-uwsgi-temp-path=/var/tmp/nginx/uwsgi   --http-scgi-temp-path=/var/tmp/nginx/scgi   --with-pcre --add-module=…/lua-nginx-module-0.10.7</p>\n<p>make -j2<br />\nmake install<br />\n</code></pre></div></div></p>\n<h2 id=\"4--配置lua脚本\">4.  配置lua脚本</h2>\n<p>在nginx配置文件中添加下列location</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># /usr/local/nginx/conf/nginx.conf\n        location ~* ^/lua(/.*) &#123;\n                default_type &#39;text/plain&#39;;\n                content_by_lua &#39;ngx.say(&#34;hello, lua&#34;)&#39;;\n        &#125;\n</code></pre></div></div>\n<p>启动nginx</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>/usr/local/nginx/sbin/nginx\n</code></pre></div></div>\n<p>测试lua脚本执行</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>curl http://127.0.0.1/lua/\n</code></pre></div></div>\n<p>返回 hello, lua 为正常</p>\n<h2 id=\"5-配置php\">5. 配置php</h2>\n<p>启用如下选项</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>#/usr/local/nginx/conf/nginx.conf\nlocation / &#123;\n            root   /web;\n            index  index.php index.html index.htm;\n        &#125;\n<p>location ~ .php$ &#123;<br />\nroot           /web/;<br />\nfastcgi_pass   127.0.0.1:9000;<br />\nfastcgi_index  index.php;<br />\nfastcgi_param  SCRIPT_FILENAME  /<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>d</mi><mi>o</mi><mi>c</mi><mi>u</mi><mi>m</mi><mi>e</mi><mi>n</mi><msub><mi>t</mi><mi>r</mi></msub><mi>o</mi><mi>o</mi><mi>t</mi></mrow><annotation encoding=\"application/x-tex\">document_root</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.69444em;\"></span><span class=\"strut bottom\" style=\"height:0.84444em;vertical-align:-0.15em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">d</span><span class=\"mord mathit\">o</span><span class=\"mord mathit\">c</span><span class=\"mord mathit\">u</span><span class=\"mord mathit\">m</span><span class=\"mord mathit\">e</span><span class=\"mord mathit\">n</span><span class=\"mord\"><span class=\"mord mathit\">t</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">r</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span>​</span></span></span><span class=\"mord mathit\">o</span><span class=\"mord mathit\">o</span><span class=\"mord mathit\">t</span></span></span></span>fastcgi_script_name;<br />\ninclude        fastcgi_params;<br />\n&#125;<br />\n</code></pre></div></div></p>\n<p>在/web/目录下 新建index.php的测试页面，测试php是否能正常工作</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>mkdir /web/\ncat &gt; /web/info.php &lt;&lt; EOF\n&lt;?php\nphpinfo();\n?&gt;\nEOF\nchown nginx.nginx -R /web/\n</code></pre></div></div>\n<p>启动php-fpm和nginx</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>/etc/init.d/php-fpm start\n/usr/local/nginx/sbin/nginx  -s reload\n</code></pre></div></div>\n<p>测试</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>curl http://127.0.0.1/info.php   \n</code></pre></div></div>\n<p>显示phpinfo页面，极为正常</p>\n<h2 id=\"6-配置日志记录post请求的request_body-和response_body\">6. 配置日志，记录post请求的request_body 和response_body</h2>\n<p>使用下列配置</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code># /usr/local/nginx/conf/nginx.conf\nuser  nginx;\nworker_processes  1;\n<p>events &#123;<br />\nworker_connections  1024;<br />\n&#125;</p>\n<p>http &#123;<br />\ninclude       mime.types;<br />\ndefault_type  application/octet-stream;</p>\n<pre><code>log_format postdata &amp;#39;$remote_addr | $request_body | $resp_body&amp;#39;;\n\nsendfile        on;\nkeepalive_timeout  65;\n\nserver &#123;\n    listen       80;\n    server_name  localhost;\n    charset utf-8;\n    set $resp_body &amp;#34;&amp;#34;;\n    location / &#123;\n        root   /web/;\n        index  index.php index.html index.htm;\n    &#125;\n\n    location ~* ^/lua(/.*) &#123;\n            default_type &amp;#39;text/plain&amp;#39;;\n            content_by_lua &amp;#39;ngx.say(&amp;#34;hello, lua&amp;#34;)&amp;#39;;\n    &#125;\n\n    location ~ .php$ &#123;\n                root           /web/;\n                fastcgi_pass   127.0.0.1:9000;\n                fastcgi_index  index.php;\n                fastcgi_param  SCRIPT_FILENAME  /$document_root$fastcgi_script_name;\n                include        fastcgi_params;\n                access_log /tmp/nginx_access.log postdata;\n                lua_need_request_body on;\n                body_filter_by_lua &amp;#39;\n                    local resp_body = string.sub(ngx.arg[1], 1, 1000)\n                    ngx.ctx.buffered = (ngx.ctx.buffered or&amp;#34;&amp;#34;) .. resp_body\n                    if ngx.arg[2] then\n                            ngx.var.resp_body = ngx.ctx.buffered\n                    end\n              &amp;#39;;\n    &#125;\n&#125;\n</code></pre>\n<p>}<br />\n</code></pre></div></div></p>\n<p>创建php文件，用来接收post请求，并返回数据</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>cat &gt;&gt; /web/index.php  &lt;&lt;EOF\n&lt;?php\n  header(&#34;Content-type:text/html;charset=utf-8&#34;); \n  print_r(file_get_contents(&#39;php://input&#39;));\n?&gt;\nEOF\nchown nginx.nginx /web/index.php\n</code></pre></div></div>\n<p>重启nginx</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>/usr/local/nginx/sbin/nginx  -s reload\n</code></pre></div></div>\n<p>使用postman工具来发送post请求</p>\n<p><img src=\"https://lework.github.io//assets/images/Nginx/3629406-42b51ef7b121d677.png\" alt=\"Paste_Image.png\"/></p>\n<p>查看日志</p>\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>cat  /tmp/nginx_access.log\n</code></pre></div></div>\n<p><img src=\"https://lework.github.io//assets/images/Nginx/3629406-3484725c836a316c.png\" alt=\"Paste_Image.png\"/></p>\n<p>已经记录post请求的request 和response数据了。</p>\n<p>第二行是因为post数据有中文字符，所以变成了16进制。解决方法见 <a href=\"http://www.jianshu.com/p/8f8c2b5ca2d1\">解决nginx在记录post数据时 中文字符转成16进制的问题</a></p>","text":" 1. 软件版本 2. 环境准备 3. 软件安装 4. 配置lua脚本 5. 配置php 6. 配置日志，记录post请求的request_body 和response_body 1. 软件版本 系统 centos6.7X86_64 nginx 1.11.5 lua-nginx-...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E8%BD%AF%E4%BB%B6%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">1. 软件版本</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E7%8E%AF%E5%A2%83%E5%87%86%E5%A4%87\"><span class=\"toc-text\">2. 环境准备</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">3. 软件安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4--%E9%85%8D%E7%BD%AElua%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">4.  配置lua脚本</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E9%85%8D%E7%BD%AEphp\"><span class=\"toc-text\">5. 配置php</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-%E9%85%8D%E7%BD%AE%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95post%E8%AF%B7%E6%B1%82%E7%9A%84request_body-%E5%92%8Cresponse_body\"><span class=\"toc-text\">6. 配置日志，记录post请求的request_body 和response_body</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"归并排序算法的lua实现","uid":"ef58c3b9d956f4d2e46a63246745c0c2","slug":"zl/2016-01-01-935_归并排序算法的lua实现","date":"2024-04-03T03:47:36.207Z","updated":"2024-04-03T03:47:36.207Z","comments":true,"path":"api/articles/zl/2016-01-01-935_归并排序算法的lua实现.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758-- 归并排序算法学习--[[ 1. 设置临时table, 用来存...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua数据类型","uid":"fbf063cfd1e14012521ff08e60dd9b1f","slug":"zl/2016-01-01-936_Lua数据类型","date":"2024-04-03T03:47:36.207Z","updated":"2024-04-03T03:47:36.207Z","comments":true,"path":"api/articles/zl/2016-01-01-936_Lua数据类型.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"前言 接触lua近4年了，一直断断续续读相关源码，这次计划把lua源码整体分析一遍，基于最新版本(Lua 5.3.5), 完成如下文章（顺序可能不一致）： 基本数据类型 string/table 剖析 luavm 分析 lexer/ast/gencode 词法分析/语法树/生成字...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}