{"title":"Lua学习","uid":"98627ae8510dc86d4061c2718311a9a7","slug":"zl/2016-01-01-134_Lua学习","date":"2024-04-03T03:47:33.034Z","updated":"2024-04-03T03:47:33.035Z","comments":true,"path":"api/articles/zl/2016-01-01-134_Lua学习.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><ul>\n<li>Lua是脚本型语言<ul>\n<li>动态编译</li>\n<li>动态执行<ul>\n<li>每次修改不需要重新编译链接执行</li>\n</ul>\n</li>\n<li>运行时编译而并非运行前编译</li>\n</ul>\n</li>\n<li>是C语言编写的</li>\n<li>速度比C语言快</li>\n</ul>\n<h2 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h2><h3 id=\"Lua的Hello-World\"><a href=\"#Lua的Hello-World\" class=\"headerlink\" title=\"Lua的Hello World\"></a>Lua的Hello World</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;Hello world&#34;</span>)</span><br/></pre></td></tr></tbody></table></figure>\n<p><strong>Lua行末不要分号</strong></p>\n<h3 id=\"Lua的括号\"><a href=\"#Lua的括号\" class=\"headerlink\" title=\"Lua的括号\"></a>Lua的括号</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">do</span></span><br/><span class=\"line\">    ……</span><br/><span class=\"line\">    ……</span><br/><span class=\"line\">    ……</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<p><strong>Lua语言几乎用不到大括号，取而代之的是do…end</strong></p>\n<h3 id=\"Lua的注释\"><a href=\"#Lua的注释\" class=\"headerlink\" title=\"Lua的注释\"></a>Lua的注释</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\">// 双斜杠不是注释了哦</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--[[</span></span><br/><span class=\"line\"><span class=\"comment\">这是一个多行注释哦</span></span><br/><span class=\"line\"><span class=\"comment\">]]</span></span><br/><span class=\"line\">/*</span><br/><span class=\"line\"> 这不是多行注释了哦</span><br/><span class=\"line\">*/</span><br/></pre></td></tr></tbody></table></figure>\n<p><strong>小心不要变成纯文本了</strong></p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--如果上面的多行注释没有写 双横线的话，就变成的纯文本赋值语句哦</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">a = <span class=\"string\">[[&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt;]]</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 这个时候的 a 就是一个纯文本</span></span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h3><ul>\n<li>Lua是动态类型，不需要定义就可以直接使用</li>\n</ul>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&#34;I&#39;m a&#34;</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;a is &#34;</span>..a)</span><br/></pre></td></tr></tbody></table></figure>\n<ul>\n<li><p>Lua的数据类型是动态可变的</p>\n</li>\n<li><p>Lua的数据类型</p>\n<ul>\n<li>数字类型<ul>\n<li>整型</li>\n<li>浮点型</li>\n<li>long double 等 都是 数字类型，并没有明确划分</li>\n</ul>\n</li>\n<li>字符串类型</li>\n<li>thread类型<ul>\n<li>线程也算是一个数据类型</li>\n</ul>\n</li>\n<li>function类型<ul>\n<li>函数方法的数据类型</li>\n</ul>\n</li>\n<li>table<ul>\n<li>数组，融合的链表和键值对等</li>\n</ul>\n</li>\n<li>其他类型</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(x)</span></span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;user input is &#34;</span>..x)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">a(<span class=\"string\">&#34;test&#34;</span>)</span><br/><span class=\"line\"><span class=\"comment\">-- 这就相当于调用了function(x) 那个函数</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 唯一一个使用了 大括号的地方</span></span><br/><span class=\"line\">myTable = {<span class=\"number\">12</span>,<span class=\"number\">13</span>}</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(myTable) <span class=\"comment\">-- 会输出table的地址</span></span><br/><span class=\"line\"><span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(myTable) <span class=\"keyword\">do</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(k,v)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"comment\">-- 输出了序列号和对应的值（序号从1开始）</span></span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"变量作用域\"><a href=\"#变量作用域\" class=\"headerlink\" title=\"变量作用域\"></a>变量作用域</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">b = <span class=\"string\">&#34;123&#34;</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> c = <span class=\"number\">12</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span></span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;i&#39;m lua&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myfuntion2</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">  \t<span class=\"keyword\">local</span> a = <span class=\"string\">&#34;hello&#34;</span></span><br/><span class=\"line\">    <span class=\"keyword\">return</span> a</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<ul>\n<li>其他lua文件引用该lua文件的时候，将无法访问到<code>local</code>标记的变量</li>\n<li>相当于 是一个 private 的变量</li>\n<li>反之 如果不加 <code>local</code>标识符，那么Lua默认的是全局变量<code>global</code>类型</li>\n</ul>\n<p><strong>如果一个function函数中创建的变量不是local的，就意味着它是一个global变量</strong></p>\n<h3 id=\"if语句-没有switch语句\"><a href=\"#if语句-没有switch语句\" class=\"headerlink\" title=\"if语句(没有switch语句)\"></a>if语句(没有switch语句)</h3><ul>\n<li>单独一个if</li>\n</ul>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> a = <span class=\"number\">12</span></span><br/><span class=\"line\"><span class=\"keyword\">if</span> a == <span class=\"number\">12</span> <span class=\"keyword\">then</span></span><br/><span class=\"line\">\t<span class=\"built_in\">print</span>(<span class=\"string\">&#34;a&#39;s value is 12&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<ul>\n<li>if..else 语句</li>\n</ul>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> a = <span class=\"number\">2</span></span><br/><span class=\"line\"><span class=\"keyword\">if</span> a == <span class=\"number\">2</span> <span class=\"keyword\">then</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;value is 12&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">else</span> </span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;value is not 12&#34;</span>)    </span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<ul>\n<li>if…else if…语句</li>\n</ul>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> a = <span class=\"number\">12</span></span><br/><span class=\"line\"><span class=\"keyword\">if</span> a == <span class=\"number\">12</span> <span class=\"keyword\">then</span> </span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;value is 12&#34;</span>)</span><br/><span class=\"line\">    <span class=\"keyword\">elseif</span> a ~= <span class=\"number\">11</span> <span class=\"keyword\">then</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;value is not 11&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<p><strong>这里不等于符号是 <code>~=</code> 注意注意！！！！！</strong></p>\n<h3 id=\"函数-方法\"><a href=\"#函数-方法\" class=\"headerlink\" title=\"函数/方法\"></a>函数/方法</h3><h4 id=\"无参无返回值\"><a href=\"#无参无返回值\" class=\"headerlink\" title=\"无参无返回值\"></a>无参无返回值</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f1</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;hello&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"有参无返回值\"><a href=\"#有参无返回值\" class=\"headerlink\" title=\"有参无返回值\"></a>有参无返回值</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f2</span><span class=\"params\">(a)</span></span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(a)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"有参有返回值\"><a href=\"#有参有返回值\" class=\"headerlink\" title=\"有参有返回值\"></a>有参有返回值</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f3</span><span class=\"params\">(a)</span></span></span><br/><span class=\"line\">    a += <span class=\"number\">2</span></span><br/><span class=\"line\">\t<span class=\"keyword\">return</span> a</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--调用</span></span><br/><span class=\"line\">a = f3(<span class=\"number\">123</span>)</span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"返回多个值\"><a href=\"#返回多个值\" class=\"headerlink\" title=\"返回多个值\"></a>返回多个值</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f4</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>,<span class=\"number\">2</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 调用</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> a,b = f4()</span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"可变参数列表\"><a href=\"#可变参数列表\" class=\"headerlink\" title=\"可变参数列表\"></a>可变参数列表</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">f5</span><span class=\"params\">(...)</span></span></span><br/><span class=\"line\">    <span class=\"keyword\">local</span> myTable = {...}</span><br/><span class=\"line\">    </span><br/><span class=\"line\">    <span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(myTable) <span class=\"keyword\">do</span></span><br/><span class=\"line\">        <span class=\"built_in\">print</span>(k,v)    </span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 调用</span></span><br/><span class=\"line\">f5(<span class=\"string\">&#34;12&#34;</span>,<span class=\"number\">123</span>,<span class=\"string\">&#34;ok&#34;</span>)</span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"库函数\"><a href=\"#库函数\" class=\"headerlink\" title=\"库函数\"></a>库函数</h4><ul>\n<li>print() 就是一个很明显的print()，因为我们没有定义它</li>\n<li>有些函数是Lua自带的</li>\n</ul>\n<h3 id=\"逻辑操作符\"><a href=\"#逻辑操作符\" class=\"headerlink\" title=\"逻辑操作符\"></a>逻辑操作符</h3><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">and</span> <span class=\"keyword\">or</span> <span class=\"keyword\">not</span></span><br/></pre></td></tr></tbody></table></figure>\n<ul>\n<li>表示假<ul>\n<li>false</li>\n<li>nil</li>\n</ul>\n</li>\n<li>表示真<ul>\n<li>0</li>\n<li>其他数值</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>and 和 or 就类似于 C语言中的 &amp;&amp; 和 ||</p>\n</blockquote>\n<ul>\n<li>and<ul>\n<li>如果我们第一个需要去计算的操作数，如果操作数是假，则返回第一个操作数</li>\n<li>反之则返回第二个操作数</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">1</span> <span class=\"keyword\">and</span> <span class=\"number\">2</span>)</span><br/><span class=\"line\"><span class=\"comment\">-- 输出的 2 哦</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">false</span> <span class=\"keyword\">and</span> <span class=\"number\">5</span>)</span><br/><span class=\"line\"><span class=\"comment\">-- 输出 false 哦</span></span><br/></pre></td></tr></tbody></table></figure>\n<ul>\n<li>or<ul>\n<li>如果第一个我们需要去计算你的操作数为真，返回第一个值</li>\n<li>反之返回第二个值</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"number\">1</span> <span class=\"keyword\">or</span> <span class=\"number\">5</span>)</span><br/><span class=\"line\"><span class=\"comment\">-- 返回 1</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"literal\">false</span> <span class=\"keyword\">or</span> <span class=\"number\">5</span>)</span><br/><span class=\"line\"><span class=\"comment\">-- 返回 5</span></span><br/></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>not 类似于 C语言的 ! 取反</p>\n</blockquote>\n<ul>\n<li>not <ul>\n<li>永远返回的是 true或false</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>( <span class=\"keyword\">not</span> <span class=\"literal\">nil</span>)</span><br/><span class=\"line\"><span class=\"comment\">-- 返回 true</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>( <span class=\"keyword\">not</span> <span class=\"number\">1</span>)</span><br/><span class=\"line\"><span class=\"comment\">-- 返回 false</span></span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"循环语句\"><a href=\"#循环语句\" class=\"headerlink\" title=\"循环语句\"></a>循环语句</h3><h4 id=\"while\"><a href=\"#while\" class=\"headerlink\" title=\"while\"></a>while</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> index = <span class=\"number\">1</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> mytable = {<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>}</span><br/><span class=\"line\"><span class=\"keyword\">while</span> mytable[index] <span class=\"keyword\">do</span> </span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(mytable[index])</span><br/><span class=\"line\">    index = index+<span class=\"number\">1</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"do……while换成了-repeat\"><a href=\"#do……while换成了-repeat\" class=\"headerlink\" title=\"do……while换成了 repeat\"></a>do……while换成了 repeat</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">repeat</span></span><br/><span class=\"line\">    line = <span class=\"built_in\">io</span>.<span class=\"built_in\">read</span>() <span class=\"comment\">-- 从命令行获取输入</span></span><br/><span class=\"line\">\t<span class=\"built_in\">print</span>(line)</span><br/><span class=\"line\"><span class=\"keyword\">until</span> line ~= <span class=\"string\">&#34;&#34;</span></span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"for循环\"><a href=\"#for循环\" class=\"headerlink\" title=\"for循环\"></a>for循环</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i = <span class=\"number\">1</span>, <span class=\"number\">5</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">\t<span class=\"built_in\">print</span>(i)    </span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"comment\">-- 输出 1 2 3 4 5 想想为什么</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">for</span> i = <span class=\"number\">1</span>, <span class=\"number\">10</span>, <span class=\"number\">2</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">\t<span class=\"built_in\">print</span>(i)    </span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"comment\">-- 输出 1 3 5 7 9 想想为什么</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">for</span> i = <span class=\"number\">20</span>, <span class=\"number\">10</span>, <span class=\"number\">-2</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">\t<span class=\"built_in\">print</span>(i)    </span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"comment\">-- 输出 20 18 16 14 12 想想为什么</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"built_in\">table</span> = {<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>}</span><br/><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1</span>, #<span class=\"built_in\">table</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">table</span>[i])</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"comment\">-- #table 相当于取 table的长度，然后遍历</span></span><br/></pre></td></tr></tbody></table></figure>\n<p><strong>上述可见，for 后面有三个参数 一个是初始化i，一个是结束判断，一个是加减i(默认为1)</strong></p>\n<h3 id=\"Table的使用\"><a href=\"#Table的使用\" class=\"headerlink\" title=\"Table的使用\"></a>Table的使用</h3><ul>\n<li>Table类似于Java的list和map的结合体</li>\n</ul>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 建立一个有数值的table</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> MyTable = {</span><br/><span class=\"line\">    <span class=\"number\">1</span>, \t\t\t<span class=\"comment\">-- 索引为1</span></span><br/><span class=\"line\">    <span class=\"number\">2</span>,\t\t\t<span class=\"comment\">-- 索引为2</span></span><br/><span class=\"line\">    <span class=\"number\">3</span>,\t\t\t<span class=\"comment\">-- 索引为3</span></span><br/><span class=\"line\">    <span class=\"number\">4</span>,\t\t\t<span class=\"comment\">-- 索引为4</span></span><br/><span class=\"line\">    <span class=\"number\">5</span>,\t\t\t<span class=\"comment\">-- 索引为5</span></span><br/><span class=\"line\">    table2 = {<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>}, <span class=\"comment\">-- 索引不为6</span></span><br/><span class=\"line\">    <span class=\"string\">&#34;ok&#34;</span>\t\t<span class=\"comment\">-- 索引为6</span></span><br/><span class=\"line\">}</span><br/></pre></td></tr></tbody></table></figure>\n<p><strong>为什么上面的table2的索引部位6呢？</strong></p>\n<h4 id=\"Table的遍历方式\"><a href=\"#Table的遍历方式\" class=\"headerlink\" title=\"Table的遍历方式\"></a>Table的遍历方式</h4><ul>\n<li>Table的复杂性导致其有三种遍历方式</li>\n<li>因为Table既是链表类型又是键值对类型</li>\n</ul>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">myTable = {</span><br/><span class=\"line\">    k = <span class=\"string\">&#34;x&#34;</span></span><br/><span class=\"line\">}</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(myTable[k])</span><br/><span class=\"line\"><span class=\"comment\">-- 输出 nil</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(myTable[<span class=\"string\">&#34;k&#34;</span>])</span><br/><span class=\"line\"><span class=\"comment\">-- 输出 x</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(myTable.k)</span><br/><span class=\"line\"><span class=\"comment\">-- 输出 x</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 又或者直接</span></span><br/><span class=\"line\">s = <span class=\"string\">&#34;ok&#34;</span></span><br/><span class=\"line\">myTable[s] = <span class=\"number\">10</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(myTable[s])</span><br/><span class=\"line\"><span class=\"comment\">-- 直接通过键去设置值</span></span><br/></pre></td></tr></tbody></table></figure>\n<p><strong>myTable.k 与 myTable[“k”]有所不同</strong></p>\n<ul>\n<li>myTable.k 等价于 myTable[“k”]，索引的键就变成了字符串</li>\n<li>myTable[k] 表示用变量k的值来索引table，索引的键可以是其他</li>\n</ul>\n<h4 id=\"普通遍历方式\"><a href=\"#普通遍历方式\" class=\"headerlink\" title=\"普通遍历方式\"></a>普通遍历方式</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">myTable={</span><br/><span class=\"line\">    <span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,k = <span class=\"string\">&#34;ok&#34;</span>,<span class=\"number\">5</span></span><br/><span class=\"line\">}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1</span>, #myTable <span class=\"keyword\">do</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;value is &#34;</span>..myTable[i])</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"comment\">-- 只输出1,2,3,4,5 哦， 因为 &#34;ok&#34; 的键为 &#34;k&#34;</span></span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"for-ipairs-迭代器\"><a href=\"#for-ipairs-迭代器\" class=\"headerlink\" title=\"for ipairs(迭代器)\"></a>for ipairs(迭代器)</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(myTable) <span class=\"keyword\">do</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(i,v)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<p><strong>与第一种for循环方式一样，都是按照当前索引的隐式索引来迭代并显示值的</strong></p>\n<h4 id=\"for-pairs-迭代器\"><a href=\"#for-pairs-迭代器\" class=\"headerlink\" title=\"for pairs(迭代器)\"></a>for pairs(迭代器)</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(myTable) <span class=\"keyword\">do</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(k,v)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<p><strong>按照键值对来输出</strong></p>\n<p><strong>如果值为一个table，则会输出该table的地址</strong></p>\n<h4 id=\"Table的作用\"><a href=\"#Table的作用\" class=\"headerlink\" title=\"Table的作用\"></a>Table的作用</h4><ol>\n<li>你可以作为第三方插件集成到项目中，为项目提供一个支持功能</li>\n<li>完全使用table进行开发</li>\n<li>当做一种数据的配置集（就是阵列）</li>\n</ol>\n<ul>\n<li>整体游戏的配置集（例子）</li>\n</ul>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/><span class=\"line\">29</span><br/><span class=\"line\">30</span><br/><span class=\"line\">31</span><br/><span class=\"line\">32</span><br/><span class=\"line\">33</span><br/><span class=\"line\">34</span><br/><span class=\"line\">35</span><br/><span class=\"line\">36</span><br/><span class=\"line\">37</span><br/><span class=\"line\">38</span><br/><span class=\"line\">39</span><br/><span class=\"line\">40</span><br/><span class=\"line\">41</span><br/><span class=\"line\">42</span><br/><span class=\"line\">43</span><br/><span class=\"line\">44</span><br/><span class=\"line\">45</span><br/><span class=\"line\">46</span><br/><span class=\"line\">47</span><br/><span class=\"line\">48</span><br/><span class=\"line\">49</span><br/><span class=\"line\">50</span><br/><span class=\"line\">51</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 使用lua，当做一种配置信息</span></span><br/><span class=\"line\">application_config = {</span><br/><span class=\"line\">    game_config = {</span><br/><span class=\"line\">        ifDebugModel = <span class=\"literal\">false</span>, <span class=\"comment\">-- 调试模式</span></span><br/><span class=\"line\">        isCheatModel = <span class=\"literal\">true</span> <span class=\"comment\">-- 作弊模式</span></span><br/><span class=\"line\">    },</span><br/><span class=\"line\"></span><br/><span class=\"line\">    sound_config = {</span><br/><span class=\"line\">        isBackgroundMusicOpen = <span class=\"literal\">true</span>,</span><br/><span class=\"line\">        isEffectOpen = <span class=\"literal\">false</span></span><br/><span class=\"line\">    },</span><br/><span class=\"line\"></span><br/><span class=\"line\">    textrure_config = {</span><br/><span class=\"line\"","text":"简介 Lua是脚本型语言 动态编译 动态执行 每次修改不需要重新编译链接执行 运行时编译而并非运行前编译 是C语言编写的 速度比C语言快 特性Lua的Hello World1print(&#34;Hello world&#34;) Lua行末不要分号 Lua的括号12345do ...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%89%B9%E6%80%A7\"><span class=\"toc-text\">特性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Lua%E7%9A%84Hello-World\"><span class=\"toc-text\">Lua的Hello World</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Lua%E7%9A%84%E6%8B%AC%E5%8F%B7\"><span class=\"toc-text\">Lua的括号</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Lua%E7%9A%84%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">Lua的注释</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">数据类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%98%E9%87%8F%E4%BD%9C%E7%94%A8%E5%9F%9F\"><span class=\"toc-text\">变量作用域</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#if%E8%AF%AD%E5%8F%A5-%E6%B2%A1%E6%9C%89switch%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">if语句(没有switch语句)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0-%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">函数&#x2F;方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%97%A0%E5%8F%82%E6%97%A0%E8%BF%94%E5%9B%9E%E5%80%BC\"><span class=\"toc-text\">无参无返回值</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%89%E5%8F%82%E6%97%A0%E8%BF%94%E5%9B%9E%E5%80%BC\"><span class=\"toc-text\">有参无返回值</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%89%E5%8F%82%E6%9C%89%E8%BF%94%E5%9B%9E%E5%80%BC\"><span class=\"toc-text\">有参有返回值</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%94%E5%9B%9E%E5%A4%9A%E4%B8%AA%E5%80%BC\"><span class=\"toc-text\">返回多个值</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8\"><span class=\"toc-text\">可变参数列表</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%BA%93%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">库函数</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%BB%E8%BE%91%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">逻辑操作符</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\">循环语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#while\"><span class=\"toc-text\">while</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#do%E2%80%A6%E2%80%A6while%E6%8D%A2%E6%88%90%E4%BA%86-repeat\"><span class=\"toc-text\">do……while换成了 repeat</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#for%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">for循环</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Table%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">Table的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Table%E7%9A%84%E9%81%8D%E5%8E%86%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">Table的遍历方式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%99%AE%E9%80%9A%E9%81%8D%E5%8E%86%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">普通遍历方式</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#for-ipairs-%E8%BF%AD%E4%BB%A3%E5%99%A8\"><span class=\"toc-text\">for ipairs(迭代器)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#for-pairs-%E8%BF%AD%E4%BB%A3%E5%99%A8\"><span class=\"toc-text\">for pairs(迭代器)</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Table%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">Table的作用</span></a></li></ol></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua元表","uid":"0498ed7eca93166bac9cec9951eb31df","slug":"zl/2016-01-01-133_Lua元表","date":"2024-04-03T03:47:33.034Z","updated":"2024-04-03T03:47:33.034Z","comments":true,"path":"api/articles/zl/2016-01-01-133_Lua元表.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"javascript语言本身不支持面向对象，ES2015中增加了class关键字，却不过是prototype语法糖而已，本质上prototype形式的面向对象只能算是一种“模拟”，这其中很重要的原因之一是js从来没有一套完美的深拷贝方案，子类只能借助原型链获取父类方法的引用，这不...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"lua学习笔记 · DUDOR's BLOG","uid":"9c34c47c46afa2c0f0858a885378d538","slug":"zl/2016-01-01-130_lua学习笔记 · DUDOR's BLOG","date":"2024-04-03T03:47:33.033Z","updated":"2024-04-03T03:47:33.033Z","comments":true,"path":"api/articles/zl/2016-01-01-130_lua学习笔记 · DUDOR's BLOG.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" ##语法约定 lua中的变量名定义规则和大多数编程语言一样，是任何非数字开头的由字母，数字和下划线组成的字符串。 lua是大小写敏感的。 ##字符串 字符串是由单引号或双引号或N级中括号定义的，比如 a = ‘dudor’ a = “dudor” a = [[dudor]] 上...","link":"","photos":[],"count_time":{"symbolsCount":912,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}