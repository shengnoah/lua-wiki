{"title":"Lua语法基础（二）","uid":"92c435cde283c1b09bc312d09271ad4c","slug":"zl/2016-01-01-346_Lua语法基础（二）","date":"2024-04-03T03:47:35.624Z","updated":"2024-04-03T03:47:35.624Z","comments":true,"path":"api/articles/zl/2016-01-01-346_Lua语法基础（二）.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<ol>\n<li>函数<br/>1.1 函数声明</li>\n</ol>\n<p>默认为全局<br/>局部函数使用local关键字声明<br/>1.2 参数\n　　</p>\n<p>…等同于Python中*args三个点表示可变参数<br/></p>\n<p>1.3 获取参数长度的两种方式<br/>　　（1）将传入的参数… 直接写入新的table中 使用#table获得长度<br/>　　（2）直接使用select(“#”,…)获取长度</p>\n<p>1.4 函数定义格式 :</p>\n<p>[local] function function_name(…)<br/>function_body<br/>return result1, result,,,,,<br/>end</p>\n<ol start=\"2\">\n<li>运算符<br/>2.1  算术</li>\n</ol>\n<p>+-*/^(加减乘除幂) -负数<br/>2.2 比较</p>\n<p>==等于 ~=不等于, 大于&gt;,小雨&lt;, 大于等于&gt;=, 小于等于&lt;=</p>\n<p>2.3 逻辑运算</p>\n<p>a and b : 如果a为false返回a 否则返回b，and的优先级比or高<br/>a or b : 如果a为true返回a 否则返回b<br/>a = a or b 如果a有值则返回a,如果a为nil则赋值为b 等价于条件判断<br/>not : 非 结果只返回bool<br/>三元操作(a and b) or c<br/>2.4 连接运算<br/>　　连接符 .. (前后加空格)<br/>　　如果值为数字则将其转换为字符串</p>\n<ol start=\"3\">\n<li>基本数据类型<br/>3.1 string 字符串</li>\n</ol>\n<p>　　（1）单引号双引号<br/>　　（2）多行字符串[[ 多行文字 ]]<br/>　　（3）字符串不可以用+号拼接,使用 ..进行字符串拼接前后加空格<br/>　　（4）可以自动转换数字和字符串: “10”+1/“10+1”/“10”+”1”<br/>　　（5）”100” == 100 为false可以使用tonumber/tostring相互转换数据类型<br/>　　（6）字符串长度计算使用 #string<br/>3.2 num 数字\n　　</p>\n<p>包括整型<br/>浮点型<br/>指数型<br/>3.3 转义符号</p>\n<p>n换行<br/>t制表符<br/>r回车后面字符不打印<br/>转义符</p>\n<p>3.4 function 函数<br/>　　标准库包括string库、table库、I/O库、OS库、算术库、debug库</p>\n<p>3.5 boolean 布尔</p>\n<p>　　true:0和空串<br/>　　false:false和nil</p>\n<p>3.6 nil 空</p>\n<p>表示没有赋值，系统会自动删除该变量</p>\n<p>3.7 table表<br/>　　类似于字典结构</p>\n<p>　　table = {a,b,c} –&gt;取值方式table[1]使用索引取从1开始<br/>　　table = {a=”123”,b=”456”,d=”789”}–&gt;取值方式table.key<br/>　　当key-value和单个标识符混合储存时,单个标识符有索引,key-value无索引<br/>　　分隔符逗号 , 可以用分号 ; 代替,用来区分不同的元素</p>","text":" 函数1.1 函数声明 默认为全局局部函数使用local关键字声明1.2 参数 …等同于Python中*args三个点表示可变参数 1.3 获取参数长度的两种方式 （1）将传入的参数… 直接写入新的table中 使用#table获得长度 （2）直接使用select(“#”,…)获...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua易错点","uid":"3771466940e9475d48b7119959432bd4","slug":"zl/2016-01-01-349_lua易错点","date":"2024-04-03T03:47:35.625Z","updated":"2024-04-03T03:47:35.629Z","comments":true,"path":"api/articles/zl/2016-01-01-349_lua易错点.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"table.remove 删除时导致的错？正确的删除方案：先记录要删除的表记录的k(位置)，然后反向遍历记录逐个删除。 删除1~10中的4,5,6,7,8. Table.remove 删除表时后面的元素会自动向前与移动导致隔一个删除一个. table长度table当字数组来用时获...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"redis编写lua脚本","uid":"a628b5f8d3069a00eec61e6c67b75d18","slug":"zl/2016-01-01-347_redis编写lua脚本","date":"2024-04-03T03:47:35.624Z","updated":"2024-04-03T03:47:35.624Z","comments":true,"path":"api/articles/zl/2016-01-01-347_redis编写lua脚本.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"由于redis并没有类似mysql或者mongo的乐观锁机制，并发控制成了一个棘手的问题这块是可以用redis的watch来做，但是如果能实现乐观锁，那就非常方便了 redis使用lua的基础语法12345&gt; eval &#34;return {KEYS[1],KEYS[2...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}