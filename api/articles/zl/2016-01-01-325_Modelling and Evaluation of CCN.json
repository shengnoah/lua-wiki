{"title":"Modelling and Evaluation of CCN","uid":"d8e7a42229faacbdacc5ea8072c7e0a1","slug":"zl/2016-01-01-325_Modelling and Evaluation of CCN","date":"2024-04-03T03:47:35.606Z","updated":"2024-04-03T03:47:35.606Z","comments":true,"path":"api/articles/zl/2016-01-01-325_Modelling and Evaluation of CCN.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<meta itemprop=\"mainEntityOfPage\" itemscope=\"\" itemtype=\"https://schema.org/WebPage\"/>\n<pre><code>\t\t\t&lt;div class=&quot;m-article-content js-article-content&quot; itemprop=&quot;articleBody&quot;&gt;&lt;h2 id=&quot;综述&quot;&gt;综述&lt;/h2&gt;\n</code></pre>\n<h2 id=\"基本信息\">基本信息</h2>\n<p><strong>Author:</strong> Ioannis Psaras, Richard G. Clegg, Raul Landa, Wei Koong Chai, and George Pavlou<br/>\n<strong>Year:</strong> 2011<br/>\n<strong>Journal:</strong> NETWORKING<br/>\n<strong>Url:</strong> <a href=\"https://link.springer.com/chapter/10.1007/978-3-642-20757-0_7\">click here</a></p>\n<h2 id=\"单节点建模\">单节点建模</h2>\n<p>$lambda$：使得内容PoI来到缓存顶部的请求的到达速率（对内容PoI请求的到达速率）。</p>\n<p>$mu$：使得内容PoI下移的请求的到达速率。</p>\n<p>$pi=(pi_1,pi_2,dots,pi_{N+1})$：链的均衡概率，或者PoI在该位置花费的时间比例，有：</p>\n<script type=\"math/tex; mode=display\">pi_i=frac{lambda}{mu}big[frac{mu}{mu+lambda}big]^i</script>\n<script type=\"math/tex; mode=display\">pi_{N+1}=big[frac{mu}{mu+lambda}big]^N</script>\n<p>$pi_{N+1}$表示PoI不在缓存中的时间所占比重。自然可以推出PoI被请求命中的时间比重为$1-pi_{N+1}$。因此平均丢失速率为：</p>\n<script type=\"math/tex; mode=display\">lambdapi_{N+1}=lambdabig[frac{mu}{mu+lambda}big]^N</script>\n<p><img src=\"https://github.com/kanyuanzhi/kanyuanzhi.github.io/raw/master/assets/myimages/20181030/1.png\" alt=\"\"/></p>\n<h2 id=\"层级缓存建模\">层级缓存建模</h2>\n<h3 id=\"模型定义与假设\">模型定义与假设</h3>\n<p>见图一，记$F(x)$表示速率为$x$的到达过程（不一定是泊松过程）。其中过程$F(lambda_i)$和$F(mu_i)$假设为泊松过程，$F(phi_i)$表示路由$R_i$的缓存丢失过程。有：</p>\n<script type=\"math/tex; mode=display\">phi_1=lambda_1gamma_1^{N_1}</script>\n<p>其中$gamma_1=dfrac{mu_1}{lambda_1+mu_1}$，即路由器$R_1$中PoI的丢失速率等于PoI的请求速率乘以PoI不在缓存中所占的时间比重。所以到达路由器$R_2$的速率为：\n<script type=\"math/tex\">lambda_2^{'}=lambda_1gamma_1^{N_1}+lambda_2</script></p>\n<p>马尔科夫状态设为$N_1 times N_2$，状态编号$(i,j)$表示兴趣包在路由$R_1$和$R_2$中的位置，$i=N_1+1$时表示兴趣包不在$R_1$中，$j=N_2+1$时表示兴趣包不在$R_2$中。</p>\n<p>$pi_{(i,j)}$：表示PoI在$R_1$的$i$处、在$R_2$的$j$处的均衡概率。</p>\n<p>$pi_{(i,bullet)}=sum_jpi_{(i,j)}$：表示$R_1$状态的均衡概率，独立于$R_2$。由于第二个缓存的状态不会影响第一个缓存，此概率显然就是单个缓存模型的状态概率。计算$pi_{(bullet,j)}=sum_ipi_{(i,j)}$非常困难，目前得到的唯一结果是：</p>\n<script type=\"math/tex; mode=display\">pi_{(bullet,1)}=frac{lambda_2^{'}-lambda_2C/(mu_2+lambda_2)}{mu_2+lambda_2^{'}-C}</script>\n<p>其中$lambda_2^{‘}$是上文提到的$R_1$丢失速率，$C$为：</p>\n<script type=\"math/tex; mode=display\">C=lambda_1[(mu_1/(lambda_1+mu_1))^{N_1}-(mu_1/(lambda_1+lambda_2+mu_1+mu_2))^{N_1}]</script>\n</div>","text":" &lt;div class=&quot;m-article-content js-article-content&quot; itemprop=&quot;articleBody&quot;&gt;&lt;h2 id=&quot;综述&quot;&gt;综述&lt;/h2&gt...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">基本信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%95%E8%8A%82%E7%82%B9%E5%BB%BA%E6%A8%A1\"><span class=\"toc-text\">单节点建模</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B1%82%E7%BA%A7%E7%BC%93%E5%AD%98%E5%BB%BA%E6%A8%A1\"><span class=\"toc-text\">层级缓存建模</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E5%9E%8B%E5%AE%9A%E4%B9%89%E4%B8%8E%E5%81%87%E8%AE%BE\"><span class=\"toc-text\">模型定义与假设</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua优化列表多元素移除功能","uid":"842c614f32e6ae7cfa851d4fceefe519","slug":"zl/2016-01-01-324_Lua优化列表多元素移除功能","date":"2024-04-03T03:47:35.606Z","updated":"2024-04-03T03:47:35.606Z","comments":true,"path":"api/articles/zl/2016-01-01-324_Lua优化列表多元素移除功能.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"在 Lua 的内置库中，table 提供了 table.remove(t,[num]) 来删除列表中的元素，因为在该函数的执行过程涉及到了内存的移动，所以在删除多个元素的时候，如果每次都调用该函数，就会造成多次内存移动。 针对这一点，对 table 进行一些删除操作上的性能优化，...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua入门","uid":"09cde711228cba9ba4505d40c71d393c","slug":"zl/2016-01-01-323_Lua入门","date":"2024-04-03T03:47:35.605Z","updated":"2024-04-03T03:47:35.605Z","comments":true,"path":"api/articles/zl/2016-01-01-323_Lua入门.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 遇到个问题，有个亿级别的网站，实现访问黑名单白名单控制，搜了下解决方案，基本都是nginx+lua实现，特此记录！ 定义 Lua是一种轻量小巧的脚本语言，用标准C语言编写并以源代码形式开放，几乎在所有操作系统和平台上都可以编译运行。其设计目的是为了嵌入应用程序中，从而为应用程序...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}