{"title":"Unity中使用sLua的 超丶简单基础教程(一)","uid":"31f7798c17cec129652145a050a37985","slug":"zl/2016-01-01-127_Unity中使用sLua的 超丶简单基础教程(一)","date":"2024-04-03T03:47:33.031Z","updated":"2024-04-03T03:47:33.031Z","comments":true,"path":"api/articles/zl/2016-01-01-127_Unity中使用sLua的 超丶简单基础教程(一).json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p><img src=\"https://Lafree317.github.io/../../images/Slua-1.png\" alt=\"\"/></p>\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>网上Unity使用lua的文章本来就少..slua又是个偏小众的lua库..文章更少..</p>\n<p>已有的文章又有点坑…比如方法名关键字写错啦..真的是坑多= =</p>\n<p>所以总结一片超简单教学= =</p>\n<p>这篇文章面向刚开始学习lua 想在unity项目中使用sLua库的同学..</p>\n<h3 id=\"正文\"><a href=\"#正文\" class=\"headerlink\" title=\"正文\"></a>正文</h3><h4 id=\"导入sLua\"><a href=\"#导入sLua\" class=\"headerlink\" title=\"导入sLua\"></a>导入sLua</h4><ul>\n<li>1.直接下载最新版:<a href=\"https://github.com/pangweiwei/slua/releases/\" target=\"_blank\" rel=\"noopener noreferrer\">sLua库下载地址</a></li>\n<li>2.然后将解压后的Assets文件复制到你项目的Assets目录下,不要放到其他地方.</li>\n<li>3.等待Unity编译完成,会出现SLua菜单如下图.然后选择Slua-All-Make命令 手动生成针对当前版本的Unity接口文件</li>\n</ul>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/1/20/161138abbd015ee9?w=355&amp;h=136&amp;f=png&amp;s=14264\" alt=\"图1-1\"/></p>\n<p>做到这步你已经可以在Assets/Slua/example中查看sLua的官方例子了.每一个Scenes都展示了一种使用方法.</p>\n<h4 id=\"自己使用Lua脚本\"><a href=\"#自己使用Lua脚本\" class=\"headerlink\" title=\"自己使用Lua脚本\"></a>自己使用Lua脚本</h4><p>创建一个新的Scene然后创建一个CreateEmpty创建一个C#文件挂载上去.然后在C#文件中写如下代码:<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">using UnityEngine;</span><br/><span class=\"line\">using SLua;</span><br/><span class=\"line\"></span><br/><span class=\"line\">public class Test : MonoBehaviour{</span><br/><span class=\"line\"></span><br/><span class=\"line\">    private static LuaState ls_state;</span><br/><span class=\"line\"></span><br/><span class=\"line\">    void Start()</span><br/><span class=\"line\">    {</span><br/><span class=\"line\">        ls_state = new LuaState();</span><br/><span class=\"line\">        ls_state.doString(&#34;print(&#34;Hello Lua!&#34;)&#34;);</span><br/><span class=\"line\"></span><br/><span class=\"line\">    }</span><br/><span class=\"line\"></span><br/><span class=\"line\">}</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>成功后的样子是这样:</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/1/20/161139671a4de279?w=425&amp;h=944&amp;f=png&amp;s=58039\" alt=\"\"/></p>\n<p>注意有些教程中LuaState在声明成属性时就初始化了,但是会报错,一定要在Awake方法或Start或需要用到的时候再进行初始化…</p>\n<h4 id=\"读取lua文件\"><a href=\"#读取lua文件\" class=\"headerlink\" title=\"读取lua文件\"></a>读取lua文件</h4><p>C#代码<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">using UnityEngine;</span><br/><span class=\"line\">using System.Collections;</span><br/><span class=\"line\">using SLua;</span><br/><span class=\"line\">using System.IO;</span><br/><span class=\"line\"></span><br/><span class=\"line\">public class OpenLuaFile : MonoBehaviour{</span><br/><span class=\"line\"></span><br/><span class=\"line\">    public LuaState state;// sLua脚本代理</span><br/><span class=\"line\"></span><br/><span class=\"line\">    void Start()</span><br/><span class=\"line\">    {</span><br/><span class=\"line\"></span><br/><span class=\"line\">        state = new LuaState();</span><br/><span class=\"line\"></span><br/><span class=\"line\">        state.loaderDelegate = ((string fn) =&gt;</span><br/><span class=\"line\">        {</span><br/><span class=\"line\">            string file_Path = Directory.GetCurrentDirectory() + &#34;/Assets/Script/Lua/&#34; + fn;</span><br/><span class=\"line\">            Debug.Log(file_Path);</span><br/><span class=\"line\">            return File.ReadAllBytes(file_Path);</span><br/><span class=\"line\">        });</span><br/><span class=\"line\"></span><br/><span class=\"line\">        //执行脚本</span><br/><span class=\"line\">        state.doFile(&#34;HelloLua.lua&#34;);</span><br/><span class=\"line\">    }</span><br/><span class=\"line\">}</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>在上面设定的路径中创建lua文件</p>\n<p>代码:<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">print(&#34;你好 我是文件里的Lua!&#34;)</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>“/Assets/Script/Lua/“为放置ua文件的目录,这个根据自己需求随意改变.</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/1/20/16113ac0db3b6dd5?w=605&amp;h=476&amp;f=png&amp;s=56768\" alt=\"\"/></p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2018/1/20/16113ac510abdc81?w=541&amp;h=1072&amp;f=png&amp;s=97504\" alt=\"\"/></p>\n<h4 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h4><p>本篇教程很基础,如果有精力会将之后学习到的知识都整理成博客分享给大家~</p>","text":" 前言网上Unity使用lua的文章本来就少..slua又是个偏小众的lua库..文章更少.. 已有的文章又有点坑…比如方法名关键字写错啦..真的是坑多= = 所以总结一片超简单教学= = 这篇文章面向刚开始学习lua 想在unity项目中使用sLua库的同学.. 正文导入sLu...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E6%96%87\"><span class=\"toc-text\">正文</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AF%BC%E5%85%A5sLua\"><span class=\"toc-text\">导入sLua</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%87%AA%E5%B7%B1%E4%BD%BF%E7%94%A8Lua%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">自己使用Lua脚本</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AF%BB%E5%8F%96lua%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">读取lua文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96\"><span class=\"toc-text\">其他</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"spark rdd, pipeline, lazyevaluation","uid":"dee1c28d2a4573e95dc2faf24be94678","slug":"zl/2016-01-01-126_spark rdd, pipeline, lazyevaluation","date":"2024-04-03T03:47:33.031Z","updated":"2024-04-03T03:47:33.031Z","comments":true,"path":"api/articles/zl/2016-01-01-126_spark rdd, pipeline, lazyevaluation.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"一直以来写代码不求甚解，感觉这样不好，从今天开始起读各数据框架的源代码，学习学习再学习 今天看的是pyspark里lazy evaluation的处理，python和scala不同不是函数式的。那这是怎么办到的呢？ 首先所有的数据集在spark内部都叫做rdd，这在pyspark...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"FDDB datasets and evaluation · KaLyo's Notes","uid":"86297aa03ba557c590355c17601cdd3f","slug":"zl/2016-01-01-122_FDDB datasets and evaluation · KaLyo's Notes","date":"2024-04-03T03:47:33.030Z","updated":"2024-04-03T03:47:33.030Z","comments":true,"path":"api/articles/zl/2016-01-01-122_FDDB datasets and evaluation · KaLyo's Notes.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"DATASETS人脸数据集，有大约2800多张图片。这里主要讲其用于人脸检测的部分。这个数据集也可以用于做人脸对齐（face alignment） 数据集主要来自于网络上新闻媒体里的图片。经过相似图片剔除后留下大约2800多张。分为10个folder，每个folder300张左右...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}