{"title":"luajava的錯誤信息輸出","uid":"16e48795f2f1d8823c5247183293e4c1","slug":"zl/2016-01-01-847_luajava的錯誤信息輸出","date":"2024-04-03T03:47:36.102Z","updated":"2024-04-03T03:47:36.102Z","comments":true,"path":"api/articles/zl/2016-01-01-847_luajava的錯誤信息輸出.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>最近在填新坑, 打算用lua作為腳本語言, 於是選擇了luajava來跑腳本.</p><p>始終我對lua不熟, 錯誤是難免的了, 不料luajava居然沒有輸出錯誤信息orz(事實上連普通的輸出都沒找到, 反正我直接寫了個print函數…)</p><p>既然找不到輸出, 那我只好想辦法把luajava的錯誤信息轉去調用自己寫的print了, 於是我想到了或許可以像Java中的<code>try ... catch ...</code>來攔住錯誤, 然後用 <code>getStackTrace()</code>之類的方法找到調用棧, 最後輸出.</p>\n<p>順着這思路, 我找到了lua的<code>xpcall(&lt;fun:function&gt;, &lt;callback:function&gt;)</code>和<code>debug.traceback([errMsg:string])</code>, 前者接受一個函數和一個出現錯誤時的執行回調函數, 返回執行的成功與否和錯誤信息, 後者可選地接受一個錯誤信息, 並返回錯誤信息和調用棧.</p>\n<p>那麼剩下的就是把程式本體塞到xpcall中, 這個倒沒多少難度:</p>\n<pre><code class=\"language-lua\">xpcall(\n  -- $str是我傳入的程式本體\n  function() $str end,\n  -- err就是錯誤信息\n  function(err)\n    -- _print就是我寫的, kotlin的print函數\n    _print(debug.traceback(err))\n  end)</code><p></p><p>輸出:</p><p><img src=\"https://paletteovo.moe//2017/02/06/luajava-exception/snipaste20170206_001011.png\" alt=\"輸出\"/></p></pre>","text":"最近在填新坑, 打算用lua作為腳本語言, 於是選擇了luajava來跑腳本.始終我對lua不熟, 錯誤是難免的了, 不料luajava居然沒有輸出錯誤信息orz(事實上連普通的輸出都沒找到, 反正我直接寫了個print函數…)既然找不到輸出, 那我只好想辦法把luajava的錯...","link":"","photos":[],"count_time":{"symbolsCount":602,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Wireshark配置Lua插件","uid":"3d82dc0b1628a6a2b6c17543dd9f9c38","slug":"zl/2016-01-01-84_Wireshark配置Lua插件","date":"2024-04-03T03:47:36.108Z","updated":"2024-04-03T03:47:36.109Z","comments":true,"path":"api/articles/zl/2016-01-01-84_Wireshark配置Lua插件.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"版权声明：本文为 Jiawei Xu 于2019年4月28日所写，未经允许不得转载。 配置方法在wireshark的安装目录下面编辑init.lua文件，例如mac上： 1vim /Applications/Wireshark.app/Contents/Resources/sha...","link":"","photos":[],"count_time":{"symbolsCount":410,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua数据结构的实现","uid":"5670ddb0c3e7d5212a221b327730f4a2","slug":"zl/2016-01-01-848_Lua数据结构的实现","date":"2024-04-03T03:47:36.102Z","updated":"2024-04-03T03:47:36.108Z","comments":true,"path":"api/articles/zl/2016-01-01-848_Lua数据结构的实现.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 《Lua程序设计》笔记：高效地使用table来实现一些传统的数据结构 1 数组Lua库和长度操作符都遵循索引从1开始的约定。 2 多维数组123456789101112131415mt = {}for i=1, N do mt[i] = {} for j=1, M do mt[...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}