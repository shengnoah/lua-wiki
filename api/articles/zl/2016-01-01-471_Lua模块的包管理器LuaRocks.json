{"title":"Lua模块的包管理器LuaRocks","uid":"7755b8b7ecbc305e4191ff4b734992cd","slug":"zl/2016-01-01-471_Lua模块的包管理器LuaRocks","date":"2024-04-03T03:47:35.751Z","updated":"2024-04-03T03:47:35.755Z","comments":true,"path":"api/articles/zl/2016-01-01-471_Lua模块的包管理器LuaRocks.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<blockquote>\n<p>LuaRocks是Lua模块的包管理器。<br/>它允许你创建和安装Lua模块，作为独立包名为rocks。 您可以在Unix和Windows上下载并安装LuaRocks。<br/>LuaRocks是免费软件，使用与Lua相同的许可证。  </p>\n</blockquote>\n<p>@[TOC]</p>\n<p>官方 ：<a href=\"https://luarocks.org/\" target=\"_blank\" rel=\"noopener noreferrer\">https://luarocks.org/</a></p>\n<h2><span id=\"linux系统下安装\">linux系统下安装</span></h2><p>安装包列表：<br/><a href=\"http://luarocks.github.io/luarocks/releases/\" target=\"_blank\" rel=\"noopener noreferrer\">http://luarocks.github.io/luarocks/releases/</a></p>\n<h3><span id=\"简单安装\">简单安装</span></h3><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">$ wget https://luarocks.org/releases/luarocks-2.4.3.tar.gz</span><br/><span class=\"line\">$ tar zxpf luarocks-2.4.3.tar.gz</span><br/><span class=\"line\">$ cd luarocks-2.4.3</span><br/><span class=\"line\">$ ./configure; sudo make bootstrap</span><br/><span class=\"line\">$ sudo luarocks install luasocket</span><br/><span class=\"line\">$ lua</span><br/><span class=\"line\">Lua 5.3.4 Copyright (C) 1994-2017 Lua.org, PUC-Rio</span><br/><span class=\"line\">&gt; require &#34;socket&#34;</span><br/></pre></td></tr></tbody></table></figure>\n<p>设置prefix会自动将Luarocks以及往后使用Luarocks安装的Lua包，LuaC包都安装到Luarocks安装路径下的相应位置，否则相关的包文件散落在文件系统中，显得杂乱不便于管理。<br/>如果所安装的Lua模板包含bin文件，则会自动安装到此目录下的bin路径，与Luarocks可执行文件同一路径，更便于管理、使用。</p>\n<h3><span id=\"openresty-安装-luarocks-示例\">openresty 安装 luarocks 示例</span></h3><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">tar xzf luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz</span><br/><span class=\"line\">cd luarocks-${RESTY_LUAROCKS_VERSION}</span><br/><span class=\"line\">./configure </span><br/><span class=\"line\"> --prefix=/usr/local/openresty/luajit </span><br/><span class=\"line\"> --with-lua=/usr/local/openresty/luajit </span><br/><span class=\"line\"> --lua-suffix=jit-2.1.0-beta3 </span><br/><span class=\"line\"> --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1</span><br/><span class=\"line\">make build</span><br/><span class=\"line\">make install</span><br/></pre></td></tr></tbody></table></figure>\n<h2><span id=\"在-openresty-中使用-luarocks\">在 OpenResty 中使用 LuaRocks</span></h2><p><a href=\"https://openresty.org/cn/using-luarocks.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://openresty.org/cn/using-luarocks.html</a>  </p>\n<h3><span id=\"安装-luarocks\">安装 LuaRocks</span></h3><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://luarocks.org/releases/luarocks-2.0.4.1.tar.gz</span><br/><span class=\"line\">tar -xzvf luarocks-2.0.4.1.tar.gz</span><br/><span class=\"line\">cd luarocks-2.0.4.1/</span><br/><span class=\"line\">./configure</span><br/><span class=\"line\">make</span><br/><span class=\"line\">sudo make install</span><br/></pre></td></tr></tbody></table></figure>\n<h3><span id=\"通过-luarocks安装-lua-md5-库\">通过 LuaRocks安装 Lua MD5 库</span></h3><p>在本示例中, 我们将使用 Lua MD5 library 作为服务器上的一个例子, 所以我们需要通过 LuaRocks 来安装它:</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">sudo luarocks install md5</span><br/></pre></td></tr></tbody></table></figure>\n<h3><span id=\"配置我们的-openresty-应用\">配置我们的 OpenResty 应用</span></h3><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/openresty/nginx/</span><br/></pre></td></tr></tbody></table></figure>\n<p>编辑 conf/nginx.conf 文件:<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">worker_processes  1;   # we could enlarge this setting on a multi-core machine</span><br/><span class=\"line\">error_log  logs/error.log warn;</span><br/><span class=\"line\"></span><br/><span class=\"line\">events {</span><br/><span class=\"line\">    worker_connections  1024;</span><br/><span class=\"line\">}</span><br/><span class=\"line\"></span><br/><span class=\"line\">http {</span><br/><span class=\"line\">    lua_package_path &#39;conf/?.lua;;&#39;;</span><br/><span class=\"line\"></span><br/><span class=\"line\">    server {</span><br/><span class=\"line\">        listen       80;</span><br/><span class=\"line\">        server_name  localhost;</span><br/><span class=\"line\"></span><br/><span class=\"line\">        location = /luarocks {</span><br/><span class=\"line\">            content_by_lua &#39;</span><br/><span class=\"line\">                local foo = require(&#34;foo&#34;)</span><br/><span class=\"line\">                foo.say(&#34;hello, luarocks!&#34;)</span><br/><span class=\"line\">            &#39;;</span><br/><span class=\"line\">        }</span><br/><span class=\"line\">    }</span><br/><span class=\"line\">}</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>最后,我们创建下面两个 Lua 模块文件 conf/foo.lua<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">-- conf/foo.lua</span><br/><span class=\"line\"></span><br/><span class=\"line\">module(&#34;foo&#34;, package.seeall)</span><br/><span class=\"line\"></span><br/><span class=\"line\">local bar = require &#34;bar&#34;</span><br/><span class=\"line\"></span><br/><span class=\"line\">ngx.say(&#34;bar loaded&#34;)</span><br/><span class=\"line\"></span><br/><span class=\"line\">function say (var)</span><br/><span class=\"line\">    bar.say(var)</span><br/><span class=\"line\">end</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>和 conf/bar.lua 文件<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">-- conf/bar.lua</span><br/><span class=\"line\"></span><br/><span class=\"line\">module(&#34;bar&#34;, package.seeall)</span><br/><span class=\"line\"></span><br/><span class=\"line\">local rocks = require &#34;luarocks.loader&#34;</span><br/><span class=\"line\">local md5 = require &#34;md5&#34;</span><br/><span class=\"line\"></span><br/><span class=\"line\">ngx.say(&#34;rocks and md5 loaded&#34;)</span><br/><span class=\"line\"></span><br/><span class=\"line\">function say (a)</span><br/><span class=\"line\">    ngx.say(md5.sumhexa(a))</span><br/><span class=\"line\">end</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<h3><span id=\"开启-nginx-服务\">开启 Nginx 服务</span></h3><p>现在我们通过 Nginx 开启我们的应用:</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">ulimit -n1024   # increase the maximal fd count limit per process</span><br/><span class=\"line\">./sbin/nginx</span><br/></pre></td></tr></tbody></table></figure>\n<p>如果您已经开启了 Nginx 服务,请先关闭后在重新开启:</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">./sbin/nginx -s stop  #（译注:我们也可以使用平滑重启命令完成此操作 ./sbin/nginx -s reload）</span><br/></pre></td></tr></tbody></table></figure>\n<h3><span id=\"测试我们的应用\">测试我们的应用</span></h3><p>现在我们通过curl 工具或者任意兼容HTTP协议的浏览器测试我们的应用:</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">curl http://localhost/luarocks</span><br/></pre></td></tr></tbody></table></figure>\n<p>我们在第一次运行的时候得到以下的内容:</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">rocks and md5 loaded</span><br/><span class=\"line\">bar loaded</span><br/><span class=\"line\">85e73df5c41378f830c031b81e4453d2</span><br/></pre></td></tr></tbody></table></figure>\n<p>第二次运行的时候得到以下内容:</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">85e73df5c41378f830c031b81e4453d2</span><br/></pre></td></tr></tbody></table></figure>\n<p>之所以会出现这样的输出数据是因为 Lua Nginx Module 默认缓存了已经加载过的Lua模块 并且这些输出数据的代码是在 Lua 加载时运行的因此他们将不会在执行.</p>","text":" LuaRocks是Lua模块的包管理器。它允许你创建和安装Lua模块，作为独立包名为rocks。 您可以在Unix和Windows上下载并安装LuaRocks。LuaRocks是免费软件，使用与Lua相同的许可证。 @[TOC] 官方 ：https://luarocks.org...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">linux系统下安装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">简单安装</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">openresty 安装 luarocks 示例</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">在 OpenResty 中使用 LuaRocks</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">安装 LuaRocks</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">通过 LuaRocks安装 Lua MD5 库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">配置我们的 OpenResty 应用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">开启 Nginx 服务</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">测试我们的应用</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"溪流 WarKey 3.0 论坛预览版 发布，支持Lua脚本","uid":"10b11cff4c48bcbd38346c27bd294825","slug":"zl/2016-01-01-470_溪流 WarKey 3.0 论坛预览版 发布，支持Lua脚本","date":"2024-04-03T03:47:35.751Z","updated":"2024-04-03T03:47:35.751Z","comments":true,"path":"api/articles/zl/2016-01-01-470_溪流 WarKey 3.0 论坛预览版 发布，支持Lua脚本.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"昨晚搞到近 2 点，终于把相关部分搞完了，放出个预览版玩玩。这一版本将支持组合键，比如，可以分别改Q、Ctrl+Q、Alt+Q 等，也将支持所有鼠标操作。此外，增加了一个脚本系统，允许用户进行更大程度上的自定义。 猛击这里下载 脚本使用 lua 语言，格式大致为（正式版出来之前可...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"nginx_lua 扩展让 nginx 拥有可编程能力","uid":"a0f5de90db401eb853c427c4ba1b6602","slug":"zl/2016-01-01-46_nginx_lua 扩展让 nginx 拥有可编程能力","date":"2024-04-03T03:47:35.750Z","updated":"2024-04-03T03:47:35.751Z","comments":true,"path":"api/articles/zl/2016-01-01-46_nginx_lua 扩展让 nginx 拥有可编程能力.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"公司使用 lighttpd 的比较多, 主要是接入层的一些工作，而且增加了一些很多自己的模块防火墙等等. 后来nginx开始流行起来因为 lighttpd 和 nginx整体是实现方式比较类似(个人感觉nginx 借鉴了 lighttpd的实现方式)，都使用了多进程异步非阻塞处理...","link":"","photos":[],"count_time":{"symbolsCount":"6.4k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}