{"title":"Lua 学习 chapter10","uid":"6dd173d5288df05b5ec75744db2e59c2","slug":"zl/2016-01-01-337_Lua 学习 chapter10 ","date":"2024-04-03T03:47:35.615Z","updated":"2024-04-03T03:47:35.615Z","comments":true,"path":"api/articles/zl/2016-01-01-337_Lua 学习 chapter10 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h3 id=\"目录\">目录</h3>\n<ol>\n  <li>正则表达式</li>\n  <li>模式匹配相关的函数</li>\n  <li>URL编码</li>\n  <li>制表符的展开</li>\n  <li>诀窍</li>\n</ol>\n<blockquote>\n  <p>Just be handsome.</p>\n</blockquote>\n<h2 id=\"正则表达式\">正则表达式</h2>\n<ol>\n  <li>. 任意字符</li>\n  <li>%a 字母</li>\n  <li>%c 控制字符</li>\n  <li>%d 数字</li>\n  <li>%g 除空格外的可打印字符</li>\n  <li>%l 小写字母</li>\n  <li>%p标点符号</li>\n  <li>%s 空白字符</li>\n  <li>%u 大写字母</li>\n  <li>%w 字母和数字</li>\n  <li>%x 十六进制数字</li>\n</ol>\n<p>还有一些魔法字符，也可以称之为元字符。\n其中与其他的语言不同的是在lua中%是转义字符而不是’&#39;。</p>\n<ol>\n  <li>+ 重复一次或多次</li>\n  <li>* 重复零次或者多次（最大匹配）</li>\n  <li>- 重复零次或者多次（最小匹配）位于[]中中间表示范围</li>\n  <li>？ 可选</li>\n  <li>^ 位于模式的开头 从头开始匹配  位于[]中开头表示非</li>\n  <li>$ 位于模式的结尾 从尾部向前匹配</li>\n</ol>\n<p>在lua中可以使用()来对匹配到的结果进行返回</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">pair</span> <span class=\"o\">=</span> <span class=\"s2\">&#34;name = Anna&#34;</span>\n<span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"nb\">string.match</span><span class=\"p\">(</span><span class=\"n\">pair</span><span class=\"p\">,</span> <span class=\"s2\">&#34;(%a+)%s*=%s*(%a+)&#34;</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"c1\">-- name Anna</span>\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"s\">[[then he said: &#34;it&#39;s al right&#34;!]]</span>\n<span class=\"n\">q</span><span class=\"p\">,</span> <span class=\"n\">quotedPart</span> <span class=\"o\">=</span> <span class=\"nb\">string.match</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"s2\">&#34;([&#34;</span><span class=\"s1\">&#39;](.-)%1&#34;)\nprint(quotedPart) -- it&#39;</span><span class=\"n\">s</span> <span class=\"n\">al</span> <span class=\"n\">right</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n<h2 id=\"模式匹配相关的函数\">模式匹配相关的函数</h2>\n<ol>\n  <li>string.find(ste,reg) –返回开始和结束的index</li>\n  <li>string.match – 返回匹配到的内容</li>\n  <li>string.gmatch –返回一个函数，通过函数可以遍历一个字符串出现的指定模式</li>\n  <li>string.sub</li>\n</ol>\n<p>string.sub 有三个参数，它的第三个参数不仅仅可以是字符串还可以是函数或者表。\n当时函数的时候每次匹配到合适的字符串的时候就调用函数参数为匹配到的值，用函数的返回值来替换字符串；当是表的时候，将匹配到的字符串作为key值来得到\n用来替换的字符串。</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"s2\">&#34;some string&#34;</span>\n<span class=\"kd\">local</span> <span class=\"n\">words</span> <span class=\"o\">=</span> <span class=\"p\">&#123;&#125;</span>\n<span class=\"k\">for</span> <span class=\"n\">w</span> <span class=\"k\">in</span> <span class=\"nb\">string.gmatch</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"s2\">&#34;%a+&#34;</span><span class=\"p\">)</span> <span class=\"k\">do</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">w</span><span class=\"p\">)</span>\n    <span class=\"nb\">table.insert</span><span class=\"p\">(</span><span class=\"n\">words</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">)</span>\n<span class=\"k\">end</span> <span class=\"c1\">-- some string </span>\n<p><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Lua&quot;</span><br />\n<span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;great&quot;</span><br />\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">expend</span><span class=\"p\">(</span><span class=\"s2\">&quot;$name is $status&quot;</span><span class=\"p\">))</span> <span class=\"c1\">–Lua is great\t2 其中2表示匹配成功的字符串</span><br />\n</pre></td></tr></tbody></table></code></pre></div></div></p>\n<h2 id=\"url编码\">url编码</h2>\n<p>这种编码方式会将特殊字符编码为”%xx”的形式（=、&amp;、+）,会将空格转换为加号”+”。例如字符串”a+b = c”,就会别编码成”a%2Bb+%3D+c”。</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function</span> <span class=\"nf\">unescape</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n\t<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"nb\">string.gsub</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"s2\">&#34;+&#34;</span><span class=\"p\">,</span> <span class=\"s2\">&#34; &#34;</span><span class=\"p\">)</span>\n\t<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"nb\">string.gsub</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"s2\">&#34;%%(%x%x&#34;</span><span class=\"p\">),</span><span class=\"k\">function</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">)</span>\n\t\t<span class=\"k\">return</span> <span class=\"nb\">string.char</span><span class=\"p\">(</span><span class=\"nb\">tonumber</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">,</span> <span class=\"mi\">16</span><span class=\"p\">)</span>\n\t<span class=\"k\">end</span><span class=\"p\">)</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n<h2 id=\"制表符的展开\">制表符的展开</h2>\n<p>在lua语言中，像”()”这样的空白捕捉具有特殊的含义，表示捕捉模式在目标字符串中的位置。</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n</pre></td><td class=\"rouge-code\"><pre><span class=\"nb\">print</span><span class=\"o\">*</span><span class=\"nb\">string.match</span><span class=\"p\">(</span><span class=\"s2\">&#34;hell0&#34;</span><span class=\"p\">,</span> <span class=\"s2\">&#34;()ll()&#34;</span><span class=\"p\">)</span> <span class=\"c1\">--&gt;3  5</span>\n<span class=\"c1\">--输出的是匹配的第一个字符的位置和输出最后一个字符之后的那个字符的位置</span>\n<span class=\"k\">function</span> <span class=\"nf\">expandTabs</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">tab</span><span class=\"p\">)</span>\n\t<span class=\"n\">tab</span> <span class=\"o\">=</span> <span class=\"n\">tab</span> <span class=\"ow\">or</span> <span class=\"mi\">8</span>\n\t<span class=\"kd\">local</span> <span class=\"n\">corr</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\t<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"nb\">string.gsub</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"s2\">&#34;()t&#34;</span><span class=\"p\">,</span><span class=\"k\">function</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">)</span>\n\t\t<span class=\"kd\">local</span> <span class=\"n\">sp</span> <span class=\"o\">=</span> <span class=\"n\">tab</span> <span class=\"o\">-</span> <span class=\"p\">(</span><span class=\"n\">p</span> <span class=\"o\">-</span> <span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"n\">corr</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"n\">tab</span>\n\t\t<span class=\"n\">corr</span> <span class=\"o\">=</span> <span class=\"n\">corr</span> <span class=\"o\">-</span> <span class=\"mi\">1</span> <span class=\"o\">+</span> <span class=\"n\">sp</span>\n\t\t<span class=\"k\">return</span> <span class=\"nb\">string.rep</span><span class=\"p\">(</span><span class=\"s2\">&#34; &#34;</span><span class=\"p\">,</span> <span class=\"n\">sp</span><span class=\"p\">)</span>\n\t<span class=\"k\">end</span><span class=\"p\">)</span>\n<span class=\"k\">return</span> <span class=\"n\">s</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n<h2 id=\"诀窍\">诀窍</h2>\n<ol>\n  <li>”(.-)%$”  和 “^(.-)%$”  –前面一种模式的匹配会导致当没有’$’符号时，模式匹配算法会从字符串的第一个位置开始匹配，到尾之后从第二个位置再次匹配，算法的复杂度为n的二次方。</li>\n  <li>“%a*” 会导致空字符串\n所以在使用 “.-“的时候注意会匹配到空字符串。</li>\n</ol>\n<pre><code>            &lt;hr style=&quot;visibility: hidden;&quot;/&gt;\n            \n            &lt;hr style=&quot;visibility: hidden;&quot;/&gt;\n</code></pre>\n","text":"目录 正则表达式 模式匹配相关的函数 URL编码 制表符的展开 诀窍 Just be handsome. 正则表达式 . 任意字符 %a 字母 %c 控制字符 %d 数字 %g 除空格外的可打印字符 %l 小写字母 %p标点符号 %s 空白字符 %u 大写字母 %w 字母和数字 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">目录</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">正则表达式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D%E7%9B%B8%E5%85%B3%E7%9A%84%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">模式匹配相关的函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#url%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">url编码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%B6%E8%A1%A8%E7%AC%A6%E7%9A%84%E5%B1%95%E5%BC%80\"><span class=\"toc-text\">制表符的展开</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%80%E7%AA%8D\"><span class=\"toc-text\">诀窍</span></a>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua 中的随机数","uid":"73feeba3e1d1ac59d590841c2286442d","slug":"zl/2016-01-01-340_Lua 中的随机数 ","date":"2024-04-03T03:47:35.616Z","updated":"2024-04-03T03:47:35.617Z","comments":true,"path":"api/articles/zl/2016-01-01-340_Lua 中的随机数 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua 随机数算法用的是 libc 中的 rand, 也就是 LCG。然而这个算法的随机性一般。尤其是在一些平台上，当随机种子变化非常小的时候，产生的随机数变化也非常小。这样再经过 Lua 的精度取舍之后，产生的随机序列仍然很相似（伪随机的结果变成可预知性）。 lua-l 上也讨...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"lua函数与upavalue","uid":"be80d580dc7cc1c589ddcfc242421da2","slug":"zl/2016-01-01-338_lua函数与upavalue","date":"2024-04-03T03:47:35.615Z","updated":"2024-04-03T03:47:35.615Z","comments":true,"path":"api/articles/zl/2016-01-01-338_lua函数与upavalue.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua中的所谓upvalue是一类比较特殊的值，可以理解为在某函数内引用外部的数据。 函数定义中用到了pushclosure这个函数用于将函数的定义Proto结构体指针push到父函数的数组中，在这个函数内，还建立了有关upvalue相关的逻辑： static void push...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}