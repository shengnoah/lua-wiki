{"title":"Lua","uid":"15b0cdc6d03f6c3f6bf8d3a7ff197317","slug":"zl/2016-01-01-787_Lua","date":"2024-04-03T03:47:36.025Z","updated":"2024-04-03T03:47:36.025Z","comments":true,"path":"api/articles/zl/2016-01-01-787_Lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>1   变量在使用前，必须在代码中进行声明，即创建改变量；<br/>    Lua的变量类型：全局变量、局部变量、表中的域；<br/>    Lua的变量全是全局变量，即便是语句块或者是函数里，除非使用local显示声明为局部变量；<br/>    局部变量的作用域从声明的位置开始，到所在语句块结束；<br/>    变量的默认值均为nil;</p>\n<p>2 赋值<br/>   Lua可以对多个变量同时赋值，变量列表和值列表的各个元素用逗号分开，赋值语句右边的值会依次赋给左边的变量</p>\n<pre><code>eg:\n   a, b = 10, 2*x       等价于       a=10; b=2*x\n</code></pre><p>  当变量个数和值的个数不一致时，Lua会一直以变量个数为基础采取以下策略：</p>\n<pre><code>1） 变量个数 &gt; 值的个数             按变量个数补足nil\n2）变量个数 &lt; 值的个数             多余的值会被忽略\n</code></pre><p>  多值赋值经常用来交换变量，或将函数调用返回给变量：</p>\n<pre><code>eg:\n   a, b = f()\n   f()返回两个值，第一个赋给a，第二个赋给b。\n</code></pre><p>  应该尽可能的使用局部变量，有两个好处：</p>\n<pre><code>1. 避免命名冲突。\n2. 访问局部变量的速度比全局变量更快。\n</code></pre>","text":"1 变量在使用前，必须在代码中进行声明，即创建改变量； Lua的变量类型：全局变量、局部变量、表中的域； Lua的变量全是全局变量，即便是语句块或者是函数里，除非使用local显示声明为局部变量； 局部变量的作用域从声明的位置开始，到所在语句块结束； 变量的默认值均为nil; 2...","link":"","photos":[],"count_time":{"symbolsCount":508,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"深入 Lua Garbage Collector(五)","uid":"c301632190015e10274da49fa0008c96","slug":"zl/2016-01-01-78_深入 Lua Garbage Collector(五)","date":"2024-04-03T03:47:36.026Z","updated":"2024-04-03T03:47:36.027Z","comments":true,"path":"api/articles/zl/2016-01-01-78_深入 Lua Garbage Collector(五).json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 有了前几天的基础，我们可以从顶向下来读 lua gc 部分的代码了。慢慢的，感觉我这个系列都可以叫跟着云风一起看Lua源码了，虽然自己看的是最新的5.3。挖个坑，之后应该会真的跟着云风大大的那本readinglua一起看完lua的最新源码。 lua_gc我们知道，lua 对外的...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua学习笔记二","uid":"050df29370421b502767448007b1cff3","slug":"zl/2016-01-01-788_Lua学习笔记二","date":"2024-04-03T03:47:36.025Z","updated":"2024-04-03T03:47:36.025Z","comments":true,"path":"api/articles/zl/2016-01-01-788_Lua学习笔记二.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"while1234while(条件)do 循环体end 代码示例及结果： 123456a = 0while(a &lt; 10)do print(a) a = a + 1end 123456789100123456789 for123for var=值1,值2,值2 do 循环体...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}