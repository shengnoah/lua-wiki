{"title":"Lua 学习 chapter16","uid":"7adfb56756654d77e1864a70e15ff21c","slug":"zl/2016-01-01-495_Lua 学习 chapter16 ","date":"2024-04-03T03:47:35.776Z","updated":"2024-04-03T03:47:35.776Z","comments":true,"path":"api/articles/zl/2016-01-01-495_Lua 学习 chapter16 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h3 id=\"目录\">目录</h3>\n<ol>\n  <li>编译</li>\n  <li>错误</li>\n</ol>\n<blockquote>\n  <p>You must try your best. Then you will have a good improvement.</p>\n</blockquote>\n<h2 id=\"编译\">编译</h2>\n<p>dofile函数，加载文件并且执行文件中的代码。其实dofile并不是运行lua代码的核心，核心是loadfile函数。</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n</pre></td><td class=\"rouge-code\"><pre><span class=\"k\">function</span> <span class=\"nf\">dofile</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">)</span>\n\t<span class=\"kd\">local</span> <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"nb\">assert</span><span class=\"p\">(</span><span class=\"nb\">loadfile</span><span class=\"p\">(</span><span class=\"n\">filename</span><span class=\"p\">))</span>\n\t<span class=\"k\">return</span> <span class=\"n\">f</span><span class=\"p\">()</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n<p>如果loadfile执行失败，那么函数assert会引发一个错误。相较于dofile，loadfile在发生错的时候会返回nil以及错误信息。而且在多次运行这个文件的时候，loadfile只需要加载一次后面可以多次调用。</p>\n<p>函数load函数和loadfile函数非常的相似，但是加载的不是文件而是字符串。函数load总是在全局环境中编译代码片段，所以里面的值也都是针对于全局变量的。</p>\n<h2 id=\"错误\">错误</h2>\n<p>可以通过assert函数来判断一个函数是否成功执行，没有成功执行则会返回错误信息。assert函数第二个参数为可选的错误信息，可以输出你想要输出的错误信息。\n通过assert函数抛出错误信息可以让函数继续执行。</p>\n<p>如果想要在lua代码中处理错误，那么就应该使用函数pcall来封装代码。</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">local</span> <span class=\"n\">ok</span><span class=\"p\">,</span> <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"nb\">pcall</span><span class=\"p\">(</span><span class=\"n\">functionname</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">ok</span> <span class=\"k\">then</span>\n\t<span class=\"n\">regular</span> <span class=\"n\">code</span>\n<span class=\"k\">else</span>\n\t<span class=\"nb\">error</span><span class=\"o\">-</span><span class=\"n\">handling</span> <span class=\"n\">code</span>\n<span class=\"k\">end</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n<p>函数pcall会以一种保护模式来调用它的第一个参数，以便来捕捉该函数执行中的错误。无论是否发生错误pcall都不会引发错误。</p>\n<pre><code>            &lt;hr style=&quot;visibility: hidden;&quot;/&gt;\n            \n            &lt;hr style=&quot;visibility: hidden;&quot;/&gt;\n</code></pre>\n","text":"目录 编译 错误 You must try your best. Then you will have a good improvement. 编译 dofile函数，加载文件并且执行文件中的代码。其实dofile并不是运行lua代码的核心，核心是loadfile函数。 1 2 ...","link":"","photos":[],"count_time":{"symbolsCount":877,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">目录</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%96%E8%AF%91\"><span class=\"toc-text\">编译</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%94%99%E8%AF%AF\"><span class=\"toc-text\">错误</span></a>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua 排序算法","uid":"18c65ae79c1521b9ec150d64b8237a42","slug":"zl/2016-01-01-494_Lua 排序算法 ","date":"2024-04-03T03:47:35.776Z","updated":"2024-04-03T03:47:35.776Z","comments":true,"path":"api/articles/zl/2016-01-01-494_Lua 排序算法 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"快速排序使用分治法（Divide and conquer）策略来把一个序列（list）分为两个子序列（sub-lists）。 分治法的基本思想是：将原问题分解为若干个规模更小但结构与原问题相似的子问题。递归地解这些子问题，然后将这些子问题的解组合为原问题的解。 算法步骤 从数列中...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"An Empirical Evaluation of Generic Convolutional and Recurrent Networks for Sequence Modeling","uid":"6b55ea064b627951a749da509664ef2b","slug":"zl/2016-01-01-496_An Empirical Evaluation of Generic Convolutional a","date":"2024-04-03T03:47:35.776Z","updated":"2024-04-03T03:47:35.776Z","comments":true,"path":"api/articles/zl/2016-01-01-496_An Empirical Evaluation of Generic Convolutional a.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"目录： TCN 论文总结 基础知识 1. 时间序列 2. RNN, LSTM, GRU 3. CNN TCN Causal Convolutions Dilate Convolutions Residual Convolutions TCN 的结构 实验 总结 参考文献 基础知识...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}