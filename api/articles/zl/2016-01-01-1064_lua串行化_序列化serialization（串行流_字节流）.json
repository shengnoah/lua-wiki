{"title":"lua串行化_序列化serialization（串行流_字节流）","uid":"e6c25c0816865cc394aa2881e93b5bd7","slug":"zl/2016-01-01-1064_lua串行化_序列化serialization（串行流_字节流）","date":"2024-04-03T03:47:32.987Z","updated":"2024-04-03T03:47:32.987Z","comments":true,"path":"api/articles/zl/2016-01-01-1064_lua串行化_序列化serialization（串行流_字节流）.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h2 id=\"杂乱字符串转义显示处理\"><a href=\"#杂乱字符串转义显示处理\" class=\"headerlink\" title=\"杂乱字符串转义显示处理\"></a>杂乱字符串转义显示处理</h2><pre><code>-- 匹配符方式 string.format\n-- [=[...]=]方式\na = &#39;a &#34;program lua [[ ]]]]&#34;&#39;\nprint(string.format(&#39;%q&#39;,a))\nserialize(a) -- [=[a &#34;program lua [[ ]]]]&#34;]=]\n</code></pre><h2 id=\"number、stirng、table序列化\"><a href=\"#number、stirng、table序列化\" class=\"headerlink\" title=\"number、stirng、table序列化\"></a>number、stirng、table序列化</h2><pre><code>function serialize( o )\n    if type(o) == &#34;number&#34; then\n        io.write(o)\n    elseif type(o) == &#34;string&#34; then\n    io.write(&#34;[=[&#34;,o,&#34;]=]&#34;)\n    else\n        print(&#39;b&#39;)\n    end\nend\n<p>– 杂乱字符串转义显示处理<br />\n– 匹配符方式 string.format<br />\n– [=[…]=]方式<br />\na = 'a &quot;program lua [[ ]]]]&quot;'<br />\nprint(string.format('%q',a))<br />\nserialize(a) – [=[a &quot;program lua [[ ]]]]&quot;]=]</p>\n<p>– 保存无环table<br />\nfunction n_serialize( o )<br />\nif type(o) == &quot;number&quot; then<br />\nio.write(o)<br />\nelseif type(o) == &quot;string&quot; then<br />\nio.write(string.format('%q',o))<br />\nelseif type(o) == &quot;table&quot; then<br />\nio.write(&quot;&#123;n&quot;)<br />\nfor k,v in pairs(o) do<br />\nio.write(&quot; &quot;, k, &quot;=&quot;)<br />\n– 递归调用<br />\nn_serialize(v)<br />\nio.write(&quot;,n&quot;)<br />\nend<br />\nio.write(&quot;&#125;n&quot;)<br />\nelse<br />\nprint('b')<br />\nend<br />\nend</p>\n<p>b = &#123;lang = &quot;lua&quot;, content = '&quot;dddd&quot;[[&quot;',3&#125;<br />\nn_serialize(b)<br />\n–[[<br />\n&#123;<br />\n1=3,<br />\nlang=&quot;lua&quot;,<br />\ncontent=&quot;&quot;dddd&quot;[[&quot;&quot;,<br />\n&#125;<br />\n–]]<br />\n</code></pre></p>\n","text":"杂乱字符串转义显示处理-- 匹配符方式 string.format -- [=[...]=]方式 a = &#39;a &#34;program lua [[ ]]]]&#34;&#39; print(string.format(&#39;%q&#39;,a)) serializ...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9D%82%E4%B9%B1%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E4%B9%89%E6%98%BE%E7%A4%BA%E5%A4%84%E7%90%86\"><span class=\"toc-text\">杂乱字符串转义显示处理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#number%E3%80%81stirng%E3%80%81table%E5%BA%8F%E5%88%97%E5%8C%96\"><span class=\"toc-text\">number、stirng、table序列化</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"leetcode_evaluate reverse polish notation","uid":"cd02f84ff363f602a2040ccb9523f02c","slug":"zl/2016-01-01-1069_leetcode_evaluate reverse polish notation","date":"2024-04-03T03:47:32.988Z","updated":"2024-04-03T03:47:32.989Z","comments":true,"path":"api/articles/zl/2016-01-01-1069_leetcode_evaluate reverse polish notation.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Evaluate Reverse Polish NotationEvaluate the value of an arithmetic expression in Reverse Polish Notation. Valid operators are +, -, *, /. E...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"luajavabridge","uid":"07729d74b012cf1c4e5c8b67d346686c","slug":"zl/2016-01-01-1065_luajavabridge","date":"2024-04-03T03:47:32.987Z","updated":"2024-04-03T03:47:32.988Z","comments":true,"path":"api/articles/zl/2016-01-01-1065_luajavabridge.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" • -- call Java method local javaClassName = &#34;org/cocos2dx/lua/AppActivity&#34; local javaMethodName = &#34;showAlertDialog&#34; local j...","link":"","photos":[],"count_time":{"symbolsCount":864,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}