{"title":"Lua脚本式编程","uid":"fd9872c3854aacedec1686eaf11a15c4","slug":"zl/2016-01-01-509_Lua脚本式编程","date":"2024-04-03T03:47:35.784Z","updated":"2024-04-03T03:47:35.787Z","comments":true,"path":"api/articles/zl/2016-01-01-509_Lua脚本式编程.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h3 id=\"1-基本语法\"><a href=\"#1-基本语法\" class=\"headerlink\" title=\"1.基本语法\"></a>1.基本语法</h3><p>单行注释：–<br/>多行注释：–[[ 内容–]]</p>\n<p>lua最好<strong>不要使用</strong>下划线加大字母的标识符，因为lua的保留字是这样的。<br/>lua不允许使用特殊字符如@$%来定义标志符。</p>\n<p>默认情况下，变量总是认为全局。<br/>删除全局变量，只需要将变量赋值nil .</p>\n<p>lua的数据类型：nil 、boolean、number、string、userdata、function、thread和table。</p>\n<p>nil作为比较时应该加上双引号，例如</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\">type(x) == &#34;nil&#34;</span><br/></pre></td></tr></tbody></table></figure>\n<p>boolean类型只有两个可选值：true 和 false<br/>lua把false和nil看作是“假”，其他都为真。</p>\n<p>number（数字）：lua只有一种number类型，double双精度类型，默认类型可以修改luaconf.h里面的定义。</p>\n<p>string（字符串）：由一对双引号或单引号来表示，也可以用2个方括号“[[ ]]”来表示“一块”字符串。</p>\n<p>对一个数字字符串上进行算术操作时，lua会尝试将这个数字字符串转换成一个数字。</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">print(“<span class=\"number\">2</span>”+<span class=\"number\">6</span>)   <span class=\"number\">8.0</span></span><br/><span class=\"line\">print(<span class=\"string\">&#34;2&#34;</span>+<span class=\"string\">&#34;6&#34;</span>) <span class=\"number\">8.0</span></span><br/></pre></td></tr></tbody></table></figure>\n<p>字符串连接使用的是 . .如：</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">print(<span class=\"string\">&#34;a&#34;</span> .. <span class=\"string\">&#34;b&#34;</span>)  ab</span><br/><span class=\"line\">print(<span class=\"number\">157</span> .. <span class=\"number\">428</span>) <span class=\"number\">157428</span></span><br/></pre></td></tr></tbody></table></figure>\n<p>#计算字符串的长度。</p>\n<figure class=\"highlight\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">len =<span class=\"string\">&#34;www.runoob.com&#34;</span></span><br/><span class=\"line\">print(#len)\t                 14</span><br/><span class=\"line\">print(#&#34;www.runoob.com&#34;) 14</span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"2-宿主语言C-C\"><a href=\"#2-宿主语言C-C\" class=\"headerlink\" title=\"2.宿主语言C/C++\"></a>2.宿主语言C/C++</h3><p>==虚拟栈==<br/>        无论何时lua调用C，被调用的函数都得到一个新的栈，这个栈独立于C函数本身的栈，也独立于之前的栈。<br/>        方便起见，所有正对栈的API查询操作都不严格遵守栈的操作规则。而是可以用一个索引来指向栈上的任何元素：<br/>        ==正的索引指的是栈上的绝对位置（从1开始），负的索引指从栈顶开始的偏移量。==</p>\n<p>Lua_checkstack:扩大可用堆栈的尺寸<br/>LUA_MINSTACK一般被定义为20。</p>\n<p>压入栈的数据类型包括数值、字符串、指针、table、闭包。</p>\n<p><img src=\"https://yuhongjiu8888.github.io/./attachments/1545806848964.drawio.html\" alt=\"Diagram\"/></p>\n<p>Lua_pushcclosure(L,func,0)；创建并压入一个闭包<br/>Lua_createtable(L,0,0)；新建并压入一个表<br/>Lua_pushnumber(L,343)；压入一个数字<br/>Lua_pushstring(L,”Nystr”)；压入一个字符串</p>\n<p>Lua中，number、boolean、nil、lightuserdata四种类型的值是直接存在栈上元素里和垃圾回收无关。<br/>Lua中，string、table、closure、userdata、thread存在栈上元素里的只是指针，他们都会在生命周期结束后被垃圾回收。</p>\n<p>Lua_push<em>族函数都有“创建一个类型的值并压入”的语义。<br/>Lua value -&gt; C value时，是通过Lua_to</em>族api实现的。</p>\n<figure class=\"highlight javascript\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">取表中元素 </span><br/><span class=\"line\"><span class=\"keyword\">void</span> lua_getfield(lua_state *L,int index,<span class=\"keyword\">const</span> char *K)</span><br/><span class=\"line\">操作： arr = stack[index]</span><br/><span class=\"line\">\t\t\tstack.push(arr[K])</span><br/><span class=\"line\">\t\t\t取表中键为K的元素，这里的表是由index指向的栈上的一个表。</span><br/><span class=\"line\">\t\t\t栈高度+<span class=\"number\">1</span>，栈顶元素是（stack[index]）[K]。</span><br/></pre></td></tr></tbody></table></figure>","text":"1.基本语法单行注释：–多行注释：–[[ 内容–]] lua最好不要使用下划线加大字母的标识符，因为lua的保留字是这样的。lua不允许使用特殊字符如@$%来定义标志符。 默认情况下，变量总是认为全局。删除全局变量，只需要将变量赋值nil . lua的数据类型：nil 、bool...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">1.基本语法</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%AE%BF%E4%B8%BB%E8%AF%AD%E8%A8%80C-C\"><span class=\"toc-text\">2.宿主语言C&#x2F;C++</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua循环优化 · 花生肉泥","uid":"e7557bbcd2e75ad72345f4517406155f","slug":"zl/2016-01-01-508_Lua循环优化 · 花生肉泥","date":"2024-04-03T03:47:35.784Z","updated":"2024-04-03T03:47:35.784Z","comments":true,"path":"api/articles/zl/2016-01-01-508_Lua循环优化 · 花生肉泥.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"关于大量字符串连接 （速度提升100倍）123456789101112131415161718a = os.clock()local s = &#39;&#39;for i=1,100000 do s = s .. &#39;a&#39;endb = os.clock()prin...","link":"","photos":[],"count_time":{"symbolsCount":633,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Goto in LuaJIT","uid":"e23987c7aeae824b7623d6980f8e24cf","slug":"zl/2016-01-01-507_Goto in LuaJIT ","date":"2024-04-03T03:47:35.783Z","updated":"2024-04-03T03:47:35.784Z","comments":true,"path":"api/articles/zl/2016-01-01-507_Goto in LuaJIT .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua 在 5.2 之后的版本，加入了 goto 这个关键字，用来控制程序跳转到指定 label。我们可以利用这个特性，来模拟 continue 的实现。需要注意的是 goto 只能跳转到 label，而 ::name:: 的格式就可以设置一个 label。 for i=1,5 ...","link":"","photos":[],"count_time":{"symbolsCount":"8.3k","symbolsTime":"8 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}