{"title":"Lua源码阅读：目录及模块结构","uid":"47140b7b78b8a632f22caf6eca5ca11d","slug":"zl/2016-01-01-245_Lua源码阅读：目录及模块结构","date":"2024-04-03T03:47:33.111Z","updated":"2024-04-03T03:47:33.111Z","comments":true,"path":"api/articles/zl/2016-01-01-245_Lua源码阅读：目录及模块结构.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<pre><code>    &lt;p&gt;Lua源码阅读的第一期，主要内容：系列内容计划以及目录。&lt;/p&gt;\n</code></pre>\n<h2 id=\"Lua源码阅读：\"><a href=\"https://bitzhangmo.github.io/#Lua%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%EF%BC%9A\" class=\"headerlink\" title=\"Lua源码阅读：\"></a>Lua源码阅读：</h2><p>本篇转载于<a href=\"http://lua-users.org/wiki/LuaSource\" target=\"_blank\" rel=\"noopener noreferrer\">LuaSource</a></p>\n<h3 id=\"目录\"><a href=\"https://bitzhangmo.github.io/#%E7%9B%AE%E5%BD%95\" class=\"headerlink\" title=\"目录\"></a>目录</h3><ul>\n<li><a href=\"https://bitzhangmo.github.io/2019/08/05/Lua/Lua%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%EF%BC%9A%E7%9B%AE%E5%BD%95%E5%8F%8A%E6%A8%A1%E5%9D%97%E7%BB%93%E6%9E%84/\">第一篇：目录及模块结构</a></li>\n<li><a href=\"https://bitzhangmo.github.io/2019/08/06/Lua/Lua%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%EF%BC%9A%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/\">第二篇：基本数据类型</a></li>\n<li><a href=\"https://bitzhangmo.github.io/2019/08/06/Lua/Lua%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%EF%BC%9A%E5%AE%9E%E7%94%A8%E5%87%BD%E6%95%B0/\">第三篇：实用函数</a></li>\n<li><a href=\"https://bitzhangmo.github.io/2019/08/06/Lua/Lua%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%EF%BC%9A%E6%A0%87%E5%87%86%E5%BA%93/\">第四篇：标准库</a></li>\n<li><a href=\"https://bitzhangmo.github.io/2019/08/06/Lua/Lua%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%EF%BC%9AC-API/\">第五篇：C API</a></li>\n</ul>\n<h3 id=\"lua-c\"><a href=\"https://bitzhangmo.github.io/#lua-c\" class=\"headerlink\" title=\"lua.c\"></a>lua.c</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span>  <span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> **argv)</span> </span>{</span><br><span class=\"line\">  <span class=\"keyword\">int</span> status, result;</span><br><span class=\"line\">  lua_State *L = luaL_newstate();  </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (L == <span class=\"literal\">NULL</span>) {</span><br><span class=\"line\">    l_message(argv[<span class=\"number\">0</span>], <span class=\"string\">\"cannot create state: not enough memory\"</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> EXIT_FAILURE;</span><br><span class=\"line\">  }</span><br><span class=\"line\">  lua_pushcfunction(L, &amp;pmain);  </span><br><span class=\"line\">  lua_pushinteger(L, argc);  </span><br><span class=\"line\">  lua_pushlightuserdata(L, argv); </span><br><span class=\"line\">  status = lua_pcall(L, <span class=\"number\">2</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>);  <span class=\"comment\">/* do the call */</span></span><br><span class=\"line\">  result = lua_toboolean(L, <span class=\"number\">-1</span>);  <span class=\"comment\">/* get result */</span></span><br><span class=\"line\">  report(L, status);</span><br><span class=\"line\">  lua_close(L);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> (result &amp;&amp; status == LUA_OK) ? EXIT_SUCCESS : EXIT_FAILURE;</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n<h3 id=\"模块结构\"><a href=\"https://bitzhangmo.github.io/#%E6%A8%A1%E5%9D%97%E7%BB%93%E6%9E%84\" class=\"headerlink\" title=\"模块结构\"></a>模块结构</h3><p>Lua代码的模块概要介绍如下：</p>\n<h4 id=\"以下模块实现了一些实用函数：\"><a href=\"https://bitzhangmo.github.io/#%E4%BB%A5%E4%B8%8B%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0%E4%BA%86%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E5%87%BD%E6%95%B0%EF%BC%9A\" class=\"headerlink\" title=\"以下模块实现了一些实用函数：\"></a>以下模块实现了一些实用函数：</h4><ul>\n<li><strong>ldebug.c</strong> - 调试接口，包含功能有：访问调试钩子（lua_sethook、lua_gethook、lua_gethookcount）；访问运行时栈（lua_getstack、lua_getlocal、lua_setlocal）；检测字节码（luaG_checkopenop、luaG_checkcode）；抛出错误（luaG_typeerror、luaG_concaterror、luaG_aritherror、luaG_ordererror、luaG_errormsg、luaG_runerror）</li>\n<li><strong>lzio.c</strong> - 通用的输入流接口</li>\n<li><strong>lmem.c</strong> - 内存管理接口。实现了luaM_realloc / luaM_growaux_ 两个函数，其中封装了内存分配函数</li>\n<li><strong>lgc.c</strong> - 增量的垃圾回收器</li>\n</ul>\n<h4 id=\"以下模块实现了基本的数据类型：\"><a href=\"https://bitzhangmo.github.io/#%E4%BB%A5%E4%B8%8B%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0%E4%BA%86%E5%9F%BA%E6%9C%AC%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%9A\" class=\"headerlink\" title=\"以下模块实现了基本的数据类型：\"></a>以下模块实现了基本的数据类型：</h4><ul>\n<li><strong>lstate.c</strong> - 全局状态。包括打开、关闭Lua状态机（lua_newstate / lua_close）和线程（luaE_newthread / luaE_freethread）。</li>\n<li><strong>lobject.c</strong> - 一些操作Lua Object的通用函数。包括一些数据类型到字符串的互转函数，原生类型的相等性测试（luaO_rawequalObj），和以2为底的对数函数（luaO_log2）</li>\n<li><strong>lstring.c</strong> - 字符串哈希表（管理了所有被Lua用到的字符串）</li>\n<li><strong>lfunc.c</strong> - 一些用于操作函数原型(Proto）和闭包（Closure）的辅助函数</li>\n<li><strong>ltable.c</strong> - Lua的table实现</li>\n</ul>\n<h4 id=\"以下模块做语法解析和代码生成：\"><a href=\"https://bitzhangmo.github.io/#%E4%BB%A5%E4%B8%8B%E6%A8%A1%E5%9D%97%E5%81%9A%E8%AF%AD%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%EF%BC%9A\" class=\"headerlink\" title=\"以下模块做语法解析和代码生成：\"></a>以下模块做语法解析和代码生成：</h4><ul>\n<li><strong>lcode.c</strong> - 代码生成器，被lparser.c用到</li>\n<li><strong>llex.c</strong> - 词法分析器，被lparser.c用到</li>\n<li><strong>lparser.c</strong> - Lua语法解析器</li>\n<li><strong>lundump.c</strong> - 加载预编译的Lua代码块。实现了luaU_undump函数，此函数加载预编译的代码块。还提供了另外一个函数lua_header（被luaU_undump内部使用），用于加载代码块中的函数头信息。</li>\n<li><strong>ldump.c</strong> - 保存预编译的Lua代码块。实现了luaU_dump函数，些函数导出Lua函数为二进制形式的字符串</li>\n</ul>\n<h4 id=\"以下模块处理Lua字节码的执行：\"><a href=\"https://bitzhangmo.github.io/#%E4%BB%A5%E4%B8%8B%E6%A8%A1%E5%9D%97%E5%A4%84%E7%90%86Lua%E5%AD%97%E8%8A%82%E7%A0%81%E7%9A%84%E6%89%A7%E8%A1%8C%EF%BC%9A\" class=\"headerlink\" title=\"以下模块处理Lua字节码的执行：\"></a>以下模块处理Lua字节码的执行：</h4><ul>\n<li><strong>lopcodes.c</strong> - 定义Lua虚拟机的操作码。定义了所有操作码的名字和操作模式等信息（通过列表luaP_opnames、luaP_opmodes定义的）</li>\n<li><strong>lvm.c</strong> - Lua虚拟机（luaV_execute），可执行Lua字节码。另外还暴露了一些被lapi.c用到的函数，比如：luaV_concat</li>\n<li><strong>ldo.c</strong> - 函数调用栈。处理函数调用（luaD_call、luaD_pcall），栈空间增长，协程等</li>\n<li><strong>ltm.c</strong> - 元方法。实现从对象访问元方法的一些函数</li>\n</ul>\n<h4 id=\"以下模块实现标准库：\"><a href=\"https://bitzhangmo.github.io/#%E4%BB%A5%E4%B8%8B%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0%E6%A0%87%E5%87%86%E5%BA%93%EF%BC%9A\" class=\"headerlink\" title=\"以下模块实现标准库：\"></a>以下模块实现标准库：</h4><ul>\n<li><strong>lbaselib.c</strong> - 基础函数</li>\n<li><strong>lstrlib.c</strong> - 字符串函数</li>\n<li><strong>ltablib.c</strong> - 表函数</li>\n<li><strong>lmathlib.c</strong> - 数学函数</li>\n<li><strong>loslib.c</strong> - 系统函数</li>\n<li><strong>liolib.c</strong> - 输入输出、文档读写</li>\n<li><strong>loadlib.c</strong> - 包、模块</li>\n<li><strong>ldblib.c</strong> - 调试函数</li>\n</ul>\n<h4 id=\"以下模块定义了C-API：\"><a href=\"https://bitzhangmo.github.io/#%E4%BB%A5%E4%B8%8B%E6%A8%A1%E5%9D%97%E5%AE%9A%E4%B9%89%E4%BA%86C-API%EF%BC%9A\" class=\"headerlink\" title=\"以下模块定义了C API：\"></a>以下模块定义了C API：</h4><ul>\n<li><strong>lapi.c</strong> - Lua API。实现了大部分Lua C API（lua_* 系列函数）</li>\n<li><strong>lauxlib.c</strong> - 定义了luaL_*系列函数</li>\n<li><strong>linit.c</strong> - 实现luaL_openlibs，这个函数中加载了所有的标准库函数</li>\n</ul>\n<h4 id=\"以下模块实现Lua和Luac两个进程：\"><a href=\"https://bitzhangmo.github.io/#%E4%BB%A5%E4%B8%8B%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0Lua%E5%92%8CLuac%E4%B8%A4%E4%B8%AA%E7%A8%8B%E5%BA%8F%EF%BC%9A\" class=\"headerlink\" title=\"以下模块实现Lua和Luac两个进程：\"></a>以下模块实现Lua和Luac两个进程：</h4><ul>\n<li><strong>lua.c</strong> - Lua的独立解释器</li>\n<li><strong>print.c</strong> - 定义了“PrintFunction”函数，它可以打印出一个函数的字节码（可在Luac中使用 -l 选项）</li>\n<li><strong>luac.c</strong> - Lua编译器（可保存字节码到文档中，也可在控制面板列出字节码）</li>\n</ul>\n<h3 id=\"命名约定\"><a href=\"https://bitzhangmo.github.io/#%E5%91%BD%E5%90%8D%E7%BA%A6%E5%AE%9A\" class=\"headerlink\" title=\"命名约定\"></a>命名约定</h3><p>一个函数的前缀表明了它来自哪个模块</p>\n<pre><code>    luaA_ - lapi.c\n    luaB_ - lbaselib.c\n    luaC_ - lgc.c\n    luaD_ - ldo.c\n    luaE_ - lstate.c\n    luaF_ - lfunc.c\n    luaG_ - ldebug.c\n    luaH_ - ltable.c\n    luaI_ - lauxlib.c\n    luaK_ - lcode.c\n    luaL_ - llauxlib.c/h linit.c\n    luaM_ - lmem.c\n    luaO_ - lobject.c\n    luaP_ - lopcodes.c\n    luaS_ - lstring.c\n    luaT_ - ltm.c\n    luaU_ - lundump.c\n    luaV_ - lvm.c\n    luaX_ - llex.c\n    luaY_ - lparser.c\n    luaZ_ - lzio.c\n    lua_  - lapi.c/h + luaconfig.h, ldebug.c\n    luai_ - luaconf.h\n    luaopen_ - luaconf.h + libraries (lbaselib.c, ldblib.c, liolib.c, lmathlib.c, loadlib.c, loslib.c, lstrlib.c, ltablib.c)\n</code></pre><h3 id=\"参考：\"><a href=\"https://bitzhangmo.github.io/#%E5%8F%82%E8%80%83%EF%BC%9A\" class=\"headerlink\" title=\"参考：\"></a>参考：</h3><ol>\n<li><a href=\"https://github.com/zgpxgame/lua-5.1.5/wiki/\" target=\"_blank\" rel=\"noopener noreferrer\">Lua源码阅读笔记</a></li>\n<li>Lua有关的<a href=\"http://www.lua.org/docs.html\" target=\"_blank\" rel=\"noopener noreferrer\">论文</a>和<a href=\"http://pgl.yoyo.org/lua/docs/luaarchitecture.doc\" target=\"_blank\" rel=\"noopener noreferrer\">The Lua Architecture</a>从各个方面论述了Lua的实现</li>\n<li>Lua VM命令在文档<a href=\"http://luaforge.net/docman/83/98/ANoFrillsIntroToLua51VMInstructions.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">A No-Frills Introduction to Lua 5.1 VM Instructions</a>中</li>\n<li><a href=\"http://luaforge.net/projects/yueliang/\" target=\"_blank\" rel=\"noopener noreferrer\">Yueliang</a>项目（用Lua实现Lua VM），其中的大量的源码注释，可以帮助理解相关的C代码</li>\n<li>LuaAnnotate - C代码注释，注释单独存放在外部文档中，用某些文本工具可以将注释嵌入显示在代码中</li>\n<li><a href=\"http://stevedonovan.github.com/lua-5.1.4\" target=\"_blank\" rel=\"noopener noreferrer\">stevedonovan.github.com/lua-5.1.4</a> 包含LuaAnnotate注释的源码</li>\n<li>可在<a href=\"http://www.lua.org/source/%E7%BD%91%E7%AB%99%E4%B8%8A%E6%B5%8F%E8%A7%88Lua%E6%BA%90%E7%A0%81\" target=\"_blank\" rel=\"noopener noreferrer\">http://www.lua.org/source/网站上浏览Lua源码</a></li>\n</ol>","text":" &lt;p&gt;Lua源码阅读的第一期，主要内容：系列内容计划以及目录。&lt;/p&gt; Lua源码阅读：本篇转载于LuaSource 目录 第一篇：目录及模块结构 第二篇：基本数据类型 第三篇：实用函数 第四篇：标准库 第五篇：C API lua.c1234567891...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Lua%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%EF%BC%9A\"><span class=\"toc-text\">Lua源码阅读：</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">目录</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#lua-c\"><span class=\"toc-text\">lua.c</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E5%9D%97%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">模块结构</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%A5%E4%B8%8B%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0%E4%BA%86%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E5%87%BD%E6%95%B0%EF%BC%9A\"><span class=\"toc-text\">以下模块实现了一些实用函数：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%A5%E4%B8%8B%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0%E4%BA%86%E5%9F%BA%E6%9C%AC%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%EF%BC%9A\"><span class=\"toc-text\">以下模块实现了基本的数据类型：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%A5%E4%B8%8B%E6%A8%A1%E5%9D%97%E5%81%9A%E8%AF%AD%E6%B3%95%E8%A7%A3%E6%9E%90%E5%92%8C%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%EF%BC%9A\"><span class=\"toc-text\">以下模块做语法解析和代码生成：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%A5%E4%B8%8B%E6%A8%A1%E5%9D%97%E5%A4%84%E7%90%86Lua%E5%AD%97%E8%8A%82%E7%A0%81%E7%9A%84%E6%89%A7%E8%A1%8C%EF%BC%9A\"><span class=\"toc-text\">以下模块处理Lua字节码的执行：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%A5%E4%B8%8B%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0%E6%A0%87%E5%87%86%E5%BA%93%EF%BC%9A\"><span class=\"toc-text\">以下模块实现标准库：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%A5%E4%B8%8B%E6%A8%A1%E5%9D%97%E5%AE%9A%E4%B9%89%E4%BA%86C-API%EF%BC%9A\"><span class=\"toc-text\">以下模块定义了C API：</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BB%A5%E4%B8%8B%E6%A8%A1%E5%9D%97%E5%AE%9E%E7%8E%B0Lua%E5%92%8CLuac%E4%B8%A4%E4%B8%AA%E8%BF%9B%E7%A8%8B%EF%BC%9A\"><span class=\"toc-text\">以下模块实现Lua和Luac两个进程：</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%91%BD%E5%90%8D%E7%BA%A6%E5%AE%9A\"><span class=\"toc-text\">命名约定</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%EF%BC%9A\"><span class=\"toc-text\">参考：</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua的win和linux环境搭建","uid":"7fe1dad0ab07c1159a9c6ba848add36c","slug":"zl/2016-01-01-246_Lua的win和linux环境搭建","date":"2024-04-03T03:47:33.111Z","updated":"2024-04-03T03:47:33.111Z","comments":true,"path":"api/articles/zl/2016-01-01-246_Lua的win和linux环境搭建.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;div class=&quot;post-nav&quot;&gt; &lt;div class=&quot;post-nav-next post-nav-item&quot;&gt; &lt;a href=&quot;https://hulinhong.com/201...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Mac下编写lua的C模块","uid":"21fd19bd506bc6ef05480df46c54d3fb","slug":"zl/2016-01-01-242_Mac下编写lua的C模块","date":"2024-04-03T03:47:33.110Z","updated":"2024-04-03T03:47:33.110Z","comments":true,"path":"api/articles/zl/2016-01-01-242_Mac下编写lua的C模块.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"&lt;p&gt;最近在研究lua下protobuf的使用，必然就会接触到了云风大侠的pbc，github上下了源码进行编译，发现想要把binding下面的测试代码运行起来，还是有一些坑点的。&lt;/p&gt; 在 /binding/lua53 目录下有 Makefile pb...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}