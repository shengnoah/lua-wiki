{"title":"Redis实现分布式锁Lua脚本","uid":"856aae23dd974ad10df3608af21dd73a","slug":"zl/2016-01-01-657_Redis实现分布式锁Lua脚本","date":"2024-04-03T03:47:35.878Z","updated":"2024-04-03T03:47:35.879Z","comments":true,"path":"api/articles/zl/2016-01-01-657_Redis实现分布式锁Lua脚本.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h3 id=\"简单锁\"><a href=\"#简单锁\" class=\"headerlink\" title=\"简单锁\"></a>简单锁</h3><p>采用键值对存储，键是锁的标识，值是全局唯一值（如uuid）。</p>\n<h4 id=\"获取锁\"><a href=\"#获取锁\" class=\"headerlink\" title=\"获取锁\"></a>获取锁</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> key = KEYS[<span class=\"number\">1</span>] <span class=\"comment\">-- 锁标识</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> value = ARGV[<span class=\"number\">1</span>] <span class=\"comment\">-- 全局唯一值</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> ttl = <span class=\"built_in\">tonumber</span>(ARGV[<span class=\"number\">2</span>]) <span class=\"keyword\">or</span> <span class=\"number\">0</span> <span class=\"comment\">-- 过期时间，默认不过期</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">if</span> (redis.call(<span class=\"string\">&#39;setnx&#39;</span>, key, value) == <span class=\"number\">1</span>) <span class=\"keyword\">then</span></span><br/><span class=\"line\">    <span class=\"keyword\">if</span> (ttl &gt; <span class=\"number\">0</span>) <span class=\"keyword\">then</span></span><br/><span class=\"line\">        redis.call(<span class=\"string\">&#39;expire&#39;</span>, key, ttl)</span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"释放锁\"><a href=\"#释放锁\" class=\"headerlink\" title=\"释放锁\"></a>释放锁</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> key = KEYS[<span class=\"number\">1</span>] <span class=\"comment\">-- 锁标识</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> value = ARGV[<span class=\"number\">1</span>] <span class=\"comment\">-- 全局唯一值</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">if</span> (redis.call(<span class=\"string\">&#39;get&#39;</span>, key) == value) <span class=\"keyword\">then</span></span><br/><span class=\"line\">    redis.call(<span class=\"string\">&#39;del&#39;</span>, key)</span><br/><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\">    </span><br/><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"运行效果\"><a href=\"#运行效果\" class=\"headerlink\" title=\"运行效果\"></a>运行效果</h4><p>将获取锁和释放锁的代码分别保存到lock_aquire.lua和lock_release.lua文件。<br/></p><figure class=\"highlight sh\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">$ vi lock_aquire.lua</span><br/><span class=\"line\">$ vi lock_release.lua</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>将两个lua脚本文件加载到redis中，分别返回一个sha值。<br/></p><figure class=\"highlight sh\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">$ redis-cli script load <span class=\"string\">&#34;<span class=\"variable\">$(cat lock_aquire.lua)</span>&#34;</span></span><br/><span class=\"line\"><span class=\"string\">&#34;cc5c8c3fe44fb651fb06e4c39300749ced0ae22b&#34;</span></span><br/><span class=\"line\">$ redis-cli script load <span class=\"string\">&#34;<span class=\"variable\">$(cat lock_release.lua)</span>&#34;</span></span><br/><span class=\"line\"><span class=\"string\">&#34;c6a18bc663c9d324644615321834667b914b8350&#34;</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>在redis客户端中执行evalsha命令，传入步骤2生成的sha值。<br/></p><figure class=\"highlight sh\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">redis&gt; evalsha cc5c8c3fe44fb651fb06e4c39300749ced0ae22b 1 dist_lock 111111</span><br/><span class=\"line\">(<span class=\"built_in\">integer</span>) 1     <span class=\"comment\"># 客户端111111获取锁成功</span></span><br/><span class=\"line\">redis&gt; evalsha cc5c8c3fe44fb651fb06e4c39300749ced0ae22b 1 dist_lock 222222</span><br/><span class=\"line\">(<span class=\"built_in\">integer</span>) 0     <span class=\"comment\"># 客户端222222获取锁失败</span></span><br/><span class=\"line\">redis&gt; evalsha c6a18bc663c9d324644615321834667b914b8350 1 dist_lock 111111</span><br/><span class=\"line\">(<span class=\"built_in\">integer</span>) 1     <span class=\"comment\"># 客户端111111释放锁成功</span></span><br/><span class=\"line\">redis&gt; evalsha cc5c8c3fe44fb651fb06e4c39300749ced0ae22b 1 dist_lock 222222</span><br/><span class=\"line\">(<span class=\"built_in\">integer</span>) 1     <span class=\"comment\"># 客户端222222获取锁成功</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<h3 id=\"可重入锁\"><a href=\"#可重入锁\" class=\"headerlink\" title=\"可重入锁\"></a>可重入锁</h3><p>采用Hash结构存储，只有一个字段，字段的键是全局唯一值（如uuid），代表锁的拥有者，字段的值是个计数器。每获取一次锁计数器加1，每释放一次锁计数器减1，当计数器减为0时删除锁。</p>\n<h4 id=\"获取锁-1\"><a href=\"#获取锁-1\" class=\"headerlink\" title=\"获取锁\"></a>获取锁</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> key = KEYS[<span class=\"number\">1</span>] <span class=\"comment\">-- 锁标识</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> value = ARGV[<span class=\"number\">1</span>] <span class=\"comment\">-- 全局唯一值</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> ttl = <span class=\"built_in\">tonumber</span>(ARGV[<span class=\"number\">2</span>]) <span class=\"keyword\">or</span> <span class=\"number\">0</span> <span class=\"comment\">-- 过期时间，默认不过期</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">if</span> (redis.call(<span class=\"string\">&#39;exists&#39;</span>, key) == <span class=\"number\">0</span>) <span class=\"keyword\">then</span></span><br/><span class=\"line\">    redis.call(<span class=\"string\">&#39;hincrby&#39;</span>, key, value, <span class=\"number\">1</span>)</span><br/><span class=\"line\">    <span class=\"keyword\">if</span> (ttl &gt; <span class=\"number\">0</span>) <span class=\"keyword\">then</span></span><br/><span class=\"line\">        redis.call(<span class=\"string\">&#39;expire&#39;</span>, key, ttl)</span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">if</span> (redis.call(<span class=\"string\">&#39;hexists&#39;</span>, key, value) == <span class=\"number\">1</span>) <span class=\"keyword\">then</span></span><br/><span class=\"line\">    redis.call(<span class=\"string\">&#39;hincrby&#39;</span>, key, value, <span class=\"number\">1</span>)</span><br/><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"释放锁-1\"><a href=\"#释放锁-1\" class=\"headerlink\" title=\"释放锁\"></a>释放锁</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> key = KEYS[<span class=\"number\">1</span>] <span class=\"comment\">-- 锁标识</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> value = ARGV[<span class=\"number\">1</span>] <span class=\"comment\">-- 全局唯一值</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">if</span> (redis.call(<span class=\"string\">&#39;hexists&#39;</span>, key, value) == <span class=\"number\">1</span>) <span class=\"keyword\">then</span></span><br/><span class=\"line\">    <span class=\"comment\">-- 当计数器为0时才真正删除锁</span></span><br/><span class=\"line\">    <span class=\"keyword\">if</span> (redis.call(<span class=\"string\">&#39;hincrby&#39;</span>, key, value, <span class=\"number\">-1</span>) &lt; <span class=\"number\">1</span>) <span class=\"keyword\">then</span></span><br/><span class=\"line\">        redis.call(<span class=\"string\">&#39;del&#39;</span>, key)</span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"运行效果-1\"><a href=\"#运行效果-1\" class=\"headerlink\" title=\"运行效果\"></a>运行效果</h4><p>将获取锁和释放锁的代码分别保存到lock_aquire.lua和lock_release.lua文件。<br/></p><figure class=\"highlight sh\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">$ vi lock_aquire.lua</span><br/><span class=\"line\">$ vi lock_release.lua</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>将两个lua脚本文件加载到redis中，分别返回一个sha值。<br/></p><figure class=\"highlight sh\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">$ redis-cli script load <span class=\"string\">&#34;<span class=\"variable\">$(cat lock_aquire.lua)</span>&#34;</span></span><br/><span class=\"line\"><span class=\"string\">&#34;464f5e1f5a94422063a0ed087e4e545dd7786d07&#34;</span></span><br/><span class=\"line\">$ redis-cli script load <span class=\"string\">&#34;<span class=\"variable\">$(cat lock_release.lua)</span>&#34;</span></span><br/><span class=\"line\"><span class=\"string\">&#34;f33de5bbd21fcb322e226d1ebcb5a6fdd51f4f2f&#34;</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>在redis客户端中执行evalsha命令，传入步骤2生成的sha值。<br/></p><figure class=\"highlight sh\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">redis&gt; evalsha 464f5e1f5a94422063a0ed087e4e545dd7786d07 1 dist_lock 111111</span><br/><span class=\"line\">(<span class=\"built_in\">integer</span>) 1     <span class=\"comment\"># 客户端111111获取锁成功</span></span><br/><span class=\"line\">redis&gt; evalsha 464f5e1f5a94422063a0ed087e4e545dd7786d07 1 dist_lock 222222</span><br/><span class=\"line\">(<span class=\"built_in\">integer</span>) 0     <span class=\"comment\"># 客户端222222获取锁失败</span></span><br/><span class=\"line\">redis&gt; evalsha 464f5e1f5a94422063a0ed087e4e545dd7786d07 1 dist_lock 111111</span><br/><span class=\"line\">(<span class=\"built_in\">integer</span>) 1     <span class=\"comment\"># 客户端111111再次获取锁</span></span><br/><span class=\"line\">redis&gt; evalsha f33de5bbd21fcb322e226d1ebcb5a6fdd51f4f2f 1 dist_lock 111111</span><br/><span class=\"line\">(<span class=\"built_in\">integer</span>) 1     <span class=\"comment\"># 客户端111111释放锁成功</span></span><br/><span class=\"line\">redis&gt; evalsha f33de5bbd21fcb322e226d1ebcb5a6fdd51f4f2f 1 dist_lock 111111</span><br/><span class=\"line\">(<span class=\"built_in\">integer</span>) 1     <span class=\"comment\"># 客户端111111再次释放锁</span></span><br/><span class=\"line\">redis&gt; evalsha 464f5e1f5a94422063a0ed087e4e545dd7786d07 1 dist_lock 222222</span><br/><span class=\"line\">(<span class=\"built_in\">integer</span>) 1     <span class=\"comment\"># 客户端222222获取锁成功</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><ul>\n<li><a href=\"http://redisdoc.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Redis 命令参考</a></li>\n</ul>","text":"简单锁采用键值对存储，键是锁的标识，值是全局唯一值（如uuid）。 获取锁1234567891011121314local key = KEYS[1] -- 锁标识local value = ARGV[1] -- 全局唯一值local ttl = tonumber(ARGV[2]...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%AE%80%E5%8D%95%E9%94%81\"><span class=\"toc-text\">简单锁</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E9%94%81\"><span class=\"toc-text\">获取锁</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%87%8A%E6%94%BE%E9%94%81\"><span class=\"toc-text\">释放锁</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">运行效果</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E9%87%8D%E5%85%A5%E9%94%81\"><span class=\"toc-text\">可重入锁</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E9%94%81-1\"><span class=\"toc-text\">获取锁</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%87%8A%E6%94%BE%E9%94%81-1\"><span class=\"toc-text\">释放锁</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E6%95%88%E6%9E%9C-1\"><span class=\"toc-text\">运行效果</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"高并发抢红包方案－－基于Redis lua方案","uid":"f7b1183de71bcce803607b6784e42ffe","slug":"zl/2016-01-01-659_高并发抢红包方案－－基于Redis lua方案","date":"2024-04-03T03:47:35.879Z","updated":"2024-04-03T03:47:35.883Z","comments":true,"path":"api/articles/zl/2016-01-01-659_高并发抢红包方案－－基于Redis lua方案.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Redis 2.6 内置Lua解释器 Lua由标准C编写而成，代码简洁优美，完整的Lua解释器不过200k，极易嵌入到其他程序。 Lua和C/C++代码交互容易， 性能和灵活性大大提高。 可作为扩展脚本，也可以作为普通的配置文件，实现复杂的配置逻辑，并且容易理解和维护. Red...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua 的标准输出与缓存","uid":"eb6769635061336dbbe2c0540f762f81","slug":"zl/2016-01-01-655_Lua 的标准输出与缓存 ","date":"2024-04-03T03:47:35.877Z","updated":"2024-04-03T03:47:35.877Z","comments":true,"path":"api/articles/zl/2016-01-01-655_Lua 的标准输出与缓存 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"最近我遇到了个奇怪的问题，我的一个Lua脚本需要通过shell的重定向将输出追加到一个日志文件中。但是那个Lua脚本的输出在日志文件里看来却不是实时的，输出的文本直到脚本结束时才能看到。 在shell下运行这个程序，是可以看到实时输出的： -- buffer_test.lua l...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}