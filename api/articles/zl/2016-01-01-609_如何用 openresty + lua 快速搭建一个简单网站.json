{"title":"如何用 openresty + lua 快速搭建一个简单网站","uid":"8b44d23281c1aae6a8ca72eab735ba22","slug":"zl/2016-01-01-609_如何用 openresty + lua 快速搭建一个简单网站","date":"2024-04-03T03:47:35.838Z","updated":"2024-04-03T03:47:35.838Z","comments":true,"path":"api/articles/zl/2016-01-01-609_如何用 openresty + lua 快速搭建一个简单网站.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>最近在折腾 OpenResty，OpenResty 就不用多介绍了，这方面国内质量好的资料也不多，<br/>如果非要选一个入门级别的资料，自然是《OpenResty 最佳实践》。断断续续看了一些 Lua 的语法和 OpenResty 基础，<br/>就想做点什么练练手。碰巧某天。同事介绍了几个 OpenResty 的 lua 库，一看刚刚好，可以做来搭个简单的网站。<br/>那么我们就开始吧…</p>\n<h3 id=\"安装_OpenResty\">安装 OpenResty</h3><p>在上一篇文章，记录了几个 Mac 安装 openresty 的几个坑。有兴趣的可以看看，不多介绍了。</p>\n<h3 id=\"搭建项目\">搭建项目</h3><p>项目目录很简单，刚刚介绍的那个 lua 库 lua-resty-template，看库的名字就知道这是个模板相关的库，主要是提供模板渲染的功能。<br/>有一些自己的模板语法，这和其他语法的模板语法一样的。</p>\n<p>项目目录结构如下：<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">.\n├── conf\n│   └── nginx.conf\n├── html\n│   ├── _base.html\n│   └── view.html\n├── lua_file\n│   └── content.lua\n├── readme.md\n└── requirements.txt</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>基本机构有了，开始安装相关依赖，我自己的openresty是安装在/opt目录下，大致看下结构<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">.\n├── bin\n├── lualib\n│   └── cjson.so\n│   └── ngx\n│   └── rds\n│   └── redis\n│   └── resty\n├── luajit\n├── nginx\n└── pod\n└── resty.index</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>lualib/resty 主要就是openresty内置的resty 模块，为了将第三方模块区分出来，最好新建一个目录<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /opt/openresty/lualib/3rd_resty/resty</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>可能会奇怪为什么需要<code>3rd_resty/resty</code>这样的嵌套目录，因为 template.lua 文件的模块是<code>resty.template</code>，这样才能正确的被lua导入，<br/>将需要的lua-resty-template/template.lua 文件放置于<code>/opt/openresty/lualib/3rd_resty/resty</code>，这一步就结束了。</p>\n<h3 id=\"Coding\">Coding</h3><p>开始编码，其实首先需要修改原始的Nginx配置文件，在nginx.conf 添加以下2行。<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">lua_package_path &#39;/opt/openresty/lualib/3rd_resty/?.lua;;&#39;\ninclude /path/to/your/nginx.conf;</span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>lua_package_path 是 lua_nginx_module 库的内置参数，设置了lua的包解析路径。</p>\n<p>项目的nginx.conf 是这样。<br/></p><figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">server {\n    listen 6699;\n    set $tempalte_root /path/to/project/html;\n<pre><code>location / &#123;\n    default_type text/html;\n    content_by_lua_file /path/to/lua_file/content.lua;\n&#125;\n</code></pre>\n<p>}</span><br/></pre></td></tr></tbody></table></figure><p></p></p>\n<p><code>set $tempalte_root /path/to/project/html;</code> 是设置html文件的解析路径，<br/><code>content_by_lua_file</code> 也是 lua_nginx_module 库的内置参数，我们完成功能最关键的语句，会调用lua文件执行代码，获得返回结果，直接响应请求。</p>\n<p>其他lua代码和html代码就不贴上来了，有兴趣的去<a href=\"https://github.com/JackyXiong/openresty-lua-site\" target=\"_blank\" rel=\"external noopener noreferrer\">github</a>看吧。</p>\n<h3 id=\"其他\">其他</h3><p>不得不说，openresty通过lua扩展nginx的功能，使其更加的强大。使用它来搭建网站不能真正发挥其在服务端的作用，本文只是管中窥豹，后续还有更多值得深入的地方。</p>","text":"最近在折腾 OpenResty，OpenResty 就不用多介绍了，这方面国内质量好的资料也不多，如果非要选一个入门级别的资料，自然是《OpenResty 最佳实践》。断断续续看了一些 Lua 的语法和 OpenResty 基础，就想做点什么练练手。碰巧某天。同事介绍了几个 Op...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85_OpenResty\"><span class=\"toc-text\">安装 OpenResty</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%90%AD%E5%BB%BA%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">搭建项目</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Coding\"><span class=\"toc-text\">Coding</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96\"><span class=\"toc-text\">其他</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua虚拟机概述","uid":"ff37b2c4a3c12f5e9aa2a4071cd03370","slug":"zl/2016-01-01-606_lua虚拟机概述","date":"2024-04-03T03:47:35.838Z","updated":"2024-04-03T03:47:35.838Z","comments":true,"path":"api/articles/zl/2016-01-01-606_lua虚拟机概述.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"何为虚拟机用于模拟计算机运行的程序.是个中间层,它处于脚本语言和硬件之间的一个程序.每一门脚本语言都会有自己定义的opcode(”操作码”),可以理解为这门程序自己定义的”汇编语言”.一般的编译型语言,比如C等,经过编译器编译之后生成的都是与当前硬件环境相匹配的汇编代码;而脚本型...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua变量 · 花生肉泥","uid":"cd4bff438f584938bc08bea4cb84a008","slug":"zl/2016-01-01-60_Lua变量 · 花生肉泥","date":"2024-04-03T03:47:35.838Z","updated":"2024-04-03T03:47:35.839Z","comments":true,"path":"api/articles/zl/2016-01-01-60_Lua变量 · 花生肉泥.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"lua中有三种变量：全局变量，局部变量，还有table的域 在变量的首次赋值之前，变量的值均为nil 全局变量全局变量不需要声明，给一个变量赋值后即创建了这个全局变量，访问一个没有初始化的全局变量也不会出错，只不过得到的结果是：nil123print(a) a = 1print(...","link":"","photos":[],"count_time":{"symbolsCount":566,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}