{"title":"C++与Lua本质原始交互API","uid":"14791ba8de1523e6c9b46be1ecbacc51","slug":"zl/2016-01-01-723_C++与Lua本质原始交互API","date":"2024-04-03T03:47:35.960Z","updated":"2024-04-03T03:47:35.963Z","comments":true,"path":"api/articles/zl/2016-01-01-723_C++与Lua本质原始交互API.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<div class=\"post-nav\">\n          <div class=\"post-nav-next post-nav-item\">\n<pre><code>          &lt;a href=&quot;/2015/11/10/kmp/&quot; rel=&quot;next&quot; title=&quot;KMP查找子字符串&quot;&gt;\n            &lt;i class=&quot;fa fa-chevron-left&quot;&gt;&lt;/i&gt; \n            &lt;p class=&quot;post-nav-pre-next-title&quot;&gt;\n              KMP查找子字符串\n            &lt;/p&gt; \n          &lt;/a&gt;\n        \n      &lt;/div&gt;\n\n      &lt;span class=&quot;post-nav-divider&quot;&gt;&lt;/span&gt;\n\n      &lt;div class=&quot;post-nav-prev post-nav-item&quot;&gt;\n        \n          &lt;a href=&quot;/2015/11/11/lua_cpp_toluapp_tutorial/&quot; rel=&quot;prev&quot; title=&quot;tolua++安装&quot;&gt;\n          &lt;p class=&quot;post-nav-pre-next-title&quot;&gt;\n              tolua++安装\n          &lt;/p&gt; \n          &lt;i class=&quot;fa fa-chevron-right&quot;&gt;&lt;/i&gt;\n          &lt;/a&gt;\n        \n      &lt;/div&gt;\n    &lt;/div&gt;\n  \n\n  \n  \n\n  \n  \n\n  \n    &lt;p&gt;我们用一个例子来说明.&lt;/p&gt;\n</code></pre>\n<p><strong>. . .</strong></p>\n<p>首先, 我们需要创建一个 C++ 的主程序，以便同 Lua 进行通信. 如下 : </p>\n<figure class=\"highlight c++\"><figcaption><span>lua_test.cpp</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/><span class=\"line\">29</span><br/><span class=\"line\">30</span><br/><span class=\"line\">31</span><br/><span class=\"line\">32</span><br/><span class=\"line\">33</span><br/><span class=\"line\">34</span><br/><span class=\"line\">35</span><br/><span class=\"line\">36</span><br/><span class=\"line\">37</span><br/><span class=\"line\">38</span><br/><span class=\"line\">39</span><br/><span class=\"line\">40</span><br/><span class=\"line\">41</span><br/><span class=\"line\">42</span><br/><span class=\"line\">43</span><br/><span class=\"line\">44</span><br/><span class=\"line\">45</span><br/><span class=\"line\">46</span><br/><span class=\"line\">47</span><br/><span class=\"line\">48</span><br/><span class=\"line\">49</span><br/><span class=\"line\">50</span><br/><span class=\"line\">51</span><br/><span class=\"line\">52</span><br/><span class=\"line\">53</span><br/><span class=\"line\">54</span><br/><span class=\"line\">55</span><br/><span class=\"line\">56</span><br/><span class=\"line\">57</span><br/><span class=\"line\">58</span><br/><span class=\"line\">59</span><br/><span class=\"line\">60</span><br/><span class=\"line\">61</span><br/><span class=\"line\">62</span><br/><span class=\"line\">63</span><br/><span class=\"line\">64</span><br/><span class=\"line\">65</span><br/><span class=\"line\">66</span><br/><span class=\"line\">67</span><br/><span class=\"line\">68</span><br/><span class=\"line\">69</span><br/><span class=\"line\">70</span><br/><span class=\"line\">71</span><br/><span class=\"line\">72</span><br/><span class=\"line\">73</span><br/><span class=\"line\">74</span><br/><span class=\"line\">75</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"string\">&#34;C&#34;</span> { </span><br/><span class=\"line\">    </span><br/><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&#34;lualib.h&#34;</span></span></span><br/><span class=\"line\">    <span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&#34;lauxlib.h&#34;</span></span></span><br/><span class=\"line\">};  </span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;iostream&gt;</span></span></span><br/><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;lua.hpp&gt;</span></span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"string\">&#34;C&#34;</span> {</span><br/><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"params\">(lua_State *L)</span> </span>{</span><br/><span class=\"line\">        <span class=\"keyword\">double</span> arg = luaL_checknumber(L,<span class=\"number\">1</span>);</span><br/><span class=\"line\">        lua_pushnumber(L, arg * <span class=\"number\">0.5</span>);</span><br/><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br/><span class=\"line\">    }</span><br/><span class=\"line\">}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> * argv[])</span></span></span><br/><span class=\"line\"><span class=\"function\"></span>{</span><br/><span class=\"line\">    lua_State *L;</span><br/><span class=\"line\">    L = luaL_newstate();</span><br/><span class=\"line\">    </span><br/><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&#34;&gt;&gt; 载入（可选）标准库，以便使用打印功能&#34;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br/><span class=\"line\">    luaL_openlibs(L);</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&#34;&gt;&gt; 载入文件，暂不执行&#34;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br/><span class=\"line\">    <span class=\"keyword\">if</span> (luaL_loadfile(L, <span class=\"string\">&#34;luascript.lua&#34;</span>)) {</span><br/><span class=\"line\">        <span class=\"built_in\">cerr</span> &lt;&lt; <span class=\"string\">&#34;载入文件出现错误&#34;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br/><span class=\"line\">        <span class=\"built_in\">cerr</span> &lt;&lt; lua_tostring(L, <span class=\"number\">-1</span>) &lt;&lt; <span class=\"built_in\">endl</span>;</span><br/><span class=\"line\">        lua_pop(L,<span class=\"number\">1</span>);</span><br/><span class=\"line\">    }</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&#34;&gt;&gt; 从 C++ 写入数据 cppvar&#34;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br/><span class=\"line\">    lua_pushnumber(L, <span class=\"number\">1.1</span>);</span><br/><span class=\"line\">    lua_setglobal(L, <span class=\"string\">&#34;cppvar&#34;</span>);</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&#34;&gt;&gt; 执行 lua 文件&#34;</span> &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br/><span class=\"line\">    <span class=\"keyword\">if</span> (lua_pcall(L,<span class=\"number\">0</span>, LUA_MULTRET, <span class=\"number\">0</span>)) {</span><br/><span class=\"line\">        <span class=\"built_in\">cerr</span> &lt;&lt; <span class=\"string\">&#34;执行过程中出现错误&#34;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br/><span class=\"line\">        <span class=\"built_in\">cerr</span> &lt;&lt; lua_tostring(L, <span class=\"number\">-1</span>) &lt;&lt; <span class=\"built_in\">endl</span>;</span><br/><span class=\"line\">        lua_pop(L,<span class=\"number\">1</span>);</span><br/><span class=\"line\">    }</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&#34;&gt;&gt; 从 Lua 读取全局变量 luavar 到 C++&#34;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br/><span class=\"line\">    lua_getglobal(L, <span class=\"string\">&#34;luavar&#34;</span>);</span><br/><span class=\"line\">    <span class=\"keyword\">double</span> luavar = lua_tonumber(L,<span class=\"number\">-1</span>);</span><br/><span class=\"line\">    lua_pop(L,<span class=\"number\">1</span>);</span><br/><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&#34;C++ 从 Lua 读取到的 luavar = &#34;</span> &lt;&lt; luavar &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&#34;&gt;&gt; 从 C++ 执行 Lua 的方法 myfunction&#34;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br/><span class=\"line\">    lua_getglobal(L, <span class=\"string\">&#34;myluafunction&#34;</span>);</span><br/><span class=\"line\">    lua_pushnumber(L, <span class=\"number\">5</span>);</span><br/><span class=\"line\">    lua_pcall(L, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>);</span><br/><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&#34;函数返回值是：&#34;</span> &lt;&lt; lua_tostring(L, <span class=\"number\">-1</span>) &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br/><span class=\"line\">    lua_pop(L,<span class=\"number\">1</span>);</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&#34;&gt;&gt; 从 Lua 执行 C++ 的方法&#34;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br/><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&#34;&gt;&gt;&gt;&gt; 首先在 Lua 中注册 C++ 方法&#34;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br/><span class=\"line\">    lua_pushcfunction(L,l_cppfunction);</span><br/><span class=\"line\">    lua_setglobal(L, <span class=\"string\">&#34;cppfunction&#34;</span>);</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&#34;&gt;&gt;&gt;&gt; 调用 Lua 函数以执行 C++ 函数&#34;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br/><span class=\"line\">    lua_getglobal(L, <span class=\"string\">&#34;myfunction&#34;</span>);</span><br/><span class=\"line\">    lua_pushnumber(L, <span class=\"number\">5</span>);</span><br/><span class=\"line\">    lua_pcall(L, <span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>);</span><br/><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&#34;函数返回值是：&#34;</span> &lt;&lt; lua_tonumber(L, <span class=\"number\">-1</span>) &lt;&lt; <span class=\"built_in\">endl</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br/><span class=\"line\">    lua_pop(L,<span class=\"number\">1</span>);</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"built_in\">cout</span> &lt;&lt; <span class=\"string\">&#34;&gt;&gt; 释放 Lua 资源&#34;</span> &lt;&lt; <span class=\"built_in\">endl</span>;</span><br/><span class=\"line\">    lua_close(L);</span><br/><span class=\"line\"></span><br/><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br/><span class=\"line\">}</span><br/></pre></td></tr></tbody></table></figure>\n<p>编译命令 : <code>g++ lua_test.cpp -o ltest -llua -ldl</code></p>\n<h1 id=\"创建Lua文件\"><a href=\"#创建Lua文件\" class=\"headerlink\" title=\"创建Lua文件\"></a>创建Lua文件</h1><p>其次，是 lua 文件，我们将它命名为 luascript.lua</p>\n<figure class=\"highlight lua\"><figcaption><span>luascript.lua</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;Hello from Lua&#34;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;Lua code is capable of reading the value set from C++&#34;</span>, cppvar)</span><br/><span class=\"line\">luavar = cppvar * <span class=\"number\">3</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myluafunction</span><span class=\"params\">(times)</span></span></span><br/><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">string</span>.<span class=\"built_in\">rep</span>(<span class=\"string\">&#34;(-)&#34;</span>, times)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">myfunction</span><span class=\"params\">(arg)</span></span></span><br/><span class=\"line\">  <span class=\"keyword\">return</span> cppfunction(<span class=\"built_in\">arg</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<h1 id=\"打印结果\"><a href=\"#打印结果\" class=\"headerlink\" title=\"打印结果\"></a>打印结果</h1><p>运行 cpp 文件，结果如下：</p>\n<pre><code>&gt;&gt; 载入（可选）标准库，以便使用打印功能\n&gt;&gt; 载入文件，暂不执行\n&gt;&gt; 从 C++ 写入数据 cppvar\n&gt;&gt; 执行 lua 文件\n<p>Hello from Lua<br />\nLua code is capable of reading the value set from C++   1.1<br />\n&gt;&gt; 从 Lua 读取全局变量 luavar 到 C++<br />\nC++ 从 Lua 读取到的 luavar = 3.3</p>\n<p>&gt;&gt; 从 C++ 执行 Lua 的方法 myfunction<br />\n函数返回值是：(-)(-)(-)(-)(-)</p>\n<p>&gt;&gt; 从 Lua 执行 C++ 的方法<br />\n&gt;&gt;&gt;&gt; 首先在 Lua 中注册 C++ 方法<br />\n&gt;&gt;&gt;&gt; 调用 Lua 函数以执行 C++ 函数<br />\n函数返回值是：2.5</p>\n<p>&gt;&gt; 释放 Lua 资源</code></pre><h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://indienova.com/indie-game-development/lua-as-script-with-cpp-development/\" target=\"_blank\" rel=\"noopener noreferrer\">参考</a></p></p>\n","text":" &lt;a href=&quot;/2015/11/10/kmp/&quot; rel=&quot;next&quot; title=&quot;KMP查找子字符串&quot;&gt; &lt;i class=&quot;fa fa-chevron-left&quot;&gt;...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BALua%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">创建Lua文件</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%89%93%E5%8D%B0%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">打印结果</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua 正确处理可变参数","uid":"9073ce92e645b93c4caec3a7c43f9966","slug":"zl/2016-01-01-725_Lua 正确处理可变参数 ","date":"2024-04-03T03:47:35.963Z","updated":"2024-04-03T03:47:35.964Z","comments":true,"path":"api/articles/zl/2016-01-01-725_Lua 正确处理可变参数 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"为了在 Lua 里处理可变参数，我们可能会写下面这样的代码： local function args(...) if next(&#123;...&#125;) then for _, v in ipairs&#123;...&#125; do print(v) end else...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"FFLIB之FFLUA——C++嵌入Lua&扩展Lua利器","uid":"789215f464dafd2351ddd3499b5734c9","slug":"zl/2016-01-01-722_FFLIB之FFLUA——C++嵌入Lua扩展Lua利器","date":"2024-04-03T03:47:35.960Z","updated":"2024-04-03T03:47:35.960Z","comments":true,"path":"api/articles/zl/2016-01-01-722_FFLIB之FFLUA——C++嵌入Lua扩展Lua利器.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"摘要:在使用C++做服务器开发中，经常会使用到脚本技术，Lua是最优秀的嵌入式脚本之一。Lua的轻量、小巧、概念之简单，都使他变得越来越受欢迎。本人也使用过python做嵌入式脚本，二者各有特点，关于python之后会写相关的文章，python对于我而言更喜欢用来编写工具，我前边...","link":"","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}