{"title":"nginx lua环境搭建","uid":"c26a259f6a63eaa978c3d360c8db4e6c","slug":"zl/2016-01-01-966_nginx lua环境搭建","date":"2024-04-03T03:47:36.231Z","updated":"2024-04-03T03:47:36.231Z","comments":true,"path":"api/articles/zl/2016-01-01-966_nginx lua环境搭建.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h4 id=\"安装nginx及搭建本地测试环境\"><a href=\"#安装nginx及搭建本地测试环境\" class=\"headerlink\" title=\"安装nginx及搭建本地测试环境\"></a>安装nginx及搭建本地测试环境</h4><p>下载最新版的nginx  </p>\n<pre><code class=\"sh\">$ cd /usr/local/src \n$ wget http://nginx.org/download/nginx-1.11.3.tar.gz\n$ tar -zxvf nginx-1.11.3.tar.gz\n</code></pre>\n<p>安装Luajit(最新版)</p>\n<pre><code>$ cd /usr/local/src\n$ wget http://luajit.org/download/LuaJIT-2.1.0-beta2.tar.gz\n$ tar -zxvf LuaJIT-2.1.0-beta2.tar.gz\n$ cd ./LuaJIT-2.1.0-beta2\n$ make &amp;&amp; make install\n</code></pre><p>在/usr/local/src目录下创建nginx-module目录，在nginx-module目录下下载第三方模块：<br/>lua-nginx-module:  </p>\n<pre><code>$ git clone https://github.com/chaoslawful/lua-nginx-module.git\n$ git clone https://github.com/agentzh/echo-nginx-module.git \n$ git clone https://github.com/simpl/ngx_devel_kit.git\n</code></pre>\n<p>为了避免冲突我这里是重新创建一个安装目录</p>\n<pre><code>$ mkdir /usr/local/nginx2   \n</code></pre><p>修改nginx配置：<br/>进入nginx-1.11.3目录  </p>\n<pre><code>$ ./configure --prefix=/usr/local/nginx \n    --add-module=../nginx-module/lua-nginx-module \n    --add-module=../nginx-module/echo-nginx-module \n    --add-module=../nginx-module/ngx_devel_kit  \n    --with-http_ssl_module \n    --with-http_v2_module \n    --with-pcre=/usr/local/src/pcre \n    --with-zlib=/usr/local/src/zlib \n    --with-openssl=/usr/local/src/openssl \n<p>$ make &amp;&amp; make install<br />\n</code></pre><p>这里就不详细的介绍各个模块的下载和安装，不清楚的可以到之前的文章查看详细安装配置<a href=\"https://sunsblog.cn/2016/07/24/nginx/\" target=\"_blank\" rel=\"noopener noreferrer\">编译Nginx</a></p></p>\n<h4 id=\"导入lua\"><a href=\"#导入lua\" class=\"headerlink\" title=\"导入lua\"></a>导入lua</h4><p>luajit默认是安装在/usr/local/lib目录下，但是nginx是从/usr/lib下找luajit，因此两种解决办法，一种是安装完成后手动cp luajit库移一下，另一种是安装nginx config前先导入环境变量,告诉nginx去哪里找luajit</p>\n<pre><code>$ export LUAJIT_LIB=/usr/local/lib\n$ export LUAJIT_INC=/usr/local/include/luajit-2.0\n</code></pre><p>如果运行nginx报<font color=\"#red\">error while loading shared libraries: libluajit-5.1.so.2: cannot open shared </font>错误，说明上面的修改还是没有生效。</p>\n<p>尝试一下下面的方法：</p>\n<p>如果共享库文件安装到了/usr/local/lib(很多开源的共享库都会安装到该目录下)或其它”非/lib或/usr/lib”目录下, 那么在执行ldconfig命令前, 还要把新共享库目录加入到共享库配置文件/etc/ld.so.conf中, 操作如下:  </p>\n<pre><code>$ cat /etc/ld.so.conf\n<p>$ echo &quot;/usr/local/lib&quot; &gt;&gt; /etc/ld.so.conf</p>\n<p>$ ldconfig<br />\n</code></pre><h4 id=\"测试环境\"><a href=\"#测试环境\" class=\"headerlink\" title=\"测试环境\"></a>测试环境</h4><pre><code>$ vim /usr/example/lua/test.lua<br />\n</code></pre><p>添加如下内容：</p></p>\n<pre><code>$ ngx.say(&#34;hello world&#34;);\n</code></pre><p>然后修改nginx安装目录下的nginx.conf</p>\n<pre><code>location /test &#123;  \n     default_type &#39;text/html&#39;;  \n     content_by_lua_file /usr/example/lua/test.lua;  \n &#125;\n</code></pre><p>在浏览器中输入：yourServerIp/test</p>\n<p>如果出现：出现：hello world </p>\n<h4 id=\"恭喜！nginx-lua开发环境就安装成功了！\"><a href=\"#恭喜！nginx-lua开发环境就安装成功了！\" class=\"headerlink\" title=\"恭喜！nginx+lua开发环境就安装成功了！\"></a>恭喜！nginx+lua开发环境就安装成功了！</h4>","text":"安装nginx及搭建本地测试环境下载最新版的nginx $ cd /usr/local/src $ wget http://nginx.org/download/nginx-1.11.3.tar.gz $ tar -zxvf nginx-1.11.3.tar.gz 安装Luaji...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85nginx%E5%8F%8A%E6%90%AD%E5%BB%BA%E6%9C%AC%E5%9C%B0%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">安装nginx及搭建本地测试环境</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AF%BC%E5%85%A5lua\"><span class=\"toc-text\">导入lua</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">测试环境</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%81%AD%E5%96%9C%EF%BC%81nginx-lua%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%B0%B1%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F%E4%BA%86%EF%BC%81\"><span class=\"toc-text\">恭喜！nginx+lua开发环境就安装成功了！</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"如何搭建Lua开发环境","uid":"087f35f4fb5b860f15b04244dbbcbdea","slug":"zl/2016-01-01-96_如何搭建Lua开发环境","date":"2024-04-03T03:47:36.232Z","updated":"2024-04-03T03:47:36.232Z","comments":true,"path":"api/articles/zl/2016-01-01-96_如何搭建Lua开发环境.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 摘要 工欲善其事必先利其器，在开发Lua代码之前，我们必须要搭建好一个Lua开发环境。下面是在MAC上面搭建Lua环境的步骤。 Linux上面的步骤与其基本相似，而Windows与之有所差异，在最后将补充说明。 环境清单 lua 5.3.3 luarocks 2.3.0 安装过...","link":"","photos":[],"count_time":{"symbolsCount":666,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"lua c api","uid":"a088e52eeedd5a2e08a78395ae73ef54","slug":"zl/2016-01-01-968_lua c api ","date":"2024-04-03T03:47:36.231Z","updated":"2024-04-03T03:47:36.231Z","comments":true,"path":"api/articles/zl/2016-01-01-968_lua c api .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"一 概述 很多情况下有这种需求：在特定的框架中针对不同的业务做少量修改。使用 C/C++ 开发稳定的框架，调用针对不同业务开发的 Lua 函数可以实现需求。其实从 C/C++ 调用 Lua 函数非常简单，调用时将 Lua 函数压入栈、将函数参数压入栈，调用 lua_pcall 完...","link":"","photos":[],"count_time":{"symbolsCount":"9.5k","symbolsTime":"9 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}