{"title":"Lua学习笔记三","uid":"4b35a0b2c2eeaf2c9c95d0a9f23365d0","slug":"zl/2016-01-01-953_Lua学习笔记三","date":"2024-04-03T03:47:36.226Z","updated":"2024-04-03T03:47:36.226Z","comments":true,"path":"api/articles/zl/2016-01-01-953_Lua学习笔记三.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>Lua中可以用三种方式定义字符串：</p>\n<ul>\n<li>单引号   ‘hello world’</li>\n<li>双引号  “heool world”</li>\n<li>[[ ]]   [[hello world]]</li>\n</ul>\n<h2 id=\"字符串操作\"><a href=\"#字符串操作\" class=\"headerlink\" title=\"字符串操作\"></a>字符串操作</h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/><span class=\"line\">29</span><br/><span class=\"line\">30</span><br/><span class=\"line\">31</span><br/><span class=\"line\">32</span><br/><span class=\"line\">33</span><br/><span class=\"line\">34</span><br/><span class=\"line\">35</span><br/><span class=\"line\">36</span><br/><span class=\"line\">37</span><br/><span class=\"line\">38</span><br/><span class=\"line\">39</span><br/><span class=\"line\">40</span><br/><span class=\"line\">41</span><br/><span class=\"line\">42</span><br/><span class=\"line\">43</span><br/><span class=\"line\">44</span><br/><span class=\"line\">45</span><br/><span class=\"line\">46</span><br/><span class=\"line\">47</span><br/><span class=\"line\">48</span><br/><span class=\"line\">49</span><br/><span class=\"line\">50</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">upper</span>(<span class=\"string\">&#34;hello world&#34;</span>)) <span class=\"comment\">--HELLO WORLD</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--string.lower(str)转小写</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">lower</span>(<span class=\"string\">&#34;HELLO WORLD&#34;</span>)) <span class=\"comment\">--hello world</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--[[string.gsub(mainStr,findStr,replaceStr,num)字符串替换，返回替换后的字符串和替换的次数</span></span><br/><span class=\"line\"><span class=\"comment\">   mainStr 整个需要被替换的字符串</span></span><br/><span class=\"line\"><span class=\"comment\">   findStr 要被替换的部分</span></span><br/><span class=\"line\"><span class=\"comment\">   replaceStr 新的字符串</span></span><br/><span class=\"line\"><span class=\"comment\">   要替换的数量，不填就是替换所有</span></span><br/><span class=\"line\"><span class=\"comment\">--]]</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">gsub</span>(<span class=\"string\">&#34;aaaa&#34;</span>,<span class=\"string\">&#34;a&#34;</span>,<span class=\"string\">&#34;b&#34;</span>,<span class=\"number\">3</span>)) <span class=\"comment\">--bbba\t3</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--string.find()在一个指定的目标字符串中搜索指定的内容(第三个参数为索引,从第几个开始查找),返回其具体位置（从开始的第一个）。不存在则返回 nil</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">find</span>(<span class=\"string\">&#34;hello world&#34;</span>,<span class=\"string\">&#34;o&#34;</span>,<span class=\"number\">6</span>)) <span class=\"comment\">--结果 8   8</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--string.reverse()字符串反转</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">reverse</span>(<span class=\"string\">&#34;hello&#34;</span>))\t</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--string.format() 字符串格式化</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">format</span>(<span class=\"string\">&#34;the value is:%d&#34;</span>,<span class=\"number\">4</span>)) <span class=\"comment\">--the value is:4</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--string.char()转成字符串 string.byte() 转成整数值（指定某个位置，不知道默认第一个）</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">char</span>(<span class=\"number\">97</span>,<span class=\"number\">98</span>,<span class=\"number\">99</span>,<span class=\"number\">100</span>)) <span class=\"comment\">-- abcd</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">byte</span>(<span class=\"string\">&#34;abcd&#34;</span>)) <span class=\"comment\">--97</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">byte</span>(<span class=\"string\">&#34;abcd&#34;</span>,<span class=\"number\">2</span>))  <span class=\"comment\">--98  第二个字母转成整数值 </span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--string.len(&#34;abcd&#34;) 字符串长度</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">len</span>(<span class=\"string\">&#34;abcd&#34;</span>)) <span class=\"comment\">--4</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(#<span class=\"string\">&#34;abcd&#34;</span>)  <span class=\"comment\">--4</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--string.rep(&#34;&#34;,n) 字符串的n次拷贝</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">rep</span>(<span class=\"string\">&#34;abcd&#34;</span>,<span class=\"number\">2</span>)) <span class=\"comment\">--abcdabcd</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- .. 字符串拼接</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;abc&#34;</span>..<span class=\"string\">&#34;d&#34;</span>) <span class=\"comment\">--abcd </span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--string.gmatch(str, pattern) 回一个迭代器函数，每一次调用这个函数，返回一个在字符串 str 找到的下一个符合 pattern 描述的子串</span></span><br/><span class=\"line\"><span class=\"keyword\">for</span> world <span class=\"keyword\">in</span> <span class=\"built_in\">string</span>.<span class=\"built_in\">gmatch</span>(<span class=\"string\">&#34;Hi hello world&#34;</span>,<span class=\"string\">&#34;%a+&#34;</span>) <span class=\"keyword\">do</span></span><br/><span class=\"line\">\t<span class=\"built_in\">print</span>(world)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"comment\">--[[ 结果</span></span><br/><span class=\"line\"><span class=\"comment\">Hi</span></span><br/><span class=\"line\"><span class=\"comment\">hello</span></span><br/><span class=\"line\"><span class=\"comment\">world</span></span><br/><span class=\"line\"><span class=\"comment\">--]]</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--string.match(str, pattern, init)只寻找源字串str中的第一个配对. 参数init可选, 指定搜寻过程的起点, 默认为1。</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">string</span>.<span class=\"built_in\">match</span>(<span class=\"string\">&#34;I have 2 questions for you.&#34;</span>, <span class=\"string\">&#34;%d+ %a+&#34;</span>)) <span class=\"comment\">--2 questions</span></span><br/></pre></td></tr></tbody></table></figure>\n<h1 id=\"Lua数组\"><a href=\"#Lua数组\" class=\"headerlink\" title=\"Lua数组\"></a>Lua数组</h1><h2 id=\"一维数组\"><a href=\"#一维数组\" class=\"headerlink\" title=\"一维数组\"></a>一维数组</h2><p>Lua中数组索引从1开始</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">array = {<span class=\"string\">&#34;hello&#34;</span>,<span class=\"string\">&#34;world&#34;</span>}</span><br/><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">0</span>,<span class=\"number\">2</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">  <span class=\"built_in\">print</span>(array[i])</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<p>结果：</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"literal\">nil</span></span><br/><span class=\"line\">hello</span><br/><span class=\"line\">world</span><br/></pre></td></tr></tbody></table></figure>\n<p>可以以负数作为数组的索引：</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">array = {}</span><br/><span class=\"line\"><span class=\"keyword\">for</span> i = <span class=\"number\">-1</span>,<span class=\"number\">2</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">\tarray[i] = i</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<h2 id=\"多维数组\"><a href=\"#多维数组\" class=\"headerlink\" title=\"多维数组\"></a>多维数组</h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> array = {}</span><br/><span class=\"line\"><span class=\"keyword\">for</span> i = <span class=\"number\">1</span>,<span class=\"number\">3</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">\tarray[i] = {}</span><br/><span class=\"line\">\t<span class=\"keyword\">for</span> j = <span class=\"number\">1</span>,<span class=\"number\">3</span> <span class=\"keyword\">do</span></span><br/><span class=\"line\">\t\tarray[i][j] = i * j</span><br/><span class=\"line\">\t<span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<h1 id=\"迭代器\"><a href=\"#迭代器\" class=\"headerlink\" title=\"迭代器\"></a>迭代器</h1><h2 id=\"泛型for迭代器\"><a href=\"#泛型for迭代器\" class=\"headerlink\" title=\"泛型for迭代器\"></a>泛型for迭代器</h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(<span class=\"built_in\">table</span>) <span class=\"keyword\">do</span></span><br/><span class=\"line\">  <span class=\"built_in\">print</span>(k,v)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>泛型 for 在自己内部保存迭代函数，实际上它保存三个值：迭代函数、状态常量、控制变量</p>\n</blockquote>\n<h2 id=\"无状态的迭代器\"><a href=\"#无状态的迭代器\" class=\"headerlink\" title=\"无状态的迭代器\"></a>无状态的迭代器</h2><p>无状态的迭代器是指不保留任何状态的迭代器</p>\n<h2 id=\"多状态的迭代器\"><a href=\"#多状态的迭代器\" class=\"headerlink\" title=\"多状态的迭代器\"></a>多状态的迭代器</h2><p>可以通过闭包来实现</p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">array = {<span class=\"string\">&#34;Google&#34;</span>, <span class=\"string\">&#34;Runoob&#34;</span>}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>  <span class=\"params\">(collection)</span></span></span><br/><span class=\"line\">   <span class=\"keyword\">local</span> index = <span class=\"number\">0</span></span><br/><span class=\"line\">   <span class=\"keyword\">local</span> count = #collection</span><br/><span class=\"line\">   <span class=\"comment\">-- 闭包函数</span></span><br/><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span></span></span><br/><span class=\"line\">      index = index + <span class=\"number\">1</span></span><br/><span class=\"line\">      <span class=\"keyword\">if</span> index &lt;= count</span><br/><span class=\"line\">      <span class=\"keyword\">then</span></span><br/><span class=\"line\">         <span class=\"comment\">--  返回迭代器的当前元素</span></span><br/><span class=\"line\">         <span class=\"keyword\">return</span> collection[index]</span><br/><span class=\"line\">      <span class=\"keyword\">end</span></span><br/><span class=\"line\">   <span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">for</span> element <span class=\"keyword\">in</span> elementIterator(array)</span><br/><span class=\"line\"><span class=\"keyword\">do</span></span><br/><span class=\"line\">   <span class=\"built_in\">print</span>(element)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<h1 id=\"table\"><a href=\"#table\" class=\"headerlink\" title=\"table\"></a>table</h1><blockquote>\n<p>table 是 Lua 的一种数据结构用来帮助我们创建不同的数据类型，如：数组、字典等。</p>\n</blockquote>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 初始化表</span></span><br/><span class=\"line\"><span class=\"built_in\">table</span> = {}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 指定值</span></span><br/><span class=\"line\"><span class=\"built_in\">table</span>[<span class=\"number\">1</span>]= <span class=\"string\">&#34;Lua&#34;</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 移除引用</span></span><br/><span class=\"line\"><span class=\"built_in\">table</span> = <span class=\"literal\">nil</span></span><br/><span class=\"line\"><span class=\"comment\">-- lua 垃圾回收会释放内存</span></span><br/></pre></td></tr></tbody></table></figure>\n<h2 id=\"table的操作\"><a href=\"#table的操作\" class=\"headerlink\" title=\"table的操作\"></a>table的操作</h2><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/><span class=\"line\">29</span><br/><span class=\"line\">30</span><br/><span class=\"line\">31</span><br/><span class=\"line\">32</span><br/><span class=\"line\">33</span><br/><span class=\"line\">34</span><br/><span class=\"line\">35</span><br/><span class=\"line\">36</span><br/><span class=\"line\">37</span><br/><span class=\"line\">38</span><br/><span class=\"line\">39</span><br/><span class=\"line\">40</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">t = {<span class=\"string\">&#34;aaa&#34;</span>,<span class=\"string\">&#34;bbb&#34;</span>,<span class=\"string\">&#34;ccc&#34;</span>}</span><br/><span class=\"line\"><span class=\"comment\">--[[</span></span><br/><span class=\"line\"><span class=\"comment\">\ttable.concat (t , sep , start , end)</span></span><br/><span class=\"line\"><span class=\"comment\">\t将t的所有元素连接起来，用sep作为连接符</span></span><br/><span class=\"line\"><span class=\"comment\">\t从start开始到end结束</span></span><br/><span class=\"line\"><span class=\"comment\">\tsep,start,end可以不写</span></span><br/><span class=\"line\"><span class=\"comment\">--]]</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;concat:&#34;</span>,<span class=\"built_in\">table</span>.<span class=\"built_in\">concat</span>( t, <span class=\"string\">&#34;, &#34;</span>)) <span class=\"comment\">--aaa, bbb, ccc</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--[[</span></span><br/><span class=\"line\"><span class=\"comment\">\ttable.insert (table, pos, value):</span></span><br/><span class=\"line\"><span class=\"comment\">\t在t的pos位置插入value</span></span><br/><span class=\"line\"><span class=\"comment\">\tpos可以省略，表示在末尾插入</span></span><br/><span class=\"line\"><span class=\"comment\">--]]</span></span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">insert</span>(t,<span class=\"string\">&#34;ddd&#34;</span>)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;t[4]:&#34;</span>,t[<span class=\"number\">4</span>])\t<span class=\"comment\">--ddd</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--[[</span></span><br/><span class=\"line\"><span class=\"comment\">\t table.remove (t , pos)</span></span><br/><span class=\"line\"><span class=\"comment\">\t 删除t的pos位置上的元素</span></span><br/><span class=\"line\"><span class=\"comment\">--]]</span></span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">remove</span>(t)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;t[4]:&#34;</span>,t[<span class=\"number\">4</span>]) <span class=\"comment\">--nil</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--[[</span></span><br/><span class=\"line\"><span class=\"comment\">\ttable.sort (t , comp)</span></span><br/><span class=\"line\"><span class=\"comment\">\t给t升序排序</span></span><br/><span class=\"line\"><span class=\"comment\">\tcomp可以省略</span></span><br/><span class=\"line\"><span class=\"comment\">--]]</span></span><br/><span class=\"line\">tt = {<span class=\"string\">&#34;ddd&#34;</span>,<span class=\"string\">&#34;fff&#34;</span>,<span class=\"string\">&#34;xxx&#34;</span>,<span class=\"string\">&#34;aaa&#34;</span>}</span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">sort</span>(tt)</span><br/><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(tt) <span class=\"keyword\">do</span></span><br/><span class=\"line\">\t<span class=\"built_in\">print</span>(i,v)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"comment\">--[[</span></span><br/><span class=\"line\"><span class=\"comment\">1\taaa</span></span><br/><span class=\"line\"><span class=\"comment\">2\tddd</span></span><br/><span class=\"line\"><span class=\"comment\">3\tfff</span></span><br/><span class=\"line\"><span class=\"comment\">4\txxx</span></span><br/><span class=\"line\"><span class=\"comment\">--]]</span></span><br/></pre></td></tr></tbody></table></figure>\n<p><em>无论是<code>#</code>还是<code>table.getn</code>都会在索引中断的地方停止计数，所以要自己去table的长度</em></p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">table_leng</span><span class=\"params\">(t)</span></span></span><br/><span class=\"line\">  <span class=\"keyword\">local</span> leng=<span class=\"number\">0</span></span><br/><span class=\"line\">  <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(t) <span class=\"keyword\">do</span></span><br/><span class=\"line\">    leng=leng+<span class=\"number\">1</span></span><br/><span class=\"line\">  <span class=\"keyword\">end</span></span><br/><span class=\"line\">  <span class=\"keyword\">return</span> leng;</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>","text":"Lua中可以用三种方式定义字符串： 单引号 ‘hello world’ 双引号 “heool world” [[ ]] [[hello world]] 字符串操作12345678910111213141516171819202122232425262728293031323334...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">字符串操作</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Lua%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">Lua数组</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E7%BB%B4%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">一维数组</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E7%BB%B4%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">多维数组</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%BF%AD%E4%BB%A3%E5%99%A8\"><span class=\"toc-text\">迭代器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%9B%E5%9E%8Bfor%E8%BF%AD%E4%BB%A3%E5%99%A8\"><span class=\"toc-text\">泛型for迭代器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%97%A0%E7%8A%B6%E6%80%81%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8\"><span class=\"toc-text\">无状态的迭代器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E7%8A%B6%E6%80%81%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8\"><span class=\"toc-text\">多状态的迭代器</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#table\"><span class=\"toc-text\">table</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#table%E7%9A%84%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">table的操作</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua","uid":"15b0cdc6d03f6c3f6bf8d3a7ff197317","slug":"zl/2016-01-01-952_Lua","date":"2024-04-03T03:47:36.226Z","updated":"2024-04-03T03:47:36.226Z","comments":true,"path":"api/articles/zl/2016-01-01-952_Lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 我们要明确一个前提：Lua是动态型语言，变量是不需要类型定义，只需要为变量赋值。值可以存储在变量中，最为参数传递或结果返回。一 基本类型 Lua有8个基本类型：nil、boolean、number、string、userdata、function、thread、table 1 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua 排序算法","uid":"18c65ae79c1521b9ec150d64b8237a42","slug":"zl/2016-01-01-954_Lua 排序算法 ","date":"2024-04-03T03:47:36.226Z","updated":"2024-04-03T03:47:36.226Z","comments":true,"path":"api/articles/zl/2016-01-01-954_Lua 排序算法 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"选择排序（Selection Sort）是一种简单直观的排序算法。它的工作原理如下，首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。 选择排序的主要优点与...","link":"","photos":[],"count_time":{"symbolsCount":957,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}