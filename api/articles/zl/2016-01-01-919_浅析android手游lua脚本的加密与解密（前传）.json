{"title":"浅析android手游lua脚本的加密与解密（前传）","uid":"34c99eebc4a80397f2da445ff1e625fe","slug":"zl/2016-01-01-919_浅析android手游lua脚本的加密与解密（前传）","date":"2024-04-03T03:47:36.190Z","updated":"2024-04-03T03:47:36.190Z","comments":true,"path":"api/articles/zl/2016-01-01-919_浅析android手游lua脚本的加密与解密（前传）.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>  为了能让一些同学更好的学习lua的逆向，我把收集的一些资料组合成一篇lua加解密的相关工作给大家参考，当然，看这篇文章之前还是需要一些lua的基础知识，这里推荐云风大佬的《Lua源码欣赏》<a href=\"#19\">[19]</a>，建议结合搜索引擎学习之。</p>\n<p>  文章分2部分介绍，第1部分介绍lua加解密的相关文章介绍，第2部分介绍lua的相关工具。</p>\n<h1 id=\"相关工作：\"><a href=\"#相关工作：\" class=\"headerlink\" title=\"相关工作：\"></a>相关工作：</h1><p>  这一节介绍了互联网上对lua的各种相关文章，包括lua的加解密如文件格式的解析、基于lua的游戏和比赛的介绍、lua的hook技术等。</p>\n<p><strong>1. lua加解密入门：</strong></p>\n<p>  非虫大佬<a href=\"#1-4\">[1-4]</a> 写了4篇关于luac和luajit文件格式和字节码的相关文章，并开源了010Editor的解析luac和luajit的模板代码。Ganlv 同学<a href=\"#7\">[7]</a> 在吾爱破解写了7篇关于lua加解密的系列教程。<br/>腾讯gslab<a href=\"#9\">[9]</a> 写了一篇关于lua游戏逆向的入门介绍，这是一篇比较早的lua游戏解密的文章。INightElf 同学<a href=\"#10\">[10]</a> 写了一篇关于lua脚本反编译入门的文章。</p>\n<p><strong>2. 基于lua的手游：</strong></p>\n<p>  lua不仅能用于端游戏，也能用于手游，而且由于手游的火热，带动了lua逆向相关分析文章的分享。wmsuper 同学<a href=\"#11\">[11]</a> 在android平台下解密了腾讯游戏开心消消乐的lua脚本，后续可以通过修改lua脚本达到作弊的目的。Unity 同学<a href=\"#8\">[8]</a> 通过hook的方法解密和修改lua手游《放置江湖》的流程，达到修改游戏奖励的目的。littleNA 同学<a href=\"#12\">[12]</a> 通过3种方式解密了3个手游的lua脚本，并且修复了梦幻手游lua opcode的顺序。</p>\n<p><strong>3. 基于lua的比赛：</strong></p>\n<p>  随着国内CTF的发展，lua技术也运用到了比赛中。看雪ctf2016第2题<a href=\"#13\">[13]</a>、2017第15题<a href=\"#14\">[14]</a>和腾讯游戏安全2018决赛第2题<a href=\"#15\">[15]</a>都使用了lua引擎作为载体的CrackMe比赛，其中看雪2016将算法验证用lua代码实现并编译成luac，最后还修改了luac的文件头，使得反编译工具报错；看雪2017的题使用壳和大量的混淆，最后一步是luajit的简单异或运算；腾讯2018使用的lua技术更加深入，进阶版更是修改了lua的opcode顺序，并使用lua编写了一个虚拟机。以上3题的writeup网上都可以搜索到，有兴趣的朋友可以练练手，加深印象。</p>\n<p><strong>4. lua hooking：</strong></p>\n<p>  Hook是修改软件流程的常用手段，lua中也存在hook技术。曾半仙 同学<a href=\"#9\">[9]</a> 在看雪发布了一种通过hook lua字节码达到修改游戏逻辑的方法，并发布了一个lua汇编引擎。Nikc Cano<a href=\"#5\">[5]</a> 的blog写了一篇关于Hooking luajit的文章，興趣使然的小胃 同学<a href=\"#6\">[6]</a> 对该篇文章进行了翻译。</p>\n<h1 id=\"工具介绍：\"><a href=\"#工具介绍：\" class=\"headerlink\" title=\"工具介绍：\"></a>工具介绍：</h1><p>  逆向解密lua和luajit游戏都有相关的工具，这一节将对一些主流的工具进行介绍。</p>\n<p><strong>1. lua相关：</strong></p>\n<ul>\n<li><p>luadec <a href=\"#16\">[16]</a>：这是一个用c语言结合lua引擎源码写的开源lua反编译器，解析整个lua字节码文件并尽可能的还原为源码。当然，由于还原的是高级语言，所以兼容性一般，当反编译大量文件时肯定会遇到bug，这时就需要自己手动修复bug；并且很容易被针对造成反编译失败。目前支持的版本有lua5.1，5.2和5.3。</p>\n</li>\n<li><p>chunkspy：一款非常有用的lua分析工具，本身就是lua语言所写。它解析了整个lua字节文件，由于其输出的是lua的汇编形式，所以兼容性非常高，也造成了一定的阅读障碍。chunkspy 不仅可以解析luac文件，它还包括了一个交互式的命令，可以将输入的lua脚本转换成lua字节码汇编的形式，这对学习lua字节码非常有帮助。luadec工具中集成了这个脚本，目前支持的版本也是有lua5.1，5.2和5.3。</p>\n</li>\n<li><p>unluac：这也是一个开源的lua反编译器，java语言所写，相比luadec 工具兼容性更低,。一般很少使用，只支持lua5.1，当上面工具都失效时可以尝试。</p>\n</li>\n</ul>\n<p><strong>2. luajit相关：</strong></p>\n<ul>\n<li><p>luajit-decomp<a href=\"#17\">[17]</a>：github开源的一款luajit反编译工具，使用au3语言编写。先通过luajit原生的exe文件将luajit字节码文件转换成汇编，然后该工具再将luajit汇编转换成lua语言。由于反汇编后的luajit字节码缺少很多信息，如变量名、函数名等，造成反编译后的结果读起来比较隐晦，类似于ida的F5。但是兼容性超好，只要能够反汇编就能够反编译，所以使用时需要替换对应版本的luajit引擎（满足反汇编的需求）。目前是支持所有的luajit版本。</p>\n</li>\n<li><p>ljd<a href=\"#18\">[18]</a>：也是github开源的一款luajit反编译工具，使用python编写，与luajit-decomp 反编译luajit汇编的方式不同，其从头解析了整个luajit文件，能够获取更多的信息，还原的程度更高，但是由于精度更高，所以兼容性也会弱一点。查看该项目的fork可以获取更多的其他兼容版本，目前支持的版本有luajit2.0、luajit2.1等。</p>\n</li>\n</ul>\n<h1 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h1><p></p><div id=\"1-4\"></div><p></p>\n<ul>\n<li>[1] 飞虫 《Lua程序逆向之Luac文件格式分析》 <a href=\"https://www.anquanke.com/post/id/87006\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.anquanke.com/post/id/87006</a></li>\n<li>[2] 飞虫 《Lua程序逆向之Luac字节码与反汇编》 <a href=\"https://www.anquanke.com/post/id/87262\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.anquanke.com/post/id/87262</a></li>\n<li>[3] 飞虫 《Lua程序逆向之Luajit文件格式》 <a href=\"https://www.anquanke.com/post/id/87281\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.anquanke.com/post/id/87281</a></li>\n<li>[4] 飞虫 《Lua程序逆向之Luajit字节码与反汇编》 <a href=\"https://www.anquanke.com/post/id/90241\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.anquanke.com/post/id/90241</a><div id=\"5\"></div></li>\n<li>[5] Nick Cano 《Hooking LuaJIT》 <a href=\"https://nickcano.com/hooking-luajit\" target=\"_blank\" rel=\"noopener noreferrer\">https://nickcano.com/hooking-luajit</a><div id=\"6\"></div></li>\n<li>[6] 興趣使然的小胃 《看我如何通过hook攻击LuaJIT》 <a href=\"https://www.anquanke.com/post/id/86958\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.anquanke.com/post/id/86958</a><div id=\"7\"></div></li>\n<li>[7] Ganlv 《lua脚本解密1：loadstring》 <a href=\"https://www.52pojie.cn/thread-694364-1-1.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.52pojie.cn/thread-694364-1-1.html</a> <div id=\"8\"></div></li>\n<li>[8] unity 《【放置江湖】LUA手游 基于HOOK 解密修改流程》 <a href=\"https://www.52pojie.cn/thread-682778-1-1.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.52pojie.cn/thread-682778-1-1.html</a><div id=\"9\"></div></li>\n<li>[9] 游戏安全实验室 《Lua游戏逆向及破解方法介绍》 <a href=\"http://gslab.qq.com/portal.php?mod=view&amp;aid=173\" target=\"_blank\" rel=\"noopener noreferrer\">http://gslab.qq.com/portal.php?mod=view&amp;aid=173</a><div id=\"10\"></div></li>\n<li>[10] INightElf 《[原创]Lua脚本反编译入门之一》 <a href=\"https://bbs.pediy.com/thread-186530.htm\" target=\"_blank\" rel=\"noopener noreferrer\">https://bbs.pediy.com/thread-186530.htm</a><div id=\"11\"></div></li>\n<li>[11] wmsuper 《开心消消乐lua脚本解密》 <a href=\"https://www.52pojie.cn/thread-611248-1-1.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.52pojie.cn/thread-611248-1-1.html</a><div id=\"12\"></div></li>\n<li>[12] littleNA 《浅析android手游lua脚本的加密与解密》 <a href=\"https://bbs.pediy.com/thread-216969.htm\" target=\"_blank\" rel=\"noopener noreferrer\">https://bbs.pediy.com/thread-216969.htm</a><div id=\"13\"></div></li>\n<li>[13] 《看雪 2016CrackMe 第二题》 <a href=\"https://ctf.pediy.com/game-fight-3.htm\" target=\"_blank\" rel=\"noopener noreferrer\">https://ctf.pediy.com/game-fight-3.htm</a><div id=\"14\"></div></li>\n<li>[14] 《看雪 2017CrackMe 第十五题》 <a href=\"https://ctf.pediy.com/game-fight-45.htm\" target=\"_blank\" rel=\"noopener noreferrer\">https://ctf.pediy.com/game-fight-45.htm</a><div id=\"15\"></div></li>\n<li>[15] 《腾讯游戏安全技术竞赛》 <a href=\"https://www.52pojie.cn/forum-77-1.html\" target=\"_blank\" rel=\"noopener noreferrer\">https://www.52pojie.cn/forum-77-1.html</a><div id=\"16\"></div></li>\n<li>[16] luadec <a href=\"https://github.com/viruscamp/luadec\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/viruscamp/luadec</a><div id=\"17\"></div></li>\n<li>[17] ljd <a href=\"https://github.com/NightNord/ljd\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/NightNord/ljd</a><div id=\"18\"></div></li>\n<li>[18] luajit-decomp <a href=\"https://github.com/bobsayshilol/luajit-decomp\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/bobsayshilol/luajit-decomp</a><div id=\"19\"></div></li>\n<li>[19] 云风 《Lua源码欣赏》 <a href=\"https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/luadec/云风-lua源码欣赏-lua-5.2.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/luadec/云风-lua源码欣赏-lua-5.2.pdf</a></li>\n</ul>","text":" 为了能让一些同学更好的学习lua的逆向，我把收集的一些资料组合成一篇lua加解密的相关工作给大家参考，当然，看这篇文章之前还是需要一些lua的基础知识，这里推荐云风大佬的《Lua源码欣赏》[19]，建议结合搜索引擎学习之。 文章分2部分介绍，第1部分介绍lua加解密的相关文章介...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%9B%B8%E5%85%B3%E5%B7%A5%E4%BD%9C%EF%BC%9A\"><span class=\"toc-text\">相关工作：</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E5%85%B7%E4%BB%8B%E7%BB%8D%EF%BC%9A\"><span class=\"toc-text\">工具介绍：</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0\"><span class=\"toc-text\">参考文章</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua的性能优化建议","uid":"bab31c9b02e44acd23daccdbfa9cd0b3","slug":"zl/2016-01-01-918_Lua的性能优化建议","date":"2024-04-03T03:47:36.190Z","updated":"2024-04-03T03:47:36.190Z","comments":true,"path":"api/articles/zl/2016-01-01-918_Lua的性能优化建议.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"多的使用局部变量 在lua中，局部变量的操作相对于全局变量更少。 将用到的外层函数赋值到一个局部变量中也可以大幅度的减少调用开支。 访问外层局部变量（也就是外一层函数的局部变量）并没有访问局部变量快，但是仍然比访问全局变量快。考虑如下代码： function foo(x) for...","link":"","photos":[],"count_time":{"symbolsCount":407,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Linux安装ngx_lua_waf实现waf功能","uid":"5429aa38fc7f679f0141d2dbc38516f6","slug":"zl/2016-01-01-916_Linux安装ngx_lua_waf实现waf功能","date":"2024-04-03T03:47:36.186Z","updated":"2024-04-03T03:47:36.189Z","comments":true,"path":"api/articles/zl/2016-01-01-916_Linux安装ngx_lua_waf实现waf功能.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"一、ngx_lua_waf用途 1、防止SQL注入，本地包含，本地溢出，fuzzing测试，XSS，SSRF等web攻击;2、防止SVN/备份之类文件泄漏;3、防止apachebench之类的压力测试工具的攻击;4、屏蔽常见的扫描黑客工具，扫描器;5、屏蔽常见的网络请求;6、屏蔽...","link":"","photos":[],"count_time":{"symbolsCount":"4k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}