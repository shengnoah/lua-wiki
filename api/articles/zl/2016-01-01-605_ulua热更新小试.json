{"title":"ulua热更新小试","uid":"d082b374570447c9031a70831b8cccda","slug":"zl/2016-01-01-605_ulua热更新小试","date":"2024-04-03T03:47:35.837Z","updated":"2024-04-03T03:47:35.838Z","comments":true,"path":"api/articles/zl/2016-01-01-605_ulua热更新小试.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p></p><blockquote class=\"blockquote-center\">传说中的热更新在Unity中是怎样实现的:)</blockquote><p></p>\n<h2 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h2><p>　　热更新技术在游戏行业可以说是大名鼎鼎了，虽然苹果前段时间禁止了JSPatch等热更新技术，但目前来看，苹果并没有禁止游戏引擎的热更新技术。某种程度上说明了热更新在游戏中的重要性。而ulua作为一款优秀的unity3d热更新插件，完美解决了Unity游戏热更新的问题。<br/></p>\n<h2 id=\"什么是热更新\"><a href=\"#什么是热更新\" class=\"headerlink\" title=\"什么是热更新\"></a>什么是热更新</h2><p>　　热更新一般用于网络游戏中。其指的是在不重新下载客户端的情况下，对游戏的内容进行更新（包括资源更新或逻辑更新等）。知乎上对热更新有一个很形象的比喻：假设你的卡车开到了150KM/H，然后有个轮胎爆了。司机说，你就直接换吧，我不停车。你小心点换。热更新机制大概就是这个意思。</p>\n<h2 id=\"什么是Lua\"><a href=\"#什么是Lua\" class=\"headerlink\" title=\"什么是Lua\"></a>什么是Lua</h2><p>　　Lua是一款<strong>轻巧</strong>的脚本语言，由<strong>标准C</strong>编写而成，代码简洁优美，几乎在所有操作系统和平台上都可以编译，运行。在目前所有脚本引擎中，Lua的<strong>速度是最快</strong>的。这一切都决定了Lua是作为<strong>嵌入式脚本</strong>的最佳选择。（嗯这段其实是百度的orz…）</p>\n<p>　　Lua代码都是运行时才编译的，不运行的时候就如同一张图片、一段音频一样，都是文件；所以更新逻辑只需要更新脚本，不需要再编译，因而Lua能轻松实现“热更新”。Ulua是一款非常实用的unity插件，它能让unity支持Lua语言，而且运行效率还不错。</p>\n<h2 id=\"使用ulua进行热更新\"><a href=\"#使用ulua进行热更新\" class=\"headerlink\" title=\"使用ulua进行热更新\"></a>使用ulua进行热更新</h2><h3 id=\"1-安装ulua插件-及-Lua编写工具LuaStudio\"><a href=\"#1-安装ulua插件-及-Lua编写工具LuaStudio\" class=\"headerlink\" title=\"1.安装ulua插件 及 Lua编写工具LuaStudio\"></a>1.安装ulua插件 及 Lua编写工具LuaStudio</h3><ul>\n<li>ulua下载地址：<a href=\"http://ulua.org/\" target=\"_blank\" rel=\"noopener noreferrer\">http://ulua.org/</a></li>\n<li>LuaStudio下载地址：<a href=\"https://pan.baidu.com/s/1hsabx0w\" target=\"_blank\" rel=\"noopener noreferrer\">https://pan.baidu.com/s/1hsabx0w</a> 密码: kqvp</li>\n</ul>\n<h3 id=\"2-新建Unity工程，将ulua导入工程中\"><a href=\"#2-新建Unity工程，将ulua导入工程中\" class=\"headerlink\" title=\"2.新建Unity工程，将ulua导入工程中\"></a>2.新建Unity工程，将ulua导入工程中</h3><h3 id=\"3-ulua中的使用流程\"><a href=\"#3-ulua中的使用流程\" class=\"headerlink\" title=\"3.ulua中的使用流程\"></a>3.ulua中的使用流程</h3><ul>\n<li>实例化LuaState对象（new LuaState()）,一个LuaState对象代表一个Lua解释器</li>\n<li>加载Lua代码（LuaState.DoString(string)），string为Lua代码字符串或Lua脚本文件名称<strong>（推荐使用后者）</strong></li>\n<li>调用Lua代码中的方法（GetFunction string）,LuaFunction.callFunction(string)</li>\n<li><strong>注：</strong>由于Unity不支持扩展名为lua的文件，所以可将Lua脚本扩展名定为txt（纯文本文件）,并用unity的<strong>TextAsset</strong>列表负责记录所有脚本文件。建议列表中给每个脚本搭配一个string类型的ID，这样凭此ID即可加载正确的lua脚本；另外在LuaState类中新增一个String类型的public成员，赋值为该ID。这样一旦某个Lua脚本在运行时报错，可根据输出的ID值判断是哪个Lua脚本有错误。</li>\n</ul>\n<h3 id=\"4-ulua框架在Unity中的使用（SimpleFramework-UGUI解读）\"><a href=\"#4-ulua框架在Unity中的使用（SimpleFramework-UGUI解读）\" class=\"headerlink\" title=\"4.ulua框架在Unity中的使用（SimpleFramework_UGUI解读）\"></a>4.ulua框架在Unity中的使用（SimpleFramework_UGUI解读）</h3><ul>\n<li><strong>框架启动</strong><ul>\n<li>GlobalGenerator:初始化游戏环境,包括添加AppView,启动<strong>pureMVC</strong>框架，添加各种Manager</li>\n<li>GameManager中对资源进行更新处理</li>\n</ul>\n</li>\n<li><strong>资源初始化过程 </strong>OnResourceInited<ul>\n<li>加载网络、游戏管理器的Lua脚本</li>\n<li>调用GameManager.lua里的LuaScriptPanel方法（CallMethod通过LuaScriptMgr.cs的CallLuaFunction()将控制权移交给GameManager.lua）</li>\n<li>创建Lua面板（Message、Prompt）</li>\n<li>调用方法OnInitOK表示初始化成功</li>\n</ul>\n</li>\n<li>ulua框架的执行顺序：<ul>\n<li>每个UI Panel对应<strong>View</strong>下的lua代码，用来获取一些需要交互的属性</li>\n<li>每个UIprefab通过<strong>Controller</strong>进行控制，包括其实例化以及组件的一些行为，比如OnCreate事件</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"热更新案例：UI面板更新\"><a href=\"#热更新案例：UI面板更新\" class=\"headerlink\" title=\"热更新案例：UI面板更新\"></a>热更新案例：UI面板更新</h2><h3 id=\"创建开发UI界面\"><a href=\"#创建开发UI界面\" class=\"headerlink\" title=\"创建开发UI界面\"></a>创建开发UI界面</h3><ul>\n<li>设计UI Panel<br/><img src=\"http://okwl1c157.bkt.clouddn.com/panelDemo\" alt=\"\"/></li>\n<li>将UI panel做成prefab,进行<strong>打包</strong>（注意<strong>后缀一定为.assetbundle</strong>）</li>\n<li>将UI panel所用到的所有UI资源进行打包（图片、字体等），最好分类打包</li>\n<li>点击<strong>Game-Build XXX Resources</strong>(XXX 代表想要发布到的平台)</li>\n<li>创建<strong>Global Generator</strong>（空Object上挂Global Generator脚本）</li>\n<li>重写Logic文件夹中的<strong>GameManager.lua</strong>脚本<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">&#34;Common/define&#34;</span> </span><br/><span class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">&#34;Controller/BottomCtrl&#34;</span> <span class=\"comment\">--以下引入对各子面板的控制器</span></span><br/><span class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">&#34;Controller/SettingsCtrl&#34;</span></span><br/><span class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">&#34;Controller/DialogCtrl&#34;</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">GameManager = {}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">()</span></span></span><br/><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"string\">&#39;Bottom&#39;</span>,<span class=\"string\">&#39;Settings&#39;</span>,<span class=\"string\">&#39;Dialog&#39;</span>; <span class=\"comment\">--Prefab中除掉“Panel”后的名字</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">GameManager.OnInitOK</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">\t<span class=\"comment\">--加载网络</span></span><br/><span class=\"line\">\tAppConst.SocketPort = <span class=\"number\">2012</span>; <span class=\"comment\">--设置套接字端口号</span></span><br/><span class=\"line\">    AppConst.SocketAddress = <span class=\"string\">&#34;127.0.0.1&#34;</span>; <span class=\"comment\">--设置套接字IP地址，这里默认从主机下载资源</span></span><br/><span class=\"line\">    NetManager:SendConnect(); <span class=\"comment\">--建立连接</span></span><br/><span class=\"line\">\t</span><br/><span class=\"line\">\tBottomCtrl.Awake();</span><br/><span class=\"line\">\tSettingsCtrl.Awake();</span><br/><span class=\"line\">\tDialogCtrl.Awake();</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure></li>\n<li>View文件夹下<strong>创建子面板的lua脚本</strong>（以BottomPanel.lua为例，其他同理）<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">BottomPanel = {}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> this = BottomPanel</span><br/><span class=\"line\"><span class=\"keyword\">local</span> gameObject</span><br/><span class=\"line\"><span class=\"keyword\">local</span> transform</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BottomPanel.Awake</span><span class=\"params\">(obj)</span></span></span><br/><span class=\"line\">\t<span class=\"comment\">--对局部变量进行赋值</span></span><br/><span class=\"line\">\tgameObject = obj;</span><br/><span class=\"line\">\ttransform = gameObject.transform</span><br/><span class=\"line\">\t</span><br/><span class=\"line\">\tthis.InitPanel();<span class=\"comment\">--初始化面板</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BottomPanel.InitPanel</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">\t<span class=\"comment\">--给面板中的三个Button赋值</span></span><br/><span class=\"line\">\tthis.buttonSettings = transform:FindChild(<span class=\"string\">&#34;ButtonSetting&#34;</span>).gameObject;</span><br/><span class=\"line\">\tthis.buttonPeople = transform:FindChild(<span class=\"string\">&#34;ButtonPeople&#34;</span>).gameObject;</span><br/><span class=\"line\">\tthis.buttonDialog = transform:FindChild(<span class=\"string\">&#34;ButtonDialog&#34;</span>).gameObject;</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure></li>\n<li><strong>[可选]</strong>给SettingPanel下的BG添加动画：由小变大动画、隐藏动画、激活动画</li>\n<li>重写SettingPanel.lua脚本获取UI中的组件<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">SettingsPanel = {}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> this = SettingsPanel</span><br/><span class=\"line\"><span class=\"keyword\">local</span> transform</span><br/><span class=\"line\"><span class=\"keyword\">local</span> gameObject</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SettingsPanel.Awake</span><span class=\"params\">(obj)</span></span></span><br/><span class=\"line\">\tgameObject = obj;</span><br/><span class=\"line\">\ttransform = gameObject.transform;</span><br/><span class=\"line\">\t</span><br/><span class=\"line\">    this.InitPanel();</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SettingsPanel.InitPanel</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">\t<span class=\"comment\">--获取动画组件及按钮组件</span></span><br/><span class=\"line\">\tthis.anim = transform:FindChild(<span class=\"string\">&#34;Bg&#34;</span>):GetComponent(<span class=\"string\">&#34;Animator&#34;</span>);</span><br/><span class=\"line\">\tthis.buttonClose = transform:FindChild(<span class=\"string\">&#34;Bg/ButtonClose&#34;</span>).gameObject;</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure></li>\n<li>开发Controller控制层下的Lua代码，控制UI控件的产生和事件的监听（以BottomCtrl.lua为例）<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/><span class=\"line\">26</span><br/><span class=\"line\">27</span><br/><span class=\"line\">28</span><br/><span class=\"line\">29</span><br/><span class=\"line\">30</span><br/><span class=\"line\">31</span><br/><span class=\"line\">32</span><br/><span class=\"line\">33</span><br/><span class=\"line\">34</span><br/><span class=\"line\">35</span><br/><span class=\"line\">36</span><br/><span class=\"line\">37</span><br/><span class=\"line\">38</span><br/><span class=\"line\">39</span><br/><span class=\"line\">40</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">&#34;Common/define&#34;</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">BottomCtrl = {}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"keyword\">local</span> this = BottomCtrl</span><br/><span class=\"line\"><span class=\"keyword\">local</span> gameObject</span><br/><span class=\"line\"><span class=\"keyword\">local</span> transform</span><br/><span class=\"line\"><span class=\"keyword\">local</span> lua</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BottomCtrl.New</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">\t<span class=\"keyword\">return</span> this;</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BottomCtrl.Awake</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">\t<span class=\"comment\">--调用panel的创建方法创建相应面板，注意面板命名为XXPanel</span></span><br/><span class=\"line\">\tPanelManager:CreatePanel(<span class=\"string\">&#34;Bottom&#34;</span>,this.OnCreate)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BottomCtrl.OnCreate</span><span class=\"params\">(obj)</span></span></span><br/><span class=\"line\">\tgameObject = obj;</span><br/><span class=\"line\">\ttransform = obj.transform</span><br/><span class=\"line\">\t</span><br/><span class=\"line\">\tlua = gameObject:GetComponent(<span class=\"string\">&#34;LuaBehaviour&#34;</span>);</span><br/><span class=\"line\">\t<span class=\"comment\">--注册按钮，绑定事件</span></span><br/><span class=\"line\">\tlua:AddClick(BottomPanel.buttonDialog,this.OnButtonDialogClick);</span><br/><span class=\"line\">\tlua:AddClick(BottomPanel.buttonPeople,this.OnButtonPeopleClick);</span><br/><span class=\"line\">\tlua:AddClick(BottomPanel.buttonSettings,this.OnButtonSettingsClick);</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BottomCtrl.OnButtonDialogClick</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">\tDialogCtrl.Show();</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BottomCtrl.OnButtonPeopleClick</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">\t</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">BottomCtrl.OnButtonSettingsClick</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">\tSettingsCtrl.Show();</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure></li>\n<li>发布到手机上，启动Server<ul>\n<li>Switch Platform - Android</li>\n<li>Lua-Clear Wrap Files</li>\n<li>Lua-Gen Wrap Files</li>\n<li>Game-Build Android Resources</li>\n<li>修改AppConst.cs里的UpdateMode=true,DebugMode=false,WebUrl=局域网地址（有服务器的话就是服务器地址,这里假设用uLua自带服务器运行）</li>\n<li>打开Server.sln-HttpServer.cs，修改host,重新生成工程</li>\n<li>运行ulua文件夹下Server/Server/bin/Debug/SuperSocket.SocketService.exe（以管理员权限运行），选择r运行服务器</li>\n</ul>\n</li>\n<li>进行Lua代码的更新<ul>\n<li>Build &amp; run,手机连电脑，将程序发布到手机</li>\n<li>更改Lua代码</li>\n<li>重新Build Android Resources</li>\n<li>手机重新启动该程序</li>\n<li>解包完成！更新完成！</li>\n</ul>\n</li>\n<li>进行UI资源的更新<ul>\n<li>创建Dialog Panel,打包，新建Panel,Ctrl脚本文件</li>\n<li>重新Build Android Resources</li>\n<li>手机重新启动软件<br/><strong>注意：</strong>如果电脑防火墙没关，手机是没有权限访问电脑的，就会更新失败。。。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Unity3D中的热更新\"><a href=\"#Unity3D中的热更新\" class=\"headerlink\" title=\"Unity3D中的热更新\"></a>Unity3D中的热更新</h2><p>Unity3D的热更新会涉及3个目录。</p>\n<ul>\n<li><p><strong>游戏资源目录：</strong>里面包含Unity3D工程中StreamingAssets文件夹下的文件。安装游戏之后，这些文件将会被一字不差地复制到目标机器上的特定文件夹里，不同平台的文件夹不同，如下所示</p>\n<ul>\n<li>Mac OS或Windows：Application.dataPath “/StreamingAssets”;</li>\n<li>IOS： Application.dataPath “/Raw”;</li>\n<li>Android：jar:file://“ Application.dataPath “!/assets/“; </li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p><strong>数据目录：</strong>由于“游戏资源目录”在Android和IOS上是只读的，不能把网上的下载的资源放到里面，所以需要建立一个“数据目录”，该目录可读可写。第一次开启游戏后，程序将“游戏资源目录”的内容复制到“数据目录中”（这个步骤只会执行一次，下次再打开游戏就不复制了）。游戏过程中的资源加载，都是从“数据目录”中获取、解包。不同平台下，“数据目录”的地址也不同，LuaFramework的定义如下：</p>\n<ul>\n<li>Android或IOS：Application.persistentDataPath “/LuaFramework”</li>\n<li>Mac OS或Windows：c:/LuaFramework/</li>\n<li>调试模式下：Application.dataPath “/StreamingAssets/“ </li>\n</ul>\n</li>\n</ul>\n<p>　　<strong>注：</strong>”LuaFramework”和”StreamingAssets”由配置决定，这里取默认值</p>\n<ul>\n<li><strong>网络资源地址：</strong>存放游戏资源的网址，游戏开启后，程序会从网络资源地址下载一些更新的文件到数据目录。</li>\n</ul>\n<p>这些目录包含着不同版本的资源文件，以及用于版本控制的<strong>files.txt。</strong>Files.txt里面存放着资源文件的名称和md5码。程序会<strong>先下载“网络资源地址”上的files.txt</strong>，然后与“数据目录”中文件的<strong>md5码</strong>做比较，更新有变化的文件。</p>\n<h2 id=\"常见问题-amp-amp-注意事项\"><a href=\"#常见问题-amp-amp-注意事项\" class=\"headerlink\" title=\"常见问题 &amp;&amp; 注意事项\"></a>常见问题 &amp;&amp; 注意事项</h2><ol>\n<li>运行 LuaStudio 时，请使用Administrator管理员权限！</li>\n<li>Lua需要统一的UTF-8编码，有时候Lua脚本无故编译出错请检查编码问题！</li>\n<li>若运行到真机，记得一定要设置Const.DebugMode=false</li>\n<li>【该点摘录自云风博客】<strong>更新时要保护后内存中的非代码数据。</strong>这个时候，<strong>对 local 变量的使用务必小心</strong>。因为 local 变量总会被作为 upvalue 绑定在 closure 里。我们的代码经常会依赖这些 local 变量。在更新后，许多保存数据用的 local 变量会生成新的一份。这很可能丢失重要数据。而因为这个问题回避使用 local 也是不合适的。要知道 local 和 global 变量的性能可不只差上一点半点。<br/>我采用的方法是，<strong>把数据记录在专用的全局表下，并用 local 去引用它。初始化这些数据的时候，首先应该检查他们是否被初始化过了。这样来保证数据不被更新过程重置</strong></li>\n</ol>","text":"传说中的热更新在Unity中是怎样实现的:) 写在前面 热更新技术在游戏行业可以说是大名鼎鼎了，虽然苹果前段时间禁止了JSPatch等热更新技术，但目前来看，苹果并没有禁止游戏引擎的热更新技术。某种程度上说明了热更新在游戏中的重要性。而ulua作为一款优秀的unity3d热更新插...","link":"","photos":[],"count_time":{"symbolsCount":"6.1k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%86%99%E5%9C%A8%E5%89%8D%E9%9D%A2\"><span class=\"toc-text\">写在前面</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E7%83%AD%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">什么是热更新</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AFLua\"><span class=\"toc-text\">什么是Lua</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8ulua%E8%BF%9B%E8%A1%8C%E7%83%AD%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">使用ulua进行热更新</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%AE%89%E8%A3%85ulua%E6%8F%92%E4%BB%B6-%E5%8F%8A-Lua%E7%BC%96%E5%86%99%E5%B7%A5%E5%85%B7LuaStudio\"><span class=\"toc-text\">1.安装ulua插件 及 Lua编写工具LuaStudio</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E6%96%B0%E5%BB%BAUnity%E5%B7%A5%E7%A8%8B%EF%BC%8C%E5%B0%86ulua%E5%AF%BC%E5%85%A5%E5%B7%A5%E7%A8%8B%E4%B8%AD\"><span class=\"toc-text\">2.新建Unity工程，将ulua导入工程中</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-ulua%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">3.ulua中的使用流程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-ulua%E6%A1%86%E6%9E%B6%E5%9C%A8Unity%E4%B8%AD%E7%9A%84%E4%BD%BF%E7%94%A8%EF%BC%88SimpleFramework-UGUI%E8%A7%A3%E8%AF%BB%EF%BC%89\"><span class=\"toc-text\">4.ulua框架在Unity中的使用（SimpleFramework_UGUI解读）</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%83%AD%E6%9B%B4%E6%96%B0%E6%A1%88%E4%BE%8B%EF%BC%9AUI%E9%9D%A2%E6%9D%BF%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">热更新案例：UI面板更新</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%BC%80%E5%8F%91UI%E7%95%8C%E9%9D%A2\"><span class=\"toc-text\">创建开发UI界面</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Unity3D%E4%B8%AD%E7%9A%84%E7%83%AD%E6%9B%B4%E6%96%B0\"><span class=\"toc-text\">Unity3D中的热更新</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98-amp-amp-%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">常见问题 &amp;&amp; 注意事项</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua hash","uid":"0f96979684eb0300ef052eb6b79d166f","slug":"zl/2016-01-01-603_Lua hash","date":"2024-04-03T03:47:35.837Z","updated":"2024-04-03T03:47:35.837Z","comments":true,"path":"api/articles/zl/2016-01-01-603_Lua hash.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"一般哈希表处理冲突有两种方式，拉链法和开放地址法。拉链法就是哈希表的每个元素都是一个链表，如果有冲突的键就放在链表里面。而开放地址法是如果遇到了冲突，就在计算一个哈希值，直到没有冲突位置。拉链法的优点就是实现简单，缺点也是有的：链表会导致低的缓存命中率，并且分配链表节点本身也会对...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"SQL升级SQL Server Evaluation 版本成为正式版本","uid":"0e88f93143f04122dfd2aa4de3b9da60","slug":"zl/2016-01-01-5_[SQL]升级SQL Server Evaluation 版本成为正式版本","date":"2024-04-03T03:47:35.836Z","updated":"2024-04-03T03:47:35.836Z","comments":true,"path":"api/articles/zl/2016-01-01-5_[SQL]升级SQL Server Evaluation 版本成为正式版本.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;p&gt;如果不小心安装错 SQL Server 为 Evaluation 的版本，要小心当超过 180 天之后，系统就会无法正常使用了&lt;/p&gt; &lt;br /&gt; &lt;p&gt;这几天遇到一个蛮特别的案例，原本收到的问题是 “维护计划” 忽然无法...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}