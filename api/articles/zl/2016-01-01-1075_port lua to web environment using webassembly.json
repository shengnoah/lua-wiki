{"title":"port lua to web environment using webassembly","uid":"6cdf3908bfd2b6924dba8d1dd7b66843","slug":"zl/2016-01-01-1075_port lua to web environment using webassembly","date":"2024-04-03T03:47:32.991Z","updated":"2024-04-03T03:47:32.991Z","comments":true,"path":"api/articles/zl/2016-01-01-1075_port lua to web environment using webassembly.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<blockquote>\n<p>WebAssembly (abbreviated Wasm) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable target for compilation of high-level languages like C/C++/Rust, enabling deployment on the web for client and server applications.</p>\n</blockquote>\n<p>Recently, all major browsers like Google Chrome, Safari, Microsoft Edge all support web assembly. Web assembly allows developers to compile C/C++ application into a browser supported format, meaning even a 3A game can be run on the browser platform as well.</p>\n<p>Not only the portability, Web assembly also brings great performance improvement. It uses LLVM compiler to emit the assembly code. LLVM handles the C/C++ static analysis and optimization. Moreover, web assembly can be just-in-time compiled into machine code to achieve much higher performance.</p>\n<p>For example, here is a Lua code interpreted by Lua virtual machine (5.3.5) that directly compiled from C to web assembly.</p>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tbody><tr><td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-lua\" data-lang=\"lua\"><span class=\"lnt\">1\n</span><span class=\"lnt\">2\n</span><span class=\"lnt\">3\n</span><span class=\"lnt\">4\n</span><span class=\"lnt\">5\n</span><span class=\"lnt\">6\n</span><span class=\"lnt\">7\n</span><span class=\"lnt\">8\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-lua\" data-lang=\"lua\"><span class=\"kr\">function</span> <span class=\"nf\">hanoi</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">C</span><span class=\"p\">)</span>\n    <span class=\"kr\">if</span> <span class=\"n\">n</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"kr\">then</span> <span class=\"n\">print</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"o\">..</span><span class=\"s1\">&#39; ---&gt; &#39;</span><span class=\"o\">..</span><span class=\"n\">C</span><span class=\"p\">)</span> <span class=\"kr\">return</span> <span class=\"kr\">end</span>\n    <span class=\"n\">hanoi</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">C</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">)</span>\n    <span class=\"n\">hanoi</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">C</span><span class=\"p\">)</span>\n    <span class=\"n\">hanoi</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">B</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">,</span> <span class=\"n\">C</span><span class=\"p\">)</span>\n<span class=\"kr\">end</span>\n<p><span class=\"n\">hanoi</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"s1\">'B'</span><span class=\"p\">,</span> <span class=\"s1\">'C'</span><span class=\"p\">)</span></code></pre></td></tr></tbody></table></p>\n</div>\n</div>\n<p>Click <a id=\"hanoi\" style=\"cursor: pointer\">RUN</a> to see the result.</p>\n<pre id=\"hanoi_result\" style=\"margin-top: -15px\">    run me, &gt;  &lt; ~~~\n</pre>\n<p>Is this cool? This is a full-featured Lua virtual machine running in the browser environment. You can use all Lua build-in libraries. It is much faster than any other Lua JS implementation as well.</p>\n<p>This article will demonstrate how to build a Lua web assembly target and inject it into the browser environment.</p>\n<p>Web assembly uses Clang and LLVM as the compiler infrastructure. The default Clang and LLVM are not compatible with web assembly, you will need to build them from source. <code>binaryen</code> is used to generate the final output from the assembly code. This is super tedious and the LLVM default does not support C standard library. You will need to remap the <code>printf</code> or the <code>fopen</code> function by yourself.</p>\n<p>Fortunately, emscripten has wrapped all these tedious steps into a standalone package. We will use emscripten to compile Lua in this case.</p>\n<p>First of all, we will need to obtain the emscripten package. It is super easy to do on macOS.</p>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tbody><tr><td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-bash\" data-lang=\"bash\"><span class=\"lnt\">1\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-bash\" data-lang=\"bash\">brew install emscripten</code></pre></td></tr></tbody></table>\n</div>\n</div>\n<p>Then follow the instruction to set up <code>emcc</code>.</p>\n<p>Since we are going to host Lua in the browser environment. The default Lua host needs to be changed. Instead of executing a Lua file, we expose a function that allows Lua to execute the given script.</p>\n<p>Modify <code>lua.c</code> code to:</p>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tbody><tr><td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-c\" data-lang=\"c\"><span class=\"lnt\"> 1\n</span><span class=\"lnt\"> 2\n</span><span class=\"lnt\"> 3\n</span><span class=\"lnt\"> 4\n</span><span class=\"lnt\"> 5\n</span><span class=\"lnt\"> 6\n</span><span class=\"lnt\"> 7\n</span><span class=\"lnt\"> 8\n</span><span class=\"lnt\"> 9\n</span><span class=\"lnt\">10\n</span><span class=\"lnt\">11\n</span><span class=\"lnt\">12\n</span><span class=\"lnt\">13\n</span><span class=\"lnt\">14\n</span><span class=\"lnt\">15\n</span><span class=\"lnt\">16\n</span><span class=\"lnt\">17\n</span><span class=\"lnt\">18\n</span><span class=\"lnt\">19\n</span><span class=\"lnt\">20\n</span><span class=\"lnt\">21\n</span><span class=\"lnt\">22\n</span><span class=\"lnt\">23\n</span><span class=\"lnt\">24\n</span><span class=\"lnt\">25\n</span><span class=\"lnt\">26\n</span><span class=\"lnt\">27\n</span><span class=\"lnt\">28\n</span><span class=\"lnt\">29\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-c\" data-lang=\"c\"><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;stdlib.h&gt;</span><span class=\"cp\">\n</span><span class=\"cp\">#include</span> <span class=\"cpf\">&lt;stdio.h&gt;</span><span class=\"cp\">\n</span><span class=\"cp\"></span>\n<span class=\"cp\">#include</span> <span class=\"cpf\">&#34;lua.h&#34;</span><span class=\"cp\">\n</span><span class=\"cp\">#include</span> <span class=\"cpf\">&#34;lauxlib.h&#34;</span><span class=\"cp\">\n</span><span class=\"cp\">#include</span> <span class=\"cpf\">&#34;lualib.h&#34;</span><span class=\"cp\">\n</span><span class=\"cp\"></span>\n<span class=\"kt\">int</span> <span class=\"nf\">lua_main</span><span class=\"p\">(</span><span class=\"k\">const</span> <span class=\"kt\">char</span> <span class=\"o\">*</span><span class=\"n\">script</span><span class=\"p\">)</span>\n<span class=\"p\">&#123;</span>\n  <span class=\"kt\">int</span> <span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">;</span>\n  <span class=\"n\">lua_State</span> <span class=\"o\">*</span><span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"n\">luaL_newstate</span><span class=\"p\">();</span> <span class=\"cm\">/* create state */</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">L</span> <span class=\"o\">==</span> <span class=\"nb\">NULL</span><span class=\"p\">)</span>\n  <span class=\"p\">&#123;</span>\n    <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&#34;lua: cannot create state: not enough memory</span><span class=\"se\">n</span><span class=\"s\">&#34;</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"mi\">1</span><span class=\"p\">;</span>\n  <span class=\"p\">&#125;</span>\n  <span class=\"n\">luaL_openlibs</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">);</span>\n  <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">luaL_dostring</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">script</span><span class=\"p\">);</span>\n  <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">status</span> <span class=\"o\">!=</span> <span class=\"n\">LUA_OK</span><span class=\"p\">)</span>\n  <span class=\"p\">&#123;</span>\n    <span class=\"k\">const</span> <span class=\"kt\">char</span> <span class=\"o\">*</span><span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"n\">lua_tostring</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n    <span class=\"n\">printf</span><span class=\"p\">(</span><span class=\"s\">&#34;lua: %s</span><span class=\"se\">n</span><span class=\"s\">&#34;</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">);</span>\n    <span class=\"n\">lua_close</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">);</span>\n    <span class=\"k\">return</span> <span class=\"n\">EXIT_FAILURE</span><span class=\"p\">;</span>\n  <span class=\"p\">&#125;</span>\n  <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">lua_toboolean</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n  <span class=\"n\">lua_close</span><span class=\"p\">(</span><span class=\"n\">L</span><span class=\"p\">);</span>\n  <span class=\"k\">return</span> <span class=\"n\">result</span> <span class=\"o\">?</span> <span class=\"nl\">EXIT_SUCCESS</span> <span class=\"p\">:</span> <span class=\"n\">EXIT_FAILURE</span><span class=\"p\">;</span>\n<span class=\"p\">&#125;</span></code></pre></td></tr></tbody></table>\n</div>\n</div>\n<p>Note that <code>luaL_dostring</code> is the Lua function that executes Lua code in protected mode. If an error occurs in the protected call, the error message will be pushed into the top of Lua stack.</p>\n<p>Secondly, we need to modify the <code>Makefile</code>:</p>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tbody><tr><td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-Makefile\" data-lang=\"Makefile\"><span class=\"lnt\">1\n</span><span class=\"lnt\">2\n</span><span class=\"lnt\">3\n</span><span class=\"lnt\">4\n</span><span class=\"lnt\">5\n</span><span class=\"lnt\">6\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-Makefile\" data-lang=\"Makefile\"><span class=\"c\"># change LUA_T=\tlua to\n</span><span class=\"c\"></span><span class=\"nv\">LUA_T</span><span class=\"o\">=</span>\tlua.js\n<p><span class=\"nf\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>L</mi><mi>U</mi><msub><mi>A</mi><mi>T</mi></msub><mo>)</mo><mo>&lt;</mo><mi mathvariant=\"normal\">/</mi><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi><mo>&gt;</mo><mo>&lt;</mo><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi><mi>c</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mo>=</mo><mi mathvariant=\"normal\">&quot;</mi><mi>o</mi><mi mathvariant=\"normal\">&quot;</mi><mo>&gt;</mo><mo>:</mo><mo>&lt;</mo><mi mathvariant=\"normal\">/</mi><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi><mo>&gt;</mo><mo>&lt;</mo><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi><mi>c</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mo>=</mo><mi mathvariant=\"normal\">&quot;</mi><mi>k</mi><mi mathvariant=\"normal\">&quot;</mi><mo>&gt;</mo></mrow><annotation encoding=\"application/x-tex\">(LUA_T)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mord mathit\">L</span><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord\"><span class=\"mord mathit\">A</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">T</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span>​</span></span></span><span class=\"mclose\">)</span><span class=\"mrel\">&lt;</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">p</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">n</span><span class=\"mrel\">&gt;</span><span class=\"mrel\">&lt;</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">p</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">n</span><span class=\"mord mathit\">c</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">s</span><span class=\"mrel\">=</span><span class=\"mord mathrm\">&quot;</span><span class=\"mord mathit\">o</span><span class=\"mord mathrm\">&quot;</span><span class=\"mrel\">&gt;</span><span class=\"mrel\">:</span><span class=\"mrel\">&lt;</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">p</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">n</span><span class=\"mrel\">&gt;</span><span class=\"mrel\">&lt;</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">p</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">n</span><span class=\"mord mathit\">c</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">s</span><span class=\"mrel\">=</span><span class=\"mord mathrm\">&quot;</span><span class=\"mord mathit\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathrm\">&quot;</span><span class=\"mrel\">&gt;</span></span></span></span>(</span><span class=\"nv\">LUA_O</span><span class=\"k\">)</span> <span class=\"k\">$(</span><span class=\"nv\">LUA_A</span><span class=\"k\">)</span><br />\n<span class=\"c1\"># change $(CC) -o <a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"9fbbdf\">[email protected]</a> $(LDFLAGS) $(LUA_O) $(LUA_A) <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>L</mi><mi>I</mi><mi>B</mi><mi>S</mi><mo>)</mo><mi>t</mi><mi>o</mi><mo>&lt;</mo><mi mathvariant=\"normal\">/</mi><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi><mo>&gt;</mo><mo>&lt;</mo><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi><mi>c</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mo>=</mo><mi mathvariant=\"normal\">&quot;</mi><mi>k</mi><mi mathvariant=\"normal\">&quot;</mi><mo>&gt;</mo></mrow><annotation encoding=\"application/x-tex\">(LIBS) to&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mord mathit\">L</span><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathit\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">S</span><span class=\"mclose\">)</span><span class=\"mord mathit\">t</span><span class=\"mord mathit\">o</span><span class=\"mrel\">&lt;</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">p</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">n</span><span class=\"mrel\">&gt;</span><span class=\"mrel\">&lt;</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">p</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">n</span><span class=\"mord mathit\">c</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">s</span><span class=\"mrel\">=</span><span class=\"mord mathrm\">&quot;</span><span class=\"mord mathit\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathrm\">&quot;</span><span class=\"mrel\">&gt;</span></span></span></span>(</span>CC<span class=\"k\">)</span> -o <span class=\"nv\"><a href=\"/cdn-cgi/l/email-protection\" class=\"__cf_email__\" data-cfemail=\"557115\">[email protected]</a></span> <span class=\"k\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mo>&lt;</mo><mi mathvariant=\"normal\">/</mi><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi><mo>&gt;</mo><mi>L</mi><mi>D</mi><mi>F</mi><mi>L</mi><mi>A</mi><mi>G</mi><mi>S</mi><mo>&lt;</mo><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi><mi>c</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mo>=</mo><mi mathvariant=\"normal\">&quot;</mi><mi>k</mi><mi mathvariant=\"normal\">&quot;</mi><mo>&gt;</mo><mo>)</mo><mo>&lt;</mo><mi mathvariant=\"normal\">/</mi><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi><mo>&gt;</mo><mo>&lt;</mo><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi><mi>c</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mo>=</mo><mi mathvariant=\"normal\">&quot;</mi><mi>k</mi><mi mathvariant=\"normal\">&quot;</mi><mo>&gt;</mo></mrow><annotation encoding=\"application/x-tex\">(&lt;/span&gt;LDFLAGS&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mrel\">&lt;</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">p</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">n</span><span class=\"mrel\">&gt;</span><span class=\"mord mathit\">L</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathit\">L</span><span class=\"mord mathit\">A</span><span class=\"mord mathit\">G</span><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">S</span><span class=\"mrel\">&lt;</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">p</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">n</span><span class=\"mord mathit\">c</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">s</span><span class=\"mrel\">=</span><span class=\"mord mathrm\">&quot;</span><span class=\"mord mathit\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathrm\">&quot;</span><span class=\"mrel\">&gt;</span><span class=\"mclose\">)</span><span class=\"mrel\">&lt;</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">p</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">n</span><span class=\"mrel\">&gt;</span><span class=\"mrel\">&lt;</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">p</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">n</span><span class=\"mord mathit\">c</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">s</span><span class=\"mrel\">=</span><span class=\"mord mathrm\">&quot;</span><span class=\"mord mathit\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathrm\">&quot;</span><span class=\"mrel\">&gt;</span></span></span></span>(</span>LUA_O<span class=\"k\">)</span> <span class=\"k\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mo>&lt;</mo><mi mathvariant=\"normal\">/</mi><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi><mo>&gt;</mo><mi>L</mi><mi>U</mi><msub><mi>A</mi><mi>A</mi></msub><mo>&lt;</mo><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi><mi>c</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mo>=</mo><mi mathvariant=\"normal\">&quot;</mi><mi>k</mi><mi mathvariant=\"normal\">&quot;</mi><mo>&gt;</mo><mo>)</mo><mo>&lt;</mo><mi mathvariant=\"normal\">/</mi><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi><mo>&gt;</mo><mo>&lt;</mo><mi>s</mi><mi>p</mi><mi>a</mi><mi>n</mi><mi>c</mi><mi>l</mi><mi>a</mi><mi>s</mi><mi>s</mi><mo>=</mo><mi mathvariant=\"normal\">&quot;</mi><mi>k</mi><mi mathvariant=\"normal\">&quot;</mi><mo>&gt;</mo></mrow><annotation encoding=\"application/x-tex\">(&lt;/span&gt;LUA_A&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mrel\">&lt;</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">p</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">n</span><span class=\"mrel\">&gt;</span><span class=\"mord mathit\">L</span><span class=\"mord mathit\" style=\"margin-right:0.10903em;\">U</span><span class=\"mord\"><span class=\"mord mathit\">A</span><span class=\"vlist\"><span style=\"top:0.15em;margin-right:0.05em;margin-left:0em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><span class=\"reset-textstyle scriptstyle cramped\"><span class=\"mord mathit\">A</span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span>​</span></span></span><span class=\"mrel\">&lt;</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">p</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">n</span><span class=\"mord mathit\">c</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">s</span><span class=\"mrel\">=</span><span class=\"mord mathrm\">&quot;</span><span class=\"mord mathit\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathrm\">&quot;</span><span class=\"mrel\">&gt;</span><span class=\"mclose\">)</span><span class=\"mrel\">&lt;</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">p</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">n</span><span class=\"mrel\">&gt;</span><span class=\"mrel\">&lt;</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">p</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">n</span><span class=\"mord mathit\">c</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">s</span><span class=\"mord mathit\">s</span><span class=\"mrel\">=</span><span class=\"mord mathrm\">&quot;</span><span class=\"mord mathit\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathrm\">&quot;</span><span class=\"mrel\">&gt;</span></span></span></span>(</span>LIBS<span class=\"k\">)</span> -s <span class=\"nv\">EXPORTED_FUNCTIONS</span><span class=\"o\">=</span><span class=\"s2\">&quot;['_lua_main']&quot;</span> -s <span class=\"nv\">EXTRA_EXPORTED_RUNTIME_METHODS</span><span class=\"o\">=</span><span class=\"s2\">&quot;['cwrap']&quot;</span> -s <span class=\"nv\">ALLOW_MEMORY_GROWTH</span><span class=\"o\">=</span><span class=\"m\">1</span><br />\n</code></pre></td></tr></tbody></table></p>\n</div>\n</div>\n<p><code>EXPORTED_FUNCTIONS</code> is to export the function to the JS environment. Later we will create a JS wrap function to wrap the <code>lua_main</code> function. Note that, LLVM will be appended a <code>_</code> for each function created. So it should be <code>_lua_main</code> instead of <code>lua_main</code>.</p>\n<p>Finally, we can build the Lua binary by calling:</p>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tbody><tr><td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-bash\" data-lang=\"bash\"><span class=\"lnt\">1\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-bash\" data-lang=\"bash\">make generic <span class=\"nv\">CC</span><span class=\"o\">=</span><span class=\"s1\">&#39;emcc -s WASM=1&#39;</span> <span class=\"nv\">AR</span><span class=\"o\">=</span><span class=\"s1\">&#39;emar rcu&#39;</span> <span class=\"nv\">RANLIB</span><span class=\"o\">=</span><span class=\"s1\">&#39;emranlib&#39;</span></code></pre></td></tr></tbody></table>\n</div>\n</div>\n<p>It will generate <code>lua.js</code> and <code>lua.wasm</code>. We will use these two files in the browser environment.</p>\n<p>Now we create an <code>index.html</code> file:</p>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tbody><tr><td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-html\" data-lang=\"html\"><span class=\"lnt\"> 1\n</span><span class=\"lnt\"> 2\n</span><span class=\"lnt\"> 3\n</span><span class=\"lnt\"> 4\n</span><span class=\"lnt\"> 5\n</span><span class=\"lnt\"> 6\n</span><span class=\"lnt\"> 7\n</span><span class=\"lnt\"> 8\n</span><span class=\"lnt\"> 9\n</span><span class=\"lnt\">10\n</span><span class=\"lnt\">11\n</span><span class=\"lnt\">12\n</span><span class=\"lnt\">13\n</span><span class=\"lnt\">14\n</span><span class=\"lnt\">15\n</span><span class=\"lnt\">16\n</span><span class=\"lnt\">17\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-html\" data-lang=\"html\"><span class=\"p\">&lt;</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span>\n<span class=\"kd\">var</span> <span class=\"nx\">Module</span> <span class=\"o\">=</span> <span class=\"p\">&#123;</span>\n    <span class=\"nx\">print</span><span class=\"o\">:</span> <span class=\"p\">(</span><span class=\"nx\">text</span><span class=\"p\">)</span> <span class=\"p\">=&gt;</span> <span class=\"p\">&#123;</span>\n        <span class=\"nx\">alert</span><span class=\"p\">(</span><span class=\"s2\">&#34;stdout: &#34;</span> <span class=\"o\">+</span> <span class=\"nx\">text</span><span class=\"p\">);</span>\n    <span class=\"p\">&#125;,</span>\n<pre><code>&lt;span class=&quot;nx&quot;&gt;printErr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&#123;&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#34;stderr: &amp;#34;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;&#125;,&lt;/span&gt;\n\n&lt;span class=&quot;nx&quot;&gt;onRuntimeInitialized&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;&#123;&lt;/span&gt;\n    &lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;lua_main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cwrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;lua_main&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;string&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;\n    &lt;span class=&quot;nx&quot;&gt;lua_main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;#34;print(&amp;#39;hello world&amp;#39;&amp;#34;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;\n&lt;span class=&quot;p&quot;&gt;&#125;&lt;/span&gt;\n</code></pre>\n<p><span class=\"p\">};</span><br />\n<span class=\"p\">&lt;/</span><span class=\"nt\">script</span><span class=\"p\">&gt;</span><br />\n<span class=\"p\">&lt;</span><span class=\"nt\">script</span> <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">&quot;./lua.js&quot;</span><span class=\"p\">&gt;</span></code></pre></td></tr></tbody></table></p>\n</div>\n</div>\n<p>First of all, we create a Module object. This object will be reused in the <code>lua.js</code> file as well. So, the <code>print</code> and <code>printErr</code> functions are used to redirect the C <code>stdout</code> and <code>stderr</code> to the browser environment.</p>\n<p>The <code>onRuntimeInitialized</code> is the callback to be invoked when <code>lua.wasm</code> is fully initialized. Here we wrap the lua_main function to a JS function <code>lua_main</code> by using</p>\n<div class=\"highlight\"><div class=\"chroma\">\n<table class=\"lntable\"><tbody><tr><td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-js\" data-lang=\"js\"><span class=\"lnt\">1\n</span></code></pre></td>\n<td class=\"lntd\">\n<pre class=\"chroma\"><code class=\"language-js\" data-lang=\"js\"><span class=\"k\">const</span> <span class=\"nx\">lua_main</span> <span class=\"o\">=</span> <span class=\"nx\">Module</span><span class=\"p\">.</span><span class=\"nx\">cwrap</span><span class=\"p\">(</span><span class=\"s1\">&#39;lua_main&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;number&#39;</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">&#39;string&#39;</span><span class=\"p\">]);</span>\n</code></pre></td></tr></tbody></table>\n</div>\n</div>\n<p>When we call <code>lua_main(&#34;print(&#39;hello world&#39;&#34;);</code>, an alert, <code>hello world</code>, will be shown to the user.</p>\n<p>Of cause, the stdout can be redirected to an HTML element as well. Here is a simple Lua playground</p>\n<pre style=\"padding: 0px; padding-right: 6px;\"><textarea style=\"width: 100%; min-height: 100px; resize: vertical; font-family: Cousine, monospace; font-size: 13px;\" id=\"playground_text\">function playground()\n    print(&#39;Hello World&#39;)\nend\n<p>playground()<br />\n</textarea><br />\n</pre></p>\n<p>Click <a id=\"playground\" style=\"cursor: pointer\">RUN</a> to see the result.</p>\n<pre id=\"playground_result\" style=\"margin-top: -15px\">    run me, &gt;  &lt; ~~~\n</pre>\n<p>Have fun :)</p>\n<script data-cfasync=\"false\" src=\"/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js\"></script><script type=\"4713591f20c6a5c90ff34e68-text/javascript\">\nvar output = \"\";\n<p>var Module = {<br />\nprint: (text) =&gt; {<br />\noutput += text + ‘n’;<br />\n},</p>\n<pre><code>printErr: (text) =&gt; &#123;\n    output += text + 'n';\n&#125;,\n\nonRuntimeInitialized: () =&gt; &#123;\n    const lua_main = Module.cwrap('lua_main', 'number', ['string']);\n\n    document.getElementById('hanoi').onclick = () =&gt; &#123;\n        output = '';\n        lua_main(`\n        function hanoi(n, A, B, C)\n            if n == 1 then print(A..' ---&gt; '..C) return end\n            hanoi(n-1, A, C, B)\n            hanoi(1, A, B, C)\n            hanoi(n-1, B, A, C)\n        end\n        hanoi(3, 'A', 'B', 'C')`);\n        document.getElementById(&quot;hanoi_result&quot;).innerHTML = output;\n        output = '';\n    &#125;;\n    document.getElementById('playground').onclick = () =&gt; &#123;\n        output = '';\n        lua_main(document.getElementById('playground_text').value);\n        document.getElementById(&quot;playground_result&quot;).innerHTML = output;\n        output = '';\n    &#125;;\n&#125;\n</code></pre>\n<p>};<br />\n</script></p>\n<script src=\"https://f002.backblazeb2.com/file/yiwei-dev/lua.js\" type=\"4713591f20c6a5c90ff34e68-text/javascript\">\n</script>","text":" WebAssembly (abbreviated Wasm) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable target for ...","link":"","photos":[],"count_time":{"symbolsCount":"9.4k","symbolsTime":"9 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"编译安装lua","uid":"bce7c50ca61914966878eeb88c899eb1","slug":"zl/2016-01-01-1074_编译安装lua","date":"2024-04-03T03:47:32.991Z","updated":"2024-04-03T03:47:32.991Z","comments":true,"path":"api/articles/zl/2016-01-01-1074_编译安装lua.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"下载: build $ wget https://www.lua.org/ftp/lua-5.1.5.tar.gz 解压: build $ tar xf lua-5.1.5.tar.gz make: lua-5.1.5 $ make linux 安装: lua-5.1.5 $ s...","link":"","photos":[],"count_time":{"symbolsCount":160,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"interfacing lua with c","uid":"4f6bd1d58405e7ad87b00b5b4da97467","slug":"zl/2016-01-01-1076_interfacing lua with c","date":"2024-04-03T03:47:32.991Z","updated":"2024-04-03T03:47:32.992Z","comments":true,"path":"api/articles/zl/2016-01-01-1076_interfacing lua with c.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua is a lightweight, multi-paradigm programming language designed primarily for embedded use in applications. Roberto Ierusalimschy, the au...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}