{"title":"Lua 学习 chapter4","uid":"1babe7f63fb1a605119f0a71ddea3222","slug":"zl/2016-01-01-487_Lua 学习 chapter4 ","date":"2024-04-03T03:47:35.768Z","updated":"2024-04-03T03:47:35.768Z","comments":true,"path":"api/articles/zl/2016-01-01-487_Lua 学习 chapter4 .json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h3 id=\"目录\">目录</h3>\n<ol>\n  <li>字符串常量</li>\n  <li>强制类型转换</li>\n  <li>字符串的标准库</li>\n  <li>Unicode编码</li>\n</ol>\n<blockquote>\n  <p>I think you should do your best when you are work.</p>\n</blockquote>\n<h2 id=\"字符串常量\">字符串常量</h2>\n<p>在lua中你可以使用一对双引号或者单引号来声明字符串常量。\n它们两个是等价的，唯一区别在于，使用双引号声明的字符串中出现单引号，单引号不需要转义。在单引号中出现双引号也是一样的。\nLua中支持C语言的转义字符：</p>\n<ol>\n  <li>q 响铃</li>\n  <li>b 退格</li>\n  <li>f 换页</li>\n  <li>n 换行</li>\n  <li>t 水平制表</li>\n  <li>v 垂直制表</li>\n  <li> 反斜杠</li>\n  <li>&#34; 双引号</li>\n  <li>&#39; 单引号</li>\n</ol>\n<p>在使用长字符串或者多行字符串的时候可以使用,<strong>[[ str]]</strong>这样表示</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n3\n4\n5\n6\n</pre></td><td class=\"rouge-code\"><pre><span class=\"n\">page</span> <span class=\"o\">=</span> <span class=\"s\">[[\nfsdfsd\nfdsfsd\nfsdf\nsf\n]]</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n<h2 id=\"强制类型转换\">强制类型转换</h2>\n<p>自动转换类型： 10 .. 2 –&gt; 102 这个102就是字符串；”10” + 1 –&gt; 11.0 算术运算的时候会把字符串自动转换成浮点数。</p>\n<p>tonumber() 将字符串装换成数值，如果不能转换就会输出:nill,也可以使用这个来讲各种进制转换成十进制：\ntonumber(“100101”,2)  –&gt; 37 等等，如果所转换的数不是这个进制的数，就会返回nil。</p>\n<p>tostring() 将数字转换成字符串。</p>\n<h2 id=\"字符串的标准库\">字符串的标准库</h2>\n<ol>\n  <li>string.rep(“abc”,3) –&gt;”abcabcabc” 重复你次所需字符串</li>\n  <li>string.reverse(“abc”) –&gt; “cba”  反转</li>\n  <li>string.lower(“ABC”) –&gt; “abc” 小写</li>\n  <li>string.upper(“abc”) –&gt; “ABC” 大写</li>\n  <li>string.sub(“abcdefg”,2,-2) –&gt;”bcdef” 截取字符串，包含2和-2， 函数不会修改原字符串，2表示第二个，-2表示倒数第二个</li>\n  <li>string.byte(“abc”,1) –&gt;97  输出第一个数的内部数值表示，默认不带参数输出第一个字符，带1个输出对应位置的谁。两个输出之间的。</li>\n  <li>string.char(99,98,97) –&gt; cba 和byte相反</li>\n  <li>string.format(“%d”,10) –&gt;10  %s字符串 %x(小写字母的十六进制) %X(大写字母的十六进制) %f浮点数</li>\n  <li>string.find(“abcde”,bcd) –&gt;2 4  返回开始到结束</li>\n  <li>string.gsub(“hello world”,”ll”,”..”)  –&gt;he..o world 1  将匹配的字符串替换 并输出替换的次数。</li>\n</ol>\n<p>这个函数都可以通过语法糖来调用：</p>\n<div class=\"language-lua highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><table class=\"rouge-table\"><tbody><tr><td class=\"rouge-gutter gl\"><pre class=\"lineno\">1\n2\n</pre></td><td class=\"rouge-code\"><pre><span class=\"kd\">local</span> <span class=\"n\">str</span> <span class=\"o\">=</span> <span class=\"s2\">&#34;hello world&#34;</span>\n<span class=\"n\">str</span><span class=\"p\">:</span><span class=\"n\">gsub</span><span class=\"p\">(</span><span class=\"s2\">&#34;ll&#34;</span><span class=\"p\">,</span><span class=\"s2\">&#34;..&#34;</span><span class=\"p\">)</span>\n</pre></td></tr></tbody></table></code></pre></div></div>\n<h2 id=\"unicode编码\">Unicode编码</h2>\n<p>lua5.3开始支持utf-8编码的Unicode字符串标准。在lua中。使用8个字节来编码字符，所以可以向操作其它字符串一样读写和存储utf-8的字符串。\n但是在windows中文件名使用utf-16的编码。所以要么使用外部库，要么修改lua的语言标准库。\n函数lower、byte、char以及format中的%c都不在适用，因为它们都是针对以一个字节字符，但是utf-8是8个字节，其它的函数以字节为单位索引而不是字符，所以适用。</p>\n<ol>\n  <li>utf8.len(“fdasf”)  –&gt;5  返回制定字符串中utf-8的字符个数，如果包含无效字符，则会输出nil以及无效字符的位置。</li>\n  <li>utf8.char(114) –&gt; r  可以带多个参数，把内部值转换成字符，这里即把Unicode的值，通过utf-8编码展现。</li>\n  <li>utf8.codepoint(“r”,1) –&gt;114  类似于string.byte</li>\n  <li>utf8.offset(s,5) –&gt;把字符位置转换成字节位置</li>\n  <li>string.sub(“asdf”,utf8.offset(s,-2)) –&gt; df</li>\n  <li>utf8.codes(“fdsf”)  遍历输出字符，for i,v in utf8.codes(“fdsg”) do print(i,v) end</li>\n</ol>\n<pre><code>            &lt;hr style=&quot;visibility: hidden;&quot;/&gt;\n            \n            &lt;hr style=&quot;visibility: hidden;&quot;/&gt;\n</code></pre>\n","text":"目录 字符串常量 强制类型转换 字符串的标准库 Unicode编码 I think you should do your best when you are work. 字符串常量 在lua中你可以使用一对双引号或者单引号来声明字符串常量。 它们两个是等价的，唯一区别在于，使用双...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">目录</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%B8%B8%E9%87%8F\"><span class=\"toc-text\">字符串常量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2\"><span class=\"toc-text\">强制类型转换</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%A0%87%E5%87%86%E5%BA%93\"><span class=\"toc-text\">字符串的标准库</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#unicode%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">Unicode编码</span></a>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Car Evaluation数据集","uid":"a45c99cb71039628967718497c493671","slug":"zl/2016-01-01-486_Car Evaluation数据集","date":"2024-04-03T03:47:35.768Z","updated":"2024-04-03T03:47:35.768Z","comments":true,"path":"api/articles/zl/2016-01-01-486_Car Evaluation数据集.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"提供者：杜成玉下载地址：http://archive.ics.uci.edu/ml/machine-learning-databases/car/ 数据来源：https://www.jianshu.com/p/be23b3870d2e这是一个关于汽车测评的数据集，类别变量为汽车的...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"BCB中C与Lua互相函数变量调用代码","uid":"2c353516271c5536f77da6a0c0d37a2f","slug":"zl/2016-01-01-488_BCB中C与Lua互相函数变量调用代码","date":"2024-04-03T03:47:35.768Z","updated":"2024-04-03T03:47:35.769Z","comments":true,"path":"api/articles/zl/2016-01-01-488_BCB中C与Lua互相函数变量调用代码.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" BCB中C与Lua互相函数变量调用代码 /* * 转载请带上此行: FreedomKnight_Duzhi E_mail: */ 本代码需要三个Label,三个Button,一个BCB编译好的Lua5.1.2库或者原码.需要的请直接邮件联系我.(个人建议自己编译生成) 头文件就...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}