{"title":"OpenResty中使用Lua的MongoDB库，使用连接池节省连接认证时间","uid":"026f7effba0678b58fada37bd8a3caf8","slug":"zl/2016-01-01-923_OpenResty中使用Lua的MongoDB库，使用连接池节省连接认证时间","date":"2024-04-03T03:47:36.193Z","updated":"2024-04-03T03:47:36.197Z","comments":true,"path":"api/articles/zl/2016-01-01-923_OpenResty中使用Lua的MongoDB库，使用连接池节省连接认证时间.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>因为服务器的mongodb开启了auth认证的，所以每次连接都要验证密码，测试了下GitHub上面的几个lua的mongodb库，无论是官方的<a href=\"https://github.com/mongodb-labs/mongorover\" title=\"mongorover\" target=\"_blank\" rel=\"external noopener noreferrer\">mongorover</a>，还是纯的lua库：<a href=\"https://github.com/LuaDist2/lua-resty-mongol3\" title=\"lua-resty-mongol3\" target=\"_blank\" rel=\"external noopener noreferrer\">lua-resty-mongol3</a>，一个简单的insert操作都比php耗费的时间更长，如果业务用lua来做的优势就没有那么明显了，单纯的不认证的insert操作lua的优势很是明显的，所以要么取消认证，要么就是可以结合openresty的连接池。而且发现使用连接池后，纯的lua mongodb库竟然比mongorover更快。<br/><br/>下面是动态判断该连接是否是连接池里面的一些判断，把连接与认证封装在一起,减少不必要认证次数。同时修改了仓库的源码，以支持支持自定义连接池，这样可以让不同 用户名、密码、数据库 的连接分开，不相互干扰。</p>\n<p>新建一个lua文件，只做连接操作。</p>\n<figure class=\"highlight plain\"><table><tbody><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">local mongo = require &#34;resty.mongol&#34;</div><div class=\"line\">local _M = {}</div><div class=\"line\"></div><div class=\"line\">--把连接与认证封装在一起,减少不必要认证次数</div><div class=\"line\">local function connect(config)</div><div class=\"line\">    local db = mongo:new()</div><div class=\"line\">    if not db then</div><div class=\"line\">        return nil,nil, &#34;db not initialized&#34;</div><div class=\"line\">    end</div><div class=\"line\">    if config.host == nil or config.host == &#39;&#39; or config.port == nil or config.port == &#39;&#39; or config.database == nil or config.database == &#39;&#39; then</div><div class=\"line\">        return nil,nil, &#34;host,port,database can&#39;t empty&#34;</div><div class=\"line\">    end</div><div class=\"line\">    local user = config.user</div><div class=\"line\">    if(user == nil or user == &#39;&#39;) then</div><div class=\"line\">\tuser = &#39;&#39;</div><div class=\"line\">    end</div><div class=\"line\">    --支持自定义连接池，这样可以让不同 用户名、密码、数据库 的连接分开，不相互干扰，mongol库本身是没有实现的，所以修改了源码</div><div class=\"line\">    local pool = user .. &#34;:&#34; .. config.database .. &#34;:&#34; .. config.host .. &#34;:&#34; .. config.port</div><div class=\"line\">    local ok, err = db:connect(config.host, config.port, {pool = pool}) </div><div class=\"line\">    if not ok then</div><div class=\"line\">\treturn nil,nil,err</div><div class=\"line\">    end</div><div class=\"line\">    --选择数据库</div><div class=\"line\">    local select_db = db:new_db_handle(config.database)</div><div class=\"line\">    --获取连接池里面的已经auth过连接的数量</div><div class=\"line\">    local times,err =db:get_reused_times()</div><div class=\"line\">    if((times == 0 or times == nil) and #user &gt; 0) then</div><div class=\"line\">\t ok,err = select_db:auth_scram_sha1(config.user,config.password)</div><div class=\"line\">\tif not ok then</div><div class=\"line\">\t\treturn nil,nil,err</div><div class=\"line\">     \tend</div><div class=\"line\">    end</div><div class=\"line\">    return db,select_db,nil</div><div class=\"line\">end</div><div class=\"line\"></div><div class=\"line\">return _M</div></pre></td></tr></tbody></table></figure>","text":"因为服务器的mongodb开启了auth认证的，所以每次连接都要验证密码，测试了下GitHub上面的几个lua的mongodb库，无论是官方的mongorover，还是纯的lua库：lua-resty-mongol3，一个简单的insert操作都比php耗费的时间更长，如果业务用...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"采访 Lua 发明人","uid":"516513f72d81df95c47f0577f2b63e14","slug":"zl/2016-01-01-925_采访 Lua 发明人","date":"2024-04-03T03:47:36.198Z","updated":"2024-04-03T03:47:36.198Z","comments":true,"path":"api/articles/zl/2016-01-01-925_采访 Lua 发明人.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" &lt;div class=&quot;entry&quot;&gt; &lt;p id=&quot;fortitle&quot;&gt; 2012-12-03 转载云风的一篇文章 采访 Lua 发明人的一篇文章 《Masterminds of Programming: Con...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Survey of Federated Learning and Idea Evaluation","uid":"fc0a5eb26e10b241ee4c93c1ff1687f1","slug":"zl/2016-01-01-922_Survey of Federated Learning and Idea Evaluation","date":"2024-04-03T03:47:36.192Z","updated":"2024-04-03T03:47:36.193Z","comments":true,"path":"api/articles/zl/2016-01-01-922_Survey of Federated Learning and Idea Evaluation.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"第一类是联邦学习开创者讲述联邦学习problem setting，以及几个常用的算法的文章，这类工作目前显然不能再做了，但需要阅读。 Federated Optimization: Distributed Optimization Beyond the Datacenter这篇文...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}