{"title":"Lua标准库","uid":"fa374b256846497ad36372533ba9888a","slug":"zl/2016-01-01-396_Lua标准库","date":"2024-04-03T03:47:35.684Z","updated":"2024-04-03T03:47:35.685Z","comments":true,"path":"api/articles/zl/2016-01-01-396_Lua标准库.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>lua标准库之table库</p>\n<h3 id=\"table库的概念\"><a href=\"#table库的概念\" class=\"headerlink\" title=\"table库的概念\"></a>table库的概念</h3><p>是由一些操作table的辅助函数组成</p>\n<p>作用一：对lua中的表的大小给出一个合理的解释，如getn，#table等</p>\n<p>作用二：提供一些插入删除元素以及元素排序的函数，如insert，remove等</p>\n<p>Lua5.1中字符串库的所有函数如下表：先定义一张表 t = {1,2,3}</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">函数</th>\n<th style=\"text-align:left\">描述</th>\n<th style=\"text-align:left\">示例</th>\n<th style=\"text-align:left\">结果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">#</td>\n<td style=\"text-align:left\">取表长</td>\n<td style=\"text-align:left\">#t</td>\n<td style=\"text-align:left\">3</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">getn</td>\n<td style=\"text-align:left\">取表长</td>\n<td style=\"text-align:left\">Table.getn(t)</td>\n<td style=\"text-align:left\">3</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">setn</td>\n<td style=\"text-align:left\">设置table中的元素个数</td>\n<td style=\"text-align:left\">Table.setn(t,4)</td>\n<td style=\"text-align:left\">4</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">maxn</td>\n<td style=\"text-align:left\">返回表中最大key</td>\n<td style=\"text-align:left\">Table.maxn(t)</td>\n<td style=\"text-align:left\">3</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">concat</td>\n<td style=\"text-align:left\">表连接</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">insert</td>\n<td style=\"text-align:left\">往表的指定位置插入key</td>\n<td style=\"text-align:left\">table.insert(t,4)</td>\n<td style=\"text-align:left\">{1,2,3,4}</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">remove</td>\n<td style=\"text-align:left\">删除表的指定位</td>\n<td style=\"text-align:left\">table.remove(table,3)</td>\n<td style=\"text-align:left\">{1,2,3}</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">sort</td>\n<td style=\"text-align:left\">给表排序，默认升序</td>\n<td style=\"text-align:left\">table.sort(t)</td>\n<td style=\"text-align:left\">{1,2,3}</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"取表长\"><a href=\"#取表长\" class=\"headerlink\" title=\"取表长\"></a>取表长</h3><p>两种方法#和getn</p>\n<p>#：返回表的长度（只返回变量是数字的和当nil在非最后一个元素的位置）</p>\n<p>table.getn(t)：返回表中元素的个数（只返回变量是数字的） 在lua5.3中已不可使用<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> t = {<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,}</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(#t)     </span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">table</span>.<span class=\"built_in\">getn</span>(t))     </span><br/></pre></td></tr></tbody></table></figure><p></p>\n<h3 id=\"table-insert\"><a href=\"#table-insert\" class=\"headerlink\" title=\"table.insert\"></a>table.insert</h3><p>往指定表插入一个元素，有不带参数和带参数两种方法</p>\n<h4 id=\"不带参数-插入位置就是最后一个位置\"><a href=\"#不带参数-插入位置就是最后一个位置\" class=\"headerlink\" title=\"不带参数:插入位置就是最后一个位置\"></a>不带参数:插入位置就是最后一个位置</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> t ={<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>}</span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">insert</span>(t,<span class=\"number\">20</span>)</span><br/><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"built_in\">pairs</span>(t) <span class=\"keyword\">do</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span>(<span class=\"string\">&#34;第&#34;</span> .. i .. <span class=\"string\">&#34;个元素的值为：&#34;</span> .. v .. <span class=\"string\">&#34;。&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 输出结果</span></span><br/><span class=\"line\"><span class=\"comment\">-- 第1个元素的值为1。</span></span><br/><span class=\"line\"><span class=\"comment\">-- 第2个元素的值为2。</span></span><br/><span class=\"line\"><span class=\"comment\">-- 第3个元素的值为3。</span></span><br/><span class=\"line\"><span class=\"comment\">-- 第4个元素的值为20。</span></span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"带参数，可以指定插入到第几个位置\"><a href=\"#带参数，可以指定插入到第几个位置\" class=\"headerlink\" title=\"带参数，可以指定插入到第几个位置\"></a>带参数，可以指定插入到第几个位置</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> t = {<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>}</span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">insert</span>(t,<span class=\"number\">2</span>,<span class=\"number\">20</span>)</span><br/><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(t) <span class=\"keyword\">do</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span> (<span class=\"string\">&#34;第&#34;</span> .. i .. <span class=\"string\">&#34;个元素的值为：&#34;</span> .. v .. <span class=\"string\">&#34;。&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 输出结果</span></span><br/><span class=\"line\"><span class=\"comment\">--  第1个元素的值为1。</span></span><br/><span class=\"line\"><span class=\"comment\">--  第2个元素的值为20。</span></span><br/><span class=\"line\"><span class=\"comment\">--  第3个元素的值为2。</span></span><br/><span class=\"line\"><span class=\"comment\">--  第4个元素的值为3。</span></span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"table-remove\"><a href=\"#table-remove\" class=\"headerlink\" title=\"table.remove\"></a>table.remove</h3><p>从指定列表删除一个元素</p>\n<h4 id=\"不带参数：默认删除最后一个参数\"><a href=\"#不带参数：默认删除最后一个参数\" class=\"headerlink\" title=\"不带参数：默认删除最后一个参数\"></a>不带参数：默认删除最后一个参数</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> t = {<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>}</span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">remove</span>(t)</span><br/><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"built_in\">pairs</span>(t) <span class=\"keyword\">do</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span> (<span class=\"string\">&#34;第&#34;</span> .. i .. <span class=\"string\">&#34;个元素的值为：&#34;</span> .. v .. <span class=\"string\">&#34;。&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 输出结果</span></span><br/><span class=\"line\"><span class=\"comment\">--  第1个元素的值为1。</span></span><br/><span class=\"line\"><span class=\"comment\">--  第2个元素的值为2。</span></span><br/></pre></td></tr></tbody></table></figure>\n<h4 id=\"带参数：可以指定删除某个位置\"><a href=\"#带参数：可以指定删除某个位置\" class=\"headerlink\" title=\"带参数：可以指定删除某个位置\"></a>带参数：可以指定删除某个位置</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> t = {<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>}</span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">remove</span>(t,<span class=\"number\">1</span>)</span><br/><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(t) <span class=\"keyword\">do</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span> (<span class=\"string\">&#34;第&#34;</span> .. i .. <span class=\"string\">&#34;个元素的值为：&#34;</span> .. v .. <span class=\"string\">&#34;。&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 输出结果</span></span><br/><span class=\"line\"><span class=\"comment\">--  第1个元素的值为2。</span></span><br/><span class=\"line\"><span class=\"comment\">--  第2个元素的值为3。</span></span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"table-sort\"><a href=\"#table-sort\" class=\"headerlink\" title=\"table.sort\"></a>table.sort</h3><p>table.sort(表名，排序函数)</p>\n<p>对指定表进行排序操作，有不带排序函数和带排序函数两种</p>\n<h4 id=\"不带排序函数：默认升序，从小到大\"><a href=\"#不带排序函数：默认升序，从小到大\" class=\"headerlink\" title=\"不带排序函数：默认升序，从小到大\"></a>不带排序函数：默认升序，从小到大</h4><h4 id=\"带排序函数：自定义函数\"><a href=\"#带排序函数：自定义函数\" class=\"headerlink\" title=\"带排序函数：自定义函数\"></a>带排序函数：自定义函数</h4><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> s = <span class=\"string\">&#34;&#34;</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> t = {<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">7</span>,<span class=\"number\">3</span>,<span class=\"number\">11</span>,<span class=\"number\">9</span>,<span class=\"number\">8</span>,}</span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">sort</span>(t)</span><br/><span class=\"line\"><span class=\"keyword\">for</span> i = <span class=\"number\">1</span>,#t <span class=\"keyword\">do</span></span><br/><span class=\"line\">     s = s .. <span class=\"string\">&#34;,&#34;</span> .. t[i]</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(s)</span><br/><span class=\"line\">s = <span class=\"string\">&#34;&#34;</span></span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">sort</span>(t,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(a,b)</span></span> <span class=\"keyword\">return</span> a&gt;b <span class=\"keyword\">end</span>)</span><br/><span class=\"line\"><span class=\"keyword\">for</span> i = <span class=\"number\">1</span>,#t <span class=\"keyword\">do</span></span><br/><span class=\"line\">     s = s .. <span class=\"string\">&#34;,&#34;</span> .. t[i]</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(s)</span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\">=====结果=====</span><br/><span class=\"line\">,<span class=\"number\">1</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">11</span></span><br/><span class=\"line\">,<span class=\"number\">11</span>,<span class=\"number\">9</span>,<span class=\"number\">8</span>,<span class=\"number\">7</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">1</span></span><br/></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/><span class=\"line\">21</span><br/><span class=\"line\">22</span><br/><span class=\"line\">23</span><br/><span class=\"line\">24</span><br/><span class=\"line\">25</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\">a = {<span class=\"string\">&#34;banana&#34;</span>,<span class=\"string\">&#34;orange&#34;</span>,<span class=\"string\">&#34;apple&#34;</span>,<span class=\"string\">&#34;grapes&#34;</span>}</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;排序前&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(a) <span class=\"keyword\">do</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span>(k,v)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"built_in\">table</span>.<span class=\"built_in\">sort</span>(a)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;排序后&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(a) <span class=\"keyword\">do</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span>(k,v)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\"></span><br/><span class=\"line\">=====结果=====</span><br/><span class=\"line\">排序前</span><br/><span class=\"line\"><span class=\"number\">1</span>     banana</span><br/><span class=\"line\"><span class=\"number\">2</span>     orange</span><br/><span class=\"line\"><span class=\"number\">3</span>     apple</span><br/><span class=\"line\"><span class=\"number\">4</span>     grapes</span><br/><span class=\"line\">排序后</span><br/><span class=\"line\"><span class=\"number\">1</span>     apple</span><br/><span class=\"line\"><span class=\"number\">2</span>     banana</span><br/><span class=\"line\"><span class=\"number\">3</span>     grapes</span><br/><span class=\"line\"><span class=\"number\">4</span>     orange</span><br/></pre></td></tr></tbody></table></figure>\n<h3 id=\"table-concat\"><a href=\"#table-concat\" class=\"headerlink\" title=\"table.concat\"></a>table.concat</h3><p>table.concat(表名，分隔符)<br/>连接表中的元素，那么输出的是字符串类型<br/>第一个参数为要连接的表<br/>第二个参数为连接时使用的分隔符<br/>有第二个参数不写和写两种的方法</p>\n<p>分隔符不写：直接连接，输出结果为字符串<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> s = <span class=\"string\">&#34;&#34;</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> t = {<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">7</span>,<span class=\"number\">3</span>,<span class=\"number\">11</span>,<span class=\"number\">9</span>,<span class=\"number\">8</span>}</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(<span class=\"built_in\">table</span>.<span class=\"built_in\">concat</span>(t)))     <span class=\"comment\">-- string</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">table</span>.<span class=\"built_in\">concat</span>(t))     <span class=\"comment\">-- 14731198</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>有分隔符<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> s = <span class=\"string\">&#34;&#34;</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> t = {<span class=\"number\">1</span>,<span class=\"number\">4</span>,<span class=\"number\">7</span>,<span class=\"number\">3</span>,<span class=\"number\">11</span>,<span class=\"number\">9</span>,<span class=\"number\">8</span>}</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(<span class=\"built_in\">table</span>.<span class=\"built_in\">concat</span>(t,<span class=\"string\">&#34;&#34;</span>)))     <span class=\"comment\">-- string</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">table</span>.<span class=\"built_in\">concat</span>(t,<span class=\"string\">&#34;.&#34;</span>))     <span class=\"comment\">-- 1.4.7.3.11.9.8</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">table</span>.<span class=\"built_in\">concat</span>(t,<span class=\"string\">&#34;t&#34;</span>))     <span class=\"comment\">-- 1     4     7     3     11     9     8</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">table</span>.<span class=\"built_in\">concat</span>(t,<span class=\"string\">&#34;~-~&#34;</span>))     <span class=\"comment\">-- 1 ~-~4 ~-~7 ~-~3 ~-~11 ~-~9 ~-~8</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<h3 id=\"table的结构\"><a href=\"#table的结构\" class=\"headerlink\" title=\"table的结构\"></a>table的结构</h3><p>构造器是创建和初始化表的表达式<br/>表是lua特有的功能强大的东西。最简单的构造函数是{}，用来创建一个空表，可以直接初始化数组<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 初始化表</span></span><br/><span class=\"line\">mytable = {}</span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">--指定值</span></span><br/><span class=\"line\">mytable[<span class=\"number\">1</span>] = <span class=\"string\">&#34;lua&#34;</span></span><br/><span class=\"line\"></span><br/><span class=\"line\"><span class=\"comment\">-- 移除引用</span></span><br/><span class=\"line\">mytable = <span class=\"literal\">nil</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>lua垃圾回收会释放内存</p>\n<p>当我们为table a 并设置元素，然后a复制给b，则a与b都指向同一个内存<br/>如果a设置为nil，则b同样能访问table元素<br/>如果没有指定的变量指向，lua的垃圾回收机制会清理对应的内存<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--[简单的table]</span></span><br/><span class=\"line\">mytable = {}</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;mytable 的类型是&#34;</span>,<span class=\"built_in\">type</span>(mytable)) <span class=\"comment\">--mytable的类型是table</span></span><br/><span class=\"line\">mytable[<span class=\"number\">1</span>] = <span class=\"string\">&#34;Lua&#34;</span></span><br/><span class=\"line\">mytable[<span class=\"string\">&#34;wow&#34;</span>] = <span class=\"string\">&#34;修改前&#34;</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;mytable索引为1的元素是：&#34;</span>,mytable[<span class=\"number\">1</span>]) <span class=\"comment\">--mytable索引为1的元素是：Lua</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;mytable索引为wow的元素是：&#34;</span>,mytable[<span class=\"string\">&#34;wow&#34;</span>]) <span class=\"comment\">--mytable索引为wow的元素是：修改前</span></span><br/><span class=\"line\"><span class=\"comment\">-- [alternatetable 和 mytable 的是指向同一个table]</span></span><br/><span class=\"line\">alternatetable = mytable</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;alternatetable索引为wow的元素是:&#34;</span>,alternatetable[<span class=\"string\">&#34;wow&#34;</span>]) <span class=\"comment\">--alternatetable索引为wow的元素是:修改前</span></span><br/><span class=\"line\">alternatetable[<span class=\"string\">&#34;wow&#34;</span>] = <span class=\"string\">&#34;修改后&#34;</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;mytable索引为wow的元素是：&#34;</span>,mytable[<span class=\"string\">&#34;wow&#34;</span>]) <span class=\"comment\">-- mytable索引为wow的元素是： 修改后</span></span><br/><span class=\"line\"><span class=\"comment\">-- [释放变量]</span></span><br/><span class=\"line\">alternatetable = <span class=\"literal\">nil</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;alternatetable 是：&#34;</span>,alternatetable) <span class=\"comment\">--alternatetable 是：nil</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;mytable索引为wow的元素是：&#34;</span>,mytable[<span class=\"string\">&#34;wow&#34;</span>]) <span class=\"comment\">-- mytable索引为wow的元素是：修改后</span></span><br/><span class=\"line\">mytable = <span class=\"literal\">nil</span></span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;mytable 是：&#34;</span>,mytable) <span class=\"comment\">--mytable 是：nil</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>判断table是否是空表<br/>可以用next函数来判断空表，next(table,[,index])第一个参数是表，第二个参数是标的索引值。返回索引和对应的值，当不传入index，默认index为表的首位索引<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> t = {}</span><br/><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">nil</span> ~= t <span class=\"keyword\">and</span> <span class=\"string\">&#34;table&#34;</span> == <span class=\"built_in\">type</span>(t) <span class=\"keyword\">then</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span>(<span class=\"built_in\">next</span>(t))     <span class=\"comment\">-- nil</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> t = {<span class=\"number\">10</span>}</span><br/><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"literal\">nil</span> ~= t <span class=\"keyword\">and</span> <span class=\"string\">&#34;table&#34;</span> == <span class=\"built_in\">type</span>(t) <span class=\"keyword\">then</span></span><br/><span class=\"line\">     <span class=\"built_in\">print</span>(<span class=\"built_in\">next</span>(t))     <span class=\"comment\">-- 1     10</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure>\n<p>注意：next如果传入的参数不是tbale或者为nil，脚本会报错，所以上面要加上这个两个判断</p>","text":"lua标准库之table库 table库的概念是由一些操作table的辅助函数组成 作用一：对lua中的表的大小给出一个合理的解释，如getn，#table等 作用二：提供一些插入删除元素以及元素排序的函数，如insert，remove等 Lua5.1中字符串库的所有函数如下表：...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#table%E5%BA%93%E7%9A%84%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">table库的概念</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8F%96%E8%A1%A8%E9%95%BF\"><span class=\"toc-text\">取表长</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#table-insert\"><span class=\"toc-text\">table.insert</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E5%B8%A6%E5%8F%82%E6%95%B0-%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE%E5%B0%B1%E6%98%AF%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E4%BD%8D%E7%BD%AE\"><span class=\"toc-text\">不带参数:插入位置就是最后一个位置</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B8%A6%E5%8F%82%E6%95%B0%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%8C%87%E5%AE%9A%E6%8F%92%E5%85%A5%E5%88%B0%E7%AC%AC%E5%87%A0%E4%B8%AA%E4%BD%8D%E7%BD%AE\"><span class=\"toc-text\">带参数，可以指定插入到第几个位置</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#table-remove\"><span class=\"toc-text\">table.remove</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E5%B8%A6%E5%8F%82%E6%95%B0%EF%BC%9A%E9%BB%98%E8%AE%A4%E5%88%A0%E9%99%A4%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">不带参数：默认删除最后一个参数</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B8%A6%E5%8F%82%E6%95%B0%EF%BC%9A%E5%8F%AF%E4%BB%A5%E6%8C%87%E5%AE%9A%E5%88%A0%E9%99%A4%E6%9F%90%E4%B8%AA%E4%BD%8D%E7%BD%AE\"><span class=\"toc-text\">带参数：可以指定删除某个位置</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#table-sort\"><span class=\"toc-text\">table.sort</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E5%B8%A6%E6%8E%92%E5%BA%8F%E5%87%BD%E6%95%B0%EF%BC%9A%E9%BB%98%E8%AE%A4%E5%8D%87%E5%BA%8F%EF%BC%8C%E4%BB%8E%E5%B0%8F%E5%88%B0%E5%A4%A7\"><span class=\"toc-text\">不带排序函数：默认升序，从小到大</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B8%A6%E6%8E%92%E5%BA%8F%E5%87%BD%E6%95%B0%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">带排序函数：自定义函数</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#table-concat\"><span class=\"toc-text\">table.concat</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#table%E7%9A%84%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">table的结构</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"浅谈 ngx_lua 在 UPYUN 的应用","uid":"0626f334e1e0773ffd33c02e85588fe8","slug":"zl/2016-01-01-395_浅谈 ngx_lua 在 UPYUN 的应用","date":"2024-04-03T03:47:35.684Z","updated":"2024-04-03T03:47:35.684Z","comments":true,"path":"api/articles/zl/2016-01-01-395_浅谈 ngx_lua 在 UPYUN 的应用.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"ngx_lua 是一个 NGINX 的第三方扩展模块，它能够将 Lua 代码嵌入到 NGINX 中来执行。 UPYUN CDN 大量使用了 NGINX 作为反向代理服务器，其中绝大部分的业务逻辑已经由 Lua 来驱动了。 这个主题之前在 OSC 源创会 2014 北京站 和 Se...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Redis 集群 Lua 操作","uid":"28aef2d24f0f724c3c4aa2b7ec317e06","slug":"zl/2016-01-01-391_Redis 集群 Lua 操作","date":"2024-04-03T03:47:35.683Z","updated":"2024-04-03T03:47:35.683Z","comments":true,"path":"api/articles/zl/2016-01-01-391_Redis 集群 Lua 操作.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"redis 集群的单键操作，基本跟单机版一样，没有太大的区别redis集群的操作相对麻烦一点，由于slot的存在，同一组key可能会被分派到不同的slot中,这会导致lua在执行多键操作时遇到错误 需要使用redis 的hashtag来将一组类似的key分配到同一个slot中，方...","link":"","photos":[],"count_time":{"symbolsCount":341,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}