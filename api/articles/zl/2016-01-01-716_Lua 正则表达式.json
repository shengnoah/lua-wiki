{"title":"Lua 正则表达式","uid":"c88054c1f5dd8702b469167d31691978","slug":"zl/2016-01-01-716_Lua 正则表达式","date":"2024-04-03T03:47:35.948Z","updated":"2024-04-03T03:47:35.951Z","comments":true,"path":"api/articles/zl/2016-01-01-716_Lua 正则表达式.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<div itemprop=\"articleBody\">\n<h3 id=\"heading-lua字符串匹配\">Lua字符串匹配</h3>\n<p><em>与正则相关的函数</em></p>\n<blockquote>\n  <p>str = &#34;{1:[1,2,3],2:{idx2:2,level:60,reward_idx:2001,ring:100},test:{1:100,2:200}}&#34;</p>\n</blockquote>\n<p><strong>string.find(s, pattern[, init[, plaub]])</strong></p>\n<p>在字符串 s 中匹配 pattern，如果匹配成功，则返回第一个匹配到的子串的起始索引和结束索引，如果 pattern 中有分组，那么分组匹配的内容也会接在两个索引值后面返回；如果匹配失败则返回 nil。\n第三个可选参数 init 指明从哪里开始搜索，默认值为1，可以是负值。\n第四个可选参数 plain 为true 时，关闭模式匹配机制，pattern 作为普通字符串进行匹配。</p>\n<blockquote>\n  <p>string.find(str, &#39;1,2,3&#39;)<br/>\n5 9<br/>\nstring.find(str, &#39;%a+&#39;)<br/>\n15 17<br/>\nstring.find(str, &#39;(%d+),(%d+),(%d+)&#39;)<br/>\n5 9 &#34;1&#34; &#34;2&#34; &#34;3&#34;<br/>\nstring.find(str, &#39;%d&#39;, 1, true)<br/>\nnil</p>\n</blockquote>\n<p><strong>string.match(s, pattern[, init])</strong></p>\n<p>在字符串 s 中匹配 pattern，如果匹配成功，若 pattern 没有分组，则返回第一个匹配到的子串，若有分组，则依次返回各个匹配的分组；匹配失败则返回 nil。\n第三个可选参数 init 指明从哪里开始搜索，默认值为1，可以是负值。</p>\n<blockquote>\n  <p>string.match(str, &#39;%d+,%d+,%d+&#39;)<br/>\n&#34;1,2,3&#34;<br/>\nstring.match(str, &#39;(%d+)(:)([[]%d+)&#39;)<br/>\n&#34;1&#34; &#34;:&#34; &#34;[1&#34;<br/>\nstring.match(str, &#39;((%d+)(:)([[]%d+))&#39;)<br/>\n&#34;1:[1&#34; &#34;1&#34; &#34;:&#34; &#34;[1&#34;</p>\n</blockquote>\n<p><strong>string.gmatch(s, pattern)</strong></p>\n<p>返回一个迭代器函数，每次调用迭代器，会返回下一个匹配到的子串，如果 pattern 中有分组，则返回的是子串对应的分组。\n对这个函数来说，匹配模板前开始的 &#39;^&#39; 不会当成锚点，这样会阻止迭代。</p>\n<blockquote>\n  <p>for s, a in string.gmatch(&#39;Hanazawa Kana&#39;, &#39;(a(%a)a)&#39;) do print(s, a) end<br/>\n&#34;ana&#34; &#34;n&#34;<br/>\n&#34;awa&#34; &#34;w&#34;<br/>\n&#34;ana&#34; &#34;n&#34;<br/>\n注意：&#39;ana&#39; 匹配成功后，接下来的匹配从 &#39;z&#39; 开始，导致 &#39;z&#39; 没有被正确匹配到。</p>\n</blockquote>\n<p><strong>string.gsub(s, pattern, repl[, n])</strong></p>\n<p>将字符串 s 中所有（或者可选参数前 n 个）pattern 替换成 repl，返回替换后的字符串和替换的次数。\n如果 repl 是一个字符串，则把这个字符串作为替换品。字符 % 是一个转义符：repl 中所有形式为 %d 的串表示第 d 个捕获到的子串，d 可以是1到9，%0 表示整个匹配，%% 表示单个 %。\n如果 repl 是表，每次匹配时会用第一个捕获作为建去查找表。\n如果 repl 是函数，则每次匹配时会调用函数，所有捕获到的子串依次作为参数传入。</p>\n<p>将 json 字符串转成 lua 字符串</p>\n<blockquote>\n  <p>str = string.gusb(str, &#34;[[]&#34;, &#34;{&#34;)<br/>\nstr = string.gsub(str, &#34;]&#34;, &#34;}&#34;)<br/>\nstr = string.gusb(str, &#34;([{,])(%d+):&#34;, &#34;%1[%2]=&#34;)<br/>\nstr = string.gsub(str, &#34;([{,])([%w_]+):&#34;, &#34;%1%2=&#34;)<br/>\nprint(str)<br/>\n&#34;{[1]={1,2,3},[2]={idx2=2,level=60,reward_idx=2001,ring=100},test={[1]=100,[2]=200}&#34;<br/>\nload(&#34;return &#34; .. str)()</p>\n</blockquote>\n<h3 id=\"heading-正则表达式\">正则表达式</h3>\n<table>\n  <thead>\n    <tr>\n      <th>字符</th>\n      <th style=\"text-align: left\">描述</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>普通字符</td>\n      <td style=\"text-align: left\">除去%.<a href=\"\"></a>^$*+-?的字符，匹配字符本身</td>\n    </tr>\n    <tr>\n      <td>.</td>\n      <td style=\"text-align: left\">匹配任意字符</td>\n    </tr>\n    <tr>\n      <td>%</td>\n      <td style=\"text-align: left\">转义字符，当后面的字符是特殊字符时，还原特殊字符的愿意。% 和一些特定字母组合构成 lua 的预定义字符集。% 和数字 1~9 组合表示之前捕获的分组</td>\n    </tr>\n    <tr>\n      <td>[…]</td>\n      <td style=\"text-align: left\">字符集，匹配一个包含于集合内的串，[…] 中的特殊字符表示原意</td>\n    </tr>\n    <tr>\n      <td>[…-…]</td>\n      <td style=\"text-align: left\">- 表示 ASCII 码在它前一个字符到它后一个字符之间的所有字符</td>\n    </tr>\n    <tr>\n      <td>[^…]</td>\n      <td style=\"text-align: left\">不在 … 中的字符集合</td>\n    </tr>\n  </tbody>\n</table>\n<table>\n  <thead>\n    <tr>\n      <th>预定义字符集</th>\n      <th style=\"text-align: left\"> </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>%s</td>\n      <td style=\"text-align: left\">空白符[rntvf]</td>\n    </tr>\n    <tr>\n      <td>%p</td>\n      <td style=\"text-align: left\">标点符号</td>\n    </tr>\n    <tr>\n      <td>%c</td>\n      <td style=\"text-align: left\">控制符号</td>\n    </tr>\n    <tr>\n      <td>%w</td>\n      <td style=\"text-align: left\">字母数字 [a-zA-Z0-9]</td>\n    </tr>\n    <tr>\n      <td>%a</td>\n      <td style=\"text-align: left\">字母 [a-zA-Z]</td>\n    </tr>\n    <tr>\n      <td>%l</td>\n      <td style=\"text-align: left\">小写字母 [a-z]</td>\n    </tr>\n    <tr>\n      <td>%u</td>\n      <td style=\"text-align: left\">大写字母 [A-Z]</td>\n    </tr>\n    <tr>\n      <td>%d</td>\n      <td style=\"text-align: left\">数字 [0-9]</td>\n    </tr>\n    <tr>\n      <td>%x</td>\n      <td style=\"text-align: left\">16进制数 [0-9a-fA-F]</td>\n    </tr>\n    <tr>\n      <td>%z</td>\n      <td style=\"text-align: left\">ASCII 码是 0 的字符</td>\n    </tr>\n  </tbody>\n</table>\n<table>\n  <thead>\n    <tr>\n      <th>重复(数量词)</th>\n      <th style=\"text-align: left\"> </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>*</td>\n      <td style=\"text-align: left\">表示前一个字符出现 0 到多次</td>\n    </tr>\n    <tr>\n      <td>+</td>\n      <td style=\"text-align: left\">表示前一个字符出现 1 到多次</td>\n    </tr>\n    <tr>\n      <td>?</td>\n      <td style=\"text-align: left\">表示前一个字符出现 0 或 1 次</td>\n    </tr>\n    <tr>\n      <td>-</td>\n      <td style=\"text-align: left\">表示前一个字符出现 0 到多次，与 * 不同的是会匹配尽可能短的串</td>\n    </tr>\n  </tbody>\n</table>\n<table>\n  <thead>\n    <tr>\n      <th>分组/捕获</th>\n      <th style=\"text-align: left\"> </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>(…)</td>\n      <td style=\"text-align: left\">表达式中用 () 包围的字符串作为一个分组，分组从左到右，组序号从 1 开始递增，空的捕获 () 将捕获到当前字符串的位置（是一个数字）。</td>\n    </tr>\n  </tbody>\n</table>\n<table>\n  <thead>\n    <tr>\n      <th>边界匹配（属于零宽断言）</th>\n      <th style=\"text-align: left\"> </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>^</td>\n      <td style=\"text-align: left\">在模式最前面加 ^ 匹配字符串开头，出现在其它位置没有特殊含义</td>\n    </tr>\n    <tr>\n      <td>$</td>\n      <td style=\"text-align: left\">在模式最后面加 $ 匹配字符串结尾，出现在其它位置没有特殊含义</td>\n    </tr>\n  </tbody>\n</table>\n<table>\n  <thead>\n    <tr>\n      <th>%b</th>\n      <th style=\"text-align: left\"> </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>%bxy</td>\n      <td style=\"text-align: left\">匹配 xy 对，x，y 是两个表示原本意义的字符，匹配到的串以 x 开始 y 结束，且其中 x 和 y 保持平衡。即这个字符从左到右开始计数，遇 x 就 +1，遇 y 就 -1，到最终结束的 y 处是第一个计数到 0 的 y。%b() 可以匹配到括号平衡的表达式。</td>\n    </tr>\n    <tr>\n      <td>%f[…]</td>\n      <td style=\"text-align: left\">边界模式。会匹配到一个处于 … 内某个字符之前的一个空串，且这个位置的前一个字符不属于 …。</td>\n    </tr>\n  </tbody>\n</table>\n<h1 id=\"heading-参考链接\">参考链接</h1>\n<ul>\n  <li><a href=\"https://www.runoob.com/manual/lua53doc/manual.html\">Lua 5.3 参考手册</a></li>\n</ul>\n<pre><code>                &lt;/div&gt;\n</code></pre>\n","text":" Lua字符串匹配 与正则相关的函数 str = &#34;{1:[1,2,3],2:{idx2:2,level:60,reward_idx:2001,ring:100},test:{1:100,2:200}}&#34; string.find(s, pattern[, init...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#heading-lua%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8C%B9%E9%85%8D\"><span class=\"toc-text\">Lua字符串匹配</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#heading-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F\"><span class=\"toc-text\">正则表达式</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#heading-%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua学习笔记（5）table的长度","uid":"3eed817c2d771d27a9e65958a41a2de6","slug":"zl/2016-01-01-717_Lua学习笔记（5）table的长度","date":"2024-04-03T03:47:35.951Z","updated":"2024-04-03T03:47:35.952Z","comments":true,"path":"api/articles/zl/2016-01-01-717_Lua学习笔记（5）table的长度.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"lua-5.1.5 疑问 lua获取table长度的接口有很多： table.getn() table.maxn() ’#’操作符 推荐一篇文章：浅析Lua中table的遍历 但是也会出现神奇的情况，请看下面一小段代码： local t = &#123;111, x = 222,...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"lua_code_cache","uid":"329adc851783034a5dedf553adc4385b","slug":"zl/2016-01-01-715_lua_code_cache","date":"2024-04-03T03:47:35.947Z","updated":"2024-04-03T03:47:35.947Z","comments":true,"path":"api/articles/zl/2016-01-01-715_lua_code_cache.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" lua_code_cache syntax: lua_code_cache on | off default: lua_code_cache on context: http, server, location, location if Enables or disables ...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}