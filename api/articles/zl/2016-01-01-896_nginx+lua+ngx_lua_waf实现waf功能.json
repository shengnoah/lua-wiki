{"title":"nginx+lua+ngx_lua_waf实现waf功能","uid":"779207ded987b9d8c01e24f7fd261fcb","slug":"zl/2016-01-01-896_nginx+lua+ngx_lua_waf实现waf功能","date":"2024-04-03T03:47:36.169Z","updated":"2024-04-03T03:47:36.169Z","comments":true,"path":"api/articles/zl/2016-01-01-896_nginx+lua+ngx_lua_waf实现waf功能.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>用途：</p>\n<pre><code>防止sql注入，本地包含，部分溢出，fuzzing测试，xss,SSRF等web攻击\n防止svn/备份之类文件泄漏\n防止ApacheBench之类压力测试工具的攻击\n屏蔽常见的扫描黑客工具，扫描器\n屏蔽异常的网络请求\n屏蔽图片附件类目录php执行权限\n防止webshell上传</code></pre><p>1.下载并解压luajit 2.0.5<br/>wget <a href=\"http://luajit.org/download/LuaJIT-2.0.5.tar.gz\" target=\"_blank\" rel=\"noopener noreferrer\">http://luajit.org/download/LuaJIT-2.0.5.tar.gz</a><br/>tar -zxvf LuaJIT-2.0.5.tar.gz<br/>cd LuaJIT-2.0.5<br/>make install PREFIX=/data/luajit（选自己的目录）<br/><a href=\"https://imgchr.com/i/mAcJkn\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://s2.ax1x.com/2019/08/15/mAcJkn.png\" alt=\"mAcJkn.png\"/></a><br/>2.软连接<br/>ln -s /usr/local/luajit/lib/libluajit-5.1.so.2 /lib64/libluajit-5.1.so.2<br/><img src=\"https://s2.ax1x.com/2019/08/15/mARa1P.png\" alt=\"mARa1P.png\"/><br/>3.下载并解压ngx_devel_kit<br/>wget <a href=\"https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz</a><br/>tar -zxvf v0.3.0.tar.gz<br/><a href=\"https://imgchr.com/i/mAR2pq\" target=\"_blank\" rel=\"noopener noreferrer\"><img src=\"https://s2.ax1x.com/2019/08/15/mAR2pq.png\" alt=\"mAR2pq.png\"/></a><br/>4.下载并解压lua-nginx-module<br/>wget <a href=\"https://github.com/openresty/lua-nginx-module/archive/v0.10.14rc3.tar.gz\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/openresty/lua-nginx-module/archive/v0.10.14rc3.tar.gz</a><br/>tar -zxvf v0.10.14rc3.tar.gz<br/><img src=\"https://s2.ax1x.com/2019/08/15/mARI74.png\" alt=\"mARI74.png\"/><br/>5.编译安装nginx<br/>①下载依赖包<br/>yum install -y gcc gcc-c++ wget git geoip-devel gd-devel pcre-deve libcurl-devel libxml2 libxml2-devel libgd-devel openssl-devel<br/><img src=\"https://s2.ax1x.com/2019/08/15/mARHhR.png\" alt=\"mARHhR.png\"/><br/>②下载nginx包<br/>wget <a href=\"http://nginx.org/download/nginx-1.15.2.tar.gz\" target=\"_blank\" rel=\"noopener noreferrer\">http://nginx.org/download/nginx-1.15.2.tar.gz</a><br/><img src=\"https://s2.ax1x.com/2019/08/15/mARXjK.png\" alt=\"mARXjK.png\"/><br/>③编译安装（目录看对了 选自己的目录）<br/>./configure <br/>–prefix=/data/nginx <br/>–error-log-path=/var/log/php-fpm/error.log <br/>–http-log-path=/phpstudy/server/nginx/logs/access.log <br/>–with-http_ssl_module <br/>–with-http_v2_module <br/>–with-http_realip_module <br/>–with-http_addition_module <br/>–with-http_image_filter_module <br/>–with-http_geoip_module <br/>–with-http_sub_module <br/>–with-http_dav_module <br/>–with-http_flv_module <br/>–with-http_mp4_module <br/>–with-http_gunzip_module <br/>–with-http_gzip_static_module <br/>–with-http_random_index_module <br/>–with-http_secure_link_module <br/>–with-http_degradation_module <br/>–with-http_slice_module <br/>–with-http_stub_status_module <br/>–with-pcre <br/>–with-pcre-jit <br/>–with-stream <br/>–with-stream_ssl_module <br/>–with-debug <br/>–add-module=/data/ngx_devel_kit-0.3.0 <br/>–add-module=/data/lua-nginx-module-0.10.14rc3 <br/>–with-ld-opt=”-Wl,-rpath,$LUAJIT_LIB” ;<br/><img src=\"https://s2.ax1x.com/2019/08/15/mAWpAH.png\" alt=\"mAWpAH.png\"/><br/>（报错的话 自己百度找问题 都有答案及详解的）<br/>④编译安装<br/>make &amp;&amp; make install<br/>6.将waf功能模块，解压后重命名为waf（并移动到nginx的配置目录下）<br/>mv /data/ngx_lua_waf-0.7.2/ waf<br/>cp -rf /data/waf/ /data/nginx/conf/<br/>7.修改waf模块的规则配置路径<br/>8.vim /data/nginx/conf/waf/config.lua<br/>RulePath = “/usr/local/nginx/conf/waf/wafconf/“<br/>–规则存放目录<br/>attacklog = “off”<br/>–是否开启<strong><em>信息记录，需要配置logdir<br/>logdir = “/usr/local/nginx/logs/hack/“<br/>–log存储目录，该目录需要用户自己新建，切需要nginx用户的可写权限<br/>UrlDeny=”on”<br/>–是否拦截url访问<br/>Redirect=”on”<br/>–是否拦截后重定向<br/>CookieMatch = “on”<br/>–是否拦截cookie</em></strong><br/>postMatch = “on”<br/>–是否拦截post<strong>*<br/>whiteModule = “on”<br/>–是否开启URL白名单<br/>black_fileExt={“php”,”jsp”}<br/>–填写不允许上传文件后缀类型<br/>ipWhitelist={“127.0.0.1”}<br/>–ip白名单，多个ip用逗号分隔<br/>ipBlocklist={“1.0.0.1”}<br/>–ip黑名单，多个ip用逗号分隔<br/>CCDeny=”on”<br/>–是否开启拦截cc*</strong>(需要nginx.conf的http段增加lua_shared_dict limit 10m;)<br/>CCrate = “100/60”<br/>–设置cc***频率，单位为秒.<br/>–默认1分钟同一个IP只能请求同一个地址100次<br/>html=[[Please go away~~]]<br/>–警告内容,可在中括号内自定义<br/>备注:不要乱动双引号，区分大小写</p>\n<p>9.修改nginx的配置文件使其加载waf功能模块,并加载博客的nginx配置文件<br/>vim /data/nginx/conf/nginx.conf<br/>http里面添加如下<br/>lua_package_path “/data/nginx/conf/waf/config.lua”;<br/>lua_shared_dict limit 10m;<br/>init_by_lua_file /usr/local/nginx/conf/waf/init.lua;<br/>access_by_lua_file /usr/local/nginx/conf/waf/waf.lua;<br/>10.启动nginx设置开机启动<br/>systemctl start nginx.service<br/>systemctl enable nginx.service<br/>11.创建nginx软连接<br/>ln -s /usr/local/nginx/sbin/* /usr/local/sbin/<br/>12.http://你的IP/test.php?id=../etc/passwd<br/><img src=\"https://s2.ax1x.com/2019/08/15/mAWkgP.png\" alt=\"mAWkgP.png\"/></p>","text":"用途： 防止sql注入，本地包含，部分溢出，fuzzing测试，xss,SSRF等web攻击 防止svn/备份之类文件泄漏 防止ApacheBench之类压力测试工具的攻击 屏蔽常见的扫描黑客工具，扫描器 屏蔽异常的网络请求 屏蔽图片附件类目录php执行权限 防止webshell...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua初体验","uid":"a6fc4e9a872c7a40f571a0b909dcaa98","slug":"zl/2016-01-01-89_Lua初体验","date":"2024-04-03T03:47:36.170Z","updated":"2024-04-03T03:47:36.170Z","comments":true,"path":"api/articles/zl/2016-01-01-89_Lua初体验.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"背景 项目中后期需要支持热更新，因此只能把之前基于UGUI的C#外围逻辑全部修改为Lua，修改过程中的方案是做一个兼容处理，新逻辑用Lua，并在项目推进过程中逐步把外围都改为Lua编码。 项目中的接入实践 工程目录结构 XFramework/lua -- C#端脚本根目录 ---...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"延迟加载模式（lazy evaluation）","uid":"d1310a0d4bc61ea97c703ffc14e6565c","slug":"zl/2016-01-01-895_延迟加载模式（lazy evaluation）","date":"2024-04-03T03:47:36.168Z","updated":"2024-04-03T03:47:36.169Z","comments":true,"path":"api/articles/zl/2016-01-01-895_延迟加载模式（lazy evaluation）.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"延迟加载模式（lazy evaluation）代码参考引用自：https://github.com/faif/python-patterns/blob/master/lazy_evaluation.py 代码123456789101112131415161718192021222...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}