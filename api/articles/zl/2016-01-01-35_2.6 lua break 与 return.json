{"title":"2.6luabreak与return","uid":"cb415ba273e2ff343737fa238bb01992","slug":"zl/2016-01-01-35_2.6 lua break 与 return","date":"2024-04-03T03:47:35.639Z","updated":"2024-04-03T03:47:35.640Z","comments":true,"path":"api/articles/zl/2016-01-01-35_2.6 lua break 与 return.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>和其他语言一样<code>lua</code>也提供对应的跳出关键字，不过<code>lua</code>不提供<code>continue</code>关键字。</p>\n<h2 id=\"break\"><a href=\"#break\" class=\"headerlink\" title=\"break\"></a>break</h2><p>语句<code>break</code>用于跳出循环，终止<code>for</code>、<code>repeat</code>、<code>while</code> 三种循环的执行，并跳出当前循环体，继续执行当前循环之后的语句,在循环外部不可用。</p>\n<h2 id=\"return\"><a href=\"#return\" class=\"headerlink\" title=\"return\"></a>return</h2><p>return 只能写在语句块的最后，一旦执行了return 语句，该语句之后的所有语句都不会再执行。若要写在函数中间，则只能写在一个显式的语句块内。<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/><span class=\"line\">6</span><br/><span class=\"line\">7</span><br/><span class=\"line\">8</span><br/><span class=\"line\">9</span><br/><span class=\"line\">10</span><br/><span class=\"line\">11</span><br/><span class=\"line\">12</span><br/><span class=\"line\">13</span><br/><span class=\"line\">14</span><br/><span class=\"line\">15</span><br/><span class=\"line\">16</span><br/><span class=\"line\">17</span><br/><span class=\"line\">18</span><br/><span class=\"line\">19</span><br/><span class=\"line\">20</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(x, y)</span></span></span><br/><span class=\"line\">    <span class=\"keyword\">return</span> x + y</span><br/><span class=\"line\">    </span><br/><span class=\"line\">    <span class=\"comment\">--因为前面有个return，若不注释该语句，则会报错</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">is_positive</span><span class=\"params\">(x)</span></span></span><br/><span class=\"line\">    <span class=\"keyword\">if</span> x &gt; <span class=\"number\">0</span> <span class=\"keyword\">then</span></span><br/><span class=\"line\">        <span class=\"keyword\">return</span> x .. <span class=\"string\">&#34; is positive&#34;</span></span><br/><span class=\"line\">    <span class=\"keyword\">else</span></span><br/><span class=\"line\">        <span class=\"keyword\">return</span> x .. <span class=\"string\">&#34; is non-positive&#34;</span></span><br/><span class=\"line\">    <span class=\"keyword\">end</span></span><br/><span class=\"line\">    <span class=\"comment\">--由于return只出现在前面显式的语句块，所以此语句不注释也不会报错</span></span><br/><span class=\"line\">    <span class=\"comment\">--，但是不会被执行，此处不会产生输出</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;function end!&#34;</span>)</span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/><span class=\"line\"></span><br/><span class=\"line\">sum = add(<span class=\"number\">10</span>, <span class=\"number\">20</span>)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#34;The sum is &#34;</span> .. sum) <span class=\"comment\">--&gt;output:The sum is 30</span></span><br/><span class=\"line\">answer = is_positive(<span class=\"number\">-10</span>)</span><br/><span class=\"line\"><span class=\"built_in\">print</span>(answer) <span class=\"comment\">--&gt;output:-10 is non-positive</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p>有时候，为了调试方便，我们可以想在某个函数的中间提前 <code>return</code> ，以进行控制流的短路。此时我们可以将 <code>return</code> 放在一个 <code>do ... end</code> 代码块中:<br/></p><figure class=\"highlight lua\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br/><span class=\"line\">2</span><br/><span class=\"line\">3</span><br/><span class=\"line\">4</span><br/><span class=\"line\">5</span><br/></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">foo</span><span class=\"params\">()</span></span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;before&#34;</span>)</span><br/><span class=\"line\">    <span class=\"keyword\">do</span> <span class=\"keyword\">return</span> <span class=\"keyword\">end</span></span><br/><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&#34;after&#34;</span>) <span class=\"comment\">-- 这一行语句永远不会执行到</span></span><br/><span class=\"line\"><span class=\"keyword\">end</span></span><br/></pre></td></tr></tbody></table></figure><p></p>\n<p><strong>特别注意</strong>：上述实例中<code>return</code>如果不放在<code>do ... end</code>中将会保存，因为<code>return</code>只能放在函数的最后。</p>","text":"和其他语言一样lua也提供对应的跳出关键字，不过lua不提供continue关键字。 break语句break用于跳出循环，终止for、repeat、while 三种循环的执行，并跳出当前循环体，继续执行当前循环之后的语句,在循环外部不可用。 returnreturn 只能写在语...","link":"","photos":[],"count_time":{"symbolsCount":962,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#break\"><span class=\"toc-text\">break</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#return\"><span class=\"toc-text\">return</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua 的 pairs 和 ipairs 区别","uid":"aa119daf9920f5ecd73cc9aafa882ab8","slug":"zl/2016-01-01-359_lua 的 pairs 和 ipairs 区别","date":"2024-04-03T03:47:35.639Z","updated":"2024-04-03T03:47:35.639Z","comments":true,"path":"api/articles/zl/2016-01-01-359_lua 的 pairs 和 ipairs 区别.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"看下文档上对 pairs 和 ipairs 的描述： pairs If t has a metamethod __pairs, calls it with t as argument and returns the first three results from the cal...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua知识回顾","uid":"99b82723dc824681436b2f3b42032285","slug":"zl/2016-01-01-357_Lua知识回顾","date":"2024-04-03T03:47:35.638Z","updated":"2024-04-03T03:47:35.638Z","comments":true,"path":"api/articles/zl/2016-01-01-357_Lua知识回顾.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"学习 Lua 编程语言的比较 无聊之余，想要找个东西来打发时间和排解心中的百无聊赖，于是乎，想要重新玩一下 corona 这个游戏开发引擎。当然，第一步就是重温下以前学过的 lua 编程语言，这次我打算在 Windows 操作系统上摆弄下这玩意。 首先进入lua 官网找到二进制文...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua文章","slug":"lua文章","count":1133,"path":"api/tags/lua文章.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}