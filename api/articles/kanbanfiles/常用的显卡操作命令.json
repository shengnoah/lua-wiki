{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"kanbanfiles/常用的显卡操作命令","date":"2024-03-14T06:15:59.719Z","updated":"2024-03-14T06:15:59.719Z","comments":true,"path":"api/articles/kanbanfiles/常用的显卡操作命令.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<h3 id=\"查看显卡信息\"><a href=\"#查看显卡信息\" class=\"headerlink\" title=\"查看显卡信息\"></a>查看显卡信息</h3><p>lspci | grep nvidia -i<br>lspci -k | grep -A 2 -i “VGA”</p>\n<h3 id=\"查看安装过的CUDA包\"><a href=\"#查看安装过的CUDA包\" class=\"headerlink\" title=\"查看安装过的CUDA包\"></a>查看安装过的CUDA包</h3><p>dpkg -l | grep cuda<br>dpkg -l | cd </p>\n<h3 id=\"查看显卡状态\"><a href=\"#查看显卡状态\" class=\"headerlink\" title=\"查看显卡状态\"></a>查看显卡状态</h3><p>gpustat<br>nvidia-smi</p>\n<h3 id=\"禁用-nouveau\"><a href=\"#禁用-nouveau\" class=\"headerlink\" title=\"禁用 nouveau\"></a>禁用 nouveau</h3><p>lsmod | grep nouveau</p>\n<p>echo “blacklist nouveau” &gt;&gt; /etc/modprobe.d/blacklist.conf &amp;&amp; mv /boot/initramfs-$(uname -r).img /boot/initramfs-$(uname -r).img.bak &amp;&amp; dracut /boot/initramfs-$(uname -r).img $(uname -r)</p>\n<p>update-initramfs -u</p>\n<p>reboot now</p>\n<p><a href=\"https://developer.nvidia.com/cuda-downloads\">https://developer.nvidia.com/cuda-downloads</a></p>\n<p><a href=\"https://developer.nvidia.com/cuda-downloads\">https://developer.nvidia.com/cuda-downloads</a></p>\n<p>ubuntu 22</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-keyring_1.1-1_all.deb</span><br><span class=\"line\">sudo dpkg -i cuda-keyring_1.1-1_all.deb</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get -y install cuda</span><br></pre></td></tr></table></figure>\n\n\n<p>ubuntu 20</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.1-1_all.deb</span><br><span class=\"line\">sudo dpkg -i cuda-keyring_1.1-1_all.deb</span><br><span class=\"line\">sudo apt-get update</span><br><span class=\"line\">sudo apt-get -y install cuda</span><br></pre></td></tr></table></figure>\n<p>一般情况下，这种方式就可以正常的安装驱动了。</p>\n<p>apt –fix-broken install</p>\n<p>用于安装 cuda的中断</p>\n<p>Ubuntu文件夹的/dev目录下的文件root权限也没法执行</p>\n<p>在Ubuntu系统中，/dev目录下的文件是设备文件，用于与硬件设备进行通信。这些文件通常由root用户所有，并且具有特定的权限设置，以确保只有具有适当权限的用户才能对其进行访问和操作。</p>\n<p>即使您拥有root权限，也不能直接执行/dev目录下的设备文件。这是因为这些文件不是可执行程序，而是用于与硬件设备进行通信的接口。要执行这些设备文件中的操作或命令，您需要使用相应的工具或命令来与设备进行交互。</p>\n<p>例如，如果您要执行/dev/sda设备（表示硬盘）上的命令，可以使用类似于以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo fdisk /dev/sda</span><br></pre></td></tr></table></figure>\n\n<p>上述命令将以root权限运行fdisk工具，并操作/dev/sda设备。</p>\n<p>请注意，在使用/dev目录下的设备文件时要格外谨慎。错误地操作这些文件可能会导致数据丢失或系统崩溃。</p>\n<p>RuntimeError: OpenSSL 3.0’s legacy provider failed to load. This is a fatal error by default, but cryptography supports running without legacy algorithms by setting the environment variable CRYPTOGRAPHY_OPENSSL_NO_LEGACY. If you did no</p>\n<p>t expect this error, you have likely made a mistake with your OpenSSL configuration.  这个错误是什么原因造成的？</p>\n<p>这个错误是由于OpenSSL配置错误导致的。可能的原因包括：</p>\n<ul>\n<li>OpenSSL版本不兼容：某些较旧的版本的OpenSSL可能不兼容新版本的cryptography库，因此需要升级或降级OpenSSL。</li>\n<li>OpenSSL配置文件错误：OpenSSL配置文件中可能存在错误设置，例如无效的路径或参数。检查并修复配置文件可以解决该问题。</li>\n<li>OpenSSL环境变量设置错误：在操作系统中设置了不正确的环境变量，或者缺少必要的环境变量。确保正确设置CRYPTOGRAPHY_OPENSSL_NO_LEGACY环境变量。</li>\n<li>其他问题：可能存在其他未知问题，例如损坏的安装包或库。</li>\n</ul>\n<p>根据具体情况，需要检查和调试OpenSSL和cryptography库的配置和安装。</p>\n<p>如何安装conda</p>\n<p>要安装conda，你需要按照以下步骤进行操作：</p>\n<ol>\n<li><p>首先，你需要下载适用于你的操作系统的conda安装包。在Anaconda官方网站（<a href=\"https://www.anaconda.com/products/individual%EF%BC%89%E4%B8%8A%E5%8F%AF%E4%BB%A5%E6%89%BE%E5%88%B0%E5%90%84%E7%A7%8D%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85%E5%8C%85%E3%80%82\">https://www.anaconda.com/products/individual）上可以找到各种操作系统的安装包。</a></p>\n</li>\n<li><p>选择适合你操作系统的安装包后，下载并运行该文件。</p>\n</li>\n<li><p>在安装向导中，选择“Next”来接受许可协议。</p>\n</li>\n<li><p>选择要将conda安装到的位置。默认情况下，它会被安装在用户主目录下（如：C:\\Users\\YourUsername\\Anaconda3）。</p>\n</li>\n<li><p>在“Advanced Options”界面上，默认情况下不需要进行任何更改。如果你想要更改某些选项，可以根据自己的需求进行调整。</p>\n</li>\n<li><p>单击“Install”按钮开始安装过程。</p>\n</li>\n<li><p>安装完成后，在下一个页面上勾选“Add Anaconda to my PATH environment variable”选项。这将允许你通过命令行直接访问conda。</p>\n</li>\n<li><p>单击“Finish”按钮完成安装过程。</p>\n</li>\n<li><p>打开命令提示符（对于Windows用户）或终端（对于Mac或Linux用户）。</p>\n</li>\n<li><p>输入”conda”命令来验证是否成功地安装了conda。如果成功安装，则会显示有关conda的一些帮助信息。</p>\n</li>\n</ol>\n<p>现在，你已经成功地安装了conda，并可以使用它来管理和创建Python环境以及安装各种包和软件。</p>\n<p>Ubuntu下如何安装Conda</p>\n<p>要在Ubuntu上安装Conda，可以按照以下步骤进行操作：</p>\n<ol>\n<li><p>打开终端。</p>\n</li>\n<li><p>下载Miniconda安装包。在终端中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure></li>\n<li><p>运行安装脚本。在终端中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash Miniconda3-latest-Linux-x86_64.sh</span><br></pre></td></tr></table></figure></li>\n<li><p>接下来，会出现一系列的安装提示和许可协议。按照提示进行操作，直到安装过程完成。</p>\n</li>\n<li><p>安装完成后，需要关闭并重新打开终端，以使Conda生效。</p>\n</li>\n<li><p>验证是否成功安装了Conda。在终端中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda --version</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>如果成功显示Conda的版本号，则说明已经正确地在Ubuntu上安装了Conda。</p>\n<p>注意：以上步骤是针对最新版的Miniconda进行的，如果你想要使用Anaconda而不是Miniconda，则需要下载相应的Anaconda安装包，并将命令中的”Miniconda”替换为”Anaconda”。</p>\n<p>AttributeError: module ‘cryptography.hazmat.backends’ has no attribute ‘openssl’ 这个问题是什么原因造成的？</p>\n<p>这个问题可能是因为您使用的cryptography库版本过低或安装不完整所导致的。在较早的版本中，<code>cryptography.hazmat.backends</code>模块确实没有名为<code>openssl</code>的属性。</p>\n<p>要解决这个问题，您可以尝试升级cryptography库到最新版本，并确保正确安装了所有依赖项。您可以使用以下命令升级cryptography库：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install --upgrade cryptography</span><br></pre></td></tr></table></figure>\n\n<p>如果问题仍然存在，请检查您的环境是否正确配置了OpenSSL。您可以参考cryptography文档中关于安装和配置OpenSSL的部分来确保正确设置了OpenSSL。</p>\n<p>nvidia显卡用什么命令可以查看显卡的使用率，特别是一机多显卡的情况</p>\n<p>在Windows系统中，可以使用以下命令来查看nvidia显卡的使用率：</p>\n<ol>\n<li>打开命令提示符或PowerShell。</li>\n<li>输入以下命令：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvidia-smi</span><br></pre></td></tr></table></figure>\n这将显示当前系统中所有nvidia显卡的详细信息，包括使用率、温度等。</li>\n</ol>\n<p>如果你的系统中存在多个nvidia显卡，可以使用以下命令来查看每个显卡的使用率：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvidia-smi -i &lt;index&gt;</span><br></pre></td></tr></table></figure>\n\n<p>其中 <code>&lt;index&gt;</code> 是显卡的索引号，从0开始。例如，要查看第二个显卡的使用率，可以输入 <code>nvidia-smi -i 1</code>。</p>\n<p>在Linux系统中，可以通过以下命令来查看nvidia显卡的使用率：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvidia-smi</span><br></pre></td></tr></table></figure>\n\n<p>该命令将显示所有nvidia显卡的详细信息，类似于Windows系统中的输出。</p>\n<p>如果你有多个nvidia显卡，并且想要查看每个显卡的使用率，可以使用以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvidia-smi -i &lt;index&gt;</span><br></pre></td></tr></table></figure>\n\n<p>其中 <code>&lt;index&gt;</code> 是显卡的索引号。同样地，在Linux系统中也是从0开始索引。例如，要查看第二个显卡的使用率，可以输入 <code>nvidia-smi -i 1</code>。</p>\n<p>ollama运行的时候如何指定运行具体那块显卡</p>\n<p>kali上如何安装conda</p>\n<p>要在Kali上安装Conda，您可以按照以下步骤进行操作：</p>\n<ol>\n<li><p>打开终端窗口。</p>\n</li>\n<li><p>下载Miniconda安装脚本。在终端中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-aarch64.sh</span><br></pre></td></tr></table></figure></li>\n<li><p>运行安装脚本。输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash Miniconda3-latest-Linux-aarch64.sh</span><br></pre></td></tr></table></figure></li>\n<li><p>按照提示进行安装。您可以使用默认设置，或根据需要进行自定义设置。</p>\n</li>\n<li><p>在安装过程中，会要求您接受许可协议和选择安装位置。请按照提示操作。</p>\n</li>\n<li><p>安装完成后，关闭终端窗口并重新打开一个新的终端窗口。</p>\n</li>\n<li><p>检查Conda是否成功安装。在终端中输入以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">conda --version</span><br></pre></td></tr></table></figure>\n\n<p>如果成功安装，将显示Conda的版本号。</p>\n</li>\n</ol>\n<p>现在您已成功在Kali上安装了Conda。</p>\n","text":"查看显卡信息lspci | grep nvidia -ilspci -k | grep -A 2 -i “VGA” 查看安装过的CUDA包dpkg -l | grep cudadpkg -l | cd 查看显卡状态gpustatnvidia-smi 禁用 nouveaulsmod...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E6%98%BE%E5%8D%A1%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">查看显卡信息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E5%AE%89%E8%A3%85%E8%BF%87%E7%9A%84CUDA%E5%8C%85\"><span class=\"toc-text\">查看安装过的CUDA包</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E6%98%BE%E5%8D%A1%E7%8A%B6%E6%80%81\"><span class=\"toc-text\">查看显卡状态</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A6%81%E7%94%A8-nouveau\"><span class=\"toc-text\">禁用 nouveau</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"kanbanfiles/安全网格","date":"2024-03-14T06:15:59.719Z","updated":"2024-03-14T06:15:59.719Z","comments":true,"path":"api/articles/kanbanfiles/安全网格.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"网络安全中的安全网格指的是什么？ 安全网格是一种网络安全架构，旨在提高网络的可靠性、可扩展性和安全性。它通过将网络划分为多个区域，并在每个区域中部署安全设备和控制机制，来实现对整个网络的保护。每个区域被称为一个网格节点，它们之间通过安全网关进行连接。安全网格可以帮助组织实现对网络...","link":"","photos":[],"count_time":{"symbolsCount":174,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"kanbanfiles/梅子青哥窑","date":"2024-03-14T06:15:59.719Z","updated":"2024-03-14T06:15:59.719Z","comments":true,"path":"api/articles/kanbanfiles/梅子青哥窑.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"梅子青哥窑与弟窑有什么区别？ 梅子青哥窑与弟窑是中国古代青瓷窑口的两个代表。它们的区别主要体现在以下几个方面： 地理位置：梅子青哥窑位于河南省开封市尉氏县梅子山区，而弟窑位于河南省郑州市新郑市。 历史时期：梅子青哥窑是北宋时期的一个重要制瓷窑口，而弟窑则出现在明朝万历年间。 窑瓷...","link":"","photos":[],"count_time":{"symbolsCount":597,"symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}