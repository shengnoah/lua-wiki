{"title":"常用的显卡操作命令","uid":"c613fb28cd2c4b69a44275a71e2c2600","slug":"kanbanfiles/Nvidia常用的显卡操作命令与驱动软件安装","date":"2024-03-14T07:45:09.037Z","updated":"2024-03-21T11:05:09.667Z","comments":true,"path":"api/articles/kanbanfiles/Nvidia常用的显卡操作命令与驱动软件安装.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h1 id=\"常用的显卡操作命令\"><a class=\"markdownIt-Anchor\" href=\"#常用的显卡操作命令\"></a> 常用的显卡操作命令</h1>\n<h3 id=\"查看显卡信息\"><a class=\"markdownIt-Anchor\" href=\"#查看显卡信息\"></a> 查看显卡信息</h3>\n<p>lspci | grep nvidia -i<br />\nlspci -k | grep -A 2 -i “VGA”</p>\n<h3 id=\"查看安装过的cuda包\"><a class=\"markdownIt-Anchor\" href=\"#查看安装过的cuda包\"></a> 查看安装过的CUDA包</h3>\n<p>dpkg -l | grep cuda<br />\ndpkg -l | cd</p>\n<h3 id=\"查看显卡状态\"><a class=\"markdownIt-Anchor\" href=\"#查看显卡状态\"></a> 查看显卡状态</h3>\n<p>gpustat<br />\nnvidia-smi</p>\n<h3 id=\"禁用-nouveau\"><a class=\"markdownIt-Anchor\" href=\"#禁用-nouveau\"></a> 禁用 nouveau</h3>\n<p>lsmod | grep nouveau</p>\n<p>echo “blacklist nouveau” &gt;&gt; /etc/modprobe.d/blacklist.conf &amp;&amp; mv /boot/initramfs-<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>u</mi><mi>n</mi><mi>a</mi><mi>m</mi><mi>e</mi><mo>−</mo><mi>r</mi><mo>)</mo><mi mathvariant=\"normal\">.</mi><mi>i</mi><mi>m</mi><mi>g</mi><mi mathvariant=\"normal\">/</mi><mi>b</mi><mi>o</mi><mi>o</mi><mi>t</mi><mi mathvariant=\"normal\">/</mi><mi>i</mi><mi>n</mi><mi>i</mi><mi>t</mi><mi>r</mi><mi>a</mi><mi>m</mi><mi>f</mi><mi>s</mi><mo>−</mo></mrow><annotation encoding=\"application/x-tex\">(uname -r).img /boot/initramfs-</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mord mathit\">u</span><span class=\"mord mathit\">n</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">m</span><span class=\"mord mathit\">e</span><span class=\"mbin\">−</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">r</span><span class=\"mclose\">)</span><span class=\"mord mathrm\">.</span><span class=\"mord mathit\">i</span><span class=\"mord mathit\">m</span><span class=\"mord mathit\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\">b</span><span class=\"mord mathit\">o</span><span class=\"mord mathit\">o</span><span class=\"mord mathit\">t</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\">i</span><span class=\"mord mathit\">n</span><span class=\"mord mathit\">i</span><span class=\"mord mathit\">t</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathit\">a</span><span class=\"mord mathit\">m</span><span class=\"mord mathit\" style=\"margin-right:0.10764em;\">f</span><span class=\"mord mathit\">s</span><span class=\"mbin\">−</span></span></span></span>(uname -r).img.bak &amp;&amp; dracut /boot/initramfs-$(uname -r).img $(uname -r)</p>\n<p>update-initramfs -u</p>\n<p>reboot now</p>\n<p><a href=\"https://developer.nvidia.com/cuda-downloads\">https://developer.nvidia.com/cuda-downloads</a></p>\n<p><a href=\"https://developer.nvidia.com/cuda-downloads\">https://developer.nvidia.com/cuda-downloads</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">wget</span> https://developer.download.nvidia.com/compute/cuda/12.4.0/local_installers/cuda_12.4.0_550.54.14_linux.runsudo <span class=\"token function\">sh</span> cuda_12.4.0_550.54.14_linux.run\n<span class=\"token function\">sudo</span> <span class=\"token function\">sh</span> cuda_12.4.0_550.54.14_linux.run<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>ubuntu 22</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">wget https:&#x2F;&#x2F;developer.download.nvidia.com&#x2F;compute&#x2F;cuda&#x2F;repos&#x2F;ubuntu2204&#x2F;x86_64&#x2F;cuda-keyring_1.1-1_all.deb\nsudo dpkg -i cuda-keyring_1.1-1_all.deb\nsudo apt-get update\nsudo apt-get -y install cuda<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>ubuntu 20</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">wget https:&#x2F;&#x2F;developer.download.nvidia.com&#x2F;compute&#x2F;cuda&#x2F;repos&#x2F;ubuntu2004&#x2F;x86_64&#x2F;cuda-keyring_1.1-1_all.deb\nsudo dpkg -i cuda-keyring_1.1-1_all.deb\nsudo apt-get update\nsudo apt-get -y install cuda<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>一般情况下，这种方式就可以正常的安装驱动了。</p>\n<p>apt --fix-broken install</p>\n<p>用于安装 cuda的中断</p>\n<p>Ubuntu文件夹的/dev目录下的文件root权限也没法执行</p>\n<p>在Ubuntu系统中，/dev目录下的文件是设备文件，用于与硬件设备进行通信。这些文件通常由root用户所有，并且具有特定的权限设置，以确保只有具有适当权限的用户才能对其进行访问和操作。</p>\n<p>即使您拥有root权限，也不能直接执行/dev目录下的设备文件。这是因为这些文件不是可执行程序，而是用于与硬件设备进行通信的接口。要执行这些设备文件中的操作或命令，您需要使用相应的工具或命令来与设备进行交互。</p>\n<p>例如，如果您要执行/dev/sda设备（表示硬盘）上的命令，可以使用类似于以下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo fdisk &#x2F;dev&#x2F;sda<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>上述命令将以root权限运行fdisk工具，并操作/dev/sda设备。</p>\n<p>请注意，在使用/dev目录下的设备文件时要格外谨慎。错误地操作这些文件可能会导致数据丢失或系统崩溃。</p>\n<p>RuntimeError: OpenSSL 3.0’s legacy provider failed to load. This is a fatal error by default, but cryptography supports running without legacy algorithms by setting the environment variable CRYPTOGRAPHY_OPENSSL_NO_LEGACY. If you did no</p>\n<p>t expect this error, you have likely made a mistake with your OpenSSL configuration.  这个错误是什么原因造成的？</p>\n<p>这个错误是由于OpenSSL配置错误导致的。可能的原因包括：</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>OpenSSL版本不兼容：某些较旧的版本的OpenSSL可能不兼容新版本的cryptography库，因此需要升级或降级OpenSSL。</p>\n</li>\n<li class=\"lvl-2\">\n<p>OpenSSL配置文件错误：OpenSSL配置文件中可能存在错误设置，例如无效的路径或参数。检查并修复配置文件可以解决该问题。</p>\n</li>\n<li class=\"lvl-2\">\n<p>OpenSSL环境变量设置错误：在操作系统中设置了不正确的环境变量，或者缺少必要的环境变量。确保正确设置CRYPTOGRAPHY_OPENSSL_NO_LEGACY环境变量。</p>\n</li>\n<li class=\"lvl-2\">\n<p>其他问题：可能存在其他未知问题，例如损坏的安装包或库。</p>\n</li>\n</ul>\n<p>根据具体情况，需要检查和调试OpenSSL和cryptography库的配置和安装。</p>\n<p>如何安装conda</p>\n<p>要安装conda，你需要按照以下步骤进行操作：</p>\n<ol>\n<li class=\"lvl-3\">\n<p>首先，你需要下载适用于你的操作系统的conda安装包。在Anaconda官方网站（<a href=\"https://www.anaconda.com/products/individual%EF%BC%89%E4%B8%8A%E5%8F%AF%E4%BB%A5%E6%89%BE%E5%88%B0%E5%90%84%E7%A7%8D%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85%E5%8C%85%E3%80%82\">https://www.anaconda.com/products/individual）上可以找到各种操作系统的安装包。</a></p>\n</li>\n<li class=\"lvl-3\">\n<p>选择适合你操作系统的安装包后，下载并运行该文件。</p>\n</li>\n<li class=\"lvl-3\">\n<p>在安装向导中，选择“Next”来接受许可协议。</p>\n</li>\n<li class=\"lvl-3\">\n<p>选择要将conda安装到的位置。默认情况下，它会被安装在用户主目录下（如：C:\\Users\\YourUsername\\Anaconda3）。</p>\n</li>\n<li class=\"lvl-3\">\n<p>在“Advanced Options”界面上，默认情况下不需要进行任何更改。如果你想要更改某些选项，可以根据自己的需求进行调整。</p>\n</li>\n<li class=\"lvl-3\">\n<p>单击“Install”按钮开始安装过程。</p>\n</li>\n<li class=\"lvl-3\">\n<p>安装完成后，在下一个页面上勾选“Add Anaconda to my PATH environment variable”选项。这将允许你通过命令行直接访问conda。</p>\n</li>\n<li class=\"lvl-3\">\n<p>单击“Finish”按钮完成安装过程。</p>\n</li>\n<li class=\"lvl-3\">\n<p>打开命令提示符（对于Windows用户）或终端（对于Mac或Linux用户）。</p>\n</li>\n<li class=\"lvl-4\">\n<p>输入&quot;conda&quot;命令来验证是否成功地安装了conda。如果成功安装，则会显示有关conda的一些帮助信息。</p>\n</li>\n</ol>\n<p>现在，你已经成功地安装了conda，并可以使用它来管理和创建Python环境以及安装各种包和软件。</p>\n<p>Ubuntu下如何安装Conda</p>\n<p>要在Ubuntu上安装Conda，可以按照以下步骤进行操作：</p>\n<ol>\n<li class=\"lvl-3\">\n<p>打开终端。</p>\n</li>\n<li class=\"lvl-3\">\n<p>下载Miniconda安装包。在终端中输入以下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">wget https:&#x2F;&#x2F;repo.anaconda.com&#x2F;miniconda&#x2F;Miniconda3-latest-Linux-x86_64.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li class=\"lvl-3\">\n<p>运行安装脚本。在终端中输入以下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">bash Miniconda3-latest-Linux-x86_64.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li class=\"lvl-3\">\n<p>接下来，会出现一系列的安装提示和许可协议。按照提示进行操作，直到安装过程完成。</p>\n</li>\n<li class=\"lvl-3\">\n<p>安装完成后，需要关闭并重新打开终端，以使Conda生效。</p>\n</li>\n<li class=\"lvl-3\">\n<p>验证是否成功安装了Conda。在终端中输入以下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">conda --version<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ol>\n<p>如果成功显示Conda的版本号，则说明已经正确地在Ubuntu上安装了Conda。</p>\n<p>注意：以上步骤是针对最新版的Miniconda进行的，如果你想要使用Anaconda而不是Miniconda，则需要下载相应的Anaconda安装包，并将命令中的&quot;Miniconda&quot;替换为&quot;Anaconda&quot;。</p>\n<p>AttributeError: module ‘cryptography.hazmat.backends’ has no attribute ‘openssl’ 这个问题是什么原因造成的？</p>\n<p>这个问题可能是因为您使用的cryptography库版本过低或安装不完整所导致的。在较早的版本中，<code>cryptography.hazmat.backends</code>模块确实没有名为<code>openssl</code>的属性。</p>\n<p>要解决这个问题，您可以尝试升级cryptography库到最新版本，并确保正确安装了所有依赖项。您可以使用以下命令升级cryptography库：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">pip install --upgrade cryptography<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果问题仍然存在，请检查您的环境是否正确配置了OpenSSL。您可以参考cryptography文档中关于安装和配置OpenSSL的部分来确保正确设置了OpenSSL。</p>\n<p>nvidia显卡用什么命令可以查看显卡的使用率，特别是一机多显卡的情况</p>\n<p>在Windows系统中，可以使用以下命令来查看nvidia显卡的使用率：</p>\n<ol>\n<li class=\"lvl-3\">\n<p>打开命令提示符或PowerShell。</p>\n</li>\n<li class=\"lvl-3\">\n<p>输入以下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">nvidia-smi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这将显示当前系统中所有nvidia显卡的详细信息，包括使用率、温度等。</p>\n</li>\n</ol>\n<p>如果你的系统中存在多个nvidia显卡，可以使用以下命令来查看每个显卡的使用率：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">nvidia-smi -i &lt;index&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>其中 <code>&lt;index&gt;</code> 是显卡的索引号，从0开始。例如，要查看第二个显卡的使用率，可以输入 <code>nvidia-smi -i 1</code>。</p>\n<p>在Linux系统中，可以通过以下命令来查看nvidia显卡的使用率：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">nvidia-smi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>该命令将显示所有nvidia显卡的详细信息，类似于Windows系统中的输出。</p>\n<p>如果你有多个nvidia显卡，并且想要查看每个显卡的使用率，可以使用以下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">nvidia-smi -i &lt;index&gt;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>其中 <code>&lt;index&gt;</code> 是显卡的索引号。同样地，在Linux系统中也是从0开始索引。例如，要查看第二个显卡的使用率，可以输入 <code>nvidia-smi -i 1</code>。</p>\n<p>ollama运行的时候如何指定运行具体那块显卡</p>\n<p>kali上如何安装conda</p>\n<p>要在Kali上安装Conda，您可以按照以下步骤进行操作：</p>\n<ol>\n<li class=\"lvl-3\">\n<p>打开终端窗口。</p>\n</li>\n<li class=\"lvl-3\">\n<p>下载Miniconda安装脚本。在终端中输入以下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">wget https:&#x2F;&#x2F;repo.anaconda.com&#x2F;miniconda&#x2F;Miniconda3-latest-Linux-aarch64.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li class=\"lvl-3\">\n<p>运行安装脚本。输入以下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">bash Miniconda3-latest-Linux-aarch64.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li class=\"lvl-3\">\n<p>按照提示进行安装。您可以使用默认设置，或根据需要进行自定义设置。</p>\n</li>\n<li class=\"lvl-3\">\n<p>在安装过程中，会要求您接受许可协议和选择安装位置。请按照提示操作。</p>\n</li>\n<li class=\"lvl-3\">\n<p>安装完成后，关闭终端窗口并重新打开一个新的终端窗口。</p>\n</li>\n<li class=\"lvl-3\">\n<p>检查Conda是否成功安装。在终端中输入以下命令：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">conda --version<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果成功安装，将显示Conda的版本号。</p>\n</li>\n</ol>\n<p>现在您已成功在Kali上安装了Conda。</p>\n","text":" 常用的显卡操作命令 查看显卡信息 lspci | grep nvidia -i lspci -k | grep -A 2 -i “VGA” 查看安装过的CUDA包 dpkg -l | grep cuda dpkg -l | cd 查看显卡状态 gpustat nvidia-sm...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"nvidia","slug":"nvidia","count":2,"path":"api/categories/nvidia.json"}],"tags":[{"name":"cuda","slug":"cuda","count":2,"path":"api/tags/cuda.json"},{"name":"nvidia","slug":"nvidia","count":1,"path":"api/tags/nvidia.json"},{"name":"gpustat","slug":"gpustat","count":1,"path":"api/tags/gpustat.json"},{"name":"nvidia-smi","slug":"nvidia-smi","count":1,"path":"api/tags/nvidia-smi.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E7%9A%84%E6%98%BE%E5%8D%A1%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\"> 常用的显卡操作命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E6%98%BE%E5%8D%A1%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\"> 查看显卡信息</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E5%AE%89%E8%A3%85%E8%BF%87%E7%9A%84cuda%E5%8C%85\"><span class=\"toc-text\"> 查看安装过的CUDA包</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E6%98%BE%E5%8D%A1%E7%8A%B6%E6%80%81\"><span class=\"toc-text\"> 查看显卡状态</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A6%81%E7%94%A8-nouveau\"><span class=\"toc-text\"> 禁用 nouveau</span></a></li></ol></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"kanbanfiles/Obsidian的CohereAI插件","date":"2024-03-14T07:45:09.037Z","updated":"2024-03-14T07:45:09.037Z","comments":true,"path":"api/articles/kanbanfiles/Obsidian的CohereAI插件.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"https://dashboard.cohere.com/api-keys Obsidian中使用Cohere AI的API对应使用那个插件。 在Obsidian中使用Cohere AI的API可以使用Obsidian插件“Cohere”来实现。该插件允许用户直接在Obsidia...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"kanbanfiles/CUDA安装","date":"2024-03-14T07:45:09.036Z","updated":"2024-03-14T07:45:09.036Z","comments":true,"path":"api/articles/kanbanfiles/CUDA安装.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"如何用apt-get 安装CUDA 11.8 很抱歉，但是 CUDA 11.8 并不是一个存在的版本。CUDA 最新的稳定版本是 CUDA 11.5。以下是安装 CUDA 11.5 的步骤： 首先，确保你的系统满足 CUDA 11.5 的要求。CUDA 11.5 支持 Linux...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}