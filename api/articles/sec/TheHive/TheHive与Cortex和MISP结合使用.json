{"title":"TheHive与Cortex和MISP结合使用","uid":"83b2e025a478c2da76012dbffdf74f6e","slug":"sec/TheHive/TheHive与Cortex和MISP结合使用","date":"2024-03-14T06:15:59.767Z","updated":"2024-03-14T06:15:59.767Z","comments":true,"path":"api/articles/sec/TheHive/TheHive与Cortex和MISP结合使用.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"content":"<h1 id=\"TheHive与Cortex和MISP结合使用\"><a href=\"#TheHive与Cortex和MISP结合使用\" class=\"headerlink\" title=\"TheHive与Cortex和MISP结合使用\"></a>TheHive与Cortex和MISP结合使用</h1><p><a href=\"https://github.com/TheHive-Project/TheHive/\">TheHive</a>, <a href=\"https://github.com/TheHive-Project/Cortex/\">Cortex</a> and <a href=\"http://www.misp-project.org/\">MISP</a> work nicely together and if you’ve read our <a href=\"https://blog.thehive-project.org/2017/06/07/thehive-june-dec-17-roadmap/\">June-Dec 17 roadmap</a> post, the integration of our products with the <em>de facto</em> threat sharing platform will get better in a few months.</p>\n<p>During the <a href=\"https://first.org/conference/2017/program#pthehive-a-scalable-open-source-and-free-incident-response-platform\">FIRST conference presentation</a> we gave last week, we displayed a picture that we will use here to try to explain how these three open source and free products integrate with one another.</p>\n<p><img src=\"https://blogthehiveproject.files.wordpress.com/2017/06/screen-shot-2017-06-16-at-09-58-43.png?w=1100\" alt=\"Screen Shot 2017-06-16 at 09.58.43.png\"></p>\n<p>A Picture is Worth a Thousand Words…</p>\n<h4 id=\"TheHive\"><a href=\"#TheHive\" class=\"headerlink\" title=\"TheHive\"></a>TheHive</h4><p>TheHive is a Security Incident Response Platform (SIRP). It can receive alerts from different sources (SIEM, IDS, email. etc.) via its REST API. This is where alert feeders come into play.</p>\n<h5 id=\"Alert-Feeders\"><a href=\"#Alert-Feeders\" class=\"headerlink\" title=\"Alert Feeders\"></a>Alert Feeders</h5><p>Think of an alert feeder as a specialized program which consumes a security event (SIEM alert, email report, IDS alert, and so on), parses it and outputs an alert that its sends to TheHive through <a href=\"https://github.com/TheHive-Project/TheHive4py\">TheHive4py</a>, the Python library we provide to interact with TheHive’s <a href=\"https://github.com/CERT-BDF/TheHiveDocs/blob/master/api/README.md\">REST API</a>.</p>\n<p>We do not supply such feeders but developing them should be straightforward. If not, <a href=\"https://github.com/TheHive-Project/TheHive/#support\">let us know</a>  and we’ll do our best to help you out.</p>\n<h5 id=\"Alerts\"><a href=\"#Alerts\" class=\"headerlink\" title=\"Alerts\"></a>Alerts</h5><p>Any alert sent to TheHive will show up in its <code>Alerts</code> pane. In addition to the sources mentioned above, new or updated MISP events will show up as well in that area <a href=\"https://github.com/TheHive-Project/TheHiveDocs/blob/master/admin/configuration.md#7-misp\">if you configured TheHive to connect to one or several MISP instances</a>. If so, TheHive will poll those MISP instance(s) at every <code>interval</code> looking for new or updated events. If there are any, TheHive will generate an alert which will end up in the <code>Alerts</code> pane.</p>\n<p><img src=\"https://blogthehiveproject.files.wordpress.com/2017/06/screen-shot-2017-06-18-at-15-29-51.png?w=1100\" alt=\"Screen Shot 2017-06-18 at 15.29.51.png\"></p>\n<p>The Alerts Pane</p>\n<p>Alerts can be ignored, mark as read, previewed and imported. When an alert is imported, it becomes a case that needs to be investigated.</p>\n<h4 id=\"Cases\"><a href=\"#Cases\" class=\"headerlink\" title=\"Cases\"></a>Cases</h4><p><img src=\"https://blogthehiveproject.files.wordpress.com/2017/06/workflow.png?w=1100\" alt=\"workflow\"></p>\n<p>The Workflow that is at the Heart of TheHive</p>\n<p>A case can be generated from an alert or created from scratch. It is subdivided into tasks (think identification, containment, eradication, check proxy logs, and so on) and observables (IP addresses, hashes, email addresses, domain names, URLs…). When analysts are working on tasks, they add logs as they go. In TheHive’s terminology, logs are text entries which may contain attachments to help analysts record what they have been doing. Logs can be written using Markdown or a rich-text editor.</p>\n<h5 id=\"Case-Templates\"><a href=\"#Case-Templates\" class=\"headerlink\" title=\"Case Templates\"></a>Case Templates</h5><p>You don’t need to add the same tasks over and over when working on cases belonging to a given category (DDoS, Malspam, APT, …). You can create custom templates to which you add tasks as shown below. This is very useful when you are dealing with alerts so that when you import them, you can select which case template you’d like to apply and there you go!</p>\n<p><img src=\"https://blogthehiveproject.files.wordpress.com/2017/06/screen-shot-2017-06-16-at-10-26-221.png?w=1100\" alt=\"Screen Shot 2017-06-16 at 10.26.22.png\"></p>\n<p>A Sample Case Template</p>\n<h5 id=\"Observables\"><a href=\"#Observables\" class=\"headerlink\" title=\"Observables\"></a>Observables</h5><p>Observables can be tagged, flagged as IOCs, and analyzed. When the investigation is well in progress or completed, you may want to share the resulting IOCs or a subset of those with partners and peers. TheHive will support the ability to export that data to MISP in September 2017. Until then, you can still export your IOCs as text, CSV or as a MISP-compatible format that you can use to add them to your MISP instance using the freetext editor. TheHive can export IOCs/observables in protected (hxxps://www[.]somewhere[.]com/) or unprotected mode.</p>\n<p>Every observable must have a TLP (Traffic Light Protocol) level. By default, any added observable is considered TLP:AMBER. Please note that the TLP is taken into account by some analyzers. Wait! Analyzers?</p>\n<h4 id=\"Cortex\"><a href=\"#Cortex\" class=\"headerlink\" title=\"Cortex\"></a>Cortex</h4><p>Cortex is our standalone analysis engine and a perfect companion for TheHive and MISP. Analysts can use it to analyze observables using its Web UI, in which case they can be submitted only one at a time. The Web UI should really be limited to quick assessments of observables before creating a case in TheHive (or in an alternate SIRP). The power of Cortex really comes into play when you <a href=\"https://github.com/TheHive-Project/CortexDocs/blob/master/api/README.md\">use its REST API</a>. TheHive speaks natively to Cortex (as MISP does). Moreover, TheHive can leverage one or several Cortex servers.</p>\n<p><img src=\"https://blogthehiveproject.files.wordpress.com/2017/06/screen-shot-2017-06-18-at-15-57-27.png?w=1100\" alt=\"Screen Shot 2017-06-18 at 15.57.27.png\"></p>\n<p>Observable Page and List of Analyzers</p>\n<h5 id=\"Analyzers\"><a href=\"#Analyzers\" class=\"headerlink\" title=\"Analyzers\"></a>Analyzers</h5><p>As of this writing, <a href=\"https://github.com/TheHive-Project/Cortex#analyzers\">Cortex has 23 analyzers</a> which come in a total of 39 flavors and more will be available soon.</p>\n<p>An analyzer can be written in any programming language supported by Linux though all of our current analyzers are written in Python. This is because we provide a Python library called <a href=\"https://pypi.python.org/pypi/cortexutils/\">Cortexutils</a> which contains a set of utility classes that make it easier to <a href=\"https://github.com/TheHive-Project/CortexDocs/blob/master/api/how-to-create-an-analyzer.md\">write an analyzer</a> in Python.</p>\n<h5 id=\"Flavors\"><a href=\"#Flavors\" class=\"headerlink\" title=\"Flavors\"></a>Flavors</h5><p>Analyzers such as VirusTotal, PassiveTotal or DomainTools can provide different analysis services. Let’s take VirusTotal as an example. You can scan a file or URL. That’s one flavor. You can also obtain the latest available report on <a href=\"http://virustotal.com/\">VirusTotal.com</a> for a file, hash, domain or IP address. That’s a second flavor. So the VirusTotal analyzer has two flavors.</p>\n<p><img src=\"https://blogthehiveproject.files.wordpress.com/2017/06/screen-shot-2017-06-18-at-16-26-41.png?w=1100\" alt=\"Screen Shot 2017-06-18 at 16.26.41.png\"></p>\n<p>How about PassiveTotal? It has 8 flavors: unique resolutions lookup, SSL certificate history lookup, malware lookup, passive DNS lookup, data enrichment lookup, SSL certificate details lookup, OSINT lookup and WHOIS data lookup.</p>\n<h5 id=\"The-MISP-Search-Analyzer\"><a href=\"#The-MISP-Search-Analyzer\" class=\"headerlink\" title=\"The MISP Search Analyzer\"></a>The MISP Search Analyzer</h5><p>At this point, we need to mention a special analyzer that may create some confusion if not understood correctly: the MISP Search analyzer. Thanks to it, Cortex has the ability to search observables within a MISP instance as represented by the arrow that goes from the <code>Analyzers</code> to <code>MISP</code>.</p>\n<p><img src=\"https://blogthehiveproject.files.wordpress.com/2017/06/screen_shot_2017-06-19_at_08_03_54.png?w=1100\" alt=\"Screen_Shot_2017-06-19_at_08_03_54.png\"></p>\n<p>Search for MISP Events Containing a Given Observable</p>\n<p>When an observable is found in an event, Cortex will return the number of records found (i.e. the number of events where the observable has been found) and a list of links to those events with additional data.</p>\n<p><img src=\"https://blogthehiveproject.files.wordpress.com/2017/06/screen_shot_2017-06-19_at_08_13_16.png?w=1100\" alt=\"Screen_Shot_2017-06-19_at_08_13_16.png\"></p>\n<p>Searching for a Hash Using the MISP Search Analyzer from the Cortex Web UI</p>\n<p><img src=\"https://blogthehiveproject.files.wordpress.com/2017/06/screen-shot-2017-06-19-at-08-17-04.png?w=1100\" alt=\"Screen Shot 2017-06-19 at 08.17.04.png\"></p>\n<p>The Same Search Conducted from TheHive: Long Report</p>\n<p><img src=\"https://blogthehiveproject.files.wordpress.com/2017/06/screen-shot-2017-06-19-at-08-18-58.png?w=1100\" alt=\"Screen Shot 2017-06-19 at 08.18.58.png\"></p>\n<p>Mini-Report</p>\n<p>The current version of the MISP Search analyzer can only search within a single MISP instance but in the near future, it will be able to support multiple ones.</p>\n<h5 id=\"MISP-Expansion-Modules\"><a href=\"#MISP-Expansion-Modules\" class=\"headerlink\" title=\"MISP Expansion Modules\"></a>MISP Expansion Modules</h5><p>Besides its own analyzers (which include MISP Search described above), Cortex can also <a href=\"https://github.com/TheHive-Project/CortexDocs/blob/master/misp.md#invoke-misp-modules-within-cortex\">invoke MISP expansion modules</a>. These are normally used by MISP to enrich attributes within events but Cortex can also take advantage of them to analyze observables.</p>\n<p>There is some overlap between the native Cortex analyzers and MISP expansion modules. When choosing between a native analyzer or an expansion module, we highly recommend you select the former. The expansion modules are deactivated in the default Cortex configuration.</p>\n<h5 id=\"Jobs\"><a href=\"#Jobs\" class=\"headerlink\" title=\"Jobs\"></a>Jobs</h5><p>When you submit an observable for analysis, Cortex will create a job and, if successful, it will generate an analysis report in JSON format. TheHive has the ability to parse those results and present them in a human-friendly fashion thanks to report templates we offer for free. So when you’ll submit an observable to Cortex from TheHive, you’ll get back a short (or mini) report and a long one. The first can be thought of as a really tiny <del>Exec</del> Analyst Summary while the second provides more insight and details.</p>\n<h4 id=\"Calling-Cortex-from-MISP\"><a href=\"#Calling-Cortex-from-MISP\" class=\"headerlink\" title=\"Calling Cortex from MISP\"></a>Calling Cortex from MISP</h4><p>In addition to the expansion modules we have just mentioned, MISP 2.4.73 and up can enrich attributes using Cortex analyzers. <a href=\"https://github.com/TheHive-Project/CortexDocs/blob/master/misp.md#invoke-cortex-analyzers-within-misp\">The configuration is pretty straightforward</a>. So if all you are concerned about is threat intelligence and sharing, you may augment your visibility into a given threat represented as a MISP event by leveraging all current 23 Cortex analyzers and any future ones.</p>\n<p><strong>Conclusion</strong></p>\n<p>TheHive, Cortex and MISP are three open source and free products that can highly aid you combat threats and keep the ‘monsters’ at bay.</p>\n<p>TheHive, as a SIRP, allows you to investigate security incident swiftly in a collaborative manner. Several analysts can work simultaneously on tasks &amp; cases . While cases can be created from scratch, TheHive can receive alerts from different sources thanks to alert feeders which consume security events generated by multiple sources and feed them into TheHive using TheHive4py Python library. TheHive can also sync to one or several MISP instances to receive new and updated events which will appear in the alert pane with all the other alerts generated by other sources. Analysts can then preview new alerts to decide whether they need to be acted upon. If so, they can transform them into investigation cases using templates.</p>\n<p>To analyze the observables collected in the course of an investigation and/or imported from a MISP event, TheHive can rely on one or several Cortex analysis engines. Cortex is another standalone product that we have developed which sole purpose is to allow you to analyze observables at scale thanks to its large number of analyzers, MISP expansion modules and any analyzer you might have developed on the side. Cortex has a REST API that can be used to empower other security products such as  ‘analytics’ software, alternate SIRPs or MISP.</p>\n<p>The highly popular threat sharing platform can indeed enrich attributes thanks to Cortex as it has a native integration with it. And in a few months, you will also be able to export cases from TheHive as MISP events that you can share with peers and partners.</p>\n<p>If you do share, you do care about our collective mission to defend the  digital assets that are under our watch from harm. So let us fight together as one.</p>\n","text":"TheHive与Cortex和MISP结合使用TheHive, Cortex and MISP work nicely together and if you’ve read our June-Dec 17 roadmap post, the integration of our...","link":"","photos":[],"count_time":{"symbolsCount":"9.1k","symbolsTime":"8 mins."},"categories":[{"name":"安全","slug":"安全","count":35,"path":"api/categories/安全.json"}],"tags":[{"name":"Cortex","slug":"Cortex","count":3,"path":"api/tags/Cortex.json"},{"name":"MISP","slug":"MISP","count":7,"path":"api/tags/MISP.json"},{"name":"TheHive","slug":"TheHive","count":4,"path":"api/tags/TheHive.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#TheHive%E4%B8%8ECortex%E5%92%8CMISP%E7%BB%93%E5%90%88%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">TheHive与Cortex和MISP结合使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#TheHive\"><span class=\"toc-text\">TheHive</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Alert-Feeders\"><span class=\"toc-text\">Alert Feeders</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Alerts\"><span class=\"toc-text\">Alerts</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Cases\"><span class=\"toc-text\">Cases</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Case-Templates\"><span class=\"toc-text\">Case Templates</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Observables\"><span class=\"toc-text\">Observables</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Cortex\"><span class=\"toc-text\">Cortex</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Analyzers\"><span class=\"toc-text\">Analyzers</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Flavors\"><span class=\"toc-text\">Flavors</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#The-MISP-Search-Analyzer\"><span class=\"toc-text\">The MISP Search Analyzer</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#MISP-Expansion-Modules\"><span class=\"toc-text\">MISP Expansion Modules</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Jobs\"><span class=\"toc-text\">Jobs</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Calling-Cortex-from-MISP\"><span class=\"toc-text\">Calling Cortex from MISP</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"","uid":"f73a8e23e6f6f669cf99c7dba8fa0722","slug":"sec/Suricata/Suricata","date":"2024-03-14T06:15:59.767Z","updated":"2024-03-14T06:15:59.767Z","comments":true,"path":"api/articles/sec/Suricata/Suricata.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"Ubuntu20和Ubuntu22有什么区别？ Ubuntu 20和Ubuntu 22是两个不同版本的Ubuntu操作系统，它们之间有一些区别，主要包括以下几点： 版本号：Ubuntu 20是发布于2020年的版本，而Ubuntu 22是发布于2022年的版本，因此Ubuntu ...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"用TheHive实现SOAR","uid":"4ed59a6d992f5c41879395e6019b7e3d","slug":"sec/TheHive/用TheHive实现SOAR","date":"2024-03-14T06:15:59.767Z","updated":"2024-03-14T06:15:59.767Z","comments":true,"path":"api/articles/sec/TheHive/用TheHive实现SOAR.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"用TheHive实现SOAR一、介绍SOAR代表“安全编排、自动化和响应”，指的是一种解决方案，用于威胁领域，以更好地监控和响应安全监控工具和技术检测到的事件。随着探测恶意活动的更先进技术的发展，大多数机构正转向使用SOAR，利用自动化来有效地分析、升级和响应 analyse, ...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"安全","slug":"安全","count":35,"path":"api/categories/安全.json"}],"tags":[{"name":"SOAR","slug":"SOAR","count":3,"path":"api/tags/SOAR.json"},{"name":"TheHive","slug":"TheHive","count":4,"path":"api/tags/TheHive.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}