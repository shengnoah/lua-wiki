{"title":"如何读取request的body数据","uid":"805020bcfe4a2b05d104deeb78f27106","slug":"old_topic/2016-09-17-379","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.754Z","comments":true,"path":"api/articles/old_topic/2016-09-17-379.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>作者：糖果</p>\n<p>我们通过curl向openresty服务器端请求rest，采用GET请求方式，提交一个json,然后路由到对应的匿名函数，通过request.params.body直接取得json数据主体，解析成table变量，放回渲染。<br>下面：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -X GET  http://0.0.0.0/blues -d  &#x27;&#123;&quot;key&quot;:&quot;value&quot;&#125;&#x27;</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app:get(<span class=\"string\">&quot;/blues&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(request,id)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> ret = request.params.body</span><br><span class=\"line\">    <span class=\"keyword\">local</span> json = <span class=\"built_in\">require</span> <span class=\"string\">&quot;cjson&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> util = <span class=\"built_in\">require</span> <span class=\"string\">&quot;cjson.util&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> t = json.decode(ret)</span><br><span class=\"line\">    ngx.say(util.serialise_value(t))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret</span><br><span class=\"line\"><span class=\"keyword\">end</span>)</span><br></pre></td></tr></table></figure>\n\n\n<p>结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">  [&quot;key&quot;] = &quot;value&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#123;&quot;key&quot;:&quot;value&quot;&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app:get(<span class=\"string\">&quot;/blues&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(request,id)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> ret = request.params.body</span><br><span class=\"line\">    <span class=\"keyword\">local</span> json = <span class=\"built_in\">require</span> <span class=\"string\">&quot;cjson&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> t = json.decode(ret)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> t</span><br><span class=\"line\"><span class=\"keyword\">end</span>)</span><br></pre></td></tr></table></figure>\n\n<p>结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&quot;key&quot;:&quot;value&quot;&#125;</span><br></pre></td></tr></table></figure>","text":"作者：糖果 我们通过curl向openresty服务器端请求rest，采用GET请求方式，提交一个json,然后路由到对应的匿名函数，通过request.params.body直接取得json数据主体，解析成table变量，放回渲染。下面： 1curl -X GET http:/...","link":"","photos":[],"count_time":{"symbolsCount":824,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"反扫描可视化","uid":"9a08798d6ed47e5066c21c10dcfbe72f","slug":"old_topic/2016-09-17-372","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.753Z","comments":true,"path":"api/articles/old_topic/2016-09-17-372.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"威胁情报可视化，一直以来对安全人员分析安全事件起着有益的作用， 可视化是对分析的结果一种图形化的映射，是威胁行为的一种图形具象化。 针对蜜罐日志分析的流程来讲，溯源和展示攻击行为本身也是很重要的。 一般比较传统的日志分析方式是： 蜜罐向类似mysql这种库中写入被访问的IP地址和...","link":"","photos":[],"count_time":{"symbolsCount":883,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"xml-sitemaps.com自动生成网站sitemap","uid":"babc875b7e0a7de20c19f4de9786a53d","slug":"old_topic/2016-09-17-374","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.753Z","comments":true,"path":"api/articles/old_topic/2016-09-17-374.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"xml-sitemaps.com自动生成网站sitemap,之前这网站是，根据数库后台数生成sitemap.xml和sitemap.html. 这种方式很自动化，但有没有一种工具，可以不通过自己写的代码，直接在前台输入网站地址就会生成相应的文件呢，有就是www.xml-sitem...","link":"","photos":[],"count_time":{"symbolsCount":181,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}