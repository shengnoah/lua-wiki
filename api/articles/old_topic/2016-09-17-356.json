{"title":"MoonScript如何使用RESTY-HTTP","uid":"f1a8029c8728847e5961c7e694008279","slug":"old_topic/2016-09-17-356","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.229Z","comments":true,"path":"api/articles/old_topic/2016-09-17-356.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>作者：糖果</p>\n<p>在OpenResty中发起HTTP请求，一般情况下，有两种方式：<br>\n1.通过内部Proxy。<br>\n2.使用RESTY-HTTP库发起访问。</p>\n<p>Lapis使用的是interal proxy,之前文章有提到，下面提到的是RESTY-HTTP的MoonScript调用实现。</p>\n<h2 id=\"RESTY-HTTP安装\">RESTY-HTTP安装</h2>\n<p>实际RESTY-HTTP的主要实现就是两个lua文件， http_headers.lua和http.lua这两个文件。将文件复制到/usr/local/openresty/lualib/resty下即可使用，再引用http.lua时注意一下的是Lapis也有一个同名文件，需要注意一下冲突。</p>\n<h2 id=\"MoonScript代码：\">MoonScript代码：</h2>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http = <span class=\"built_in\">require</span> <span class=\"string\">&quot;resty.http&quot;</span></span><br><span class=\"line\">httpc = http.new()</span><br><span class=\"line\">res, err = httpc\\request_uri(<span class=\"string\">&quot;http://www.baidu.com&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> res.<span class=\"built_in\">status</span> == ngx.HTTP_OK </span><br><span class=\"line\">  <span class=\"keyword\">return</span> res.body</span><br><span class=\"line\"><span class=\"keyword\">else</span> </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&quot;nil&quot;</span>   </span><br></pre></td></tr></table></figure>\n<h2 id=\"LUA代码：\">LUA代码：</h2>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    [<span class=\"string\">&quot;/testcase&quot;</span>] = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(self)</span></span></span><br><span class=\"line\">      <span class=\"keyword\">local</span> restyhttp = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;resty.http&quot;</span>)</span><br><span class=\"line\">      <span class=\"keyword\">local</span> httpc = restyhttp.new()</span><br><span class=\"line\">      <span class=\"keyword\">local</span> res, err = httpc:request_uri(<span class=\"string\">&quot;http://www.baidu.com&quot;</span>)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> res.<span class=\"built_in\">status</span> == ngx.HTTP_OK <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.body</span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;nil&quot;</span></span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">```      </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">MoonScript和LUA代码几乎没太大区别，因为request_uri请求中使用的是域名，所以需要</span><br><span class=\"line\">修改conf文件。</span><br><span class=\"line\"></span><br><span class=\"line\">## nginx.conf配置</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<pre><code>location / &#123;\n        resolver 8.8.8.8;\n&#125;            \n</code></pre>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">RESTY-HTTP与CJSON不同，并没有涉及到任何so库的生成，http_headers.lua和http.lua这</span><br><span class=\"line\">两个文件也是在Makefile来实现的，使用的是install命令-d参数，相当于在cp过程中，如果目标位置没</span><br><span class=\"line\">有相应的文件夹就创建一个文件夹。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">## Makefile</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>OPENRESTY_PREFIX=/usr/local/openresty</p>\n<p>PREFIX ?=          /usr/local<br>\nLUA_INCLUDE_DIR ?= $(PREFIX)/include<br>\nLUA_LIB_DIR ?=     $(PREFIX)/lib/lua/$(LUA_VERSION)<br>\nINSTALL ?= install<br>\nTEST_FILE ?= t</p>\n<p>.PHONY: all test install</p>\n<p>all: ;</p>\n<p>install: all<br>\n$(INSTALL) -d $(DESTDIR)/$(LUA_LIB_DIR)/resty<br>\n$(INSTALL) lib/resty/*.lua $(DESTDIR)/$(LUA_LIB_DIR)/resty/</p>\n<pre><code></code></pre>\n","text":"作者：糖果 在OpenResty中发起HTTP请求，一般情况下，有两种方式： 1.通过内部Proxy。 2.使用RESTY-HTTP库发起访问。 Lapis使用的是interal proxy,之前文章有提到，下面提到的是RESTY-HTTP的MoonScript调用实现。 RES...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#RESTY-HTTP%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">RESTY-HTTP安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MoonScript%E4%BB%A3%E7%A0%81%EF%BC%9A\"><span class=\"toc-text\">MoonScript代码：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#LUA%E4%BB%A3%E7%A0%81%EF%BC%9A\"><span class=\"toc-text\">LUA代码：</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MoonScript实现Map按值排序","uid":"8df307659316a77ab2a33659c2147085","slug":"old_topic/2016-09-17-353","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.217Z","comments":true,"path":"api/articles/old_topic/2016-09-17-353.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 MoonScript代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051board = &#123; [&#x27;0.0.0...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"关于Lua的LazyTable的实现","uid":"a345db901c4262d0d7e3998d536c82d4","slug":"old_topic/2016-09-17-357","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.207Z","comments":true,"path":"api/articles/old_topic/2016-09-17-357.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 LazyTable源码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465l...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}