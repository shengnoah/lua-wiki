{"title":"MoonScript如何使用RESTY-HTTP","uid":"f1a8029c8728847e5961c7e694008279","slug":"old_topic/2016-09-17-356","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.229Z","comments":true,"path":"api/articles/old_topic/2016-09-17-356.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>作者：糖果</p>\n<p>在OpenResty中发起HTTP请求，一般情况下，有两种方式：<br />\n1.通过内部Proxy。<br />\n2.使用RESTY-HTTP库发起访问。</p>\n<p>Lapis使用的是interal proxy,之前文章有提到，下面提到的是RESTY-HTTP的MoonScript调用<br />\n实现。</p>\n<h2 id=\"resty-http安装\"><a class=\"markdownIt-Anchor\" href=\"#resty-http安装\"></a> RESTY-HTTP安装</h2>\n<p>实际RESTY-HTTP的主要实现就是两个lua文件， http_headers.lua和http.lua这两个文件。<br />\n将文件复制到/usr/local/openresty/lualib/resty下即可使用，再引用http.lua时注意一下<br />\n的是Lapis也有一个同名文件，需要注意一下冲突。</p>\n<h2 id=\"moonscript代码\"><a class=\"markdownIt-Anchor\" href=\"#moonscript代码\"></a> MoonScript代码：</h2>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">http <span class=\"token operator\">=</span> require <span class=\"token string\">\"resty.http\"</span>\nhttpc <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nres<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> httpc\\<span class=\"token function\">request_uri</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://www.baidu.com\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> res<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> ngx<span class=\"token punctuation\">.</span>HTTP_OK \n  <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span>body\n<span class=\"token keyword\">else</span> \n  <span class=\"token keyword\">return</span> <span class=\"token string\">\"nil\"</span>   <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"lua代码\"><a class=\"markdownIt-Anchor\" href=\"#lua代码\"></a> LUA代码：</h2>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">    <span class=\"token punctuation\">[</span><span class=\"token string\">\"/testcase\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">local</span> restyhttp <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"resty.http\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">local</span> httpc <span class=\"token operator\">=</span> restyhttp<span class=\"token punctuation\">.</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">local</span> res<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> httpc<span class=\"token punctuation\">:</span><span class=\"token function\">request_uri</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://www.baidu.com\"</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> res<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> ngx<span class=\"token punctuation\">.</span>HTTP_OK <span class=\"token keyword\">then</span>\n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span>body\n      <span class=\"token keyword\">else</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"nil\"</span>\n      <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">end</span>\n```      \n\n\nMoonScript和LUA代码几乎没太大区别，因为request_uri请求中使用的是域名，所以需要\n修改conf文件。\n\n<span class=\"token operator\">#</span><span class=\"token operator\">#</span> nginx<span class=\"token punctuation\">.</span>conf配置\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<pre><code>location / &#123;\n        resolver 8.8.8.8;\n&#125;            \n</code></pre>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\nRESTY-HTTP与CJSON不同，并没有涉及到任何so库的生成，http_headers.lua和http.lua这\n两个文件也是在Makefile来实现的，使用的是install命令-d参数，相当于在cp过程中，如果目标位置没\n有相应的文件夹就创建一个文件夹。\n\n\n## Makefile\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>OPENRESTY_PREFIX=/usr/local/openresty</p>\n<p>PREFIX ?=          /usr/local<br />\nLUA_INCLUDE_DIR ?= $(PREFIX)/include<br />\nLUA_LIB_DIR ?=     <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>P</mi><mi>R</mi><mi>E</mi><mi>F</mi><mi>I</mi><mi>X</mi><mo>)</mo><mi mathvariant=\"normal\">/</mi><mi>l</mi><mi>i</mi><mi>b</mi><mi mathvariant=\"normal\">/</mi><mi>l</mi><mi>u</mi><mi>a</mi><mi mathvariant=\"normal\">/</mi></mrow><annotation encoding=\"application/x-tex\">(PREFIX)/lib/lua/</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">P</span><span class=\"mord mathit\" style=\"margin-right:0.00773em;\">R</span><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">F</span><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">X</span><span class=\"mclose\">)</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">i</span><span class=\"mord mathit\">b</span><span class=\"mord mathrm\">/</span><span class=\"mord mathit\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathit\">u</span><span class=\"mord mathit\">a</span><span class=\"mord mathrm\">/</span></span></span></span>(LUA_VERSION)<br />\nINSTALL ?= install<br />\nTEST_FILE ?= t</p>\n<p>.PHONY: all test install</p>\n<p>all: ;</p>\n<p>install: all<br />\n$(INSTALL) -d <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>D</mi><mi>E</mi><mi>S</mi><mi>T</mi><mi>D</mi><mi>I</mi><mi>R</mi><mo>)</mo><mi mathvariant=\"normal\">/</mi></mrow><annotation encoding=\"application/x-tex\">(DESTDIR)/</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathit\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span><span class=\"mord mathrm\">/</span></span></span></span>(LUA_LIB_DIR)/resty<br />\n$(INSTALL) lib/resty/*.lua <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mo>(</mo><mi>D</mi><mi>E</mi><mi>S</mi><mi>T</mi><mi>D</mi><mi>I</mi><mi>R</mi><mo>)</mo><mi mathvariant=\"normal\">/</mi></mrow><annotation encoding=\"application/x-tex\">(DESTDIR)/</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.75em;\"></span><span class=\"strut bottom\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mopen\">(</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathit\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord mathit\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord mathit\" style=\"margin-right:0.02778em;\">D</span><span class=\"mord mathit\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathit\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span><span class=\"mord mathrm\">/</span></span></span></span>(LUA_LIB_DIR)/resty/</p>\n<pre class=\"highlight\"><code class=\"\"></code></pre>\n","text":"作者：糖果 在OpenResty中发起HTTP请求，一般情况下，有两种方式： 1.通过内部Proxy。 2.使用RESTY-HTTP库发起访问。 Lapis使用的是interal proxy,之前文章有提到，下面提到的是RESTY-HTTP的MoonScript调用 实现。 RE...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#resty-http%E5%AE%89%E8%A3%85\"><span class=\"toc-text\"> RESTY-HTTP安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#moonscript%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\"> MoonScript代码：</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#lua%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\"> LUA代码：</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MoonScript调用LUA-CJSON","uid":"76c3bd62c0bfebefa8d37c47bf8fd902","slug":"old_topic/2016-09-17-355","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.159Z","comments":true,"path":"api/articles/old_topic/2016-09-17-355.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 Lapis的util库有对cjson封装，而我们想更直接的调用CJSON的方法，而不想依赖的封装。 我们首先实现一个MoonScript写文件的代码： 写文件： write_data = (var, rule)-> path = \"/home/xxx\" file = ...","link":"","photos":[],"count_time":{"symbolsCount":615,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"关于Lua的LazyTable的实现","uid":"a345db901c4262d0d7e3998d536c82d4","slug":"old_topic/2016-09-17-357","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.207Z","comments":true,"path":"api/articles/old_topic/2016-09-17-357.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 LazyTable源码 local ngx_req = &#123; headers = function() return \"testcase\" end, method = function() return \"GET\" end, &#125; local lazy...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}