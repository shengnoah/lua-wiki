{"title":"Lua功能模块之“加密”","uid":"70c113f1b89df0b719f9ae169720a491","slug":"old_topic/2016-09-17-106","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-27T03:32:32.355Z","comments":true,"path":"api/articles/old_topic/2016-09-17-106.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>作者：糖果</p>\n<p>在Lua开发的世界中，有很多开源的模块，分布在一些网站（比如开普勒项目），github上，有的都已经配置好了，可以向python的pip工具一样，只不过在lua世界中使用luarocks安装工具快速的安装。</p>\n<p>我们在开发的工作中，难免要对一些数据进行加密处理，而加密模块的使用有是就必不可少。</p>\n<p>在lua官方的WIKI列表中就列出了，很多lua程序写的加密库，这写加密库有的是用纯lua写的，也有用lua调用C的程序实现加密。不过有些时候甄选这些库还是需要花一些时间精力，只是需要测试一下这是加密算是否是好用的</p>\n<p>这是lua组织列出的一览列表。</p>\n<p><a href=\"http://lua-users.org/wiki/CryptographyStuff\">http://lua-users.org/wiki/CryptographyStuff</a></p>\n<p>说一下为什么要加密，我们面临的任务是什么！我们现在面临的任务是，要对一段字符串进行sha256算法加密。</p>\n<p>我们从列表中选出了几个支持sha256加密的包，并说明一下这几个工具包。</p>\n<h2 id=\"1securehashalgorithm和securehashalgorithmbw\"><a class=\"markdownIt-Anchor\" href=\"#1securehashalgorithm和securehashalgorithmbw\"></a> 1.SecureHashAlgorithm和SecureHashAlgorithmBW</h2>\n<p>这个工具包是支持sha256加密的，而且是纯lua方法的实现，问题是，这两个包分别依赖lua5.2和lua5.3。</p>\n<p>而我们系统的运行环境是lua5.1，因为大部分的生产环境都是lua5.1，因为历史原因暂时没法改变。如果要把5.2的程序移植到5.1下运行，还需要移植一个lua5.2才独有的包，这是lua5.2升级之后才有的部件：bit32,而在lua5.3中又将这个部件去掉了,移植的动力不大，暂时不使用这个包。</p>\n<h2 id=\"2lcrypt\"><a class=\"markdownIt-Anchor\" href=\"#2lcrypt\"></a> 2.Lcrypt</h2>\n<p>这个包不是纯lua的实现，底层加密用的是C语言，而且额外还有依赖另外另个工具包 libTomCrypt和libTomMath，这两个包的官网已经被和谐了，github上有源码，所以要想让这个包正常运行需要手动make安装3个源码工程，还是算了，有时间的时候再装好测试一下，先暂时不用。</p>\n<p>网站：<a href=\"http://www.eder.us/projects/lcrypt/\">http://www.eder.us/projects/lcrypt/</a></p>\n<h2 id=\"3luacrypto\"><a class=\"markdownIt-Anchor\" href=\"#3luacrypto\"></a> 3.LuaCrypto</h2>\n<p>这个包的安装用的是luarocks，就比较简单了 luarocks install luacrypto ，我们选用这个包进行加密处理。</p>\n<p>LuaCrypto其实是openssl库的前端lua调用，依赖openssl，openssl库显然会支持sha256加密，相对也比一般的第三方实现更可靠。</p>\n<p>写一个简单的加密程序：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">local</span> crypto <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span><span class=\"token string\">\"crypto\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin class-name\">local</span> hmac <span class=\"token operator\">=</span> require<span class=\"token punctuation\">(</span><span class=\"token string\">\"crypto.hmac\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin class-name\">local</span> ret <span class=\"token operator\">=</span> hmac.digest<span class=\"token punctuation\">(</span><span class=\"token string\">\"sha256\"</span>, <span class=\"token string\">\"abcdefg\"</span>, <span class=\"token string\">\"hmackey\"</span><span class=\"token punctuation\">)</span>\n\nprint<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n\nret的返回结果是，如下这个字符串。\n\n704d25d116a700656bfa5a6a7b0f462efdc7df828cdbafa6fbf8b39a12e83f24\n\n我们需要改造一下代码，在调用digest的时候指定输出的形式是raw二进制数据形式，然后在编码成base64的数据形式。\n\n<span class=\"token builtin class-name\">local</span> ret <span class=\"token operator\">=</span> hmac.digest<span class=\"token punctuation\">(</span><span class=\"token string\">\"sha256\"</span>, <span class=\"token string\">\"abcdefg\"</span>, <span class=\"token string\">\"hmackey\"</span>,rawequal<span class=\"token punctuation\">)</span>\n\nprint<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这时候的输出结果是：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cE0l0RanAGVr+lpqew9GLv3H34KM26+m+/izmhLoPyQ<span class=\"token operator\">=</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>lua-base64使用的是下面的库，lua库就是这样，有很多功能程序有很多的实现，并且很多非官方的第三方实现。</p>\n<p><a href=\"https://github.com/toastdriven/lua-base64\">https://github.com/toastdriven/lua-base64</a></p>\n<p>=============================================================</p>\n<p>同样的我们再写一个php的测试程序：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token variable\">$ret</span> <span class=\"token operator\">=</span> <span class=\"token function\">hash_hmac</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'sha256'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'abcdefg'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'hmackey'</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ret</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>ret的返回结果是，如下这个字符串。</p>\n<p>704d25d116a700656bfa5a6a7b0f462efdc7df828cdbafa6fbf8b39a12e83f24</p>\n<p>没有确认php的hash_hamc是否底层调用的也是openssl的加密算法，至少从目前的测试结果来看，两种语言加密返回的结果是一致的。</p>\n<p>我们同样需要改造一下php代码的调用加密的方式：</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">\n<span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token variable\">$ret</span> <span class=\"token operator\">=</span> <span class=\"token function\">hash_hmac</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'sha256'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'abcdefg'</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'hmackey'</span><span class=\"token punctuation\">,</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$ret</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token delimiter important\">?></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>函数调用的最后一个参数，true表示用raw二进制形式输出，false是以16进制字符串的形式输出。</p>\n<p>最后的结果是：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cE0l0RanAGVr+lpqew9GLv3H34KM26+m+/izmhLoPyQ<span class=\"token operator\">=</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>=============================================================</p>\n<p>我们测试一下python的sha256加密：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">import hmac\nimport base64\nimport hashlib\nret <span class=\"token operator\">=</span> base64<span class=\"token punctuation\">.</span><span class=\"token function\">b64encode</span><span class=\"token punctuation\">(</span>hmac<span class=\"token punctuation\">.</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hmackey'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'abcdefg'</span><span class=\"token punctuation\">,</span> hashlib<span class=\"token punctuation\">.</span>sha256<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>最后的输出结果是：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cE0l0RanAGVr+lpqew9GLv3H34KM26+m+/izmhLoPyQ<span class=\"token operator\">=</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>通过这次测试我们会发现，lua的库很多都是第三方程序员实现的，并且有很多的实现版本，而php和python的库，相对更统一。</p>\n<p>如果你真的花了时间去了解lua，能驾驭lua，可以有精力去解决前期遇到的问题，排除库的匹配查找的问题，lua处理的效率会慢慢的展现出来，在之后我们会举出例子来说明lua的好处和不足。</p>\n<p>作者：糖果</p>\n<p>PS:转载到其它平台请注明作者姓名及原文链接。</p>\n","text":"作者：糖果 在Lua开发的世界中，有很多开源的模块，分布在一些网站（比如开普勒项目），github上，有的都已经配置好了，可以向python的pip工具一样，只不过在lua世界中使用luarocks安装工具快速的安装。 我们在开发的工作中，难免要对一些数据进行加密处理，而加密模块...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1securehashalgorithm%E5%92%8Csecurehashalgorithmbw\"><span class=\"toc-text\"> 1.SecureHashAlgorithm和SecureHashAlgorithmBW</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2lcrypt\"><span class=\"toc-text\"> 2.Lcrypt</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3luacrypto\"><span class=\"toc-text\"> 3.LuaCrypto</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lapis安装与项目创建","uid":"91b599411eb2c81aa42989cad4814460","slug":"old_topic/2016-09-17-105","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-18T05:30:32.435Z","comments":true,"path":"api/articles/old_topic/2016-09-17-105.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lapis是程序员leaf写的一个lua语言的WEB框架，目前已经发布了1.3版本。要求的服务器开发环境是Openresty，而且支持moonscript,这个moonscript语言类似于Javascript的coffescript。起到的作用是，可以用简短moonscript...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"},{"name":"lapis","slug":"lapis","count":3,"path":"api/tags/lapis.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua功能模块之“CURL”","uid":"c275b3b66a0c53930718bc2fb02605c5","slug":"old_topic/2016-09-17-107","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.181Z","comments":true,"path":"api/articles/old_topic/2016-09-17-107.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 Curl是一个WEB开发常用的工具，直接用官网的翻译 curl是一个开源的命令行工具，也是一个库，用于传输URL语法的工具，支持DICT, FILE, FTP, FTPS, Gopher, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, ...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}