{"title":"Lua功能模块之“CURL”","uid":"c275b3b66a0c53930718bc2fb02605c5","slug":"old_topic/2016-09-17-107","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.181Z","comments":true,"path":"api/articles/old_topic/2016-09-17-107.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>作者：糖果</p>\n<p>Curl是一个WEB开发常用的工具，直接用官网的翻译</p>\n<p>curl是一个开源的命令行工具，也是一个库，用于传输URL语法的工具，支持DICT, FILE, FTP, FTPS, Gopher, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMB, SMTP, SMTPS, Telnet and TFTP等。</p>\n<p>在lua中，curl就是以库的形式存在的，安装过程比较简单：sudo luarocks install luacurl。</p>\n<p>另外，curl还是支持代理的方式访问主机，这个很有用，之后会用一个模拟DDOS攻击程序说明他的用处。</p>\n<p>这一次，我们用一个和SAE云平台相关的机能，说明pycurl的使用。</p>\n<p>简单的说明一下，SAE云平台是国内较早的云开开放平台之一，经过多年的积累，有广大的用户基础，提供便利的开发平台，最近开放了一个实时LOG查询功能。用户可以通过其对外开放的REST API，查询自己运行在云平台上的APP产出的LOG。</p>\n<p>文档说明：</p>\n<p>接入流程概述：</p>\n<p>1.计算取得安全签名 。</p>\n<p>2.向指定URL发送HTTP的GET请求，请求之前要根据官网的文档要求，填充HTTP header信息，如果没有准备的填充信息，会被视为无效请求。</p>\n<p>3.取得返回的LOG信息，如果需要还可以对，返回LOG进行显示格式化。</p>\n<p>技术栈：</p>\n<p>依赖关联，此模块使用了几个常用的LUA库：</p>\n<p>crypto：加密包，用于sha256运算。</p>\n<p>base64:base64格式的转换处理。</p>\n<p>crypto,base64在之前的章节有过介绍。</p>\n<p>luacurl：HTTP工具包，此处用于向服务器发送HTTP请求。</p>\n<p>socket：luasocket是调用socket api的，但此程序只是用于取得系统时间，用作当时间戳。</p>\n<p>另外，国内的云风老师，因为觉得luasocket过于大了，不是很喜欢（QQ群里他自己说的…），他又写了一个lsocket，可以在github中找到，lsocket有一个sample,是使用lsocket实现了一个Http Server。</p>\n<p>多说一句，Lua的库不像python或是php等语言，Lua的很多库都是第三方个人实现的，需要一个寻找和甄别的过程，使用之前，确认一下也很必要。</p>\n<p>下面是具体的代码：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> crypto <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"crypto\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> hmac <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"crypto.hmac\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> curl <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"luacurl\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> socket <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"socket\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span>\n\nALOG <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\nTIME_STAMP <span class=\"token operator\">=</span> <span class=\"token keyword\">nil</span>\nLOG_PATH <span class=\"token operator\">=</span> <span class=\"token keyword\">nil</span>\nSAE_LOG_HOST <span class=\"token operator\">=</span> <span class=\"token string\">'g.sae.sina.com.cn'</span>\nSAE_ACCESSKEY <span class=\"token operator\">=</span> <span class=\"token string\">'XXXXXXXX'</span>\nSAE_SECRETKEY <span class=\"token operator\">=</span> <span class=\"token string\">'XXXXXXXXXXXXXXXXXXXXXXXXX'</span>\n\n<span class=\"token keyword\">function</span> ALOG<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">local</span> auth_info <span class=\"token operator\">=</span> ALOG<span class=\"token punctuation\">.</span><span class=\"token function\">get_sec_token</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">local</span> header_info <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token string\">'Host: '</span><span class=\"token operator\">..</span>SAE_LOG_HOST<span class=\"token punctuation\">,</span>\n         <span class=\"token string\">'Accept: text/plain'</span><span class=\"token punctuation\">,</span>\n         <span class=\"token string\">'x-sae-accesskey: '</span><span class=\"token operator\">..</span>SAE_ACCESSKEY<span class=\"token punctuation\">,</span>\n         <span class=\"token string\">'x-sae-timestamp: '</span><span class=\"token operator\">..</span>TIME_STAMP<span class=\"token punctuation\">,</span>\n         <span class=\"token string\">'Authorization: '</span><span class=\"token operator\">..</span>auth_info\n     <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">local</span> url <span class=\"token operator\">=</span> <span class=\"token string\">'http://'</span><span class=\"token operator\">..</span>SAE_LOG_HOST<span class=\"token operator\">..</span>LOG_PATH\n    <span class=\"token keyword\">local</span> c <span class=\"token operator\">=</span> curl<span class=\"token punctuation\">.</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    c<span class=\"token punctuation\">:</span><span class=\"token function\">setopt</span><span class=\"token punctuation\">(</span>curl<span class=\"token punctuation\">.</span>OPT_URL<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">)</span>\n    c<span class=\"token punctuation\">:</span><span class=\"token function\">setopt</span><span class=\"token punctuation\">(</span>curl<span class=\"token punctuation\">.</span>OPT_HEADER<span class=\"token punctuation\">,</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">)</span>\n    c<span class=\"token punctuation\">:</span><span class=\"token function\">setopt</span><span class=\"token punctuation\">(</span>curl<span class=\"token punctuation\">.</span>OPT_HTTPHEADER<span class=\"token punctuation\">,</span>       table<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>header_info<span class=\"token punctuation\">,</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">local</span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    c<span class=\"token punctuation\">:</span><span class=\"token function\">setopt</span><span class=\"token punctuation\">(</span>curl<span class=\"token punctuation\">.</span>OPT_WRITEFUNCTION<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>param<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">)</span>\n    table<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">#</span>buf\n    <span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">:</span><span class=\"token function\">perform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> table<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">function</span> ALOG<span class=\"token punctuation\">.</span><span class=\"token function\">get_sec_token</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">local</span> header <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n     LOG_PATH<span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'x-sae-accesskey:'</span><span class=\"token operator\">..</span>SAE_ACCESSKEY<span class=\"token punctuation\">,</span>\n     <span class=\"token string\">'x-sae-timestamp:'</span><span class=\"token operator\">..</span>TIME_STAMP<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    data_str <span class=\"token operator\">=</span> table<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">,</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">local</span> ret <span class=\"token operator\">=</span> <span class=\"token string\">'SAEV1_HMAC_SHA256 '</span><span class=\"token operator\">..</span><span class=\"token function\">to_base64</span><span class=\"token punctuation\">(</span>hmac<span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sha256\"</span><span class=\"token punctuation\">,</span> data_str<span class=\"token punctuation\">,</span>SAE_SECRETKEY<span class=\"token punctuation\">,</span>rawequal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> ret\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">function</span> ALOG<span class=\"token punctuation\">.</span><span class=\"token function\">get_log_info</span><span class=\"token punctuation\">(</span>service<span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">,</span> ident<span class=\"token punctuation\">,</span> fop<span class=\"token punctuation\">,</span> format<span class=\"token punctuation\">)</span>\n\n    LOG_PATH <span class=\"token operator\">=</span> <span class=\"token string\">'/log/'</span><span class=\"token operator\">..</span>service<span class=\"token operator\">..</span><span class=\"token string\">'/'</span><span class=\"token operator\">..</span>date<span class=\"token operator\">..</span><span class=\"token string\">'/'</span><span class=\"token operator\">..</span>ident<span class=\"token operator\">..</span><span class=\"token string\">'.log'</span><span class=\"token operator\">..</span><span class=\"token string\">'?'</span><span class=\"token operator\">..</span>fop\n    TIME_STAMP <span class=\"token operator\">=</span> math<span class=\"token punctuation\">.</span><span class=\"token function\">ceil</span><span class=\"token punctuation\">(</span>socket<span class=\"token punctuation\">.</span><span class=\"token function\">gettime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">local</span> log_info <span class=\"token operator\">=</span> ALOG<span class=\"token punctuation\">.</span><span class=\"token function\">request</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> log_info\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">local</span> service <span class=\"token operator\">=</span> <span class=\"token string\">'http'</span>\n<span class=\"token keyword\">local</span> date <span class=\"token operator\">=</span> <span class=\"token string\">'2015-07-31'</span>\n<span class=\"token keyword\">local</span> ident<span class=\"token operator\">=</span><span class=\"token string\">'1-access'</span>\n<span class=\"token keyword\">local</span> meta <span class=\"token operator\">=</span> ALOG<span class=\"token punctuation\">.</span><span class=\"token function\">get_log_info</span><span class=\"token punctuation\">(</span>service<span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">,</span> ident<span class=\"token punctuation\">,</span> <span class=\"token string\">'head/0/1'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>meta<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">return</span> meta<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在云平台上可以运行，python,php,python的脚本。目前是不支持lua的，以后是否支持不得而知。</p>\n<p>因为将一个系统，分解成不同的子系统，一部分的功能是用lua实现，一部分的功能是用python实现，而系统之间的通信使用RPC通信，由lua端向python发送RPC，服务器端再接收RPC接收，必然会产生LOG。我们就在log端将实时的log取出，分析执行过程，这就是这段代码的意义。</p>\n<p>关于Pycurl使用代理的案例，之后单起一篇说明，另外会将C实现代码的关键截取出来说明上层LUA与底层代码的功能。</p>\n<p>PS:转载到其它平台请注明作者姓名及原文链接。</p>\n","text":"作者：糖果 Curl是一个WEB开发常用的工具，直接用官网的翻译 curl是一个开源的命令行工具，也是一个库，用于传输URL语法的工具，支持DICT, FILE, FTP, FTPS, Gopher, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, ...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua功能模块之“加密”","uid":"70c113f1b89df0b719f9ae169720a491","slug":"old_topic/2016-09-17-106","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-27T03:32:32.355Z","comments":true,"path":"api/articles/old_topic/2016-09-17-106.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 在Lua开发的世界中，有很多开源的模块，分布在一些网站（比如开普勒项目），github上，有的都已经配置好了，可以向python的pip工具一样，只不过在lua世界中使用luarocks安装工具快速的安装。 我们在开发的工作中，难免要对一些数据进行加密处理，而加密模块...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"《程序设计实践》-前言","uid":"d2f132ef110c84c89c3b0cacf76afe24","slug":"old_topic/2016-09-17-108","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.186Z","comments":true,"path":"api/articles/old_topic/2016-09-17-108.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Preface Have you ever… 你是否曾经 wasted a lot of time coding the wrong algorithm? 浪费了大量的时间，写了一个错误的算法。 used a data structure that was much too co...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}