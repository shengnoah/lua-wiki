{"title":"MoonScript版的Ngx.Timer","uid":"05d6f9c12a393c22bb876b3b1fe14cf0","slug":"old_topic/2016-09-17-364","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.174Z","comments":true,"path":"api/articles/old_topic/2016-09-17-364.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>作者：糖果</p>\n<p>实际如果是直接调用ngx.timer的API，moonscript和lua的ngx.timer的函数写法差别不是很大。</p>\n<p>candylab.moon</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">handler = (fill, params)-&gt;</span><br><span class=\"line\">    ok, err = ngx.timer.at(<span class=\"number\">1</span>, handler, <span class=\"string\">&quot;params-data&quot;</span>)</span><br><span class=\"line\">    ngx.<span class=\"built_in\">log</span>(ngx.DEBUG, <span class=\"string\">&quot;ok:&quot;</span>, ok, <span class=\"string\">&quot; err:&quot;</span>, err)</span><br><span class=\"line\">         </span><br><span class=\"line\">ok, err = ngx.timer.at(<span class=\"number\">6</span>, handler, <span class=\"string\">&quot;params-data&quot;</span>)</span><br><span class=\"line\">   </span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ok <span class=\"keyword\">then</span></span><br><span class=\"line\">    ngx.<span class=\"built_in\">log</span>(ngx.ERR, <span class=\"string\">&quot;err:&quot;</span>, err)</span><br></pre></td></tr></table></figure>\n<p>candylab.lua</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;lapis.nginx.http&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> handler</span><br><span class=\"line\">handler = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(fill, params)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> ok, err = ngx.timer.at(<span class=\"number\">1</span>, handler, <span class=\"string\">&quot;params-data&quot;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ngx.<span class=\"built_in\">log</span>(ngx.DEBUG, <span class=\"string\">&quot;ok:&quot;</span>, ok, <span class=\"string\">&quot; err:&quot;</span>, err)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> ok, err = ngx.timer.at(<span class=\"number\">6</span>, handler, <span class=\"string\">&quot;params-data&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ok <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> ngx.<span class=\"built_in\">log</span>(ngx.ERR, <span class=\"string\">&quot;err:&quot;</span>, err)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>","text":"作者：糖果 实际如果是直接调用ngx.timer的API，moonscript和lua的ngx.timer的函数写法差别不是很大。 candylab.moon 123456789handler = (fill, params)-&gt; ok, err = ngx.timer.a...","link":"","photos":[],"count_time":{"symbolsCount":786,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MoonScript与Simple.HTTP","uid":"ec499223d38cc05a19e8571945944a4c","slug":"old_topic/2016-09-17-362","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.231Z","comments":true,"path":"api/articles/old_topic/2016-09-17-362.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 MoonScript调用Lapis的Simple.http，其实调用的就是OpenResty的http的接口。 candylab.moon 123456http = require &quot;lapis.nginx.http&quot;body, status_co...","link":"","photos":[],"count_time":{"symbolsCount":502,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"MoonScript与Redis客户端","uid":"55c8ceefd620d530c7de11d61153ba84","slug":"old_topic/2016-09-17-363","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.208Z","comments":true,"path":"api/articles/old_topic/2016-09-17-363.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"所谓的Redis LUA客户端有两种版本，一种就是本地可运行版本，还有一个版本是OpenResty的版本，下面介绍的这段Moonscript段代码是本地版的。 作者：糖果 candylab.moon 123456789redis = require &quot;redis&quo...","link":"","photos":[],"count_time":{"symbolsCount":662,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}