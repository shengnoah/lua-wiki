{"title":"MoonScript版的Ngx.Timer","uid":"05d6f9c12a393c22bb876b3b1fe14cf0","slug":"old_topic/2016-09-17-364","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.752Z","comments":true,"path":"api/articles/old_topic/2016-09-17-364.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>作者：糖果</p>\n<p>实际如果是直接调用ngx.timer的API，moonscript和lua的ngx.timer的函数写法差别不是很大。</p>\n<p>candylab.moon</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">handler = (fill, params)-&gt;</span><br><span class=\"line\">    ok, err = ngx.timer.at(<span class=\"number\">1</span>, handler, <span class=\"string\">&quot;params-data&quot;</span>)</span><br><span class=\"line\">    ngx.<span class=\"built_in\">log</span>(ngx.DEBUG, <span class=\"string\">&quot;ok:&quot;</span>, ok, <span class=\"string\">&quot; err:&quot;</span>, err)</span><br><span class=\"line\">         </span><br><span class=\"line\">ok, err = ngx.timer.at(<span class=\"number\">6</span>, handler, <span class=\"string\">&quot;params-data&quot;</span>)</span><br><span class=\"line\">   </span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ok <span class=\"keyword\">then</span></span><br><span class=\"line\">    ngx.<span class=\"built_in\">log</span>(ngx.ERR, <span class=\"string\">&quot;err:&quot;</span>, err)</span><br></pre></td></tr></table></figure>\n\n<p>candylab.lua</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> http = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;lapis.nginx.http&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> handler</span><br><span class=\"line\">handler = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(fill, params)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> ok, err = ngx.timer.at(<span class=\"number\">1</span>, handler, <span class=\"string\">&quot;params-data&quot;</span>)</span><br><span class=\"line\">  <span class=\"keyword\">return</span> ngx.<span class=\"built_in\">log</span>(ngx.DEBUG, <span class=\"string\">&quot;ok:&quot;</span>, ok, <span class=\"string\">&quot; err:&quot;</span>, err)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> ok, err = ngx.timer.at(<span class=\"number\">6</span>, handler, <span class=\"string\">&quot;params-data&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ok <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> ngx.<span class=\"built_in\">log</span>(ngx.ERR, <span class=\"string\">&quot;err:&quot;</span>, err)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>","text":"作者：糖果 实际如果是直接调用ngx.timer的API，moonscript和lua的ngx.timer的函数写法差别不是很大。 candylab.moon 123456789handler = (fill, params)-&gt; ok, err = ngx.timer.a...","link":"","photos":[],"count_time":{"symbolsCount":787,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"HiLua框架与MoonScript库的交互过程","uid":"e42217fa2cd64fc77d86460421fbfaca","slug":"old_topic/2016-09-17-360","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.752Z","comments":true,"path":"api/articles/old_topic/2016-09-17-360.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 上一篇是用.so作为框架的库，这是接上回，用MoonScript实现库。 在HiLua工程中，创建/libs/moon目录，建立MoonScript库代码，如下： HiLog.moon 1234class HiLog @log: =&gt; print(&quot;H...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"MoonScript与Simple.HTTP","uid":"ec499223d38cc05a19e8571945944a4c","slug":"old_topic/2016-09-17-362","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.752Z","comments":true,"path":"api/articles/old_topic/2016-09-17-362.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 MoonScript调用Lapis的Simple.http，其实调用的就是OpenResty的http的接口。 candylab.moon 123456http = require &quot;lapis.nginx.http&quot;body, status_co...","link":"","photos":[],"count_time":{"symbolsCount":503,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}