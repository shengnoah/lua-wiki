{"title":"Lapis框架如何“接受”和“返回”JSON数据","uid":"ab8b42f29fb5ba730495ad9d0a7a7b32","slug":"old_topic/2016-09-17-209","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.198Z","comments":true,"path":"api/articles/old_topic/2016-09-17-209.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>by 糖果</p>\n<p>Lapis可以定义Json格式的路由，Lapis本身，提供了JSON的解析机制，可以用json_params动作装饰器，想请求发过来的json数据，传self.parms变量中，代码如下：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> json_params = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;lapis.application&quot;</span>).json_params</span><br><span class=\"line\">app:<span class=\"built_in\">match</span>(<span class=\"string\">&quot;/json&quot;</span>, json_params(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(self)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">self</span>.params.ip</span><br><span class=\"line\"><span class=\"keyword\">end</span>))</span><br></pre></td></tr></table></figure>\n<p>用Curl模拟请求：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ curl \\</span><br><span class=\"line\">  -H &quot;Content-type: application/json&quot; \\</span><br><span class=\"line\">  -d &#x27;&#123;&quot;ip&quot;: &quot;127.0.0.1&quot;&#125;&#x27; \\</span><br><span class=\"line\">  &#x27;https://localhost:8080/json&#x27;</span><br></pre></td></tr></table></figure>\n<p>返回的JSON数据解析：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">HTML</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Lapis Page<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span>127.0.0.1<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>Lapis返回json数据一目了然，直接指定json关键字，然后赋予一个lua table的数据结构就好，如下：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> lapis = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;lapis&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">local</span> app = lapis.Application()</span><br><span class=\"line\"></span><br><span class=\"line\">app:get(<span class=\"string\">&quot;/&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"string\">&quot;Welcome to Lapis &quot;</span> .. <span class=\"built_in\">require</span>(<span class=\"string\">&quot;lapis.version&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">end</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">app:get(<span class=\"string\">&quot;/world&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> &#123; json = &#123; success = <span class=\"literal\">true</span>， ip=<span class=\"string\">&quot;127.0.0.1&quot;</span> &#125; &#125;</span><br><span class=\"line\"><span class=\"keyword\">end</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> app</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>","text":"by 糖果 Lapis可以定义Json格式的路由，Lapis本身，提供了JSON的解析机制，可以用json_params动作装饰器，想请求发过来的json数据，传self.parms变量中，代码如下： 1234local json_params = require(&quot;l...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"smbclient，ubuntu访问windows共享文件夹","uid":"f901c944f1965d8d412a5f9878199225","slug":"old_topic/2016-09-17-205","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.166Z","comments":true,"path":"api/articles/old_topic/2016-09-17-205.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"因为有些需求要让Linux通过samba协议访问windows的共享目录，所以做了一下连接的实验。 一.Samba安装 [code] sudo apt-get install samba sudo apt-get install samba-client sudo apt-get...","link":"","photos":[],"count_time":{"symbolsCount":618,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"setmetatable和__call","uid":"cec276ee8af804b9a2147b603fad4daa","slug":"old_topic/2016-09-17-210","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.177Z","comments":true,"path":"api/articles/old_topic/2016-09-17-210.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 网上找来一个很能说明__call用法的例子： 12345678910111213141516171819function f(tb, x, y) for k,v in pairs(tb) do print(k,v) end return x+y+tb.nendb = ...","link":"","photos":[],"count_time":{"symbolsCount":402,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}