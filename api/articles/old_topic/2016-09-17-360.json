{"title":"HiLua框架与MoonScript库的交互过程","uid":"e42217fa2cd64fc77d86460421fbfaca","slug":"old_topic/2016-09-17-360","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.169Z","comments":true,"path":"api/articles/old_topic/2016-09-17-360.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>作者：糖果</p>\n<p>上一篇是用.so作为框架的库，这是接上回，用MoonScript实现库。</p>\n<p>在HiLua工程中，创建/libs/moon目录，建立MoonScript库代码，如下：</p>\n<p>HiLog.moon</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">class HiLog\n    @log<span class=\"token punctuation\">:</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HiLog...\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"HiLog...\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>HiLog.lua</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> HiLog\n<span class=\"token keyword\">do</span>\n  <span class=\"token keyword\">local</span> _class_0\n  <span class=\"token keyword\">local</span> _base_0 <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token punctuation\">&#125;</span> \n  _base_0<span class=\"token punctuation\">.</span>__index <span class=\"token operator\">=</span> _base_0\n  _class_0 <span class=\"token operator\">=</span> <span class=\"token function\">setmetatable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    __init <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">end</span><span class=\"token punctuation\">,</span>\n    __base <span class=\"token operator\">=</span> _base_0<span class=\"token punctuation\">,</span>\n    __name <span class=\"token operator\">=</span> <span class=\"token string\">\"HiLog\"</span>\n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n    __index <span class=\"token operator\">=</span> _base_0<span class=\"token punctuation\">,</span>\n    __call <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>cls<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">...</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">local</span> _self_0 <span class=\"token operator\">=</span> <span class=\"token function\">setmetatable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> _base_0<span class=\"token punctuation\">)</span>\n      cls<span class=\"token punctuation\">.</span><span class=\"token function\">__init</span><span class=\"token punctuation\">(</span>_self_0<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">...</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> _self_0\n    <span class=\"token keyword\">end</span> \n  <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>  \n  _base_0<span class=\"token punctuation\">.</span>__class <span class=\"token operator\">=</span> _class_0\n  <span class=\"token keyword\">local</span> self <span class=\"token operator\">=</span> _class_0\n  self<span class=\"token punctuation\">.</span>log <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HiLog...\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"HiLog...\"</span>\n  <span class=\"token keyword\">end</span> \n  HiLog <span class=\"token operator\">=</span> _class_0\n  <span class=\"token keyword\">return</span> _class_0\n<span class=\"token keyword\">end</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>创建新工程与app:</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">hi project Test-HiLua\nhi app Test-HiLua<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>修改一下app.lua</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">require <span class=\"token string\">\"log\"</span>\n<span class=\"token keyword\">local</span> HiLog <span class=\"token operator\">=</span> require <span class=\"token string\">\"HiLog\"</span>\n<span class=\"token keyword\">local</span> Application <span class=\"token operator\">=</span> require <span class=\"token string\">\"orc\"</span>\napp <span class=\"token operator\">=</span> Application<span class=\"token punctuation\">.</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">:</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/hilua\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">,</span>id<span class=\"token punctuation\">)</span>\n    ret <span class=\"token operator\">=</span> HiLog<span class=\"token punctuation\">:</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   \n    ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span>\n    ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hilua'</span><span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">return</span> app<span class=\"token punctuation\">.</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>库可以用C写生成SO共享库，也可以用MoonScript翻译成Lua，然后与框架路由结合起<br />\n来，这种依赖就是纯调用依赖关联，尽量不产生数据关联。</p>\n<p><a href=\"https://www.candylab.net/hilua_moonscript_libs/\">原文地址：</a></p>\n<p><a href=\"https://github.com/shengnoah/hilua/tree/libs/libs/moon\" target=\"_blank\">源码地址：</a></p>\n","text":"作者：糖果 上一篇是用.so作为框架的库，这是接上回，用MoonScript实现库。 在HiLua工程中，创建/libs/moon目录，建立MoonScript库代码，如下： HiLog.moon class HiLog @log: => print(\"HiLog...\") re...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"LUA遍历所有Table变量元素与cjson.null的意义","uid":"49340cb296849c990c24a5280443ee37","slug":"old_topic/2016-09-17-359","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.195Z","comments":true,"path":"api/articles/old_topic/2016-09-17-359.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 Lapis使用JSON解析的代层库就是CJSON。 遍历Table变量的所有元素。 util.moon json_encodable &#x3D; (obj, seen&#x3D;&#123;&#125;) -&gt; switch type obj when &qu...","link":"","photos":[],"count_time":{"symbolsCount":"6.2k","symbolsTime":"6 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"MoonScript与ElasticSearch客户端","uid":"5f974a115cefd23be7d8b6092b3445d0","slug":"old_topic/2016-09-17-361","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.161Z","comments":true,"path":"api/articles/old_topic/2016-09-17-361.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 从Github上看，有一位叫做Dhaval Kapil老师完成了ElasticSearch for Lua的工作，另一位来自阿根廷的叫做Cristian Haunsen的老师，完成了ElasticSearch for Lapis的客户端程序写作工作,dhavalkap...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}