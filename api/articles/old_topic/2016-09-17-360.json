{"title":"HiLua框架与MoonScript库的交互过程","uid":"e42217fa2cd64fc77d86460421fbfaca","slug":"old_topic/2016-09-17-360","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.169Z","comments":true,"path":"api/articles/old_topic/2016-09-17-360.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>作者：糖果</p>\n<p>上一篇是用.so作为框架的库，这是接上回，用MoonScript实现库。</p>\n<p>在HiLua工程中，创建/libs/moon目录，建立MoonScript库代码，如下：</p>\n<p>HiLog.moon</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class HiLog</span><br><span class=\"line\">    @<span class=\"built_in\">log</span>: =&gt;</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;HiLog...&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;HiLog...&quot;</span></span><br></pre></td></tr></table></figure>\n<p>HiLog.lua</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> HiLog</span><br><span class=\"line\"><span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> _class_0</span><br><span class=\"line\">  <span class=\"keyword\">local</span> _base_0 = &#123; &#125; </span><br><span class=\"line\">  _base_0.<span class=\"built_in\">__index</span> = _base_0</span><br><span class=\"line\">  _class_0 = <span class=\"built_in\">setmetatable</span>(&#123;</span><br><span class=\"line\">    __init = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span> <span class=\"keyword\">end</span>,</span><br><span class=\"line\">    __base = _base_0,</span><br><span class=\"line\">    __name = <span class=\"string\">&quot;HiLog&quot;</span></span><br><span class=\"line\">  &#125;, &#123;</span><br><span class=\"line\">    <span class=\"built_in\">__index</span> = _base_0,</span><br><span class=\"line\">    <span class=\"built_in\">__call</span> = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(cls, ...)</span></span></span><br><span class=\"line\">      <span class=\"keyword\">local</span> _self_0 = <span class=\"built_in\">setmetatable</span>(&#123;&#125;, _base_0)</span><br><span class=\"line\">      cls.__init(_self_0, ...)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> _self_0</span><br><span class=\"line\">    <span class=\"keyword\">end</span> </span><br><span class=\"line\">  &#125;)  </span><br><span class=\"line\">  _base_0.__class = _class_0</span><br><span class=\"line\">  <span class=\"keyword\">local</span> <span class=\"built_in\">self</span> = _class_0</span><br><span class=\"line\">  <span class=\"built_in\">self</span>.<span class=\"built_in\">log</span> = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(self)</span></span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;HiLog...&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;HiLog...&quot;</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span> </span><br><span class=\"line\">  HiLog = _class_0</span><br><span class=\"line\">  <span class=\"keyword\">return</span> _class_0</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>创建新工程与app:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hi project Test-HiLua</span><br><span class=\"line\">hi app Test-HiLua</span><br></pre></td></tr></table></figure>\n<p>修改一下app.lua</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span> <span class=\"string\">&quot;log&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> HiLog = <span class=\"built_in\">require</span> <span class=\"string\">&quot;HiLog&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> Application = <span class=\"built_in\">require</span> <span class=\"string\">&quot;orc&quot;</span></span><br><span class=\"line\">app = Application.new()</span><br><span class=\"line\"></span><br><span class=\"line\">app:get(<span class=\"string\">&quot;/hilua&quot;</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(request,id)</span></span></span><br><span class=\"line\">    ret = HiLog:<span class=\"built_in\">log</span>()   </span><br><span class=\"line\">    ngx.say(ret)</span><br><span class=\"line\">    ngx.say(<span class=\"string\">&#x27;hilua&#x27;</span>) </span><br><span class=\"line\"><span class=\"keyword\">end</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> app.run()</span><br></pre></td></tr></table></figure>\n<p>库可以用C写生成SO共享库，也可以用MoonScript翻译成Lua，然后与框架路由结合起来，这种依赖就是纯调用依赖关联，尽量不产生数据关联。</p>\n<p><a href=\"https://www.candylab.net/hilua_moonscript_libs/\">原文地址：</a></p>\n<p><a href=\"https://github.com/shengnoah/hilua/tree/libs/libs/moon\" target=\"_blank\">源码地址：</a></p>\n","text":"作者：糖果 上一篇是用.so作为框架的库，这是接上回，用MoonScript实现库。 在HiLua工程中，创建/libs/moon目录，建立MoonScript库代码，如下： HiLog.moon 1234class HiLog @log: =&gt; print(&quot;H...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Django Guide","uid":"6621c44acdf5f08884e1627cc08cfbf8","slug":"old_topic/2016-09-17-36","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.205Z","comments":true,"path":"api/articles/old_topic/2016-09-17-36.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"给Django做一个索引。 Form http://www.djangobook.com/en/2.0/chapter07.html 打字少，功能实现快。 开发备忘录 1.创建空工程 django-admin.py startproject djproject 2.创建空应用 p...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"MoonScript与ElasticSearch客户端","uid":"5f974a115cefd23be7d8b6092b3445d0","slug":"old_topic/2016-09-17-361","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.161Z","comments":true,"path":"api/articles/old_topic/2016-09-17-361.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 从Github上看，有一位叫做Dhaval Kapil老师完成了ElasticSearch for Lua的工作，另一位来自阿根廷的叫做Cristian Haunsen的老师，完成了ElasticSearch for Lapis的客户端程序写作工作,dhavalkap...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}