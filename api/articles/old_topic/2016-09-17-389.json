{"title":"使用windump监控流量","uid":"2eb9778cfe15235d511c05b2278c1e5d","slug":"old_topic/2016-09-17-389","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.189Z","comments":true,"path":"api/articles/old_topic/2016-09-17-389.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>windump相关于linux和mac上的tcpdump，有些场景在windows平台上使用windump要比wireshark方便一些,wireshark是GUI形式的，还支持lua插件，有机会我们介绍wireshark的lua插件，windump是一个分析tcp/udp/icmp等协议监控的一个好工具，简单介绍一下使用，后期我们就是使用windump.exe这个命令行工具，分要我们应用服务器，分析我们的服务器承受压力的极限。</p>\n<p>1.显示出所以的网卡设备。-D可以列出本机所有的网卡设备，包括VPN或是虚拟机建立的虚拟网卡。</p>\n<p>windump.exe  -D</p>\n<ol start=\"2\">\n<li class=\"lvl-3\">\n<p>监听指定网卡。-i 后面紧跟数字序号，表示本地网卡对应的序号，用 -D显示出来的序号。</p>\n</li>\n</ol>\n<p>windump.exe -i 1</p>\n<p>-i 的后面跟的数字，就是本机网卡的序号名。</p>\n<ol start=\"3\">\n<li class=\"lvl-3\">\n<p>监听指定协议数据。udp的字样是我们指定监控udp协议的流量。</p>\n</li>\n</ol>\n<p>windump.exe -i 1 udp</p>\n<ol start=\"4\">\n<li class=\"lvl-3\">\n<p>监听指定端口数据。指定端口后就只监听流过这个端口的流量数据。</p>\n</li>\n</ol>\n<p>windump.exe -i 1 udp port 1234</p>\n<ol start=\"5\">\n<li class=\"lvl-3\">\n<p>监听指定主机的数据。指定IP只监听本机上和这个IP有关的数据包。</p>\n</li>\n</ol>\n<p>windump.exe -i 1 udp port 1234 and host 192.168.0.1</p>\n<p>6.写流量记录到文件中。我们把监听的数据包存起来，便于以后分析。</p>\n<p>windump.exe  -w cap.txt -i 1 udp port 1234 and host 192.168.0.1</p>\n<p>7.读取文本件的流量信息。-w存起来的数据不是明文的，需要用-F显示出正常的ACSII码，让人能看懂。</p>\n<p>windump -F cap.txt</p>\n<p>官方文档介绍的是最全的：</p>\n<p><a href=\"https://www.winpcap.org/windump/docs/manual.htm\">https://www.winpcap.org/windump/docs/manual.htm</a></p>\n","text":"windump相关于linux和mac上的tcpdump，有些场景在windows平台上使用windump要比wireshark方便一些,wireshark是GUI形式的，还支持lua插件，有机会我们介绍wireshark的lua插件，windump是一个分析tcp/udp/ic...","link":"","photos":[],"count_time":{"symbolsCount":810,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"使用Openresty编写WAF插件","uid":"12c80aa2a75d231f673b151b589c54e9","slug":"old_topic/2016-09-17-387","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.180Z","comments":true,"path":"api/articles/old_topic/2016-09-17-387.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"对于有的站点来说，除了一些上传文件的场景，基本上都是GET操作比较多，针对一些GET请求中存在的异常数据，可以在pipeline写一个小的WAF插件来拦截。 直接使用了X-WAF的规则文件： [ &#123;&quot;Id&quot;:26,&quot;RuleType&quo...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"graylog的sidercar与nxlog部署","uid":"88310665d32cdba1d5ff1f6f71acda67","slug":"old_topic/2016-09-17-390","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.207Z","comments":true,"path":"api/articles/old_topic/2016-09-17-390.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"graylog的sidercar与nxlog部署 1.去github上下载sidercar. 2.配置sidercar的配置文件。 server_url: http:&#x2F;&#x2F;192.168.0.3:9100&#x2F;api update_interval: 10...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}