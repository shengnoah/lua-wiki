{"title":"在安装nodeJS过程中，遇到的问题。","uid":"c7af08cb0e1504eafb75f03c0e63769a","slug":"old_topic/2016-09-17-90","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.202Z","comments":true,"path":"api/articles/old_topic/2016-09-17-90.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>作者：糖果</p>\n<p>1</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt-get install python-software-properties\nsudo add-apt-repository ppa:chris-lea&#x2F;node.js\nsudo apt-get update\nsudo apt-get install nodejs<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>2</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt-get install nodejs npm\n在安装nodejs的时候，就需要安装npm。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>3</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">express找不到依赖的解决办法。\nnpm install express -gd\nnpm install -d (选项D是安装所有相关的依赖)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>4</p>\n<p>找不到express命令的解决办法<br />\nexpress命令行和express分成独立两个部分，使用命令行，安装下面的内容。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo npm install -g express-generator@3（第三版）\nsudo npm install -g express-generator（第四版）<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>5找不到express模块的解决方法</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">export PATH&#x3D;”$HOME&#x2F;node&#x2F;bin:$PATH”\nexport NODE_PATH&#x3D;”$HOME&#x2F;node&#x2F;lib&#x2F;node_modules”<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>6用express创建的例子工程，不灵用curl监听不到，所以在Stackoverflow上找了一个简单的helloword的node.js例子，然后运行</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">node test.js\ncurl localhost:1337<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>测试通过，测试代码如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">var http &#x3D; require(&#39;http&#39;);\n\nhttp.createServer(function (req, res) &#123;\n    res.writeHead(200, &#123;&#39;Content-Type&#39;: &#39;text&#x2F;plain&#39;&#125;);\n    res.end(&#39;Hello World\\n&#39;);\n&#125;).listen(1337);\n\nconsole.log(&#39;Server running at http:&#x2F;&#x2F;localhost:1337&#x2F;&#39;);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","text":"作者：糖果 1 sudo apt-get install python-software-properties sudo add-apt-repository ppa:chris-lea&#x2F;node.js sudo apt-get update sudo apt-get ...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Django Backstage","uid":"d49fd4ef7fef560290ae6ae45970e981","slug":"old_topic/2016-09-17-89","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.150Z","comments":true,"path":"api/articles/old_topic/2016-09-17-89.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Django Backstage 使用virtualevn,uWSGI, nginx在网站上部署Django工程。早期的Django，运行应用很多都是和特定的网站相关的。为了确保应用和页面在站点上可重用，站点框架继承到Django中。 站在历史的角度上讲，Apache-modws...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Tenjin1.1.1(基于嵌入Python的快速全机能模版引擎)","uid":"a26e6182024b9cb41b1b957f9eda51b7","slug":"old_topic/2016-09-17-92","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.190Z","comments":true,"path":"api/articles/old_topic/2016-09-17-92.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"介绍 pyTenjin是一个非常快速的全机能模版引擎。可以嵌入到python模版文件中的语句和表达式里面。pyTenjin会把它转化成Python脚本并且评估它。 ！！友情提示！！ pyTenjin足够稳定 ，但是还是基于beta版本发布的。这就意味着未来API的式样在未来会修改...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}