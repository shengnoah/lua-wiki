{"title":"Lua获取网络时间","uid":"ac0402ecf46546727fdbca4cc5ec0bdf","slug":"old_topic/2016-09-17-275","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.175Z","comments":true,"path":"api/articles/old_topic/2016-09-17-275.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>作者：ani_di<br />\n版权所有，转载务必保留此链接 <a href=\"http://blog.csdn.net/ani_di\">http://blog.csdn.net/ani_di</a></p>\n<p>Lua获取网络时间<br />\n网络授时服务是一些网络上的时间服务器提供的时间，一般用于本地时钟同步。 授时服务有很多种，一般我们选择RFC-868。这个协议的工作流程是：（S代表Server，C代表Client）</p>\n<p>S: 检测端口37<br />\nU: 连接到端口37<br />\nS: 以32位二进制数发送时间<br />\nU: 接收时间<br />\nU: 关闭连接<br />\nS: 关闭连接<br />\n协议非常简单，用TCP连接上后，服务器直接把时间发送回来。发送的是从1900年1月1日午夜到现在的秒数。</p>\n<p>使用luasocket<br />\n实现的方案有很多种，Lua不一定是最简单的，选择只是出于个人兴趣。直接上代码吧</p>\n<hr />\n<h2 id=\"network-time-protocal-author-ani_di\"><a class=\"markdownIt-Anchor\" href=\"#network-time-protocal-author-ani_di\"></a> – Network Time Protocal<br />\n– Author: ani_di</h2>\n<p>源码：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">package<span class=\"token punctuation\">.</span>cpath <span class=\"token operator\">=</span> package<span class=\"token punctuation\">.</span>cpath <span class=\"token operator\">..</span> <span class=\"token string\">';D:\\\\tools\\\\Lua\\\\5.1\\\\clibs\\\\?.dll;?.dll'</span>\n<span class=\"token keyword\">local</span> socket <span class=\"token operator\">=</span> require <span class=\"token string\">\"socket.core\"</span>\n\nserver_ip <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">-- \"129.6.15.29\",</span>\n        <span class=\"token string\">\"132.163.4.101\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"132.163.4.102\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"132.163.4.103\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"128.138.140.44\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"192.43.244.18\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"131.107.1.10\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"66.243.43.21\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"216.200.93.8\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"208.184.49.9\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"207.126.98.204\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"207.200.81.113\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"205.188.185.33\"</span><span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">nstol</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">assert</span><span class=\"token punctuation\">(</span>str <span class=\"token keyword\">and</span> <span class=\"token operator\">#</span>str <span class=\"token operator\">==</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">local</span> t <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>str<span class=\"token punctuation\">:</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">local</span> n <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">for</span> k <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">#</span>t <span class=\"token keyword\">do</span>\n        n<span class=\"token operator\">=</span> n<span class=\"token operator\">*</span><span class=\"token number\">256</span> <span class=\"token operator\">+</span> t<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">return</span> n\n<span class=\"token keyword\">end</span>\n\n<span class=\"token comment\">-- get time from a ip address, use tcp protocl</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">gettime</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'connect '</span><span class=\"token punctuation\">,</span> ip<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">local</span> tcp <span class=\"token operator\">=</span> socket<span class=\"token punctuation\">.</span><span class=\"token function\">tcp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    tcp<span class=\"token punctuation\">:</span><span class=\"token function\">settimeout</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    tcp<span class=\"token punctuation\">:</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">,</span> <span class=\"token number\">37</span><span class=\"token punctuation\">)</span>\n    success<span class=\"token punctuation\">,</span> time <span class=\"token operator\">=</span> <span class=\"token function\">pcall</span><span class=\"token punctuation\">(</span>nstol<span class=\"token punctuation\">,</span> tcp<span class=\"token punctuation\">:</span><span class=\"token function\">receive</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    tcp<span class=\"token punctuation\">:</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> success <span class=\"token keyword\">and</span> time <span class=\"token keyword\">or</span> <span class=\"token keyword\">nil</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">nettime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> _<span class=\"token punctuation\">,</span> ip <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>server_ip<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n        time <span class=\"token operator\">=</span> <span class=\"token function\">gettime</span><span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> time <span class=\"token keyword\">then</span> \n            <span class=\"token keyword\">return</span> time\n        <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>代码原理不细说，非常简单。唯一值得一提的是socket库包含。最开始用的这句 require “socket”</p>\n<p>在解释器中表现很好，但在用C中调用会找不到相应的module。错误提示</p>\n<pre><code>no field package.preload['socket']\nno file '.\\socket.lua'\nno file 'F:\\Projects\\Lua\\nettime\\lua\\socket.lua'\nno file 'F:\\Projects\\Lua\\nettime\\lua\\socket\\init.lua'\nno file 'F:\\Projects\\Lua\\nettime\\socket.lua'\nno file 'F:\\Projects\\Lua\\nettime\\socket\\init.lua'\nno file 'D:\\tools\\Lua\\5.1\\lua\\socket.luac'\nno file '.\\socket.dll'\nno file '.\\socket51.dll'\nno file 'F:\\Projects\\Lua\\nettime\\socket.dll'\nno file 'F:\\Projects\\Lua\\nettime\\socket51.dll'\nno file 'F:\\Projects\\Lua\\nettime\\clibs\\socket.dll'\nno file 'F:\\Projects\\Lua\\nettime\\clibs\\socket51.dll'\nno file 'F:\\Projects\\Lua\\nettime\\loadall.dll'\nno file 'F:\\Projects\\Lua\\nettime\\clibs\\loadall.dll'.\n</code></pre>\n<p>网上也有好多类似的提问，大抵是没仔细看作者的Guide。显著的有这么一句</p>\n<p>The other two environment variables instruct the compatibility module to look for dynamic libraries and extension modules in the appropriate directories and with the appropriate filename extensions.&gt;</p>\n<p>LUAPATH=/?.lua;?.lua LUACPATH=/?.dll;?.dll</p>\n<p>至于&quot;socket.core&quot;，windows默认安装位于“\\socket\\core.dll”。</p>\n<p>C宿主调用</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;lua.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;lauxlib.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;lualib.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;Windows.h></span></span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span>lua_State<span class=\"token operator\">*</span> L<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> func<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span><span class=\"token operator\">*</span> utc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token function\">lua_getglobal</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> func<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">lua_pcall</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error Msg pcall %s.\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">lua_tostring</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">lua_isnumber</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"time should be a number\\n\"</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token operator\">*</span>utc <span class=\"token operator\">=</span> <span class=\"token function\">lua_tonumber</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">lua_pop</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">TimetToFileTime</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">time_t</span> t<span class=\"token punctuation\">,</span> LPFILETIME pft <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    LONGLONG ll <span class=\"token operator\">=</span> <span class=\"token function\">Int32x32To64</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token number\">10000000</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">116444736000000000</span><span class=\"token punctuation\">;</span>\n    pft<span class=\"token operator\">-></span>dwLowDateTime <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>DWORD<span class=\"token punctuation\">)</span> ll<span class=\"token punctuation\">;</span>\n    pft<span class=\"token operator\">-></span>dwHighDateTime <span class=\"token operator\">=</span> ll <span class=\"token operator\">>></span><span class=\"token number\">32</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n   lua_State<span class=\"token operator\">*</span> L <span class=\"token operator\">=</span> <span class=\"token function\">luaL_newstate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> utc <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">luaL_openlibs</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">luaL_loadfile</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> <span class=\"token string\">\"nettime.lua\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">lua_pcall</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Error Msg load %s.\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">lua_tostring</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span><span class=\"token string\">\"nettime\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>utc<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">time_t</span> tt <span class=\"token operator\">=</span> utc <span class=\"token operator\">-</span> <span class=\"token number\">2208988800L</span><span class=\"token punctuation\">;</span>\n        SYSTEMTIME st<span class=\"token punctuation\">;</span>\n        FILETIME ft<span class=\"token punctuation\">;</span>\n        <span class=\"token function\">TimetToFileTime</span><span class=\"token punctuation\">(</span>tt<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>ft<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">FileTimeToSystemTime</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>ft<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>st<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Today is: %d-%d-%d\\n\"</span><span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">.</span>wYear<span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">.</span>wMonth<span class=\"token punctuation\">,</span> st<span class=\"token punctuation\">.</span>wDay<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">SetSystemTime</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>st<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">puts</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No network!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span><span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">lua_close</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>糖果收集编辑</p>\n","text":"作者：ani_di 版权所有，转载务必保留此链接 http://blog.csdn.net/ani_di Lua获取网络时间 网络授时服务是一些网络上的时间服务器提供的时间，一般用于本地时钟同步。 授时服务有很多种，一般我们选择RFC-868。这个协议的工作流程是：（S代表Ser...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#network-time-protocal-author-ani_di\"><span class=\"toc-text\"> – Network Time Protocal\n– Author: ani_di</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"又见QT","uid":"92cca58992d4502022c1dbbf5585cfdb","slug":"old_topic/2016-09-17-274","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.149Z","comments":true,"path":"api/articles/old_topic/2016-09-17-274.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"MinGW https://sourceforge.net/projects/mingw/?source=top3_dlp_t5 PyQT5 https://riverbankcomputing.com/software/pyqt/download5 PyQT4 https://...","link":"","photos":[],"count_time":{"symbolsCount":512,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"微博API发送微博","uid":"a7777311d1e67a84d45b8c65389d0ce5","slug":"old_topic/2016-09-17-276","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.215Z","comments":true,"path":"api/articles/old_topic/2016-09-17-276.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"使用微博的API和SDK的其中的关键一步是取得token. 而取得token是需要通过oauth2认证才可以得到。 下面是一段取得token的代码逻辑： APP_KEY ='012345678' APP_SECRET = '0123456789101112131415161718...","link":"","photos":[],"count_time":{"symbolsCount":916,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}