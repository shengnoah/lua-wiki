{"title":"C调用LUA","uid":"4a5cc773e0399b5ad7bd2f2bfa7a3e83","slug":"old_topic/2016-09-17-393","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.169Z","comments":true,"path":"api/articles/old_topic/2016-09-17-393.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>通过一个简单的例子，看C是如何调用LUA的，这样将原有C处理数据的逻辑用LUA来做，省去了编译C的过程。</p>\n<p>代码，如下：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;lua.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;lauxlib.h></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;lualib.h></span></span>\nlua_State<span class=\"token operator\">*</span> L <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    L <span class=\"token operator\">=</span> <span class=\"token function\">lua_open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">luaL_openlibs</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">luaL_loadfile</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> <span class=\"token string\">\"test.lua\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token function\">lua_pcall</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">error</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> <span class=\"token string\">\"cannot run configuration file:%s\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">lua_tostring</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n     <span class=\"token keyword\">double</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">double</span> y <span class=\"token operator\">=</span> <span class=\"token number\">5.0</span><span class=\"token punctuation\">;</span>\n\n     <span class=\"token keyword\">double</span> z<span class=\"token punctuation\">;</span>\n\n    \n\n     <span class=\"token function\">lua_getglobal</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> <span class=\"token string\">\"f\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token function\">lua_pushnumber</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n     <span class=\"token function\">lua_pushnumber</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    \n     <span class=\"token function\">lua_pcall</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">//    printf(\"%f\\n\", f(1.0, 2.0));</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>编译参数：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">gcc   a6.c -I&#x2F;usr&#x2F;include&#x2F;lua5.1 -ldl -lm -llua5.1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>","text":"通过一个简单的例子，看C是如何调用LUA的，这样将原有C处理数据的逻辑用LUA来做，省去了编译C的过程。 代码，如下： #include &lt;stdio.h> #include &lt;string.h> #include &lt;lua.h> #include &lt;la...","link":"","photos":[],"count_time":{"symbolsCount":707,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"DIV+CSS","uid":"21c5fcf79f3b2d72db7be480f2522eaa","slug":"old_topic/2016-09-17-47","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.200Z","comments":true,"path":"api/articles/old_topic/2016-09-17-47.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"【概要】 选择Python做全栈解决方案，但是希望前段简单一些，可以向QML一样被重复的利用。选择用DIV+CSS控制页面的元素，一步步的构建社区。 将JQuery融入进来。本篇太简单，其他内容之后带入。 [code] #div1 { font-style: italic; te...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"二分查找","uid":"d843ced03f40ac612213952de4b63ad2","slug":"old_topic/2016-09-17-49","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.228Z","comments":true,"path":"api/articles/old_topic/2016-09-17-49.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"#include&lt;stdio.h> int bseek(int key) &#123; int array[10] = &#123;1,2,3,4,5,6,7,8,9,10&#125;; int low = 0; int high = (sizeof(array) / 4)...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"},{"name":"折半查找","slug":"折半查找","count":2,"path":"api/tags/折半查找.json"},{"name":"二分查找","slug":"二分查找","count":2,"path":"api/tags/二分查找.json"},{"name":"lua二分查找","slug":"lua二分查找","count":2,"path":"api/tags/lua二分查找.json"},{"name":"c","slug":"c","count":2,"path":"api/tags/c.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}