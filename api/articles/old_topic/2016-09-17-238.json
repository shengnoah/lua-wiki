{"title":"LVS负载均衡下的Openresty间的主从Redis同步","uid":"1e50e730134daba789397d1d6a4f834b","slug":"old_topic/2016-09-17-238","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.204Z","comments":true,"path":"api/articles/old_topic/2016-09-17-238.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>LVS负载均衡下的Openresty间的主从redis同步</p>\n<h3>正文：</h3> \n像一般在多台提供相同服务的Openresty服务前端会挂F5或是Ha,做为负载均衡，因为逻辑关系有时会用共享使用一份Redis，如果这时，使用Redis的主从模式，就可以很好共享一份Redis服务的数据，但从时间上讲，还是存在数据同步的延时的问题。\n<p>简单说一下Redis的主从设置：</p>\n<p>在redis安装的目录，或是etc下会找到redis的配置文件， redis.conf。只要在配置文件追加两句话，就可以配置主从模式。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">slaveof 192.168.0.0.1 6379\nmasterauth password<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>slaveof</strong> ：子句后指定主服务器的地址和端口号。<br />\n<strong>masterauth</strong> ： 后跟主服务器的登陆密码。</p>\n<p>设置后重起一下Redis：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">redis-server &#x2F;etc&#x2F;redis.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>分别登陆一下两台机器，简单的可以看一下数据是否同步。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">redis-cli\n&gt;keys *<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3>后记：</h3> \n<p>在某种情况下，同一上HA后的两个Openresty服务，很可能不在一个大楼的网络里，这种互备的情况，当一台服务器出现问题时，另一台可以作备机，因为平时网络和其它原因，redis主从同步也是有延迟的，这样可以把服务都只向一台Redis机器，另外一台只做数据备份,需要时和实际业务进行挂载。</p>\n","text":"LVS负载均衡下的Openresty间的主从redis同步 正文： 像一般在多台提供相同服务的Openresty服务前端会挂F5或是Ha,做为负载均衡，因为逻辑关系有时会用共享使用一份Redis，如果这时，使用Redis的主从模式，就可以很好共享一份Redis服务的数据，但从时间...","link":"","photos":[],"count_time":{"symbolsCount":595,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">正文：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">后记：</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Openresty使用Log_by_lua推送数据到Syslog服务器","uid":"a808962806fc68aa9d5c82e6e01d4f97","slug":"old_topic/2016-09-17-237","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.219Z","comments":true,"path":"api/articles/old_topic/2016-09-17-237.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"LOG_BY_LUA推送数据到Syslog服务器 正文： Openresy的resty_logger组件，提供了一种可能，就是在Openresty的Log阶段，推送数据到syslog-ng服务器上，Openresty的执行阶段，其实是一种虚拟化的逻辑业务划分，如果从TCP数据包的...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"用Lapis工程创建Openresty正向代理服务","uid":"20597ab06842fbc260e3af6d26f03675","slug":"old_topic/2016-09-17-239","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.194Z","comments":true,"path":"api/articles/old_topic/2016-09-17-239.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 正文： 利用Openresty服务创建一个正向代理服务器，最开始是想在Lapis创建的工程下直接创建，基本的配置如下面的代吗： 创建一个Lapis工程： lapis new 然后在配置文件里加入，正向代理的配置。 worker_processes $&#123;&#1...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}