{"title":"防止 SQL 注入","uid":"8da56c97a3037418bdb94143c7040828","slug":"old_topic/2016-09-17-324","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.158Z","comments":true,"path":"api/articles/old_topic/2016-09-17-324.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<h1>防止 SQL 注入</h1>\n<p>所谓 SQL 注入，就是通过把 SQL 命令插入到 Web 表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的 SQL 命令。具体来说，它是利用现有应用程序，将（恶意）的 SQL 命令注入到后台数据库引擎执行的能力，它可以通过在 Web 表单中输入（恶意）SQL 语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行 SQL 语句。比如先前的很多影视网站泄露 VIP 会员密码大多就是通过 Web 表单递交查询字符暴出的，这类表单特别容易受到 SQL 注入式攻击。</p>\n<h3 id=\"SQL-注入例子\">SQL 注入例子</h3>\n<p>下面给了一个完整的可复现的 SQL 注入例子，实际上注入的 SQL 语句写法有很多，下例是比较简单的。</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /test &#123;</span><br><span class=\"line\">    content_by_lua_block &#123;</span><br><span class=\"line\">        <span class=\"keyword\">local</span> mysql = <span class=\"built_in\">require</span> <span class=\"string\">&quot;resty.mysql&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> db, err = mysql:new()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> db <span class=\"keyword\">then</span></span><br><span class=\"line\">            ngx.say(<span class=\"string\">&quot;failed to instantiate mysql: &quot;</span>, err)</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">        db:set_timeout(<span class=\"number\">1000</span>) <span class=\"comment\">-- 1 sec</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">local</span> ok, err, errno, sqlstate = db:connect&#123;</span><br><span class=\"line\">            host = <span class=\"string\">&quot;127.0.0.1&quot;</span>,</span><br><span class=\"line\">            port = <span class=\"number\">3306</span>,</span><br><span class=\"line\">            database = <span class=\"string\">&quot;ngx_test&quot;</span>,</span><br><span class=\"line\">            user = <span class=\"string\">&quot;ngx_test&quot;</span>,</span><br><span class=\"line\">            password = <span class=\"string\">&quot;ngx_test&quot;</span>,</span><br><span class=\"line\">            max_packet_size = <span class=\"number\">1024</span> * <span class=\"number\">1024</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> ok <span class=\"keyword\">then</span></span><br><span class=\"line\">            ngx.say(<span class=\"string\">&quot;failed to connect: &quot;</span>, err, <span class=\"string\">&quot;: &quot;</span>, errno, <span class=\"string\">&quot; &quot;</span>, sqlstate)</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">        ngx.say(<span class=\"string\">&quot;connected to mysql.&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">local</span> res, err, errno, sqlstate =</span><br><span class=\"line\">            db:query(<span class=\"string\">&quot;drop table if exists cats&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> res <span class=\"keyword\">then</span></span><br><span class=\"line\">            ngx.say(<span class=\"string\">&quot;bad result: &quot;</span>, err, <span class=\"string\">&quot;: &quot;</span>, errno, <span class=\"string\">&quot;: &quot;</span>, sqlstate, <span class=\"string\">&quot;.&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">        res, err, errno, sqlstate =</span><br><span class=\"line\">            db:query(<span class=\"string\">&quot;create table cats &quot;</span></span><br><span class=\"line\">                     .. <span class=\"string\">&quot;(id serial primary key, &quot;</span></span><br><span class=\"line\">                     .. <span class=\"string\">&quot;name varchar(5))&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> res <span class=\"keyword\">then</span></span><br><span class=\"line\">            ngx.say(<span class=\"string\">&quot;bad result: &quot;</span>, err, <span class=\"string\">&quot;: &quot;</span>, errno, <span class=\"string\">&quot;: &quot;</span>, sqlstate, <span class=\"string\">&quot;.&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">        ngx.say(<span class=\"string\">&quot;table cats created.&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        res, err, errno, sqlstate =</span><br><span class=\"line\">            db:query(<span class=\"string\">&quot;insert into cats (name) &quot;</span></span><br><span class=\"line\">                     .. <span class=\"string\">&quot;values (\\&#x27;Bob\\&#x27;),(\\&#x27;\\&#x27;),(null)&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> res <span class=\"keyword\">then</span></span><br><span class=\"line\">            ngx.say(<span class=\"string\">&quot;bad result: &quot;</span>, err, <span class=\"string\">&quot;: &quot;</span>, errno, <span class=\"string\">&quot;: &quot;</span>, sqlstate, <span class=\"string\">&quot;.&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">        ngx.say(res.affected_rows, <span class=\"string\">&quot; rows inserted into table cats &quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;(last insert id: &quot;</span>, res.insert_id, <span class=\"string\">&quot;)&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">-- 这里有 SQL 注入（后面的 drop 操作）</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> req_id = <span class=\"string\">[[1&#x27;; drop table cats;--]]</span></span><br><span class=\"line\">        res, err, errno, sqlstate =</span><br><span class=\"line\">            db:query(<span class=\"built_in\">string</span>.<span class=\"built_in\">format</span>(<span class=\"string\">[[select * from cats where id = &#x27;%s&#x27;]]</span>, req_id))</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> res <span class=\"keyword\">then</span></span><br><span class=\"line\">            ngx.say(<span class=\"string\">&quot;bad result: &quot;</span>, err, <span class=\"string\">&quot;: &quot;</span>, errno, <span class=\"string\">&quot;: &quot;</span>, sqlstate, <span class=\"string\">&quot;.&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">local</span> cjson = <span class=\"built_in\">require</span> <span class=\"string\">&quot;cjson&quot;</span></span><br><span class=\"line\">        ngx.say(<span class=\"string\">&quot;result: &quot;</span>, cjson.encode(res))</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">-- 再次查询，table 被删</span></span><br><span class=\"line\">        res, err, errno, sqlstate =</span><br><span class=\"line\">            db:query(<span class=\"string\">[[select * from cats where id = 1]]</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> res <span class=\"keyword\">then</span></span><br><span class=\"line\">            ngx.say(<span class=\"string\">&quot;bad result: &quot;</span>, err, <span class=\"string\">&quot;: &quot;</span>, errno, <span class=\"string\">&quot;: &quot;</span>, sqlstate, <span class=\"string\">&quot;.&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">        db:set_keepalive(<span class=\"number\">10000</span>, <span class=\"number\">100</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其他变种，大家可以自行爬行搜索引擎了解。</p>\n<h3 id=\"OpenResty-中如何规避\">OpenResty 中如何规避</h3>\n<p>其实大家可以大概网络爬行一下看看如何解决 SQL 注入，可以发现实现方法很多，比如替换各种关键字等。在 OpenResty 中，其实就简单很多了，只需要对输入参数进行一层过滤即可。</p>\n<p>对于 MySQL ，可以调用 <code>ndk.set_var.set_quote_sql_str</code> ，进行一次过滤即可。</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- for MySQL</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> req_id = <span class=\"string\">[[1&#x27;; drop table cats;--]]</span></span><br><span class=\"line\">res, err, errno, sqlstate =</span><br><span class=\"line\">    db:query(<span class=\"built_in\">string</span>.<span class=\"built_in\">format</span>(<span class=\"string\">[[select * from cats where id = &#x27;%s&#x27;]]</span>,</span><br><span class=\"line\">    ndk.set_var.set_quote_sql_str(req_id)))</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> res <span class=\"keyword\">then</span></span><br><span class=\"line\">    ngx.say(<span class=\"string\">&quot;bad result: &quot;</span>, err, <span class=\"string\">&quot;: &quot;</span>, errno, <span class=\"string\">&quot;: &quot;</span>, sqlstate, <span class=\"string\">&quot;.&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n<p>如果恰巧你使用的是 PostgreSQL ，调用 <code>ndk.set_var.set_quote_pgsql_str</code> 过滤输入变量。读者这时候可以再次把这段代码放到刚刚的示例代码中，如果您可以得到下面的错误，恭喜您，以正确的姿势防止 SQL 注入。</p>\n<pre><code>bad result: You have an error in your SQL syntax; check the manual that\ncorresponds to your MySQL server version for the right syntax to use near\n'1\\'; drop table cats;--''' at line 1: 1064: 42000.\n</code></pre>\n","text":"防止 SQL 注入 所谓 SQL 注入，就是通过把 SQL 命令插入到 Web 表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的 SQL 命令。具体来说，它是利用现有应用程序，将（恶意）的 SQL 命令注入到后台数据库引擎执行的能力，它可以通过在 Web 表...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">防止 SQL 注入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#SQL-%E6%B3%A8%E5%85%A5%E4%BE%8B%E5%AD%90\"><span class=\"toc-text\">SQL 注入例子</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#OpenResty-%E4%B8%AD%E5%A6%82%E4%BD%95%E8%A7%84%E9%81%BF\"><span class=\"toc-text\">OpenResty 中如何规避</span></a></li></ol></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Mac OS X 平台安装","uid":"dbbe8ecea366b89ee238486a58b71f70","slug":"old_topic/2016-09-17-323","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.232Z","comments":true,"path":"api/articles/old_topic/2016-09-17-323.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"Mac OS X 平台安装 源码包准备 我们首先要在官网下载OpenResty的源码包。官网上会提供很多的版本，各个版本有什么不同也会有说明，我们可以按需选择下载。笔者选择下载的源码包 ngx_openresty-1.9.7.1.tar.gz。 相关库的安装 将这些相关库安装到系...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"输出响应体","uid":"9aa16bf014a426133910ab8bd80b8292","slug":"old_topic/2016-09-17-325","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.182Z","comments":true,"path":"api/articles/old_topic/2016-09-17-325.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"输出响应体 HTTP响应报文分为三个部分： 响应行 响应头 响应体 对于 HTTP 响应体的输出，在 OpenResty 中调用 ngx.say 或 ngx.print 即可。经过查看官方 wiki ，这两者都是输出响应体，区别是 ngx.say 会对输出响应体多输出一个 \\n ...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}