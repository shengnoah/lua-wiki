{"title":"从实现角度看Openresty + LUA = WAF","uid":"4b277b3bf21c49d9a15db633f740d15e","slug":"old_topic/2016-09-17-347","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.211Z","comments":true,"path":"api/articles/old_topic/2016-09-17-347.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"content":"<p>作者：糖果</p>\n<h2 id=\"1-WAF存在形态\">1.WAF存在形态</h2>\n<p>WAF就是WEB防火墙，Nginx Lua和Openresty的出现，让基于LUA开发的WAF更有可能。对所有会造成安全威胁的HTTP请求数据，都应该成为安全检查策略应该关注的内容，笼统上来讲OR<br>\nWAF的式样要求的输入数据，就是可以在WEB服务器端见到的所有的HTTP数据，而这些数据对<br>\nOpenResty这种WEB服务器来讲，几乎都是可见的。</p>\n<p>常见的WEB开发是不能关注所有的安全式样，比如XSS、SQL注入、CC等所有的这些涉及安全的功能需求，并且这些需求随着外部安全气象发生变化的，需要不断的更新策略，这些是安全共通业务而不是产品业务。</p>\n<p>基于大日志数据分析的WEB安全分析模块，是一种接近实时拦截，而不是准实时的安全防火墙机制。常见的OR(OpenResty)更多的是针对正则的实时拦截策略。基于LOG日志分析是一种异步的处理机制实时读取日志，不会直接对产品业务线的性能有太多的干扰，而基于OR(OpenResty)<br>\nLUA WAF大多数时是以代理的形式，串行的部署在正常的WEB业务前进行拦截的，是影响业务响应时间的，在应急事件响应中与日常安全防护过程中，这两种形式各有利弊。</p>\n<p>OpenResty + LUA = WAF目前的天花板，是带宽的上限和自身性能扩展的限制。</p>\n<h2 id=\"2-WAF需求与实现\">2.WAF需求与实现</h2>\n<p>从实现的角度，整体上可以把WAF看成是一个WEB请求数据的过滤器，在HTTP文本流中过滤威胁字符串和恶意访问模式。而策略是什么？就是定义， 对HTTP请求中的数据，按那些“关键字”<br>\n、“正则”等规则定义进行查找，然后做出预定的响应的描述。</p>\n<p>所以，对规则与响应动作的描述成为WAF实现的一个重点项目之一。</p>\n<p>把WAF分成几大块的话，有以下枝干机能：</p>\n<ol>\n<li class=\"lvl-3\">\n<p>数据取得与组织（Stream、Pipeline等）。</p>\n</li>\n<li class=\"lvl-3\">\n<p>规则与响应定义的解析(正则、JSON、YAML等)。</p>\n</li>\n<li class=\"lvl-3\">\n<p>响应动作的执行发生。（Nginx状态、IP Table）。</p>\n</li>\n</ol>\n<p>如果OR + LUA = WAF是以代理形式存在的， 那业务的WEB服务一般是放在UpStream上的。<br>\nWAF就是一个与否判断状态机， True：有威胁进行拦截。 False:无威胁放行请求给上游业务服务。</p>\n<p>对于最小化的开源WAF来讲，就是要实现上面提及的功能特性。软件实现的过程，就是把需求式样翻译成程序语言的过程，代码是对需求式样的一种计算机语言描述。Candy WAF<br>\n的由来就是为了对以上WAF式样进行程序语言实例化。</p>\n<p>有Dashboard就会有针对策略的维护操作， Dashboard的后台的产出是数据定义，所以后台的实现可以有更多解决方案选择，如Python、PHP、GO这些WEB开发语方和框架工具。</p>\n<p>对Openresty来说，OR抽象出了高级别的几个处理阶段，如下：</p>\n<p><img src=\"http://ww4.sinaimg.cn/mw690/6d579ff4gw1f3wljbt257j20rx0pa77c.jpg\" alt=\"Openresty执行阶段\"></p>\n<h2 id=\"3-WAF与一般WEB业务框架的差异\">3.WAF与一般WEB业务框架的差异</h2>\n<p>一般的OR + LUA的WEB框架，主要活劝处理阶段是在Content_by_lua阶段，主杆的框架功能构成部分，比如说路由、HTTP Request请求数据集、Response响应模板渲染等。而这些功能是一般WEB开发阶段需求的机能，和WAF存在部分的交集，但不同的地方是，WAF不只是在<br>\ncontent_by_lua阶段工作，其它常见的阶段比如说，在init阶段处理WAF数据初始化，在log阶段输出log日志等阶段都做处理。</p>\n<p>而如果WAF的功能是REST化的，那么WAF就需要WEB框架提供的JSON REST路由支持，这些功能可以用固定模式的硬编码在WAF与直接实现，也可以抽出一个简单的WEB框架独立完成，这样<br>\nWAF就主要集中处理安全策略相关的代码实现，被抽出成共通框架的WAF代码更精简，抽出的框架代码也可以被复用，如果写成固定的代码，更多的是可被编辑，而不是被独立的复用。</p>\n<h2 id=\"4-WAF处理数据的先后流程\">4.WAF处理数据的先后流程</h2>\n<h3 id=\"a-Init阶段\">a. Init阶段</h3>\n<p>a-1). 初始化解析策略规则定义。</p>\n<h3 id=\"b-Content阶段\">b. Content阶段</h3>\n<p>b-1). HTTP请求数据取得与数据结构定义组织，往往WAF更高级的业务处理抽象概念会在这个阶段产生（Stream、Pipeline等）。这个阶段的抽象更多的是类设计模式的抽象，而不是共通机能的抽出。</p>\n<p>b-2). 请求数据的过滤检索模式，模糊的看WAF是一个放大很多倍的大规模的字符串处理函数集合(Input、Filter等)。</p>\n<p>b-3). 拦截响应，WAF可以直接执行拦截动作，而可以产生成一个有意定义的数据操作定义让基它守护程序去实执行。</p>\n<h3 id=\"c-Log段段\">c. Log段段</h3>\n<p>c-1).  产生日志与流量监控数据。</p>\n<h2 id=\"5-WAF后台\">5.WAF后台</h2>\n<p>WAF后台的作用是对WAF策略定义的维护，包括新建、编辑、撤销等操作，可以做到与WAF数据相关，功能不依赖，Dashboard的输出，是WAF在Init阶段的输入，需要被初始化的策略数据。当然除此之外，还有其它功能，涉及状态显示、日志分析、分布调度。</p>\n<p>以上是一个简单的功能规划，还可以更多的发散扩展功能。</p>\n<p><a href=\"https://www.candylab.net/candy-waf/\">原文</a></p>\n<p>和我司实习生的工作日常<br>\n<img src=\"http://wx2.sinaimg.cn/mw690/805c3d47ly1fdarbe210ng20b4069b2f.gif\" alt=\"和我司实习生的工作日常\"></p>\n","text":"作者：糖果 1.WAF存在形态 WAF就是WEB防火墙，Nginx Lua和Openresty的出现，让基于LUA开发的WAF更有可能。对所有会造成安全威胁的HTTP请求数据，都应该成为安全检查策略应该关注的内容，笼统上来讲OR WAF的式样要求的输入数据，就是可以在WEB服务器...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-WAF%E5%AD%98%E5%9C%A8%E5%BD%A2%E6%80%81\"><span class=\"toc-text\">1.WAF存在形态</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-WAF%E9%9C%80%E6%B1%82%E4%B8%8E%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">2.WAF需求与实现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-WAF%E4%B8%8E%E4%B8%80%E8%88%ACWEB%E4%B8%9A%E5%8A%A1%E6%A1%86%E6%9E%B6%E7%9A%84%E5%B7%AE%E5%BC%82\"><span class=\"toc-text\">3.WAF与一般WEB业务框架的差异</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-WAF%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE%E7%9A%84%E5%85%88%E5%90%8E%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">4.WAF处理数据的先后流程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#a-Init%E9%98%B6%E6%AE%B5\"><span class=\"toc-text\">a. Init阶段</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#b-Content%E9%98%B6%E6%AE%B5\"><span class=\"toc-text\">b. Content阶段</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#c-Log%E6%AE%B5%E6%AE%B5\"><span class=\"toc-text\">c. Log段段</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-WAF%E5%90%8E%E5%8F%B0\"><span class=\"toc-text\">5.WAF后台</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MoonScript与Redis客户端","uid":"55c8ceefd620d530c7de11d61153ba84","slug":"old_topic/2016-09-17-346","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.233Z","comments":true,"path":"api/articles/old_topic/2016-09-17-346.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"所谓的Redis LUA客户端有两种版本，一种就是本地可运行版本，还有一个版本是OpenResty的版本，下面介绍的这段Moonscript段代码是本地版的。 作者：糖果 candylab.moon 123456789redis = require &quot;redis&quo...","link":"","photos":[],"count_time":{"symbolsCount":675,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"用RESTY-HTTP实现Graylog的Widget更新与查询","uid":"07e149df00baf09dc3d8d5e82a638745","slug":"old_topic/2016-09-17-350","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.177Z","comments":true,"path":"api/articles/old_topic/2016-09-17-350.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 MoonScript for GrayLog是之前写的一个基于Lapis与Simple HTTP的Graylog日志查询SDK，支持Stream查询，最近为了做自动化分析，加入了新的接口中调用功能，加入了对Dashboard widgets和更新与查询，通过这个程序，...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}