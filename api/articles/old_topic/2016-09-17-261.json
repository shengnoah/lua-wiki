{"title":"Logstash Filter解析Openrety的Log数据的简单配置","uid":"b47efc97ee4123d2f7e53bb4b25277cf","slug":"old_topic/2016-09-17-261","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.172Z","comments":true,"path":"api/articles/old_topic/2016-09-17-261.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>作者：糖果</p>\n<p>Logstash的配置文件位置:/etc/logstash, 而logstash本身的程序，可以放到别的定制的位置。</p>\n<p>一般性的Logstash配置有三个节:</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">input &#123;\nfile &#123;\n        path &#x3D;&gt; &quot;&#x2F;test&#x2F;log&#x2F;567&#x2F;*.log&quot;\n        type &#x3D;&gt; &quot;nginx&quot; # a type to identify those logs (will need this later)\n&#125;\n&#125;\n\nfilter &#123;\nif [type] &#x3D;&#x3D; &quot;nginx&quot; &#123; # this is where we use the type from the input section\n        grok &#123;\n                match &#x3D;&gt; [ &quot;message&quot;, &quot;COMBINEDNGINXLOG&quot; ]\n        &#125;\n&#125;\n&#125;\n\noutput &#123;\n        elasticsearch &#123;\n                hosts &#x3D;&gt; [&quot;127.0.0.1:9200&quot;]\n                index &#x3D;&gt; &quot;testdata&quot;\n&#125;\n\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>第一个节：<br />\ninput用于指定log文件的位置和类型。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">input &#123;\nfile &#123;\n        path &#x3D;&gt; &quot;&#x2F;test&#x2F;log&#x2F;567&#x2F;*.log&quot;\n        type &#x3D;&gt; &quot;nginx&quot; # a type to identify those logs (will need this later)\n&#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>第二节：<br />\nfilter指定log文件指段配置的Pattern，关键分词就靠这个。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">filter &#123;\nif [type] &#x3D;&#x3D; &quot;nginx&quot; &#123; # this is where we use the type from the input section\n        grok &#123;\n                match &#x3D;&gt; [ &quot;message&quot;, &quot;COMBINEDNGINXLOG&quot; ]\n        &#125;\n&#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>第三节：<br />\noutput指定log转换后的数据存储和位置，下面的设置是典型的输出到ES中。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">output &#123;\n        elasticsearch &#123;\n                hosts &#x3D;&gt; [&quot;127.0.0.1:9200&quot;]\n                index &#x3D;&gt; &quot;testdata&quot;\n&#125;\n\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>grok filter的官吏法可以参考这篇: <a href=\"http://lua.ren/topic/259/logstash-grok-debugger%E7%8E%AF%E5%A2%83%E6%9E%84%E5%BB%BA\">参考文</a></p>\n<p>COMBINEDNGINXLOG实际是没有这个pattern的，只有占位用的。</p>\n","text":"作者：糖果 Logstash的配置文件位置:/etc/logstash, 而logstash本身的程序，可以放到别的定制的位置。 一般性的Logstash配置有三个节: input &#123; file &#123; path &#x3D;&gt; &quot;&#x2F;te...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Logstash Grok Debugger环境构建","uid":"79e330aa651aa9f646dd55d111ec9437","slug":"old_topic/2016-09-17-259","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.201Z","comments":true,"path":"api/articles/old_topic/2016-09-17-259.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"编辑：糖果 【前记】 这个环境的搭建，主要为了用于分离lua_logger推送到syslog中的数据，解析后放到ES里，再对外提供RESTY接口。基本的工具就是这么使用，至于是具全的业务如何设计实现，根据实际情况来。比如，有的WAF系统不提供开发的API把block的数据暴露出来...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"用Logstash解析OpenResty的Resty.Logger推送的Syslog数据","uid":"f173cba451a203ccad448cb458769230","slug":"old_topic/2016-09-17-260","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.164Z","comments":true,"path":"api/articles/old_topic/2016-09-17-260.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 【前记】 用Resty.Logger给SyslogNG推送了几个测试的数据字段，如下： 192.168.0.1 68.180.228.95 GET &#x2F;feed Jun 28 16:12:19 中间用空格区分，下面是grok的测试，经测式这些模式的测试数据都能...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}