{"title":"如何在Lapis中给前端JS传送JSON数据对象","uid":"210155a39a8b6625ee1b84d14c0c7978","slug":"old_topic/2016-09-17-199","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.739Z","comments":true,"path":"api/articles/old_topic/2016-09-17-199.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>在Lua编写WEB程序的过程中， 有一种应用场景，是从KVDB,或是DB中取出JSON数据，或是直接定义JSON数据传给前端，用于显示展示，或是其它之用。</p>\n<p>为了减化说明，我们直接用一个不是从DB取得，而是自定义一个JSON数据， 返回给前端的模板。</p>\n<p>Lapis lua代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app:get(&quot;/return_json&quot;, function(self)</span><br><span class=\"line\">        --自定义一个最简单的JSON结构</span><br><span class=\"line\">        tmp_json= &#123;test=&quot;abc&quot;&#125;</span><br><span class=\"line\">        --对JSON进行编码</span><br><span class=\"line\">        self.tmp_json = json.encode(tmp_json)</span><br><span class=\"line\">        --渲染模板</span><br><span class=\"line\">        return &#123; render = &quot;json_template&quot; &#125;</span><br><span class=\"line\">end)</span><br></pre></td></tr></table></figure>\n\n\n<p>Javascript代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    //这个函数是对文本中含有的特殊符号进行转换处理</span><br><span class=\"line\">    function htmlspecialchars_decode(text) &#123;</span><br><span class=\"line\">        var replacements = Array(&quot;&amp;&quot;, &quot;&lt;&quot;, &quot;&gt;&quot;, &#x27;&quot;&#x27;, &quot;&#x27;&quot;);</span><br><span class=\"line\">        var chars = Array(&quot;&amp;&quot;, &quot;&lt;&quot;, &quot;&gt;&quot;, &quot;&quot;&quot;, &quot;&#x27;&quot;);</span><br><span class=\"line\">        for (var i = 0; i &lt; chars.length; i++) &#123;</span><br><span class=\"line\">            var re = new RegExp(chars[i], &quot;gi&quot;);</span><br><span class=\"line\">            if (re.test(text)) &#123;</span><br><span class=\"line\">                text = text.replace(re, replacements[i]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return text;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // 从etlua模板中，取出lapis传递的值。</span><br><span class=\"line\">    var tmp_json = &quot;&lt;%= tmp_json %&gt;&quot;</span><br><span class=\"line\">    // 转换特殊符号</span><br><span class=\"line\">    var html_tmp_json = htmlspecialchars_decode(tmp_json)</span><br><span class=\"line\"></span><br><span class=\"line\">    //  这是将一个普通的字符串，转换成Javascript的JSON对象</span><br><span class=\"line\">    var js_json = eval(html_tmp_json);</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n\n<p>整个JSON从Lua到JS对象过程是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lua table-&gt; lua json-&gt; js string-&gt;js object</span><br></pre></td></tr></table></figure>\n<p>中间特殊符号的处理，只是改变了内容，而没改变数据型态。</p>\n<p>这个例子是返回JSON数据，同时我们也可以传JSON数据给Lapis， 之后我们可能会简单介绍一下Lapis如何解释JSON参数。</p>\n","text":"在Lua编写WEB程序的过程中， 有一种应用场景，是从KVDB,或是DB中取出JSON数据，或是直接定义JSON数据传给前端，用于显示展示，或是其它之用。 为了减化说明，我们直接用一个不是从DB取得，而是自定义一个JSON数据， 返回给前端的模板。 Lapis lua代码： 12...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"《MacTalk 跨越边界》","uid":"d9f46b0969f93bdf774649548bb0ec97","slug":"old_topic/2016-09-17-193","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.739Z","comments":true,"path":"api/articles/old_topic/2016-09-17-193.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"对于池老师的关注是从他到锤子科技之后开始的。关于IT类的散文随笔也看过一些，比如《黑客与画家》，这次看池老师的文章也有类似的读阅体会。 池老师的文章，将IT技术与对其思考的理念杂揉到一起，形散而又主题突出。看到这本书，让人想起了编剧史航对王朔的评价，大概的意思是， 他是一个走在我...","link":"","photos":[],"count_time":{"symbolsCount":537,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"来至英国朋友的消息","uid":"8b705c23d4a474e218260c1eafaf275e","slug":"old_topic/2016-09-17-197","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.739Z","comments":true,"path":"api/articles/old_topic/2016-09-17-197.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"[Alert] Importance message for British nationals in Beijing The British Embassy Beijing has received information of possible threats against...","link":"","photos":[],"count_time":{"symbolsCount":610,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}