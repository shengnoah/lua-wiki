{"title":"Openresty的Lua定时器（计划任务）","uid":"1e5b544e537ce9e8013f8d5d976629a9","slug":"old_topic/2016-09-17-114","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.214Z","comments":true,"path":"api/articles/old_topic/2016-09-17-114.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>在系统中有一类需求是：周期性的执行某些任务，利用定时的timer去实现这种操作。</p>\n<p>Openresty为Lua提供了这种机制实现的API，通过设定timer来完成这种类似计划任务功能。</p>\n<p>下面，就是一个典型的Openresty的timer API的使用例子：</p>\n<p>实现思路是，通过一个timer设定调用一个函数，在函数内部还有一个循环递归的timer调用，调用函数自身，实现周期性的函数执行。</p>\n<p>–此函数的主要的目的是6秒钟的时间，对redis中某Key，进行数值累加。</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> handler\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">handler</span><span class=\"token punctuation\">(</span>premature<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">--定时执行一个redis的累加计数操作。</span>\n\nRedisCommon<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">--递归的timer，重复调用handler函数。</span>\n\n<span class=\"token keyword\">local</span> ok<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>timer<span class=\"token punctuation\">.</span><span class=\"token function\">at</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">,</span> <span class=\"token string\">\"params-data\"</span><span class=\"token punctuation\">)</span>\n\n        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ok:\"</span><span class=\"token punctuation\">,</span> ok<span class=\"token punctuation\">,</span> <span class=\"token string\">\" err:\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>–第一次设定timer，调用hander函数。</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> ok<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>timer<span class=\"token punctuation\">.</span><span class=\"token function\">at</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> handler<span class=\"token punctuation\">,</span> <span class=\"token string\">\"params-data\"</span><span class=\"token punctuation\">)</span>\n\nngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"ok:\"</span><span class=\"token punctuation\">,</span> ok<span class=\"token punctuation\">,</span> <span class=\"token string\">\" err:\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> ok <span class=\"token keyword\">then</span>\n\n        ngx<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ngx<span class=\"token punctuation\">.</span>ERR<span class=\"token punctuation\">,</span> <span class=\"token string\">\"err:\"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">end</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>timer一般用于，定时去服务器上取一些数据，或是定时扫描本地文件是否有变动，根据目地不同功能也不一样。</p>\n<p>作者：糖果</p>\n<p>PS:转载到其它平台请注明作者姓名及原文链接，请勿用于商业用途。</p>\n","text":"在系统中有一类需求是：周期性的执行某些任务，利用定时的timer去实现这种操作。 Openresty为Lua提供了这种机制实现的API，通过设定timer来完成这种类似计划任务功能。 下面，就是一个典型的Openresty的timer API的使用例子： 实现思路是，通过一个ti...","link":"","photos":[],"count_time":{"symbolsCount":744,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"《Lua游戏AI开发指南 --- C/C++中调用Lua函数》","uid":"878333f17299242d2af5675db3efb934","slug":"old_topic/2016-09-17-112","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.162Z","comments":true,"path":"api/articles/old_topic/2016-09-17-112.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"C/C++ calling Lua functions The sandbox hooks into the Lua script through three predefined global Lua functions: Sandbox_Initialize, Sandbox...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"MoonScript脚本开发简介","uid":"ae80098b451be0ee99995547baaebc08","slug":"old_topic/2016-09-17-115","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.221Z","comments":true,"path":"api/articles/old_topic/2016-09-17-115.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Coffescript是一种中间的脚本，可以把这种脚本翻译成JavaScript。而MoonScript，是可以翻译成lua语言的中间脚本。 本文简单的介绍的： 如何在VIM中，实现MoonScript语法高亮。 如何简单的编译MoonScript脚本。 1.安装MoonScri...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}