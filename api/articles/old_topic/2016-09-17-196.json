{"title":"LUA中实现面向对象","uid":"340b5f6f2b7fa198ce66c515bcec1223","slug":"old_topic/2016-09-17-196","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.212Z","comments":true,"path":"api/articles/old_topic/2016-09-17-196.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>我们引用云风大哥的代码：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> _class<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token keyword\">function</span> <span class=\"token function\">class</span><span class=\"token punctuation\">(</span>super<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">local</span> class_type<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\tclass_type<span class=\"token punctuation\">.</span>ctor<span class=\"token operator\">=</span><span class=\"token keyword\">false</span>\n\tclass_type<span class=\"token punctuation\">.</span>super<span class=\"token operator\">=</span>super\n\tclass_type<span class=\"token punctuation\">.</span>new<span class=\"token operator\">=</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">...</span><span class=\"token punctuation\">)</span> \n\t\t\t<span class=\"token keyword\">local</span> obj<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\t\t\t<span class=\"token keyword\">do</span>\n\t\t\t\t<span class=\"token keyword\">local</span> create\n\t\t\t\tcreate <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span><span class=\"token punctuation\">...</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> c<span class=\"token punctuation\">.</span>super <span class=\"token keyword\">then</span>\n\t\t\t\t\t\t<span class=\"token function\">create</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span>super<span class=\"token punctuation\">,</span><span class=\"token punctuation\">...</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token keyword\">end</span>\n\t\t\t\t\t<span class=\"token keyword\">if</span> c<span class=\"token punctuation\">.</span>ctor <span class=\"token keyword\">then</span>\n\t\t\t\t\t\tc<span class=\"token punctuation\">.</span><span class=\"token function\">ctor</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span><span class=\"token punctuation\">...</span><span class=\"token punctuation\">)</span>\n\t\t\t\t\t<span class=\"token keyword\">end</span>\n\t\t\t\t<span class=\"token keyword\">end</span>\n \n\t\t\t\t<span class=\"token function\">create</span><span class=\"token punctuation\">(</span>class_type<span class=\"token punctuation\">,</span><span class=\"token punctuation\">...</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">end</span>\n\t\t\t<span class=\"token function\">setmetatable</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span> __index<span class=\"token operator\">=</span>_class<span class=\"token punctuation\">[</span>class_type<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token keyword\">return</span> obj\n\t\t<span class=\"token keyword\">end</span>\n\t<span class=\"token keyword\">local</span> vtbl<span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\t_class<span class=\"token punctuation\">[</span>class_type<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>vtbl\n \n\t<span class=\"token function\">setmetatable</span><span class=\"token punctuation\">(</span>class_type<span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>__newindex<span class=\"token operator\">=</span>\n\t\t<span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span>\n\t\t\tvtbl<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>v\n\t\t<span class=\"token keyword\">end</span>\n\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n \n\t<span class=\"token keyword\">if</span> super <span class=\"token keyword\">then</span>\n\t\t<span class=\"token function\">setmetatable</span><span class=\"token punctuation\">(</span>vtbl<span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>__index<span class=\"token operator\">=</span>\n\t\t\t<span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span>k<span class=\"token punctuation\">)</span>\n\t\t\t\t<span class=\"token keyword\">local</span> ret<span class=\"token operator\">=</span>_class<span class=\"token punctuation\">[</span>super<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span>\n\t\t\t\tvtbl<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>ret\n\t\t\t\t<span class=\"token keyword\">return</span> ret\n\t\t\t<span class=\"token keyword\">end</span>\n\t\t<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">end</span>\n \n\t<span class=\"token keyword\">return</span> class_type\n<span class=\"token keyword\">end</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>调用</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">base_type<span class=\"token operator\">=</span><span class=\"token function\">class</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">-- 定义一个基类 base_type</span>\n \n<span class=\"token keyword\">function</span> base_type<span class=\"token punctuation\">:</span><span class=\"token function\">ctor</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\t<span class=\"token comment\">-- 定义 base_type 的构造函数</span>\n\t<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"base_type ctor\"</span><span class=\"token punctuation\">)</span>\n\tself<span class=\"token punctuation\">.</span>x<span class=\"token operator\">=</span>x\n<span class=\"token keyword\">end</span>\n \n<span class=\"token keyword\">function</span> base_type<span class=\"token punctuation\">:</span><span class=\"token function\">print_x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">-- 定义一个成员函数 base_type:print_x</span>\n\t<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n \n<span class=\"token keyword\">function</span> base_type<span class=\"token punctuation\">:</span><span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">-- 定义另一个成员函数 base_type:hello</span>\n\t<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello base_type\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>类继承</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">test<span class=\"token operator\">=</span><span class=\"token function\">class</span><span class=\"token punctuation\">(</span>base_type<span class=\"token punctuation\">)</span>\t<span class=\"token comment\">-- 定义一个类 test 继承于 base_type</span>\n \n<span class=\"token keyword\">function</span> test<span class=\"token punctuation\">:</span><span class=\"token function\">ctor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">-- 定义 test 的构造函数</span>\n\t<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test ctor\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n \n<span class=\"token keyword\">function</span> test<span class=\"token punctuation\">:</span><span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">-- 重载 base_type:hello 为 test:hello</span>\n\t<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello test\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>再次调用</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">a<span class=\"token operator\">=</span>test<span class=\"token punctuation\">.</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">-- 输出两行，base_type ctor 和 test ctor 。这个对象被正确的构造了。</span>\na<span class=\"token punctuation\">:</span><span class=\"token function\">print_x</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">-- 输出 1 ，这个是基类 base_type 中的成员函数。</span>\na<span class=\"token punctuation\">:</span><span class=\"token function\">hello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">-- 输出 hello test ，这个函数被重载了。 </span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><a href=\"http://blog.codingnow.com/cloud/LuaOO\">http://blog.codingnow.com/cloud/LuaOO</a></p>\n","text":"我们引用云风大哥的代码： local _class=&#123;&#125; function class(super) local class_type=&#123;&#125; class_type.ctor=false class_type.super=super clas...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"如何定制Nginx的Log输出格式","uid":"047b86aef4992c639f275b13c69e96b7","slug":"old_topic/2016-09-17-194","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.166Z","comments":true,"path":"api/articles/old_topic/2016-09-17-194.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"set $currentDate 'day'; access_by_lua ' ngx.var.currentDate = os.date(\"%Y-%m-%d\") '; access_log /logs/app.access.$currentDate.log app_log; 图...","link":"","photos":[],"count_time":{"symbolsCount":297,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Vanilla的Control返回必须是String类型","uid":"9973dbca8e7d2bdfff8377e05eaa65ee","slug":"old_topic/2016-09-17-195","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.174Z","comments":true,"path":"api/articles/old_topic/2016-09-17-195.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"这是今天社区里的一位朋友遇到的问题， Control最后return回去的数据是一个table类型，而不是一个字符串，这时候Vanilla报错了。 社区里朋友的代码，如下： function ResController:fetchData() local hc = http:ne...","link":"","photos":[],"count_time":{"symbolsCount":692,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}