{"title":"ES（Elasticsearch）常用操作与Python客户端","uid":"e623d764e660785c48cbd0cf5044deb0","slug":"old_topic/2016-09-17-232","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.232Z","comments":true,"path":"api/articles/old_topic/2016-09-17-232.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>ES常用操作</p>\n<p>之前老板本的ES使用的创建索引的指令已经失效了。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">\ncurl -X PUT &#39;http:&#x2F;&#x2F;127.0.0.1:9200&#x2F;testcase&#x2F;&#39; -d &#39;\n        index:\n            number_of_shards:3\n            number_of_replicas:2\n&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>索性就不创建索引，直接插入数据， ES不用像关系型数据库那样，需要在插插入数据前，先定义数据库表结构，没有create table的过程。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl -X POST http:&#x2F;&#x2F;127.0.0.1:9200&#x2F;testcase&#x2F;case&#x2F;1 -d  &#39;&#123;&quot;phone&quot;:&quot;15811111111&quot; ,&quot;identity&quot;:&quot;xxx&quot;, &quot;credit&quot;:&quot;xxx&quot;&#125;&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>输出结果：</p>\n<p>{“_index”:“testcase”,“_type”:“case”,“_id”:“1”,“_version”:4,“_shards”:{“total”:2,“successful”:1,“failed”:0},“created”:false}</p>\n<p>读出的方式没有变化：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl -X GET http:&#x2F;&#x2F;localhost:9200&#x2F;testcase&#x2F;case&#x2F;1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>输出结果：<br />\n{“_index”:“testcase”,“_type”:“case”,“_id”:“1”,“_version”:2,“found”:true,“_source”:{“phone”:“15811111111” ,“identity”:“xxx”, “credit”:“xxx”}}</p>\n<p>ES的Python操作库：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">from elasticsearch import Elasticsearch\n\n#与ES建立连接\nes &#x3D; Elasticsearch(&#39;127.0.0.1:9200&#39;)\n\n#创建索引\nes.indices.create(index&#x3D;&#39;testcase&#39;, ignore&#x3D;400)\n\n\n#向索引中插入一条数据\nes.index(index&#x3D;&quot;testcase&quot;, doc_type&#x3D;&quot;test-type&quot;, id&#x3D;1, body&#x3D;&#123;&quot;phone&quot;:&quot;15812345678&quot; ,&quot;identity&quot;:&quot;789&quot;, &quot;credit&quot;:&quot;efg&quot;&#125;)\n\n\n#取得一条数据，按ID号\nes.get(index&#x3D;&quot;testcase&quot;, doc_type&#x3D;&quot;test-type&quot;, id&#x3D;1)\n[&#39;source&#39;]\n\n#刷新数据\nes.indices.refresh(index&#x3D;&quot;testcase&quot;)\n\n#按条件检索记录\nres &#x3D; es.search(index&#x3D;&#39;testcase&#39;)\n\nres &#x3D; es.search( index&#x3D;&#39;testcase&#39;, doctype&#x3D;&#39;test-type&#39;, body&#x3D;&#123; &#39;query&#39;: &#123; &#39;match&#39;: &#123; &#39;credit&#39;: &#39;abc&#39; &#125; &#125;&#125;)\n\n#检索所有数据\nres &#x3D; es.search(index&#x3D;&quot;testcase&quot;, body&#x3D;&#123;&quot;query&quot;:&#123;&quot;match_all&quot;:&#123;&#125;&#125;&#125;) \n\n#按条件检索\nres &#x3D; es.search( index&#x3D;&#39;testcase&#39;, body&#x3D;&#123; &#39;query&#39;: &#123; &#39;match&#39;: &#123; &#39;phone&#39;: &#39;10086&#39; &#125; &#125;&#125;)\n\n#统计记录个数\nres[&#39;hits&#39;][&#39;total&#39;]<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>另外，通过PYES库，也可以操作数据。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">from pyes.connection import connect\nfrom pyes import *\nfrom pyes.query import *\nfrom pyes.es import ResultSet\nfrom pyes.connection import connect\nc &#x3D; connect(servers&#x3D;[&#39;127.0.0.1:9200&#39;])\n\nmyFilter &#x3D; TermFilter(&#39;phone&#39;, &#39;123&#39;)\n\nq &#x3D; FilteredQuery(MatchAllQuery(), myFilter).search()\nmymodel &#x3D; lambda x,y:y\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","text":"ES常用操作 之前老板本的ES使用的创建索引的指令已经失效了。 curl -X PUT &#39;http:&#x2F;&#x2F;127.0.0.1:9200&#x2F;testcase&#x2F;&#39; -d &#39; index: number_of_shards:3...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"如何在Lapis中响应POST,GET方法","uid":"2bf41dddbaf54ce129f68a67d1688ceb","slug":"old_topic/2016-09-17-230","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.171Z","comments":true,"path":"api/articles/old_topic/2016-09-17-230.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"by 糖果 How do I respond to GET, POST, DELETE or other HTTP verbs? 如何响应GET,, POST, DELETE等动作。 The respond_to action decorator function gives a...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Paloalto的Log数据推送思路与Syslog-NG服务使用与配置","uid":"cb434518329140d52cda782e9eb061d5","slug":"old_topic/2016-09-17-234","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.182Z","comments":true,"path":"api/articles/old_topic/2016-09-17-234.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"前言： 对于Log数据集中收集管理来说，Syslog服务的重要性不言而喻。比如在平时，Openresty就吐出很多log数据，对这些数据进行集中，可以对积累的数据进行分析，从中找到很多有价值的信息。 像paloalto这种设备，可以根据定制化的策略规则产生的数据，对应不同机器的不...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}