{"title":"LUA模拟面向对象：类与对象","uid":"85a31f98ce1faec97b54316baed59b3d","slug":"old_topic/2016-09-17-180","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.151Z","comments":true,"path":"api/articles/old_topic/2016-09-17-180.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>首先还是向大家介绍一下国产LUA框架Vanilla。这次我们来看看Vanilla中如何用Lua 模拟面向对象编程。实现主要是使用lua的setemetatable特性来实现的。下面程序大体的处理流程是：</p>\n<p>类和对象创建流程：<br>\n1.创建一个Controller在类模板程序。<br>\n2.在Controller:new方法里，创建返回一个实例对象instance(lua table)，对象使用Controller的函数接口，做为对象实例产生的“类”模板。<br>\n3.使用new方法的形参，传递新建立对象的属性数据，成员变量。</p>\n<p>[code]<br>\nlocal Controller = {}</p>\n<p>function Controller:new(app_config, tst_val)<br>\nlocal instance = {<br>\napp_config = app_config,<br>\ntst_val = tst_val<br>\n}<br>\nsetmetatable(instance, {__index = self})<br>\nreturn instance<br>\nend</p>\n<p>function Controller:display(view_tpl, values)<br>\nend</p>\n<p>function Controller:getTestField()<br>\nreturn self.tst_val<br>\nend</p>\n<p>return Controller<br>\n[/code]</p>\n<p>测试类文件的流程：<br>\n1.用require引入contorller类定义文件。<br>\n2.创建对象初始化要使用的数据结构：config, val。<br>\n3.调用Controller类模板的new方法，创建新的对象实例，传入需要形参。<br>\n4.使用新创建的对象实例的getTestFiled()接口方法，返回我们在第三步传入的测试字符串：“test value”<br>\n5.输出返回值，确认是否与传入的数据一致。</p>\n<p>[code]<br>\nController = require “controller”</p>\n<p>local config = { ip=“127.0.0.1”, port=“8080” }<br>\nlocal val = “test value”</p>\n<p>local obj_instance = Controller:new(config, val)<br>\nlocal ret = obj_instance:getTestField()<br>\nprint(ret)</p>\n<p>[/code]</p>\n<p>作者：糖果</p>\n<p>PS:转载到其它平台请注明作者姓名及原文链接，请勿用于商业用途。</p>\n<p><a href=\"https://github.com/idevz/vanilla\">https://github.com/idevz/vanilla</a></p>\n","text":"首先还是向大家介绍一下国产LUA框架Vanilla。这次我们来看看Vanilla中如何用Lua 模拟面向对象编程。实现主要是使用lua的setemetatable特性来实现的。下面程序大体的处理流程是： 类和对象创建流程： 1.创建一个Controller在类模板程序。 2.在C...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua源码赏析","uid":"a63cff28e964bdf4acd74377beb1b3f4","slug":"old_topic/2016-09-17-179","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.183Z","comments":true,"path":"api/articles/old_topic/2016-09-17-179.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"Lua源码赏析 ","link":"","photos":[],"count_time":{"symbolsCount":8,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Tup与Moonscript自动编译","uid":"72fc9906b7ade28d0ec3b847f7af3a98","slug":"old_topic/2016-09-17-183","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.223Z","comments":true,"path":"api/articles/old_topic/2016-09-17-183.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"tup可以监控文件变动的，再执行相应有执行动作。可以设定tupfile规则，当监控目录中的文件发生变化的时候，实时执行编译脚本，只要文件有改动，然后openresty服务会reload文件，刷新一下url就可以看到新的变动结果（LUA）。 安装TUP首先要在Linux上安装FUS...","link":"","photos":[],"count_time":{"symbolsCount":886,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}