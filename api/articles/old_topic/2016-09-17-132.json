{"title":"LUA如何遍历返回的JSON数据","uid":"222b2df1d56a571ace7dc7573b0f68fd","slug":"old_topic/2016-09-17-132","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.153Z","comments":true,"path":"api/articles/old_topic/2016-09-17-132.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>作者：糖果</p>\n<p>代码如下：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">function</span> <span class=\"token function\">get_json_key</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> key <span class=\"token keyword\">then</span>\n                <span class=\"token keyword\">return</span>\n        <span class=\"token keyword\">end</span>\n\n        <span class=\"token keyword\">local</span> json_var <span class=\"token operator\">=</span> client<span class=\"token punctuation\">:</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> json_var <span class=\"token keyword\">then</span>\n                <span class=\"token keyword\">return</span>\n        <span class=\"token keyword\">end</span>\n\n        <span class=\"token keyword\">local</span> var <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>json_var<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> var\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">local</span> list <span class=\"token operator\">=</span> <span class=\"token function\">get_json_key</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"temp_xxx_key\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">local</span> tmp_ip <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> ip <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">local</span> new_flg <span class=\"token operator\">=</span> <span class=\"token keyword\">true</span>\n        <span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> var <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n                <span class=\"token keyword\">if</span> var<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> ip <span class=\"token keyword\">then</span>\n                  new_flg <span class=\"token operator\">=</span> <span class=\"token keyword\">false</span>\n                  <span class=\"token keyword\">break</span>\n                <span class=\"token keyword\">end</span>\n        <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>值得注意的一点是，lua的json库不是唯一，有json,cjosn,josnrpc等，本篇使用的标标准的用luarocks安装的json库，不同的库调用方式也是不一样的。</p>\n<p>下面是一位网友的问题：<br />\n遍历所有的table元素。</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">fc_info <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"daytext\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Cloudy\"</span><span class=\"token punctuation\">&#125;</span>，<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"daytext\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Cloudy\"</span><span class=\"token punctuation\">&#125;</span>，<span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"daytext\"</span><span class=\"token punctuation\">:</span><span class=\"token string\">\"Cloudy\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">]</span>\n\n\n<span class=\"token keyword\">local</span> data <span class=\"token operator\">=</span> cjson<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>sampleJson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">local</span> length <span class=\"token operator\">=</span> table<span class=\"token punctuation\">.</span><span class=\"token function\">getn</span><span class=\"token punctuation\">(</span>fc_info<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>length <span class=\"token keyword\">do</span>\n\t\t\t\t<span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"daytext=====\"</span><span class=\"token operator\">..</span>fc_info<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"daytext\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\t\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","text":"作者：糖果 代码如下： function get_json_key(key) if not key then return end local json_var = client:get(key) if not json_var then return end local var...","link":"","photos":[],"count_time":{"symbolsCount":942,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"},{"name":"lua json","slug":"lua-json","count":1,"path":"api/tags/lua-json.json"},{"name":"lua循环","slug":"lua循环","count":1,"path":"api/tags/lua循环.json"},{"name":"lua循环遍历","slug":"lua循环遍历","count":1,"path":"api/tags/lua循环遍历.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"LUA通过授权方式登录Redis","uid":"d4821869c1f22a5f8395c793ca14a30c","slug":"old_topic/2016-09-17-131","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.226Z","comments":true,"path":"api/articles/old_topic/2016-09-17-131.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 require \"redis\" local redis = require 'redis' local client = redis.connect('127.0.0.1', 6379) local auth_flg = client:auth(\"这里是你的密码\") ...","link":"","photos":[],"count_time":{"symbolsCount":210,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"普通用户使用SUDO安装程序","uid":"440f944a15eacd750d61d670fceb563d","slug":"old_topic/2016-09-17-130","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.218Z","comments":true,"path":"api/articles/old_topic/2016-09-17-130.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"1.添加用户 可以用adduser和useradd来添加用户，用userdel来删除用户。 最简单的命令： sudo adduser test 会自动同名组，创建/home/test/，从etc/skel/复制文件，并设定密码和相关初始身份信息 原始一点的命令： sudo use...","link":"","photos":[],"count_time":{"symbolsCount":869,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}