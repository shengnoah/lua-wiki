{"title":"使用Pages服务创建静态博客(上)","uid":"a8389061bbd1e9023a83242f7e76acdb","slug":"old_topic/2016-09-17-215","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.159Z","comments":true,"path":"api/articles/old_topic/2016-09-17-215.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>作者：糖果</p>\n<p>Coding.net同样提供了类似github的pages的功能， 这样就可以使用pages服务创建静态博客。</p>\n<h3>创建步骤：</h3> \n<ol>\n<li class=\"lvl-3\">\n<p>配置本地git环境。</p>\n</li>\n<li class=\"lvl-3\">\n<p>本地创建目录结构和静态文件。</p>\n</li>\n<li class=\"lvl-3\">\n<p>初始化本地目录为git工程，创建本地分支，并上传文件。</p>\n</li>\n<li class=\"lvl-3\">\n<p>启动配置coding上的pages，绑定域名。</p>\n</li>\n<li class=\"lvl-3\">\n<p>域名服务解析。</p>\n</li>\n<li class=\"lvl-3\">\n<p>确认解析。</p>\n</li>\n</ol>\n<p>下面是对具体细节的说明。</p>\n<h3>1.配置本地基本的git环境。</h3> \n<h4>1.1.生成公钥。</h4> \n用你登陆coding.net的邮箱账号生成一个公钥。\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ssh-keygen <span class=\"token parameter variable\">-t</span> rsa <span class=\"token parameter variable\">-b</span> <span class=\"token number\">4096</span> <span class=\"token parameter variable\">-C</span> <span class=\"token string\">\"your_email@example.com\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在导航上选择:设置-&gt;部署公钥-&gt;点击这里：</p>\n<h4>1.2.复制pub.key到coding.net的设置面板上。</h4> \n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd ~&#x2F;.ssh\nvim id_rsa.pub<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n将id_rsa.pub的内容复到coding.net的公钥控制面板里。\n图片：jjkkkkjjjjjjj\n<img src=\"http://orchina-blog.stor.sinaapp.com/1455522406.png\" alt=\"a.png\" /> \n<p>重新连接一下。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">github用这个测试\nssh -T git@githb.com\ncoding用下面的测试\nssh -T git@git.coding.net<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h4>1.3.设置一下用户名和邮箱。</h4> \n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git config --user.name XXX\ngit config --user.email XXX<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3>2.本地创建目录结构和静态文件。</h3> \n 我们在本地创建一个目录。\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkdir moonscript\nvim index.html<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n将下面的内容贴到文件里：\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n     <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Moonscript<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>Moonscript<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n   <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3>3.初始化本地目录为git工程，创建本地分支，并上传文件。</h3> \n<h4>3.1 初始化本地git工程。</h4> \n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git init\ngit add index.html\ngit commit -m&#39;init&#39;\n\ngit remote add origin git@git.coding.net:&#123;user_name&#125;&#x2F;&#123;project_name&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>{user_name}/{project_name}为你的coding.net账户名对应在coding.net上的git工程。</p>\n<h4>3.2.创建分支</h4> \n我们在此处创建一个分支，在之后开启pages服务时，指定从这个分支下取代码进行部署。\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git checkout -b coding-pages<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4>3.3.上传代码。</h4> \n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git push origin coding-pages<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3>4.启动配置coding上的pages，绑定域名。</h3> \n<p>图片：b.png<br />\n<img src=\"http://orchina-blog.stor.sinaapp.com/1455522472.png\" alt=\"b.png\" /></p>\n<p>在导航上选择:代码-&gt;Page服务-&gt;绑定一个自定义的域名:<br />\n绑定了四个域名。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;moonscript.cn\nhttp:&#x2F;&#x2F;moonscript.xyz\nhttp:&#x2F;&#x2F;www.moonscript.cn\nhttp:&#x2F;&#x2F;www.moonscript.xyz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3>5.域名服务解析。</h3> \n<p>在域名服务商那里，将域名CNAME解析到，coding的pages服务的二级域名。<br />\n图片：c.png<br />\n<img src=\"http://orchina-blog.stor.sinaapp.com/1455522484.png\" alt=\"c.png\" /></p>\n<h3>6.确认解析。</h3> \n我们确认一下域名，是否被正常解析了，在浏览器中输入域名地址：\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">http:&#x2F;&#x2F;moonscript.cn\nhttp:&#x2F;&#x2F;moonscript.xyz\nhttp:&#x2F;&#x2F;www.moonscript.cn\nhttp:&#x2F;&#x2F;www.moonscript.xyz<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>图片：d.png<br />\n<img src=\"http://orchina-blog.stor.sinaapp.com/1455522446.png\" alt=\"d.png\" /></p>\n<p>作者：糖果<br />\nPS:转载到其它平台请注明作者姓名及原文链接，请勿用于商业用途。<br />\nLUA.REN<br />\n<a href=\"http://www.lua.ren\">http://www.lua.ren</a></p>\n<p>官方文档：<br />\n<a href=\"https://coding.net/help/doc/pages/index.html\">https://coding.net/help/doc/pages/index.html</a></p>\n","text":"作者：糖果 Coding.net同样提供了类似github的pages的功能， 这样就可以使用pages服务创建静态博客。 创建步骤： 配置本地git环境。 本地创建目录结构和静态文件。 初始化本地目录为git工程，创建本地分支，并上传文件。 启动配置coding上的pages，...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">创建步骤：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">1.配置本地基本的git环境。</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">1.1.生成公钥。</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">1.2.复制pub.key到coding.net的设置面板上。</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">1.3.设置一下用户名和邮箱。</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">2.本地创建目录结构和静态文件。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">3.初始化本地目录为git工程，创建本地分支，并上传文件。</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">3.1 初始化本地git工程。</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">3.2.创建分支</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">3.3.上传代码。</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">4.启动配置coding上的pages，绑定域名。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">5.域名服务解析。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">6.确认解析。</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"使用Pages服务创建静态博客(下)---部署Jekyll静态站","uid":"708c3ab643b3760bed43ade6e846877c","slug":"old_topic/2016-09-17-217","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.206Z","comments":true,"path":"api/articles/old_topic/2016-09-17-217.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 上一篇我们在Coding.net上部署了Pages服务，但是展示的页面比较单一，这次我们使用Jekyll工程生成一个相对完整的静态网站。 概要步骤如下： 1.安装较新的Ruby开发环境。 2.安装Jekyll。 3.创建工程。 4.上传代码。 5.确认站点。 1.安装...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Luabit的位运算简介","uid":"b420dcba79befee8d1737be19f072a96","slug":"old_topic/2016-09-17-218","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.199Z","comments":true,"path":"api/articles/old_topic/2016-09-17-218.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 Luabit的位运算 Lua提供了bit库，可以对变量数据进行位运算，在某些应有场景，我们得确需要在lua中对数据进行位移，或是进行“与，或，非”，进制转换等操作。 例如有这么一种较典型的情况，我们用一个32位的整数表示RGB颜色,32位整数，被分为4个部分，每个部分...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}