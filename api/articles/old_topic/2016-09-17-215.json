{"title":"使用Pages服务创建静态博客(上)","uid":"a8389061bbd1e9023a83242f7e76acdb","slug":"old_topic/2016-09-17-215","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.159Z","comments":true,"path":"api/articles/old_topic/2016-09-17-215.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"content":"<p>作者：糖果</p>\n<p>Coding.net同样提供了类似github的pages的功能， 这样就可以使用pages服务创建静态博客。</p>\n<h3>创建步骤：</h3> \n<ol>\n<li class=\"lvl-3\">\n<p>配置本地git环境。</p>\n</li>\n<li class=\"lvl-3\">\n<p>本地创建目录结构和静态文件。</p>\n</li>\n<li class=\"lvl-3\">\n<p>初始化本地目录为git工程，创建本地分支，并上传文件。</p>\n</li>\n<li class=\"lvl-3\">\n<p>启动配置coding上的pages，绑定域名。</p>\n</li>\n<li class=\"lvl-3\">\n<p>域名服务解析。</p>\n</li>\n<li class=\"lvl-3\">\n<p>确认解析。</p>\n</li>\n</ol>\n<p>下面是对具体细节的说明。</p>\n<h3>1.配置本地基本的git环境。</h3> \n<h4>1.1.生成公钥。</h4> \n用你登陆coding.net的邮箱账号生成一个公钥。\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -b 4096 -C &quot;your_email@example.com&quot;</span><br></pre></td></tr></table></figure>\n<p>在导航上选择:设置-&gt;部署公钥-&gt;点击这里：</p>\n<h4>1.2.复制pub.key到coding.net的设置面板上。</h4> \n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/.ssh</span><br><span class=\"line\">vim id_rsa.pub</span><br></pre></td></tr></table></figure>\n将id_rsa.pub的内容复到coding.net的公钥控制面板里。\n图片：jjkkkkjjjjjjj\n<img src=\"http://orchina-blog.stor.sinaapp.com/1455522406.png\" alt=\"a.png\" /> \n<p>重新连接一下。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">github用这个测试</span><br><span class=\"line\">ssh -T git@githb.com</span><br><span class=\"line\">coding用下面的测试</span><br><span class=\"line\">ssh -T git@git.coding.net</span><br></pre></td></tr></table></figure>\n<h4>1.3.设置一下用户名和邮箱。</h4> \n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --user.name XXX</span><br><span class=\"line\">git config --user.email XXX</span><br></pre></td></tr></table></figure>\n<h3>2.本地创建目录结构和静态文件。</h3> \n 我们在本地创建一个目录。\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir moonscript</span><br><span class=\"line\">vim index.html</span><br></pre></td></tr></table></figure>\n将下面的内容贴到文件里：\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Moonscript<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Moonscript<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3>3.初始化本地目录为git工程，创建本地分支，并上传文件。</h3> \n<h4>3.1 初始化本地git工程。</h4> \n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\">git add index.html</span><br><span class=\"line\">git commit -m&#x27;init&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">git remote add origin git@git.coding.net:&#123;user_name&#125;/&#123;project_name&#125;</span><br></pre></td></tr></table></figure>\n<p>{user_name}/{project_name}为你的coding.net账户名对应在coding.net上的git工程。</p>\n<h4>3.2.创建分支</h4> \n我们在此处创建一个分支，在之后开启pages服务时，指定从这个分支下取代码进行部署。\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -b coding-pages</span><br></pre></td></tr></table></figure>\n<h4>3.3.上传代码。</h4> \n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push origin coding-pages</span><br></pre></td></tr></table></figure>\n<h3>4.启动配置coding上的pages，绑定域名。</h3> \n<p>图片：b.png<br>\n<img src=\"http://orchina-blog.stor.sinaapp.com/1455522472.png\" alt=\"b.png\" /></p>\n<p>在导航上选择:代码-&gt;Page服务-&gt;绑定一个自定义的域名:<br>\n绑定了四个域名。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://moonscript.cn</span><br><span class=\"line\">http://moonscript.xyz</span><br><span class=\"line\">http://www.moonscript.cn</span><br><span class=\"line\">http://www.moonscript.xyz</span><br></pre></td></tr></table></figure>\n<h3>5.域名服务解析。</h3> \n<p>在域名服务商那里，将域名CNAME解析到，coding的pages服务的二级域名。图片：c.png<br>\n<img src=\"http://orchina-blog.stor.sinaapp.com/1455522484.png\" alt=\"c.png\" /></p>\n<h3>6.确认解析。</h3> \n我们确认一下域名，是否被正常解析了，在浏览器中输入域名地址：\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://moonscript.cn</span><br><span class=\"line\">http://moonscript.xyz</span><br><span class=\"line\">http://www.moonscript.cn</span><br><span class=\"line\">http://www.moonscript.xyz</span><br></pre></td></tr></table></figure>\n<p>图片：d.png<br>\n<img src=\"http://orchina-blog.stor.sinaapp.com/1455522446.png\" alt=\"d.png\" /></p>\n<p>作者：糖果<br>\nPS:转载到其它平台请注明作者姓名及原文链接，请勿用于商业用途。<br>\nLUA.REN<br>\n<a href=\"http://www.lua.ren\">http://www.lua.ren</a></p>\n<p>官方文档：<br>\n<a href=\"https://coding.net/help/doc/pages/index.html\">https://coding.net/help/doc/pages/index.html</a></p>\n","text":"作者：糖果 Coding.net同样提供了类似github的pages的功能， 这样就可以使用pages服务创建静态博客。 创建步骤： 配置本地git环境。 本地创建目录结构和静态文件。 初始化本地目录为git工程，创建本地分支，并上传文件。 启动配置coding上的pages，...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">创建步骤：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">1.配置本地基本的git环境。</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">1.1.生成公钥。</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">1.2.复制pub.key到coding.net的设置面板上。</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">1.3.设置一下用户名和邮箱。</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">2.本地创建目录结构和静态文件。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">3.初始化本地目录为git工程，创建本地分支，并上传文件。</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">3.1 初始化本地git工程。</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">3.2.创建分支</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">3.3.上传代码。</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">4.启动配置coding上的pages，绑定域名。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">5.域名服务解析。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">6.确认解析。</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"ConcurrentLua","uid":"8f06b9deb34ffdfee8f8030a216bc228","slug":"old_topic/2016-09-17-213","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.216Z","comments":true,"path":"api/articles/old_topic/2016-09-17-213.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"介绍 ConcurrentLua 是一个无共享异步消息传递模型的实现.该模型来自Erlang语言. 她改编了Erlang的并发元素并整合进Lua里. ConcurrentLua的一个核心元素是 process(进程).一个进程是一个轻量级虚拟机 线程,扮演和操作系统的进程同样的角...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"NGINX执行阶段概念","uid":"9430d64b8d40e629bac43d0184c0f2ac","slug":"old_topic/2016-09-17-214","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.167Z","comments":true,"path":"api/articles/old_topic/2016-09-17-214.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"图片：1079283195.png 原文连接：http://leandre.cn/web/79.html ","link":"","photos":[],"count_time":{"symbolsCount":54,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}