{"title":"Lapis如何读写HTTP的Header数据","uid":"65da3e09abf807b11cd52abb8b1dad7d","slug":"old_topic/2016-09-17-229","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.742Z","comments":true,"path":"api/articles/old_topic/2016-09-17-229.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>by 糖果<br>这不是翻译的文章，其中直接用了我的理解，进行功能的描述。</p>\n<h3>How do I read a HTTP header?</h3> \n\n<p>如何读取HTTP的Header数据</p>\n<blockquote>The req field of the self passed to actions has a headers fields with all the request headers. They are normalized so you don’t have to be concerned about capitalization.</blockquote> \n\n<p>在Lapis中headers数据，直接存于self.req.headers数据结构中，可以像访问map一样，用key取得对应的字段值，代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local lapis = require(&quot;lapis&quot;)</span><br><span class=\"line\">local app = lapis.Application()</span><br><span class=\"line\"></span><br><span class=\"line\">app:match(&quot;/&quot;, function(self)</span><br><span class=\"line\">  return self.req.headers[&quot;referrer&quot;]</span><br><span class=\"line\">end)</span><br></pre></td></tr></table></figure>\n\n<h3>How do I write a HTTP header?</h3> \n如何向HTTP的header中写入数据。\n\n<blockquote>There are two ways to write headers. In these examples we set the Access-Control-Allow-Origin header to *</blockquote> \n\n<p>基本上有两种方式，可以进行写操作，下面代码中的例子是把Access-Control-Allow-Origin这个字段设成”*”</p>\n<blockquote>You can return a headers field (or pass it to write) from an action:</blockquote> \n\n<p>我们可以一个路由的return响应动作中返回一个Header。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local lapis = require(&quot;lapis&quot;)</span><br><span class=\"line\">local app = lapis.Application()</span><br><span class=\"line\"></span><br><span class=\"line\">app:match(&quot;/&quot;, function(self)</span><br><span class=\"line\">  return &#123;</span><br><span class=\"line\">    &quot;OK&quot;,</span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">      [&quot;Access-Control-Allow-Origin&quot;] = &quot;*&quot;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">end)</span><br></pre></td></tr></table></figure>\n\n<blockquote>Alternatively, the res field of the self has a headers field that lets you set headers.</blockquote> \n\n<p>或者，你也可以通过改变self.res.header这个数据结构中的字段值，来改变headers的设定。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local lapis = require(&quot;lapis&quot;)</span><br><span class=\"line\">local app = lapis.Application()</span><br><span class=\"line\"></span><br><span class=\"line\">app:match(&quot;/&quot;, function(self)</span><br><span class=\"line\">  self.res.headers[&quot;Access-Control-Allow-Origin&quot;] = &quot;*&quot;</span><br><span class=\"line\">  return &quot;ok&quot;</span><br><span class=\"line\">end)</span><br></pre></td></tr></table></figure>\n\n<blockquote>If you need to change the content type see below.</blockquote>\n\n<p>如何你想改变，返回数据的类型，看下面的说明。</p>\n<h3>How do I set the content type?</h3> \n\n<p>如何设定返回内容的类型。</p>\n<blockquote>Either manually set the header as described above, or use the content_type option of the write method, or action return value:</blockquote> \n\n<p>我们使用content_type选项方法， 改变返回数据的类型。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local lapis = require(&quot;lapis&quot;)</span><br><span class=\"line\">local app = lapis.Application()</span><br><span class=\"line\"></span><br><span class=\"line\">app:match(&quot;/&quot;, function(self)</span><br><span class=\"line\">  return &#123; content_type = &quot;text/rss&quot;, [[&lt;rss version=&quot;2.0&quot;&gt;&lt;/rss&gt;]] &#125;</span><br><span class=\"line\">end)</span><br></pre></td></tr></table></figure>","text":"by 糖果这不是翻译的文章，其中直接用了我的理解，进行功能的描述。 How do I read a HTTP header? 如何读取HTTP的Header数据 The req field of the self passed to actions has a headers f...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">How do I read a HTTP header?</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">How do I write a HTTP header?</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">How do I set the content type?</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"深入探究MoonScript的类实现","uid":"ff49a8763d0bd255c289aba24f00a480","slug":"old_topic/2016-09-17-227","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.742Z","comments":true,"path":"api/articles/old_topic/2016-09-17-227.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":" （An in-depth look into the MoonScript class implementation） Posted July 05, 2015 by leafo (@moonscript) · Tags: lua, moonscriptTweet MoonSc...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"在Heroku云上部署Lua应用","uid":"2707eecc13e3136ac3d2044a4e3fff26","slug":"old_topic/2016-09-17-223","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.741Z","comments":true,"path":"api/articles/old_topic/2016-09-17-223.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"在Heroku云上部署Lua应用 Running Lua on Heroku Posted February 05, 2012 by leafo (@moonscript) Since the release of Heroku’s Cedar platform they've ...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}