{"title":"Lapis如何读写HTTP的Header数据","uid":"65da3e09abf807b11cd52abb8b1dad7d","slug":"old_topic/2016-09-17-229","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-18T05:42:42.179Z","comments":true,"path":"api/articles/old_topic/2016-09-17-229.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>by 糖果<br />\n这不是翻译的文章，其中直接用了我的理解，进行功能的描述。</p>\n<h3>How do I read a HTTP header?</h3> \n<p>如何读取HTTP的Header数据</p>\n<blockquote>The req field of the self passed to actions has a headers fields with all the request headers. They are normalized so you don’t have to be concerned about capitalization.</blockquote> \n<p>在Lapis中headers数据，直接存于self.req.headers数据结构中，可以像访问map一样，用key取得对应的字段值，代码如下：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> lapis <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lapis\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> app <span class=\"token operator\">=</span> lapis<span class=\"token punctuation\">.</span><span class=\"token function\">Application</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">:</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>req<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">[</span><span class=\"token string\">\"referrer\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3>How do I write a HTTP header?</h3> \n如何向HTTP的header中写入数据。\n<blockquote>There are two ways to write headers. In these examples we set the Access-Control-Allow-Origin header to *</blockquote> \n<p>基本上有两种方式，可以进行写操作，下面代码中的例子是把Access-Control-Allow-Origin这个字段设成&quot;*&quot;</p>\n<blockquote>You can return a headers field (or pass it to write) from an action:</blockquote> \n<p>我们可以一个路由的return响应动作中返回一个Header。</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> lapis <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lapis\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> app <span class=\"token operator\">=</span> lapis<span class=\"token punctuation\">.</span><span class=\"token function\">Application</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">:</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">\"OK\"</span><span class=\"token punctuation\">,</span>\n    headers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token punctuation\">[</span><span class=\"token string\">\"Access-Control-Allow-Origin\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"*\"</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>Alternatively, the res field of the self has a headers field that lets you set headers.</blockquote> \n<p>或者，你也可以通过改变self.res.header这个数据结构中的字段值，来改变headers的设定。</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> lapis <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lapis\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> app <span class=\"token operator\">=</span> lapis<span class=\"token punctuation\">.</span><span class=\"token function\">Application</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">:</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n  self<span class=\"token punctuation\">.</span>res<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">[</span><span class=\"token string\">\"Access-Control-Allow-Origin\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"*\"</span>\n  <span class=\"token keyword\">return</span> <span class=\"token string\">\"ok\"</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>If you need to change the content type see below.</blockquote>\n<p>如何你想改变，返回数据的类型，看下面的说明。</p>\n<h3>How do I set the content type?</h3> \n<p>如何设定返回内容的类型。</p>\n<blockquote>Either manually set the header as described above, or use the content_type option of the write method, or action return value:</blockquote> \n<p>我们使用content_type选项方法， 改变返回数据的类型。</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> lapis <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lapis\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">local</span> app <span class=\"token operator\">=</span> lapis<span class=\"token punctuation\">.</span><span class=\"token function\">Application</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">:</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> content_type <span class=\"token operator\">=</span> <span class=\"token string\">\"text/rss\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">[[&lt;rss version=\"2.0\">&lt;/rss>]]</span> <span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","text":"by 糖果 这不是翻译的文章，其中直接用了我的理解，进行功能的描述。 How do I read a HTTP header? 如何读取HTTP的Header数据 The req field of the self passed to actions has a headers ...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">How do I read a HTTP header?</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">How do I write a HTTP header?</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">How do I set the content type?</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"深入探究MoonScript的类实现","uid":"ff49a8763d0bd255c289aba24f00a480","slug":"old_topic/2016-09-17-227","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.215Z","comments":true,"path":"api/articles/old_topic/2016-09-17-227.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" （An in-depth look into the MoonScript class implementation） Posted July 05, 2015 by leafo (@moonscript) · Tags: lua, moonscript Tweet MoonS...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"14 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Openresty的Lua各阶段模块执行的顺序","uid":"c71d78db21b611560e342ecd25e79bf6","slug":"old_topic/2016-09-17-228","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.203Z","comments":true,"path":"api/articles/old_topic/2016-09-17-228.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"by 糖果收集 ","link":"","photos":[],"count_time":{"symbolsCount":9,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}