{"title":"Logstash Grok Debugger环境构建","uid":"79e330aa651aa9f646dd55d111ec9437","slug":"old_topic/2016-09-17-259","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.201Z","comments":true,"path":"api/articles/old_topic/2016-09-17-259.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>编辑：糖果</p>\n<p>【前记】</p>\n<p>这个环境的搭建，主要为了用于分离lua_logger推送到syslog中的数据，解析后放到ES里，再对外提供RESTY接口。基本的工具就是这么使用，至于是具全的业务如何设计实现，根据实际情况来。比如，有的WAF系统不提供开发的API把block的数据暴露出来，可能就需要自己实现一套。</p>\n<p>【正文】</p>\n<h3 id=\"1-安装-rvm\"><a class=\"markdownIt-Anchor\" href=\"#1-安装-rvm\"></a> 1. 安装 RVM</h3>\n<h3 id=\"2-安装-ruby-和-gems\"><a class=\"markdownIt-Anchor\" href=\"#2-安装-ruby-和-gems\"></a> 2. 安装 Ruby 和 Gems</h3>\n<h3 id=\"3-安装-rails\"><a class=\"markdownIt-Anchor\" href=\"#3-安装-rails\"></a> 3. 安装 Rails</h3>\n<h3 id=\"4-安装-jls-grok\"><a class=\"markdownIt-Anchor\" href=\"#4-安装-jls-grok\"></a> 4. 安装 jls-grok</h3>\n<h3 id=\"5-ruby-grok-解析\"><a class=\"markdownIt-Anchor\" href=\"#5-ruby-grok-解析\"></a> 5. Ruby grok 解析</h3>\n<h3 id=\"6-调试-grok\"><a class=\"markdownIt-Anchor\" href=\"#6-调试-grok\"></a> 6. 调试 grok</h3>\n<p>注意：不要用 root 执行以下操作。<br />\n用 logstash 收集 IIS、tomcat 日志，或是其他时，你需要调试 grok 表达式，每次都需要重新加载文件，然后再把 sincedb 文件全部删除，否则 logstash 不会重复处理文件，很麻烦。</p>\n<p>本文主要介绍如何安装 GrokDebuger 环境，再在命令行调试 Grok 表达式。Logstash 是用 Ruby 编写的，而 Ruby 有专门的处理 grok 表达式的 gem。</p>\n<p>下面过程有先后顺序。</p>\n<p>安装 RVM<br />\nrvm（Ruby Version Manager），是一个非常好用的ruby版本管理以及安装工具。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl -sSL https:&#x2F;&#x2F;get.rvm.io | sudo bash -s stable<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><a href=\"http://rvm.io/\">参见A：</a></p>\n<p><a href=\"https://github.com/rvm/rvm\">参见B：</a></p>\n<p>这步可能要多试几次，不是你的问题，是它们的网络问题。</p>\n<p>若不能 sudo ，就自己设置下你用户的权限。</p>\n<p>RVM 安装位置自己 FIND 一下。</p>\n<p>安装 rvm 后，需要用 rvm 把你当前用户添加到 rvm 组。rvm 会自己创建 rvm 组。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">rvm group add rvm &quot;$USER&quot; \nrvm fix-permissions“$USER”<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>表示你当前用户，然后重新登录。</p>\n<p>在 RVM 下安装 Ruby。</p>\n<p>安装 Ruby 和 Gems</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">rvm install ruby\nruby -v\ngem –v<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>这步很简单<sub>如果能看到版本信息，就说明成功了</sub></p>\n<p>安装 Rails</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">gem install rails<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>若不能访问，则添加淘宝镜像 <a href=\"https://ruby.taobao.org/%E3%80%82\">https://ruby.taobao.org/。</a></p>\n<p>安装 jls-grok</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">gem install jls-grok<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这步也很简单<sub>基本不会出问题</sub></p>\n<p>Ruby grok 解析<br />\n编写一个 Ruby 脚本，用来调试 Grok 表达式。</p>\n<pre class=\"line-numbers language-ruby\" data-language=\"ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">require</span> <span class=\"token string-literal\"><span class=\"token string\">'rubygems'</span></span>\ngem <span class=\"token string-literal\"><span class=\"token string\">'jls-grok'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'=0.11.2'</span></span>\n<span class=\"token keyword\">require</span> <span class=\"token string-literal\"><span class=\"token string\">'grok-pure'</span></span>\n<span class=\"token keyword\">require</span> <span class=\"token string-literal\"><span class=\"token string\">'optparse'</span></span>\n<span class=\"token keyword\">require</span> <span class=\"token string-literal\"><span class=\"token string\">'json'</span></span>\noptions <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token constant\">ARGV</span><span class=\"token punctuation\">.</span>push<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'-h'</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token constant\">ARGV</span><span class=\"token punctuation\">.</span>size <span class=\"token operator\">===</span> <span class=\"token number\">0</span>\n<span class=\"token class-name\">OptionParser</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>opts<span class=\"token operator\">|</span>\n  opts<span class=\"token punctuation\">.</span>banner <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">'Run grokdebug at your terminal.'</span></span>\n  options<span class=\"token punctuation\">[</span><span class=\"token symbol\">:dirs</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string-literal\"><span class=\"token string\">%w(patterns)</span></span>\n  options<span class=\"token punctuation\">[</span><span class=\"token symbol\">:named</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n  opts<span class=\"token punctuation\">.</span>on<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'-d DIR1,DIR2'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'--dirs DIR1,DIR2'</span></span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">Array</span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'Set grok patterns directories. Default: \"./patterns\"'</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>value<span class=\"token operator\">|</span>\n    options<span class=\"token punctuation\">[</span><span class=\"token symbol\">:dirs</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value\n  <span class=\"token keyword\">end</span>\n \n  opts<span class=\"token punctuation\">.</span>on<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'-m MESSAGE'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'--msg MESSAGE'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'Your raw message to be matched'</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>value<span class=\"token operator\">|</span>\n    options<span class=\"token punctuation\">[</span><span class=\"token symbol\">:message</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value\n  <span class=\"token keyword\">end</span>\n\n  opts<span class=\"token punctuation\">.</span>on<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'-p PATTERN'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'--pattern PATTERN'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'Your grok pattern to be compiled'</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>value<span class=\"token operator\">|</span>\n     options<span class=\"token punctuation\">[</span><span class=\"token symbol\">:pattern</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value\n  <span class=\"token keyword\">end</span>\n \n  opts<span class=\"token punctuation\">.</span>on<span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'-n'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'--named'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'Named captures only'</span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n  <span class=\"token keyword\">end</span>\n \n<span class=\"token keyword\">end</span><span class=\"token punctuation\">.</span>parse<span class=\"token operator\">!</span>\ngrok <span class=\"token operator\">=</span> <span class=\"token class-name\">Grok</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span>\noptions<span class=\"token punctuation\">[</span><span class=\"token symbol\">:dirs</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>dir<span class=\"token operator\">|</span>\n \n  <span class=\"token keyword\">if</span> <span class=\"token builtin\">File</span><span class=\"token punctuation\">.</span>directory<span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">)</span>\n \n    dir <span class=\"token operator\">=</span> <span class=\"token builtin\">File</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">\"*\"</span></span><span class=\"token punctuation\">)</span>\n \n  <span class=\"token keyword\">end</span>\n \n  <span class=\"token builtin\">Dir</span><span class=\"token punctuation\">.</span>glob<span class=\"token punctuation\">(</span>dir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">each</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>file<span class=\"token operator\">|</span>\n \n    grok<span class=\"token punctuation\">.</span>add_patterns_from_file<span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span>\n \n  <span class=\"token keyword\">end</span>\n \n<span class=\"token keyword\">end</span>\n \ngrok<span class=\"token punctuation\">.</span>compile<span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">[</span><span class=\"token symbol\">:pattern</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">[</span><span class=\"token symbol\">:named</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n \nputs <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span>pretty_generate<span class=\"token punctuation\">(</span>grok<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">[</span><span class=\"token symbol\">:message</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>captures<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>调试 grok</p>\n<pre class=\"line-numbers language-ruby\" data-language=\"ruby\"><code class=\"language-ruby\"><span class=\"token punctuation\">[</span>ln<span class=\"token variable\">@vcyber</span> myruby<span class=\"token punctuation\">]</span>$ ruby grokdebug<span class=\"token punctuation\">.</span>rb <span class=\"token operator\">-</span>m <span class=\"token string-literal\"><span class=\"token string\">'10.1.1.1'</span></span> <span class=\"token operator\">-</span>p <span class=\"token string-literal\"><span class=\"token string\">'%&#123;IP:client&#125;'</span></span> \n<span class=\"token punctuation\">&#123;</span> \n  <span class=\"token string-literal\"><span class=\"token string\">\"client\"</span></span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n    <span class=\"token string-literal\"><span class=\"token string\">\"10.1.1.1\"</span></span> \n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n  <span class=\"token string-literal\"><span class=\"token string\">\"IPV6\"</span></span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n    null \n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n  <span class=\"token string-literal\"><span class=\"token string\">\"IPV4\"</span></span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n    <span class=\"token string-literal\"><span class=\"token string\">\"10.1.1.1\"</span></span> \n  <span class=\"token punctuation\">]</span> \n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token punctuation\">[</span>ln<span class=\"token variable\">@vcyber</span> myruby<span class=\"token punctuation\">]</span>$ ruby  grokdebug<span class=\"token punctuation\">.</span>rb <span class=\"token operator\">-</span>m <span class=\"token string-literal\"><span class=\"token string\">'10.1.8.166:8000'</span></span> <span class=\"token operator\">-</span>p <span class=\"token string-literal\"><span class=\"token string\">'%&#123;HOSTPORT:test&#125;'</span></span> \n<span class=\"token punctuation\">&#123;</span> \n  <span class=\"token string-literal\"><span class=\"token string\">\"test\"</span></span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n    <span class=\"token string-literal\"><span class=\"token string\">\"10.1.8.166:8000\"</span></span> \n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n  <span class=\"token string-literal\"><span class=\"token string\">\"IPORHOST\"</span></span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n    <span class=\"token string-literal\"><span class=\"token string\">\"10.1.8.166\"</span></span> \n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n  <span class=\"token string-literal\"><span class=\"token string\">\"IP\"</span></span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n    <span class=\"token string-literal\"><span class=\"token string\">\"10.1.8.166\"</span></span> \n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n  <span class=\"token string-literal\"><span class=\"token string\">\"IPV6\"</span></span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n    null \n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n  <span class=\"token string-literal\"><span class=\"token string\">\"IPV4\"</span></span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n    <span class=\"token string-literal\"><span class=\"token string\">\"10.1.8.166\"</span></span> \n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n  <span class=\"token string-literal\"><span class=\"token string\">\"HOSTNAME\"</span></span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n    null \n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n  <span class=\"token string-literal\"><span class=\"token string\">\"POSINT\"</span></span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> \n    <span class=\"token string-literal\"><span class=\"token string\">\"8000\"</span></span> \n  <span class=\"token punctuation\">]</span> \n<span class=\"token punctuation\">&#125;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>若提示找不到“pattern”，你可以将 logstash 目录底下的复制过来拿来用</p>\n<p>【后记】<br />\n经群里的好朋友提醒，这个目录的位置，如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">logstash-2.3.2&#x2F;vendor&#x2F;bundle&#x2F;jruby&#x2F;1.9&#x2F;gems&#x2F;logstash-patterns-core-2.0.5<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><a href=\"http://www.cnblogs.com/liuning8023/p/5310541.html\">原文转载</a></p>\n","text":"编辑：糖果 【前记】 这个环境的搭建，主要为了用于分离lua_logger推送到syslog中的数据，解析后放到ES里，再对外提供RESTY接口。基本的工具就是这么使用，至于是具全的业务如何设计实现，根据实际情况来。比如，有的WAF系统不提供开发的API把block的数据暴露出来...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%AE%89%E8%A3%85-rvm\"><span class=\"toc-text\"> 1. 安装 RVM</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%AE%89%E8%A3%85-ruby-%E5%92%8C-gems\"><span class=\"toc-text\"> 2. 安装 Ruby 和 Gems</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%AE%89%E8%A3%85-rails\"><span class=\"toc-text\"> 3. 安装 Rails</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%AE%89%E8%A3%85-jls-grok\"><span class=\"toc-text\"> 4. 安装 jls-grok</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-ruby-grok-%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\"> 5. Ruby grok 解析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E8%B0%83%E8%AF%95-grok\"><span class=\"toc-text\"> 6. 调试 grok</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Nginx与OpenResty的用户权限管理","uid":"64be2f7f885d3e6489a053f52dc644fa","slug":"old_topic/2016-09-17-257","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.234Z","comments":true,"path":"api/articles/old_topic/2016-09-17-257.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：足至迹留 编辑：糖果 原文引用: 【原文】 Nginx用户权限 在nginx.conf文件的第一行一般是设置用户的地方（编译安装nginx时的参数–user=也是指定用户的地方），如 user www www; 如不指定默认是nobody. 这里用户的设置又有什么意义呢？主...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Logstash Filter解析Openrety的Log数据的简单配置","uid":"b47efc97ee4123d2f7e53bb4b25277cf","slug":"old_topic/2016-09-17-261","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.172Z","comments":true,"path":"api/articles/old_topic/2016-09-17-261.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 Logstash的配置文件位置:/etc/logstash, 而logstash本身的程序，可以放到别的定制的位置。 一般性的Logstash配置有三个节: input &#123; file &#123; path &#x3D;&gt; &quot;&#x2F;te...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}