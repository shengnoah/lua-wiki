{"title":"Logstash Grok Debugger环境构建","uid":"79e330aa651aa9f646dd55d111ec9437","slug":"old_topic/2016-09-17-259","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.201Z","comments":true,"path":"api/articles/old_topic/2016-09-17-259.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>编辑：糖果</p>\n<p>【前记】</p>\n<p>这个环境的搭建，主要为了用于分离lua_logger推送到syslog中的数据，解析后放到ES里，再对外提供RESTY接口。基本的工具就是这么使用，至于是具全的业务如何设计实现，根据实际情况来。比如，有的WAF系统不提供开发的API把block的数据暴露出来，可能就需要自己实现一套。</p>\n<p>【正文】</p>\n<h3 id=\"1-安装-RVM\">1. 安装 RVM</h3>\n<h3 id=\"2-安装-Ruby-和-Gems\">2. 安装 Ruby 和 Gems</h3>\n<h3 id=\"3-安装-Rails\">3. 安装 Rails</h3>\n<h3 id=\"4-安装-jls-grok\">4. 安装 jls-grok</h3>\n<h3 id=\"5-Ruby-grok-解析\">5. Ruby grok 解析</h3>\n<h3 id=\"6-调试-grok\">6. 调试 grok</h3>\n<p>注意：不要用 root 执行以下操作。用 logstash 收集 IIS、tomcat 日志，或是其他时，你需要调试 grok 表达式，每次都需要重新加载文件，然后再把 sincedb 文件全部删除，否则 logstash 不会重复处理文件，很麻烦。</p>\n<p>本文主要介绍如何安装 GrokDebuger 环境，再在命令行调试 Grok 表达式。Logstash 是用 Ruby 编写的，而 Ruby 有专门的处理 grok 表达式的 gem。</p>\n<p>下面过程有先后顺序。</p>\n<p>安装 RVM<br>\nrvm（Ruby Version Manager），是一个非常好用的ruby版本管理以及安装工具。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -sSL https://get.rvm.io | sudo bash -s stable</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://rvm.io/\">参见A：</a></p>\n<p><a href=\"https://github.com/rvm/rvm\">参见B：</a></p>\n<p>这步可能要多试几次，不是你的问题，是它们的网络问题。</p>\n<p>若不能 sudo ，就自己设置下你用户的权限。</p>\n<p>RVM 安装位置自己 FIND 一下。</p>\n<p>安装 rvm 后，需要用 rvm 把你当前用户添加到 rvm 组。rvm 会自己创建 rvm 组。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm group add rvm &quot;$USER&quot; </span><br><span class=\"line\">rvm fix-permissions“$USER”</span><br></pre></td></tr></table></figure>\n<p>表示你当前用户，然后重新登录。</p>\n<p>在 RVM 下安装 Ruby。</p>\n<p>安装 Ruby 和 Gems</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rvm install ruby</span><br><span class=\"line\">ruby -v</span><br><span class=\"line\">gem –v</span><br></pre></td></tr></table></figure>\n<p>这步很简单<sub>如果能看到版本信息，就说明成功了</sub></p>\n<p>安装 Rails</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem install rails</span><br></pre></td></tr></table></figure>\n<p>若不能访问，则添加淘宝镜像 <a href=\"https://ruby.taobao.org/%E3%80%82\">https://ruby.taobao.org/。</a></p>\n<p>安装 jls-grok</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem install jls-grok</span><br></pre></td></tr></table></figure>\n<p>这步也很简单<sub>基本不会出问题</sub></p>\n<p>Ruby grok 解析编写一个 Ruby 脚本，用来调试 Grok 表达式。</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">&#x27;rubygems&#x27;</span></span><br><span class=\"line\">gem <span class=\"string\">&#x27;jls-grok&#x27;</span>, <span class=\"string\">&#x27;=0.11.2&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">&#x27;grok-pure&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">&#x27;optparse&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">&#x27;json&#x27;</span></span><br><span class=\"line\">options = &#123;&#125;</span><br><span class=\"line\"><span class=\"variable constant_\">ARGV</span>.push(<span class=\"string\">&#x27;-h&#x27;</span>) <span class=\"keyword\">if</span> <span class=\"variable constant_\">ARGV</span>.size === <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"title class_\">OptionParser</span>.new <span class=\"keyword\">do</span> |<span class=\"params\">opts</span>|</span><br><span class=\"line\">  opts.banner = <span class=\"string\">&#x27;Run grokdebug at your terminal.&#x27;</span></span><br><span class=\"line\">  options[<span class=\"symbol\">:dirs</span>] = <span class=\"string\">%w(patterns)</span></span><br><span class=\"line\">  options[<span class=\"symbol\">:named</span>] = <span class=\"literal\">false</span></span><br><span class=\"line\">  opts.on(<span class=\"string\">&#x27;-d DIR1,DIR2&#x27;</span>, <span class=\"string\">&#x27;--dirs DIR1,DIR2&#x27;</span>, <span class=\"title class_\">Array</span>, <span class=\"string\">&#x27;Set grok patterns directories. Default: &quot;./patterns&quot;&#x27;</span>) <span class=\"keyword\">do</span> |<span class=\"params\">value</span>|</span><br><span class=\"line\">    options[<span class=\"symbol\">:dirs</span>] = value</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\">  opts.on(<span class=\"string\">&#x27;-m MESSAGE&#x27;</span>, <span class=\"string\">&#x27;--msg MESSAGE&#x27;</span>, <span class=\"string\">&#x27;Your raw message to be matched&#x27;</span>) <span class=\"keyword\">do</span> |<span class=\"params\">value</span>|</span><br><span class=\"line\">    options[<span class=\"symbol\">:message</span>] = value</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">  opts.on(<span class=\"string\">&#x27;-p PATTERN&#x27;</span>, <span class=\"string\">&#x27;--pattern PATTERN&#x27;</span>, <span class=\"string\">&#x27;Your grok pattern to be compiled&#x27;</span>) <span class=\"keyword\">do</span> |<span class=\"params\">value</span>|</span><br><span class=\"line\">     options[<span class=\"symbol\">:pattern</span>] = value</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\">  opts.on(<span class=\"string\">&#x27;-n&#x27;</span>, <span class=\"string\">&#x27;--named&#x27;</span>, <span class=\"string\">&#x27;Named captures only&#x27;</span>) <span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">end</span>.parse!</span><br><span class=\"line\">grok = <span class=\"title class_\">Grok</span>.new</span><br><span class=\"line\">options[<span class=\"symbol\">:dirs</span>].each <span class=\"keyword\">do</span> |<span class=\"params\">dir</span>|</span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"keyword\">if</span> <span class=\"title class_\">File</span>.directory?(dir)</span><br><span class=\"line\"> </span><br><span class=\"line\">    dir = <span class=\"title class_\">File</span>.join(dir, <span class=\"string\">&quot;*&quot;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"title class_\">Dir</span>.glob(dir).each <span class=\"keyword\">do</span> |<span class=\"params\">file</span>|</span><br><span class=\"line\"> </span><br><span class=\"line\">    grok.add_patterns_from_file(file)</span><br><span class=\"line\"> </span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"> </span><br><span class=\"line\">grok.compile(options[<span class=\"symbol\">:pattern</span>], options[<span class=\"symbol\">:named</span>])</span><br><span class=\"line\"> </span><br><span class=\"line\">puts <span class=\"variable constant_\">JSON</span>.pretty_generate(grok.match(options[<span class=\"symbol\">:message</span>]).captures())</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>调试 grok</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[ln<span class=\"variable\">@vcyber</span> myruby]<span class=\"variable\">$ </span>ruby grokdebug.rb -m <span class=\"string\">&#x27;10.1.1.1&#x27;</span> -p <span class=\"string\">&#x27;%&#123;IP:client&#125;&#x27;</span> </span><br><span class=\"line\">&#123; </span><br><span class=\"line\">  <span class=\"string\">&quot;client&quot;</span>: [ </span><br><span class=\"line\">    <span class=\"string\">&quot;10.1.1.1&quot;</span> </span><br><span class=\"line\">  ], </span><br><span class=\"line\">  <span class=\"string\">&quot;IPV6&quot;</span>: [ </span><br><span class=\"line\">    null </span><br><span class=\"line\">  ], </span><br><span class=\"line\">  <span class=\"string\">&quot;IPV4&quot;</span>: [ </span><br><span class=\"line\">    <span class=\"string\">&quot;10.1.1.1&quot;</span> </span><br><span class=\"line\">  ] </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">[ln<span class=\"variable\">@vcyber</span> myruby]<span class=\"variable\">$ </span>ruby  grokdebug.rb -m <span class=\"string\">&#x27;10.1.8.166:8000&#x27;</span> -p <span class=\"string\">&#x27;%&#123;HOSTPORT:test&#125;&#x27;</span> </span><br><span class=\"line\">&#123; </span><br><span class=\"line\">  <span class=\"string\">&quot;test&quot;</span>: [ </span><br><span class=\"line\">    <span class=\"string\">&quot;10.1.8.166:8000&quot;</span> </span><br><span class=\"line\">  ], </span><br><span class=\"line\">  <span class=\"string\">&quot;IPORHOST&quot;</span>: [ </span><br><span class=\"line\">    <span class=\"string\">&quot;10.1.8.166&quot;</span> </span><br><span class=\"line\">  ], </span><br><span class=\"line\">  <span class=\"string\">&quot;IP&quot;</span>: [ </span><br><span class=\"line\">    <span class=\"string\">&quot;10.1.8.166&quot;</span> </span><br><span class=\"line\">  ], </span><br><span class=\"line\">  <span class=\"string\">&quot;IPV6&quot;</span>: [ </span><br><span class=\"line\">    null </span><br><span class=\"line\">  ], </span><br><span class=\"line\">  <span class=\"string\">&quot;IPV4&quot;</span>: [ </span><br><span class=\"line\">    <span class=\"string\">&quot;10.1.8.166&quot;</span> </span><br><span class=\"line\">  ], </span><br><span class=\"line\">  <span class=\"string\">&quot;HOSTNAME&quot;</span>: [ </span><br><span class=\"line\">    null </span><br><span class=\"line\">  ], </span><br><span class=\"line\">  <span class=\"string\">&quot;POSINT&quot;</span>: [ </span><br><span class=\"line\">    <span class=\"string\">&quot;8000&quot;</span> </span><br><span class=\"line\">  ] </span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>若提示找不到“pattern”，你可以将 logstash 目录底下的复制过来拿来用</p>\n<p>【后记】经群里的好朋友提醒，这个目录的位置，如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">logstash-2.3.2/vendor/bundle/jruby/1.9/gems/logstash-patterns-core-2.0.5</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://www.cnblogs.com/liuning8023/p/5310541.html\">原文转载</a></p>\n","text":"编辑：糖果 【前记】 这个环境的搭建，主要为了用于分离lua_logger推送到syslog中的数据，解析后放到ES里，再对外提供RESTY接口。基本的工具就是这么使用，至于是具全的业务如何设计实现，根据实际情况来。比如，有的WAF系统不提供开发的API把block的数据暴露出来...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%AE%89%E8%A3%85-RVM\"><span class=\"toc-text\">1. 安装 RVM</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E5%AE%89%E8%A3%85-Ruby-%E5%92%8C-Gems\"><span class=\"toc-text\">2. 安装 Ruby 和 Gems</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%AE%89%E8%A3%85-Rails\"><span class=\"toc-text\">3. 安装 Rails</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%AE%89%E8%A3%85-jls-grok\"><span class=\"toc-text\">4. 安装 jls-grok</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-Ruby-grok-%E8%A7%A3%E6%9E%90\"><span class=\"toc-text\">5. Ruby grok 解析</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E8%B0%83%E8%AF%95-grok\"><span class=\"toc-text\">6. 调试 grok</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Logstash基础配置","uid":"a118688c77f2ae8c55789318279921c8","slug":"old_topic/2016-09-17-258","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.197Z","comments":true,"path":"api/articles/old_topic/2016-09-17-258.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"编辑：糖果 Logstash的启动脚本中有比较多的命令行参数： ###-f ：用于指定配置文件 使用文件，目录，或者通配符加载配置信息，如果指定为目录或者通配符，按字母顺序加载。 ###-e: 用于指定字符串输入 默认输入为， 1stdin &#123; type =&gt; s...","link":"","photos":[],"count_time":{"symbolsCount":967,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"用Logstash解析OpenResty的Resty.Logger推送的Syslog数据","uid":"f173cba451a203ccad448cb458769230","slug":"old_topic/2016-09-17-260","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.164Z","comments":true,"path":"api/articles/old_topic/2016-09-17-260.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 【前记】用Resty.Logger给SyslogNG推送了几个测试的数据字段，如下： 1192.168.0.1 68.180.228.95 GET /feed Jun 28 16:12:19 中间用空格区分，下面是grok的测试，经测式这些模式的测试数据都能正常解析。...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}