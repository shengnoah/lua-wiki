{"title":"Lua Curl的一般应用","uid":"85399f84f55b8c1291e5685cda57f473","slug":"old_topic/2016-09-17-154","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.227Z","comments":true,"path":"api/articles/old_topic/2016-09-17-154.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>作者：糖果</p>\n<p>Curl是一个WEB开发常用的工具，直接用官网的翻译</p>\n<p>curl是一个开源的命令行工具，也是一个库，用于传输URL语法的工具，支持DICT, FILE, FTP, FTPS, Gopher, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, POP3, POP3S, RTMP, RTSP, SCP, SFTP, SMB, SMTP, SMTPS, Telnet and TFTP等。</p>\n<p>在lua中，curl就是以库的形式存在的，安装过程比较简单：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo luarocks install luacurl</span><br></pre></td></tr></table></figure>\n<p>另外，curl还是支持代理的方式访问主机，这个很有用，之后会用一个模拟DDOS攻击程序说明他的用处。</p>\n<p>这一次，我们用一个和SAE云平台相关的机能，说明pycurl的使用。</p>\n<p>简单的说明一下，SAE云平台是国内较早的云开开放平台之一，经过多年的积累，有广大的用户基础，提供便利的开发平台，最近开放了一个实时LOG查询功能。用户可以通过其对外开放的REST API，查询自己运行在云平台上的APP产出的LOG。</p>\n<p>文档说明：</p>\n<p>接入流程概述：</p>\n<p>1.计算取得安全签名 。</p>\n<p>2.向指定URL发送HTTP的GET请求，请求之前要根据官网的文档要求，填充HTTP header信息，如果没有准备的填充信息，会被视为无效请求。</p>\n<p>3.取得返回的LOG信息，如果需要还可以对，返回LOG进行显示格式化。</p>\n<p>技术栈：</p>\n<p>依赖关联，此模块使用了几个常用的LUA库：</p>\n<p>crypto：加密包，用于sha256运算。</p>\n<p>base64:base64格式的转换处理。</p>\n<p>crypto,base64在之前的章节有过介绍。</p>\n<p>luacurl：HTTP工具包，此处用于向服务器发送HTTP请求。</p>\n<p>socket：luasocket是调用socket api的，但此程序只是用于取得系统时间，用作当时间戳。</p>\n<p>另外，国内的云风老师，因为觉得luasocket过于大了，不是很喜欢（QQ群里他自己说的…），他又写了一个lsocket，可以在github中找到，lsocket有一个sample,是使用lsocket实现了一个Http Server。</p>\n<p>多说一句，Lua的库不像python或是php等语言，Lua的很多库都是第三方个人实现的，需要一个寻找和甄别的过程，使用之前，确认一下也很必要。</p>\n<p>下面是具体的代码：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> crypto = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;crypto&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">local</span> hmac = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;crypto.hmac&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">local</span> curl = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;luacurl&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">local</span> socket = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;socket&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">&#x27;base64&#x27;</span>)</span><br><span class=\"line\">ALOG = &#123;&#125;</span><br><span class=\"line\">TIME_STAMP = <span class=\"literal\">nil</span></span><br><span class=\"line\">LOG_PATH = <span class=\"literal\">nil</span></span><br><span class=\"line\">SAE_LOG_HOST = <span class=\"string\">&#x27;g.sae.sina.com.cn&#x27;</span></span><br><span class=\"line\">SAE_ACCESSKEY = <span class=\"string\">&#x27;XXXXXXXX&#x27;</span></span><br><span class=\"line\">SAE_SECRETKEY = <span class=\"string\">&#x27;XXXXXXXXXXXXXXXXXXXXXXXXX&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ALOG.request</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> auth_info = ALOG.get_sec_token()</span><br><span class=\"line\">    <span class=\"keyword\">local</span> header_info = &#123;</span><br><span class=\"line\">         <span class=\"string\">&#x27;Host: &#x27;</span>..SAE_LOG_HOST,</span><br><span class=\"line\">         <span class=\"string\">&#x27;Accept: text/plain&#x27;</span>,</span><br><span class=\"line\">         <span class=\"string\">&#x27;x-sae-accesskey: &#x27;</span>..SAE_ACCESSKEY,</span><br><span class=\"line\">         <span class=\"string\">&#x27;x-sae-timestamp: &#x27;</span>..TIME_STAMP,</span><br><span class=\"line\">         <span class=\"string\">&#x27;Authorization: &#x27;</span>..auth_info</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">local</span> url = <span class=\"string\">&#x27;http://&#x27;</span>..SAE_LOG_HOST..LOG_PATH</span><br><span class=\"line\">    <span class=\"keyword\">local</span> c = curl.new()</span><br><span class=\"line\">    c:setopt(curl.OPT_URL, url)</span><br><span class=\"line\">    c:setopt(curl.OPT_HEADER, <span class=\"literal\">false</span>)</span><br><span class=\"line\">    c:setopt(curl.OPT_HTTPHEADER,     <span class=\"built_in\">table</span>.<span class=\"built_in\">concat</span>(header_info,<span class=\"string\">&quot;\\n&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">local</span> t = &#123;&#125;</span><br><span class=\"line\">    c:setopt(curl.OPT_WRITEFUNCTION, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(param, buf)</span></span></span><br><span class=\"line\">    <span class=\"built_in\">table</span>.<span class=\"built_in\">insert</span>(t, buf)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> #buf</span><br><span class=\"line\">    <span class=\"keyword\">end</span>)</span><br><span class=\"line\">    <span class=\"built_in\">assert</span>(c:perform())</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">table</span>.<span class=\"built_in\">concat</span>(t)</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ALOG.get_sec_token</span><span class=\"params\">()</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> header = &#123;</span><br><span class=\"line\">     <span class=\"string\">&#x27;GET&#x27;</span>,</span><br><span class=\"line\">        LOG_PATH,</span><br><span class=\"line\">     <span class=\"string\">&#x27;x-sae-accesskey:&#x27;</span>..SAE_ACCESSKEY,</span><br><span class=\"line\">     <span class=\"string\">&#x27;x-sae-timestamp:&#x27;</span>..TIME_STAMP,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    data_str = <span class=\"built_in\">table</span>.<span class=\"built_in\">concat</span>(header, <span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">local</span> ret = <span class=\"string\">&#x27;SAEV1_HMAC_SHA256 &#x27;</span>..to_base64(hmac.digest(<span class=\"string\">&quot;sha256&quot;</span>, data_str,SAE_SECRETKEY,<span class=\"built_in\">rawequal</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ALOG.get_log_info</span><span class=\"params\">(service, date, ident, fop, format)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\">    LOG_PATH = <span class=\"string\">&#x27;/log/&#x27;</span>..service..<span class=\"string\">&#x27;/&#x27;</span>..<span class=\"built_in\">date</span>..<span class=\"string\">&#x27;/&#x27;</span>..ident..<span class=\"string\">&#x27;.log&#x27;</span>..<span class=\"string\">&#x27;?&#x27;</span>..fop</span><br><span class=\"line\"></span><br><span class=\"line\">    TIME_STAMP = <span class=\"built_in\">math</span>.<span class=\"built_in\">ceil</span>(socket.gettime())</span><br><span class=\"line\">    <span class=\"keyword\">local</span> log_info = ALOG.request()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> log_info</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> service = <span class=\"string\">&#x27;http&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"built_in\">date</span> = <span class=\"string\">&#x27;2015-07-31&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> ident=<span class=\"string\">&#x27;1-access&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> meta = ALOG.get_log_info(service, <span class=\"built_in\">date</span>, ident, <span class=\"string\">&#x27;head/0/1&#x27;</span>, <span class=\"literal\">true</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(meta)</span><br><span class=\"line\"><span class=\"keyword\">return</span> meta</span><br></pre></td></tr></table></figure>\n<p>在云平台上可以运行，python,php,python的脚本。目前是不支持lua的，以后是否支持不得而知。</p>\n<p>因为将一个系统，分解成不同的子系统，一部分的功能是用lua实现，一部分的功能是用python实现，而系统之间的通信使用RPC通信，由lua端向python发送RPC，服务器端再接收RPC接收，必然会产生LOG。我们就在log端将实时的log取出，分析执行过程，这就是这段代码的意义。</p>\n<p>关于Pycurl使用代理的案例，之后单起一篇说明，另外会将C实现代码的关键截取出来说明上层LUA与底层代码的功能。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /auth HTTP/1.1\\r\\n</span><br><span class=\"line\">Content-Type: application/x-www-form-urlencoded\\r\\n</span><br><span class=\"line\">Content-Length: 29\\r\\n</span><br><span class=\"line\">Host: localhost:9000\\r\\n</span><br><span class=\"line\">Connection: close\\r\\n</span><br><span class=\"line\">\\r\\n</span><br><span class=\"line\">userName=Ganesh&amp;password=pass</span><br></pre></td></tr></table></figure>\n<p>PS:转载到其它平台请注明作者姓名及原文链接。</p>\n<p><a href=\"http://www.lua.ren/topic/133/lua-faq\" target=\"_blank\">点击查看Lua FAQ</a></p>\n","text":"作者：糖果 Curl是一个WEB开发常用的工具，直接用官网的翻译 curl是一个开源的命令行工具，也是一个库，用于传输URL语法的工具，支持DICT, FILE, FTP, FTPS, Gopher, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, ...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"LUA的WEB开发框架Vanilla","uid":"087f4f77da99a0fec1375818d3495ed6","slug":"old_topic/2016-09-17-153","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.163Z","comments":true,"path":"api/articles/old_topic/2016-09-17-153.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"作者：糖果 图片：vanilla_logo.jpg 这次我们介绍的框架和以往有些不同，最大的不同是，这是介绍的是一个国产Openresty Lua WEB框架，名字叫做Vanilia 我们先简单的安装，和创建一个建工的工程，然后分析一下项目的源码。 我们假定用户用系统是cento...","link":"","photos":[],"count_time":{"symbolsCount":552,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"LUA书","uid":"a4dc51fe6b804bd703cc11ff53f294af","slug":"old_topic/2016-09-17-157","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.156Z","comments":true,"path":"api/articles/old_topic/2016-09-17-157.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"var jd_union_pid=\"936552349\";var jd_union_euid=\"\"; var jd_union_pid=\"936550394\";var jd_union_euid=\"\"; var jd_union_pid=\"936535377\";var jd_un...","link":"","photos":[],"count_time":{"symbolsCount":893,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}