{"title":"Lua中ipair和pair关键字的区别是什么？","uid":"9898726b61c279db4684cd03b2a439c0","slug":"old_topic/2016-09-17-151","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.736Z","comments":true,"path":"api/articles/old_topic/2016-09-17-151.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>ipair是从key=1，开始累加，遇到val是nil就结束循环。<br>pair输出的结果和table定义的顺序是一致的(非数组不保证与声明的顺序一致)。</p>\n<p>pairs()可以遍历整个table，即包括数组及非数组部分。<br>ipairs()函数用于遍历table中的数组部分。</p>\n<p>i= integer ,integer key</p>\n<h3>1:使用ipair循环</h3> \n\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> tt =  </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    [<span class=\"number\">1</span>] = <span class=\"string\">&quot;test3&quot;</span>,  </span><br><span class=\"line\">    [<span class=\"number\">4</span>] = <span class=\"string\">&quot;test4&quot;</span>,  </span><br><span class=\"line\">    [<span class=\"number\">5</span>] = <span class=\"string\">&quot;test5&quot;</span>  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(tt) <span class=\"keyword\">do</span>    </span><br><span class=\"line\">    <span class=\"built_in\">print</span>( tt[i] )  </span><br><span class=\"line\"><span class=\"keyword\">end</span> </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>运行结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test3</span><br></pre></td></tr></table></figure>\n\n\n\n<h3>2:使用pair循环</h3> \n\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> tt =  </span><br><span class=\"line\">&#123;  </span><br><span class=\"line\">    [<span class=\"number\">1</span>] = <span class=\"string\">&quot;test3&quot;</span>,  </span><br><span class=\"line\">    [<span class=\"number\">4</span>] = <span class=\"string\">&quot;test4&quot;</span>,  </span><br><span class=\"line\">    [<span class=\"number\">5</span>] = <span class=\"string\">&quot;test5&quot;</span>  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(tt) <span class=\"keyword\">do</span>    </span><br><span class=\"line\">    <span class=\"built_in\">print</span>( tt[i] )  </span><br><span class=\"line\"><span class=\"keyword\">end</span> </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>运行结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">test3</span><br><span class=\"line\">test4</span><br><span class=\"line\">test5</span><br></pre></td></tr></table></figure>\n\n\n\n<p>怎么解决，数组里，某个元素是nil后面就不遍历的问题：</p>\n<p>@ms2008老师的方案如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">local t = &#123;<span class=\"number\">10</span>, nil, <span class=\"number\">30</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> k,v in ipairs(t) <span class=\"keyword\">do</span></span><br><span class=\"line\">    print(<span class=\"string\">&quot;in&quot;</span>, k,v)</span><br><span class=\"line\">end</span><br><span class=\"line\">print(<span class=\"string\">&quot;=============&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i=<span class=\"number\">1</span>, select(<span class=\"string\">&#x27;#&#x27;</span>, unpack(t)) <span class=\"keyword\">do</span></span><br><span class=\"line\">    local param = select(i, unpack(t))    </span><br><span class=\"line\">    print(param)</span><br><span class=\"line\">end</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>在讨论ipair和pair的过程中，触发了另外一个问题，就是对lua的map型table按照Map的value，而不是key进行排序，对key的排序lua有sort方法提供支持，而对value的排序是没有的，下面提供了一个对value进行排序的演示算法，是用MoonScript实现的排序算法，应用在反描模块中，对指定用户port访问量的大小进行排序：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class GUtils </span><br><span class=\"line\">  @mapsort: (board) =&gt;</span><br><span class=\"line\">    b_len = <span class=\"number\">0</span> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(board)</span><br><span class=\"line\">      b_len = b_len + <span class=\"number\">1</span> </span><br><span class=\"line\"></span><br><span class=\"line\">    a1 = &#123;&#125;</span><br><span class=\"line\">    a2 = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    i = <span class=\"number\">0</span> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(board)</span><br><span class=\"line\">      i = i + <span class=\"number\">1</span> </span><br><span class=\"line\">      a1[i] = k </span><br><span class=\"line\">      a2[i] = v </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i = <span class=\"number\">1</span>, b_len</span><br><span class=\"line\">       <span class=\"built_in\">max</span> = a2[i]</span><br><span class=\"line\">       <span class=\"keyword\">for</span> j = i + <span class=\"number\">1</span>, b_len </span><br><span class=\"line\">         <span class=\"keyword\">if</span> a2[j] &gt; <span class=\"built_in\">max</span> </span><br><span class=\"line\">           tmp = a2[j]</span><br><span class=\"line\">           a2[j] = <span class=\"built_in\">max</span> </span><br><span class=\"line\">           a2[i] = tmp </span><br><span class=\"line\">           <span class=\"built_in\">max</span> = tmp </span><br><span class=\"line\">           tmp1 = a1[j]</span><br><span class=\"line\">           a1[j]  = a1[i]</span><br><span class=\"line\">           a1[i] = tmp1</span><br><span class=\"line\"></span><br><span class=\"line\">    ret = &#123;&#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(a1) </span><br><span class=\"line\">      ret[k] = &#123;a1[k], a2[k]&#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ret </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>下面是纯lua实现，而不是用moonc编译的上面的.moon文件：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> board = &#123; </span><br><span class=\"line\">  [<span class=\"string\">&#x27;0.0.0.1&#x27;</span>] = <span class=\"number\">1</span>,</span><br><span class=\"line\">  [<span class=\"string\">&#x27;0.0.0.5&#x27;</span>] = <span class=\"number\">5</span>,</span><br><span class=\"line\">  [<span class=\"string\">&#x27;0.0.0.3&#x27;</span>] = <span class=\"number\">3</span>,</span><br><span class=\"line\">  [<span class=\"string\">&#x27;0.0.0.2&#x27;</span>] = <span class=\"number\">2</span>,</span><br><span class=\"line\">  [<span class=\"string\">&#x27;0.0.0.9&#x27;</span>] = <span class=\"number\">9</span>,</span><br><span class=\"line\">  [<span class=\"string\">&#x27;0.0.0.3&#x27;</span>] = <span class=\"number\">3</span>,</span><br><span class=\"line\">  [<span class=\"string\">&#x27;0.0.0.6&#x27;</span>] = <span class=\"number\">6</span> </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">local</span> mapsort</span><br><span class=\"line\">mapsort = <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(board)</span></span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> b_len = <span class=\"number\">0</span> </span><br><span class=\"line\">  <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(board) <span class=\"keyword\">do</span></span><br><span class=\"line\">    b_len = b_len + <span class=\"number\">1</span> </span><br><span class=\"line\">  <span class=\"keyword\">end</span> </span><br><span class=\"line\">  <span class=\"keyword\">local</span> a1 = &#123; &#125; </span><br><span class=\"line\">  <span class=\"keyword\">local</span> a2 = &#123; &#125; </span><br><span class=\"line\">  <span class=\"keyword\">local</span> i = <span class=\"number\">0</span> </span><br><span class=\"line\">  <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(board) <span class=\"keyword\">do</span></span><br><span class=\"line\">    i = i + <span class=\"number\">1</span> </span><br><span class=\"line\">    a1[i] = k </span><br><span class=\"line\">    a2[i] = v </span><br><span class=\"line\">  <span class=\"keyword\">end</span> </span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> i = <span class=\"number\">1</span>, b_len <span class=\"keyword\">do</span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> <span class=\"built_in\">max</span> = a2[i]</span><br><span class=\"line\">    <span class=\"keyword\">for</span> j = i + <span class=\"number\">1</span>, b_len <span class=\"keyword\">do</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span> a2[j] &gt; <span class=\"built_in\">max</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> tmp = a2[j]</span><br><span class=\"line\">        a2[j] = <span class=\"built_in\">max</span> </span><br><span class=\"line\">        a2[i] = tmp</span><br><span class=\"line\">        <span class=\"built_in\">max</span> = tmp</span><br><span class=\"line\">        <span class=\"keyword\">local</span> tmp1 = a1[j]</span><br><span class=\"line\">        a1[j] = a1[i]</span><br><span class=\"line\">        a1[i] = tmp1</span><br><span class=\"line\">      <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">local</span> ret = &#123; &#125;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(a1) <span class=\"keyword\">do</span></span><br><span class=\"line\">    ret[k] = &#123;</span><br><span class=\"line\">      a1[k],</span><br><span class=\"line\">      a2[k]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  <span class=\"keyword\">end</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> ret</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;########&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">local</span> ret = mapsort(board)</span><br><span class=\"line\"><span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(ret) <span class=\"keyword\">do</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(ret[k][<span class=\"number\">1</span>], ret[k][<span class=\"number\">2</span>])</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>","text":"ipair是从key=1，开始累加，遇到val是nil就结束循环。pair输出的结果和table定义的顺序是一致的(非数组不保证与声明的顺序一致)。 pairs()可以遍历整个table，即包括数组及非数组部分。ipairs()函数用于遍历table中的数组部分。 i= inte...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">1:使用ipair循环</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">2:使用pair循环</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua的转义符号“%”","uid":"40c3b450ff372f1daa99baee2e917fc2","slug":"old_topic/2016-09-17-150","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.736Z","comments":true,"path":"api/articles/old_topic/2016-09-17-150.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 Lua有些符号在用户字符替换的时候，可能会发生转义。今天群里的一位小伙伴，就需要到类似的问题，比如说要将字符串中的’（’变成’[‘。 解答问题的伙伴给出如下代码： 123a = &#x27;123.(456)&#x27;c = string.gsub(a, &#x27...","link":"","photos":[],"count_time":{"symbolsCount":282,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua Curl的一般应用","uid":"85399f84f55b8c1291e5685cda57f473","slug":"old_topic/2016-09-17-154","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.736Z","comments":true,"path":"api/articles/old_topic/2016-09-17-154.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 Curl是一个WEB开发常用的工具，直接用官网的翻译 curl是一个开源的命令行工具，也是一个库，用于传输URL语法的工具，支持DICT, FILE, FTP, FTPS, Gopher, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, ...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}