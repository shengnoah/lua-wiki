{"title":"WEB IDE环境运行Lua网页应用","uid":"94c79648b27c71adf58b46e7d0e952fe","slug":"old_topic/2016-09-17-113","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.733Z","comments":true,"path":"api/articles/old_topic/2016-09-17-113.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>作者：糖果</p>\n<p>如Python和Ruby一样，Lua也可以创建WEB应用，之前提过的一个Lua WEB框架</p>\n<p>这次就在WEB IDE环境下，部署一下LuaWEB的运行环境，并创建一个Lua WEB应用。</p>\n<p>第一步：安装WEB服务器， Openresty。</p>\n<p>1).下载安装包</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://openresty.org/download/ngx_openresty-1.7.10.1.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>2).解压</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar xzvf ngx_openresty-1.7.10.1.tar.gz</span><br></pre></td></tr></table></figure>\n<p>3).安装依赖包</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install libreadline-dev</span><br><span class=\"line\">sudo apt-get install libncurses5-dev</span><br><span class=\"line\">sudo apt-get install libpcre3-dev</span><br><span class=\"line\">sudo apt-get install libssl-dev</span><br><span class=\"line\">sudo apt-get install perl</span><br><span class=\"line\">sudo apt-get install make</span><br><span class=\"line\">sudo apt-get install build-essential</span><br></pre></td></tr></table></figure>\n\n<p>3).配置与安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd xzvf ngx_openresty-1.7.10.1</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n\n<p>4).配置环境变量</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=/usr/local/openresty/nginx/sbin:$PATH</span><br><span class=\"line\">nginx -v</span><br></pre></td></tr></table></figure>\n\n<p>第二步：安装Lapis</p>\n<p>1).安装luarocks</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install luarocks</span><br></pre></td></tr></table></figure>\n\n<p>2).安装lapis框架。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo luarocks install lapis</span><br></pre></td></tr></table></figure>\n\n<p>第三步：创建Lua Web应用。<br>1).创建Lapis工程。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lapis new tangguo</span><br></pre></td></tr></table></figure>\n\n<p>2).创建app.lua</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local lapis = require &quot;lapis&quot;  </span><br><span class=\"line\">local config = require(&quot;lapis.config&quot;)       </span><br><span class=\"line\">local app = lapis.Application()         </span><br><span class=\"line\">app:match(&quot;/&quot;, function(self)                                                                               return &quot;Hi Lapis!&quot;                                                                          end)                                                                                                return app</span><br></pre></td></tr></table></figure>\n\n<p>3).创建config.lua(设置IP:端口,数据库连接账号)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">local config = require(&quot;lapis.config&quot;)                                                              config(&quot;development&quot;, &#123;                                                                                  port = 8000,                                                                                        mysql = &#123;                                                                                       host = &quot;0.0.0.0&quot;,                                                                               user = &quot;root&quot;,                                                                                  password = &quot;&quot;,                                                                                  database = &quot;&quot;                                                                                  &#125;                    </span><br><span class=\"line\">&#125;) </span><br></pre></td></tr></table></figure>\n<p>4).启动服务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lapis server</span><br></pre></td></tr></table></figure>\n<p>完成以上步骤后，我们就创建了就一个简单的Lua Web程序。<br>此程序在Coding的WEB IDE运行，通过测试。<br>下面是实际的运行效果地址：（1小时左右后地址失效）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://qqbsel-8000-lhfxjz.box.myide.io/</span><br></pre></td></tr></table></figure>\n\n\n<p>PS:转载到其它平台请注明作者姓名及原文链接。</p>\n","text":"作者：糖果 如Python和Ruby一样，Lua也可以创建WEB应用，之前提过的一个Lua WEB框架 这次就在WEB IDE环境下，部署一下LuaWEB的运行环境，并创建一个Lua WEB应用。 第一步：安装WEB服务器， Openresty。 1).下载安装包 1wget h...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"LUA与STOMP协议","uid":"9aeff2cf84352e0facabfc6256b648d7","slug":"old_topic/2016-09-17-117","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.734Z","comments":true,"path":"api/articles/old_topic/2016-09-17-117.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 STOMP协议是一种简单的消息文本协议。协义本身简单明了，用消息头定义和消息体数据传输。 RabbitMQ做为一种队列中间件，提供了STOMP协议的支持，我们可以通过STOMP协议向队列发送消息。下面的例子中，我们将使用LUA程序向RabbitMQ发送消息， 通过Py...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua Lapis的模板系统etlua","uid":"e071224e90a59c391520b50afdda50c7","slug":"old_topic/2016-09-17-119","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.734Z","comments":true,"path":"api/articles/old_topic/2016-09-17-119.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 主流的WEB开发框架都有模板系统，或是支持第三方的模板插件。Lua Lapis也不例外，也有自己的模板系统，叫做etlua。 说到模板系统，另外要提一下静态资源的问题，模板的话难免要使用css、js、image这种静态文件，为了扫除一部分障碍先说一下Openresty...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}