{"title":"Paloalto的Log数据推送思路与Syslog-NG服务使用与配置","uid":"cb434518329140d52cda782e9eb061d5","slug":"old_topic/2016-09-17-234","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.182Z","comments":true,"path":"api/articles/old_topic/2016-09-17-234.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<h3>前言：</h3> \n<p>对于Log数据集中收集管理来说，Syslog服务的重要性不言而喻。比如在平时，Openresty就吐出很多log数据，对这些数据进行集中，可以对积累的数据进行分析，从中找到很多有价值的信息。</p>\n<p>像paloalto这种设备，可以根据定制化的策略规则产生的数据，对应不同机器的不同的syslog服务， 如果性能和负荷都够的话，也可以把一台paloalto设备上的安全策略，对应同一台syslog-ng服务的不同端口。</p>\n<p>把高，中，低，交通数据，吐到192.168.0.1的 810,811,812,813端口上的syslog服务上。 然后，分别对不同级别信报进行分类处理。</p>\n<p>也可以把，指定一个网段的所有交通数据都集中吐到一个端口服务上。然后，通过ELK进行这个网站数据流量的分析，对记录字段进行分词统计。</p>\n<h3>正文：</h3> \n<p>拿阿里VPS来说，如果是Ubuntu系统，安装Syslog-NG很方便，使用apt-get的方式：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install syslog-ng</span><br></pre></td></tr></table></figure>\n<p>安装之后，可以看一下运行的状态：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/init.d/syslog-ng status</span><br></pre></td></tr></table></figure>\n<p>syslog-ng启动，关闭，重启的参数用法也很简明。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage: /etc/init.d/syslog-ng &#123;start|stop|restart|reload|force-reload|status&#125;</span><br></pre></td></tr></table></figure>\n<p>syslog-ng的新开端口接收数据写入。</p>\n<p>自动安装的syslog-ng的配置文件的位置在/etc/syslog-ng下， 叫syslog-ng.conf， 配置动作需要三步。</p>\n<p>一共需要定义三个部分：Sources, Destinations, Log  paths。</p>\n<p><strong>Sources:</strong>  是用来定义， syslog服务要绑定的本机IP和对应的Port，还有定义用于网络传送数据使用的协议（TCP/UDP）。</p>\n<p><strong>Destinations:</strong> 用于定义Log文件存储的位置，定义log文件名定义的样式，比如，使用年，月，日，时间等组成部分来给log文件命名。</p>\n<p><strong>Log paths：</strong> 用于定义Sources和Destinations的关联关系，就是指定那个监听的端口接收的Log数据，存储到本地的那个目录文件下。</p>\n<p>这三部分，在配置文件中对应有注释块,下面就是要追加端口服务的配置定义：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">########################</span><br><span class=\"line\"># Sources</span><br><span class=\"line\">########################</span><br><span class=\"line\">#我们定义810端口，为syslog对外服务端口。</span><br><span class=\"line\"></span><br><span class=\"line\">source s_src &#123;</span><br><span class=\"line\">       udp(ip(0.0.0.0) port(810));</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">########################</span><br><span class=\"line\"># Destinations</span><br><span class=\"line\">########################</span><br><span class=\"line\">#定义log文件存储的位置和log文件名的规则,前缀使用Openresty,后缀依年，月，日变量参于文件名命名。</span><br><span class=\"line\"></span><br><span class=\"line\">destination d_portscan &#123; file(&quot;/data0/syslog/Openresty_$&#123;YEAR&#125;_$&#123;MONTH&#125;_$&#123;DAY&#125;.log&quot;); &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">########################</span><br><span class=\"line\"># Log paths</span><br><span class=\"line\">########################</span><br><span class=\"line\">#将定义的source和destination进行关联。</span><br><span class=\"line\">log &#123; source(s_src); destination(d_portscan); &#125;;</span><br></pre></td></tr></table></figure>\n<p>修改配置文件后，我们重新起动一下syslog-ng</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/init.d/syslog-ng restart</span><br></pre></td></tr></table></figure>\n<h3>后记：</h3> \n<p>很多服务都提供syslog吐出的功能，我们可以建立一个log数据集中的服务器，定义不同的端口来收集不同服务的数据，数据可能来自Openresty的访问log，也可以来至paloalto的威胁情服，还可以是邮件服务器的用户登陆情报log，通过这些数据的关联性，挖掘我们想要的数据，得出参考结论，可以ELK这种工具，也可用脚本语言实现数据分析。</p>\n","text":"前言： 对于Log数据集中收集管理来说，Syslog服务的重要性不言而喻。比如在平时，Openresty就吐出很多log数据，对这些数据进行集中，可以对积累的数据进行分析，从中找到很多有价值的信息。 像paloalto这种设备，可以根据定制化的策略规则产生的数据，对应不同机器的不...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">前言：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">正文：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">后记：</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"ES（Elasticsearch）常用操作与Python客户端","uid":"e623d764e660785c48cbd0cf5044deb0","slug":"old_topic/2016-09-17-232","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.232Z","comments":true,"path":"api/articles/old_topic/2016-09-17-232.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"ES常用操作 之前老板本的ES使用的创建索引的指令已经失效了。 123456curl -X PUT &#x27;http://127.0.0.1:9200/testcase/&#x27; -d &#x27; index: number_of_shards:3 number_of_...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua的HTTP库","uid":"7c6c0bd644fe170c87ec457e7a5178a5","slug":"old_topic/2016-09-17-235","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.158Z","comments":true,"path":"api/articles/old_topic/2016-09-17-235.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"其实除lua curl，还有另外一个库，也用以用HTTP请求。就是lua socket的http请求。 可以用这种方式进行http请求和简单的数据爬取，然后用正则，对返回的数据进行分析。 123http = require(&quot;socket.http&quot;)body...","link":"","photos":[],"count_time":{"symbolsCount":206,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}