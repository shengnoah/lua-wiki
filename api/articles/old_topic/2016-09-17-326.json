{"title":"编码为array还是object","uid":"dcced3e4781903088f00b4d841a17520","slug":"old_topic/2016-09-17-326","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.220Z","comments":true,"path":"api/articles/old_topic/2016-09-17-326.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>编码为array还是object</p>\n<p>首先大家请看这段源码：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- http://www.kyne.com.au/~mark/software/lua-cjson.php</span></span><br><span class=\"line\"><span class=\"comment\">-- version: 2.1 devel</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> json = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;cjson&quot;</span>)</span><br><span class=\"line\">ngx.say(<span class=\"string\">&quot;value --&gt; &quot;</span>, json.encode(&#123;dogs=&#123;&#125;&#125;))</span><br></pre></td></tr></table></figure>\n<p>输出结果</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>value --&gt; {“dogs”:{}}</p></blockquote>\n<p>注意看下encode后key的值类型，“{}” 代表key的值是个object，“[]” 则代表key的值是个数组。对于强类型语言(c/c++, java等)，这时候就有点不爽。因为类型不是他期望的要做容错。对于Lua本身，是把数组和字典融合到一起了，所以他是无法区分空数组和空字典的。</p>\n<p>参考openresty-cjson中额外贴出测试案例，我们就很容易找到思路了。</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 内容节选lua-cjson-2.1.0.2/tests/agentzh.t</span></span><br><span class=\"line\">=== TEST <span class=\"number\">1</span>: empty tables as objects</span><br><span class=\"line\"><span class=\"comment\">--- lua</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> cjson = <span class=\"built_in\">require</span> <span class=\"string\">&quot;cjson&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(cjson.encode(&#123;&#125;))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(cjson.encode(&#123;dogs = &#123;&#125;&#125;))</span><br><span class=\"line\"><span class=\"comment\">--- out</span></span><br><span class=\"line\">&#123;&#125;</span><br><span class=\"line\">&#123;<span class=\"string\">&quot;dogs&quot;</span>:&#123;&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">=== TEST <span class=\"number\">2</span>: empty tables as arrays</span><br><span class=\"line\"><span class=\"comment\">--- lua</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> cjson = <span class=\"built_in\">require</span> <span class=\"string\">&quot;cjson&quot;</span></span><br><span class=\"line\">cjson.encode_empty_table_as_object(<span class=\"literal\">false</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(cjson.encode(&#123;&#125;))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(cjson.encode(&#123;dogs = &#123;&#125;&#125;))</span><br><span class=\"line\"><span class=\"comment\">--- out</span></span><br><span class=\"line\">[]</span><br><span class=\"line\">&#123;<span class=\"string\">&quot;dogs&quot;</span>:[]&#125;</span><br></pre></td></tr></table></figure>\n<p>综合本章节提到的各种问题，我们可以封装一个json encode的示例函数：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">json_encode</span><span class=\"params\">( data, empty_table_as_object )</span></span></span><br><span class=\"line\">  <span class=\"comment\">--Lua的数据类型里面，array和dict是同一个东西。对应到json encode的时候，就会有不同的判断</span></span><br><span class=\"line\">  <span class=\"comment\">--对于linux，我们用的是cjson库：A Lua table with only positive integer keys of type number will be encoded as a JSON array. All other tables will be encoded as a JSON object.</span></span><br><span class=\"line\">  <span class=\"comment\">--cjson对于空的table，就会被处理为object，也就是&#123;&#125;</span></span><br><span class=\"line\">  <span class=\"comment\">--dkjson默认对空table会处理为array，也就是[]</span></span><br><span class=\"line\">  <span class=\"comment\">--处理方法：对于cjson，使用encode_empty_table_as_object这个方法。文档里面没有，看源码</span></span><br><span class=\"line\">  <span class=\"comment\">--对于dkjson，需要设置meta信息。local a= &#123;&#125;；a.s = &#123;&#125;;a.b=&#x27;中文&#x27;;setmetatable(a.s,  &#123; __jsontype = &#x27;object&#x27; &#125;);ngx.say(comm.json_encode(a))</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">local</span> json_value = <span class=\"literal\">nil</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> json.encode_empty_table_as_object <span class=\"keyword\">then</span></span><br><span class=\"line\">        json.encode_empty_table_as_object(empty_table_as_object <span class=\"keyword\">or</span> <span class=\"literal\">false</span>) <span class=\"comment\">-- 空的table默认为array</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">require</span>(<span class=\"string\">&quot;ffi&quot;</span>).<span class=\"built_in\">os</span> ~= <span class=\"string\">&quot;Windows&quot;</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">        json.encode_sparse_array(<span class=\"literal\">true</span>)</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"built_in\">pcall</span>(<span class=\"function\"><span class=\"keyword\">function</span> <span class=\"params\">(data)</span></span> json_value = json.encode(data) <span class=\"keyword\">end</span>, data)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json_value</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>","text":"编码为array还是object 首先大家请看这段源码： 12345-- http://www.kyne.com.au/~mark/software/lua-cjson.php-- version: 2.1 devellocal json = require(&quot;cjso...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"稀疏数组","uid":"6e867546fc7beccba02bf189db02a81f","slug":"old_topic/2016-09-17-329","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.204Z","comments":true,"path":"api/articles/old_topic/2016-09-17-329.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"稀疏数组 请看示例代码（注意data的数组下标）： 12345678910-- http://www.kyne.com.au/~mark/software/lua-cjson.php-- version: 2.1 devellocal json = require(&quot;c...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Crontab在SAE中的应用。","uid":"9c523cb4f2eea401eabec06d4f595a71","slug":"old_topic/2016-09-17-33","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.198Z","comments":true,"path":"api/articles/old_topic/2016-09-17-33.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"例行性工作（crontab) 【闲话】 现在是在用蓝牙和手机无限键盘在写这篇博客，测试一下，发现用系统默认的输入法比较痛苦，不知道为什么，光标焦点在手机屏幕上飞来飞去，根本就没有办法正常的进行编辑，换了一个输入法以后，此问题基本上不发生了。 ［问题］什么事crontab? 如果简...","link":"","photos":[],"count_time":{"symbolsCount":393,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}