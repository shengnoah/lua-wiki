{"title":"给Vanilla框架的路由模块加入单体测试","uid":"2ae7e20708abb11b61241dea5050fc63","slug":"old_topic/2016-09-17-188","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.195Z","comments":true,"path":"api/articles/old_topic/2016-09-17-188.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>作者：糖果</p>\n<p>下面是单体测试的代码：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token comment\">-- perf</span>\n<span class=\"token keyword\">local</span> error <span class=\"token operator\">=</span> error\n<span class=\"token keyword\">local</span> sgmatch <span class=\"token operator\">=</span> string<span class=\"token punctuation\">.</span>gmatch\n\n<span class=\"token comment\">-- init Simple and set routes</span>\n<span class=\"token keyword\">local</span> Simple <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> Simple<span class=\"token punctuation\">:</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">local</span> instance <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n        route_name <span class=\"token operator\">=</span> <span class=\"token string\">'vanilla.v.routes.simple'</span><span class=\"token punctuation\">,</span>\n    \trequest <span class=\"token operator\">=</span> request\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token function\">setmetatable</span><span class=\"token punctuation\">(</span>instance<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>\n        __index <span class=\"token operator\">=</span> self<span class=\"token punctuation\">,</span>\n        __tostring <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>route_name <span class=\"token keyword\">end</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> instance\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">function</span> Simple<span class=\"token punctuation\">:</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">local</span> uri <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>uri\n    <span class=\"token keyword\">local</span> match <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">local</span> tmp <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">if</span> uri <span class=\"token operator\">==</span> <span class=\"token string\">'/'</span> <span class=\"token keyword\">then</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">'index'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index'</span>\n    <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">for</span> v <span class=\"token keyword\">in</span> <span class=\"token function\">sgmatch</span><span class=\"token punctuation\">(</span>uri <span class=\"token punctuation\">,</span> <span class=\"token string\">'/([A-Za-z0-9_]+)'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n        match<span class=\"token punctuation\">[</span>tmp<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v\n        tmp <span class=\"token operator\">=</span> tmp <span class=\"token operator\">+</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">if</span> <span class=\"token operator\">#</span>match <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token keyword\">then</span>\n        <span class=\"token keyword\">return</span> match<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index'</span>\n    <span class=\"token keyword\">else</span>\n        <span class=\"token keyword\">return</span> table<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">#</span>match <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> match<span class=\"token punctuation\">[</span><span class=\"token operator\">#</span>match<span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">return</span> Simple<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","text":"作者：糖果 下面是单体测试的代码： -- perf local error = error local sgmatch = string.gmatch -- init Simple and set routes local Simple = &#123;&#125; functi...","link":"","photos":[],"count_time":{"symbolsCount":871,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Moonscript的Busted单体测试","uid":"43450fb948daac9a77b252ddeba99506","slug":"old_topic/2016-09-17-189","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.199Z","comments":true,"path":"api/articles/old_topic/2016-09-17-189.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 Busted是Lua的单体测试工具。 去官网Github看一下，也支持Moonscript的单体测试。 moonunit.moon describe 'moonscript tests', -> it 'works', -> assert.are.equal true...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Vanilla工程如何设置静态文件夹static","uid":"56f67290590d9d72dc1ccb87fe155f52","slug":"old_topic/2016-09-17-190","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.155Z","comments":true,"path":"api/articles/old_topic/2016-09-17-190.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"修改/config/nginx.conf 加入路由设置 [code] location /static/ { alias static/; } [/code] 完整的配置文件，如下： [code] pid tmp/-nginx.pid; This number should be...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}