{"title":"运行openresty的docker容器","uid":"01173aa02c4077fa378e3b1fa24d186b","slug":"old_topic/2016-09-17-338","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.192Z","comments":true,"path":"api/articles/old_topic/2016-09-17-338.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>编辑作者：糖果</p>\n<p>找了些资料，用了一下docker的openrsty的测试。</p>\n<p>直接拉取1.9版的Openresty。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">docker pull openresty&#x2F;openresty:1.9.15.1-trusty<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>将特理机的8080端口和docker的80端口映射。<br />\n将不当前config/nginx.conf映射到docker的usr/local/openresty/nginx/conf/nginx.conf，log文件同理。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#!&#x2F;usr&#x2F;bin&#x2F;env bash\ndocker run -d --name&#x3D;&quot;nginx&quot; -p 8080:80 -v $PWD&#x2F;config&#x2F;nginx.conf:&#x2F;usr&#x2F;local&#x2F;openresty&#x2F;nginx&#x2F;conf&#x2F;nginx.conf:ro -v $PWD&#x2F;logs:&#x2F;usr&#x2F;local&#x2F;openresty&#x2F;nginx&#x2F;logs openresty&#x2F;openresty:1.9.15.1-trusty<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>写一句支持nginx lua的测试脚本。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">worker_processes  1;\nerror_log logs&#x2F;error.log;\nevents &#123;\n    worker_connections 1024;\n&#125;\nhttp &#123;\n    server &#123;\n        listen 80;\n        location &#x2F; &#123;\n            default_type text&#x2F;html;\n            content_by_lua &#39;\n                ngx.say(&quot;&lt;p&gt;hello, world&lt;&#x2F;p&gt;&quot;)\n            &#39;;\n        &#125;\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>停止docker，可以stop，也可以kill。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#!&#x2F;usr&#x2F;bin&#x2F;env bash\ndocker kill nginx &amp;&amp; docker rm nginx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>登陆docker hub</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">docker login<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>提交一个版本</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">docker commit xxxxxxx  candylab&#x2F;openrestytest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>提交文件到hub上</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">docker push candylab&#x2F;openrestytest<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>还有一个–net选项， --net=host，是直接桥接网卡。<br />\ndocker run -d --net=host openresty</p>\n","text":"编辑作者：糖果 找了些资料，用了一下docker的openrsty的测试。 直接拉取1.9版的Openresty。 docker pull openresty&#x2F;openresty:1.9.15.1-trusty 将特理机的8080端口和docker的80端口映射。 将不...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"在Lapis上用moonscript渲染和接收json","uid":"bc2b21685789386351af0e07c572df47","slug":"old_topic/2016-09-17-337","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-18T06:44:11.069Z","comments":true,"path":"api/articles/old_topic/2016-09-17-337.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"编辑整理：糖果 lapis = require \"lapis\" import json_params from require \"lapis.application\" class App extends lapis.Application \"/\": => &#123; json:...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lapis","slug":"lapis","count":3,"path":"api/tags/lapis.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"OpenResty向graylog推送数据","uid":"dbc3ab64f8a793e30ff0dafc0aa1a042","slug":"old_topic/2016-09-17-339","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.203Z","comments":true,"path":"api/articles/old_topic/2016-09-17-339.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"编辑作者：糖果 access_log syslog:server=0.0.0.0:55555 graylog2_format; error_log syslog:server=0.0.0.0:55555; ","link":"","photos":[],"count_time":{"symbolsCount":104,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}