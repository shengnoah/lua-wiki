{"title":"运行openresty的docker容器","uid":"01173aa02c4077fa378e3b1fa24d186b","slug":"old_topic/2016-09-17-338","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.750Z","comments":true,"path":"api/articles/old_topic/2016-09-17-338.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>编辑作者：糖果</p>\n<p>找了些资料，用了一下docker的openrsty的测试。</p>\n<p>直接拉取1.9版的Openresty。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull openresty/openresty:1.9.15.1-trusty</span><br></pre></td></tr></table></figure>\n\n\n<p>将特理机的8080端口和docker的80端口映射。<br>将不当前config/nginx.conf映射到docker的usr/local/openresty/nginx/conf/nginx.conf，log文件同理。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env bash</span><br><span class=\"line\">docker run -d --name=&quot;nginx&quot; -p 8080:80 -v $PWD/config/nginx.conf:/usr/local/openresty/nginx/conf/nginx.conf:ro -v $PWD/logs:/usr/local/openresty/nginx/logs openresty/openresty:1.9.15.1-trusty</span><br></pre></td></tr></table></figure>\n\n<p>写一句支持nginx lua的测试脚本。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">worker_processes  1;</span><br><span class=\"line\">error_log logs/error.log;</span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">    worker_connections 1024;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">            default_type text/html;</span><br><span class=\"line\">            content_by_lua &#x27;</span><br><span class=\"line\">                ngx.say(&quot;&lt;p&gt;hello, world&lt;/p&gt;&quot;)</span><br><span class=\"line\">            &#x27;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>停止docker，可以stop，也可以kill。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/usr/bin/env bash</span><br><span class=\"line\">docker kill nginx &amp;&amp; docker rm nginx</span><br></pre></td></tr></table></figure>\n\n<p>登陆docker hub</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker login</span><br></pre></td></tr></table></figure>\n\n<p>提交一个版本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker commit xxxxxxx  candylab/openrestytest</span><br></pre></td></tr></table></figure>\n\n<p>提交文件到hub上</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker push candylab/openrestytest</span><br></pre></td></tr></table></figure>\n\n\n\n<p>还有一个–net选项， –net=host，是直接桥接网卡。<br>docker run -d –net=host openresty</p>\n","text":"编辑作者：糖果 找了些资料，用了一下docker的openrsty的测试。 直接拉取1.9版的Openresty。 1docker pull openresty/openresty:1.9.15.1-trusty 将特理机的8080端口和docker的80端口映射。将不当前con...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"各种资源下载","uid":"3cd539c713805eb0b4ee7b03f42a3f03","slug":"old_topic/2016-09-17-335","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.750Z","comments":true,"path":"api/articles/old_topic/2016-09-17-335.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"esxi的下载ttps://my.vmware.com/web/vmware/evalcenter?p=free-esxi6 esxi配置http://wiki.intra.sina.com.cn/pages/viewpage.action?pageId=9620049 java...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"在Lapis上用moonscript渲染和接收json","uid":"bc2b21685789386351af0e07c572df47","slug":"old_topic/2016-09-17-337","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.750Z","comments":true,"path":"api/articles/old_topic/2016-09-17-337.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"编辑整理：糖果 12345678910111213lapis = require &quot;lapis&quot; import json_params from require &quot;lapis.application&quot; class App extends l...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}