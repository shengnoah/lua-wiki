{"title":"用Lapis工程创建Openresty正向代理服务","uid":"20597ab06842fbc260e3af6d26f03675","slug":"old_topic/2016-09-17-239","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.194Z","comments":true,"path":"api/articles/old_topic/2016-09-17-239.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>作者：糖果</p>\n<p><strong>正文：</strong></p>\n<p>利用Openresty服务创建一个正向代理服务器，最开始是想在Lapis创建的工程下直接创建，基本的配置如下面的代吗：</p>\n<p>创建一个Lapis工程：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">lapis new<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后在配置文件里加入，正向代理的配置。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">worker_processes $&#123;&#123;NUM_WORKERS&#125;&#125;;\nerror_log stderr notice;\ndaemon off;\npid logs&#x2F;nginx.pid;\n\nevents &#123;\n  worker_connections 1024;\n&#125;\n\nhttp &#123;\n  include mime.types;\n  default_type  application&#x2F;octet-stream;\n\n  log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;\n                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;\n                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;\n\n  access_log  logs&#x2F;access.log  main;\n\n  server &#123;\n    resolver 114.114.114.114;\n    resolver_timeout 15s;\n\n    listen $&#123;&#123;PORT&#125;&#125;;\n    lua_code_cache $&#123;&#123;CODE_CACHE&#125;&#125;;\n\n    location &#x2F; &#123;\n        default_type text&#x2F;html;\n        proxy_pass $scheme:&#x2F;&#x2F;$host$request_uri;\n        #proxy_pass http:&#x2F;&#x2F;$host$request_uri;\n        proxy_set_header Host $http_host;\n\n        proxy_buffers 256 8k;\n        proxy_max_temp_file_size 0;\n\n        proxy_connect_timeout 30;\n\n        proxy_cache_valid 200 302 10m;\n        proxy_cache_valid 301 1h;\n        proxy_cache_valid any 1m;\n\n      content_by_lua &#39;\n        --require(&quot;lapis&quot;).serve(&quot;app&quot;)\n      &#39;;\n    &#125;\n  &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>启动Lapis代理，配置FF的代理选项。打开浏览器后发现，可以载入网站的图标，但是正文无法显示出来，返回结果被Lapis拦截了。</p>\n<p>然后，我向群里的朋友 ，求了一份，nginx的正向代理的配置，然后用纯nginx的方式，启动正向代理，代码如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">worker_processes 1;\nerror_log stderr notice;\ndaemon off;\npid logs&#x2F;nginx.pid;\n\nevents &#123;\n  worker_connections 1024;\n&#125;\n\nhttp &#123;\n  include mime.types;\n  default_type  application&#x2F;octet-stream;\n\n  log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;\n                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;\n                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;\n\n  access_log  logs&#x2F;access.log  main;\n  server &#123;\n    resolver 114.114.114.114;\n    resolver_timeout 15s;\n\n    listen 0.0.0.0:8080;\n\n    location &#x2F; &#123;\n        default_type text&#x2F;html;\n        proxy_pass $scheme:&#x2F;&#x2F;$host$request_uri;\n        #proxy_pass http:&#x2F;&#x2F;$host$request_uri;\n        proxy_set_header Host $http_host;\n        proxy_buffers 256 8k;\n        proxy_max_temp_file_size 0;\n        proxy_connect_timeout 30;\n        proxy_cache_valid 200 302 10m;\n        proxy_cache_valid 301 1h;\n        proxy_cache_valid any 1m;\n    &#125;\n  &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后用传统的方式运行nginx</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">nginx -p &#96;pwd&#96; conf&#x2F;nginx.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>重新刷新浏览器，OK，结果出现。</p>\n<p><strong>后记：</strong></p>\n<p>其实，浏览器无返回结果的根原因，不是因为用了lapis起动工程，而是在lapis创建的nginx.conf中，定义了content_by_lua，却没有做任何的返回处理，造成的返回了空白网页。</p>\n<p>如果还想用lapis server的方式启动正向代理，就把下面的代码注释掉。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">#content_by_lua &#39;\n#  --require(&quot;lapis&quot;).serve(&quot;app&quot;)\n#&#39;;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>","text":"作者：糖果 正文： 利用Openresty服务创建一个正向代理服务器，最开始是想在Lapis创建的工程下直接创建，基本的配置如下面的代吗： 创建一个Lapis工程： lapis new 然后在配置文件里加入，正向代理的配置。 worker_processes $&#123;&#1...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"LVS负载均衡下的Openresty间的主从Redis同步","uid":"1e50e730134daba789397d1d6a4f834b","slug":"old_topic/2016-09-17-238","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.204Z","comments":true,"path":"api/articles/old_topic/2016-09-17-238.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"LVS负载均衡下的Openresty间的主从redis同步 正文： 像一般在多台提供相同服务的Openresty服务前端会挂F5或是Ha,做为负载均衡，因为逻辑关系有时会用共享使用一份Redis，如果这时，使用Redis的主从模式，就可以很好共享一份Redis服务的数据，但从时间...","link":"","photos":[],"count_time":{"symbolsCount":595,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Linux开发者全家福","uid":"e1c15d24208ab78866f391c375d36922","slug":"old_topic/2016-09-17-24","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.187Z","comments":true,"path":"api/articles/old_topic/2016-09-17-24.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}