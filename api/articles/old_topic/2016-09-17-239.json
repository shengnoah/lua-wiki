{"title":"用Lapis工程创建Openresty正向代理服务","uid":"20597ab06842fbc260e3af6d26f03675","slug":"old_topic/2016-09-17-239","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.194Z","comments":true,"path":"api/articles/old_topic/2016-09-17-239.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>作者：糖果</p>\n<p><strong>正文：</strong></p>\n<p>利用Openresty服务创建一个正向代理服务器，最开始是想在Lapis创建的工程下直接创建，基本的配置如下面的代吗：</p>\n<p>创建一个Lapis工程：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lapis new</span><br></pre></td></tr></table></figure>\n<p>然后在配置文件里加入，正向代理的配置。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">worker_processes $&#123;&#123;NUM_WORKERS&#125;&#125;;</span><br><span class=\"line\">error_log stderr notice;</span><br><span class=\"line\">daemon off;</span><br><span class=\"line\">pid logs/nginx.pid;</span><br><span class=\"line\"></span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">  worker_connections 1024;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">  include mime.types;</span><br><span class=\"line\">  default_type  application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">  log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class=\"line\">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class=\"line\">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">  access_log  logs/access.log  main;</span><br><span class=\"line\"></span><br><span class=\"line\">  server &#123;</span><br><span class=\"line\">    resolver 114.114.114.114;</span><br><span class=\"line\">    resolver_timeout 15s;</span><br><span class=\"line\"></span><br><span class=\"line\">    listen $&#123;&#123;PORT&#125;&#125;;</span><br><span class=\"line\">    lua_code_cache $&#123;&#123;CODE_CACHE&#125;&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        default_type text/html;</span><br><span class=\"line\">        proxy_pass $scheme://$host$request_uri;</span><br><span class=\"line\">        #proxy_pass http://$host$request_uri;</span><br><span class=\"line\">        proxy_set_header Host $http_host;</span><br><span class=\"line\"></span><br><span class=\"line\">        proxy_buffers 256 8k;</span><br><span class=\"line\">        proxy_max_temp_file_size 0;</span><br><span class=\"line\"></span><br><span class=\"line\">        proxy_connect_timeout 30;</span><br><span class=\"line\"></span><br><span class=\"line\">        proxy_cache_valid 200 302 10m;</span><br><span class=\"line\">        proxy_cache_valid 301 1h;</span><br><span class=\"line\">        proxy_cache_valid any 1m;</span><br><span class=\"line\"></span><br><span class=\"line\">      content_by_lua &#x27;</span><br><span class=\"line\">        --require(&quot;lapis&quot;).serve(&quot;app&quot;)</span><br><span class=\"line\">      &#x27;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>启动Lapis代理，配置FF的代理选项。打开浏览器后发现，可以载入网站的图标，但是正文无法显示出来，返回结果被Lapis拦截了。</p>\n<p>然后，我向群里的朋友 ，求了一份，nginx的正向代理的配置，然后用纯nginx的方式，启动正向代理，代码如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">worker_processes 1;</span><br><span class=\"line\">error_log stderr notice;</span><br><span class=\"line\">daemon off;</span><br><span class=\"line\">pid logs/nginx.pid;</span><br><span class=\"line\"></span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">  worker_connections 1024;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">  include mime.types;</span><br><span class=\"line\">  default_type  application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">  log_format  main  &#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span><br><span class=\"line\">                      &#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span><br><span class=\"line\">                      &#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">  access_log  logs/access.log  main;</span><br><span class=\"line\">  server &#123;</span><br><span class=\"line\">    resolver 114.114.114.114;</span><br><span class=\"line\">    resolver_timeout 15s;</span><br><span class=\"line\"></span><br><span class=\"line\">    listen 0.0.0.0:8080;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        default_type text/html;</span><br><span class=\"line\">        proxy_pass $scheme://$host$request_uri;</span><br><span class=\"line\">        #proxy_pass http://$host$request_uri;</span><br><span class=\"line\">        proxy_set_header Host $http_host;</span><br><span class=\"line\">        proxy_buffers 256 8k;</span><br><span class=\"line\">        proxy_max_temp_file_size 0;</span><br><span class=\"line\">        proxy_connect_timeout 30;</span><br><span class=\"line\">        proxy_cache_valid 200 302 10m;</span><br><span class=\"line\">        proxy_cache_valid 301 1h;</span><br><span class=\"line\">        proxy_cache_valid any 1m;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后用传统的方式运行nginx</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -p `pwd` conf/nginx.conf</span><br></pre></td></tr></table></figure>\n<p>重新刷新浏览器，OK，结果出现。</p>\n<p><strong>后记：</strong></p>\n<p>其实，浏览器无返回结果的根原因，不是因为用了lapis起动工程，而是在lapis创建的nginx.conf中，定义了content_by_lua，却没有做任何的返回处理，造成的返回了空白网页。</p>\n<p>如果还想用lapis server的方式启动正向代理，就把下面的代码注释掉。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#content_by_lua &#x27;</span><br><span class=\"line\">#  --require(&quot;lapis&quot;).serve(&quot;app&quot;)</span><br><span class=\"line\">#&#x27;;</span><br></pre></td></tr></table></figure>","text":"作者：糖果 正文： 利用Openresty服务创建一个正向代理服务器，最开始是想在Lapis创建的工程下直接创建，基本的配置如下面的代吗： 创建一个Lapis工程： 1lapis new 然后在配置文件里加入，正向代理的配置。 12345678910111213141516171...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"LVS负载均衡下的Openresty间的主从Redis同步","uid":"1e50e730134daba789397d1d6a4f834b","slug":"old_topic/2016-09-17-238","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.204Z","comments":true,"path":"api/articles/old_topic/2016-09-17-238.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"LVS负载均衡下的Openresty间的主从redis同步 正文： 像一般在多台提供相同服务的Openresty服务前端会挂F5或是Ha,做为负载均衡，因为逻辑关系有时会用共享使用一份Redis，如果这时，使用Redis的主从模式，就可以很好共享一份Redis服务的数据，但从时间...","link":"","photos":[],"count_time":{"symbolsCount":588,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Linux开发者全家福","uid":"e1c15d24208ab78866f391c375d36922","slug":"old_topic/2016-09-17-24","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.187Z","comments":true,"path":"api/articles/old_topic/2016-09-17-24.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"","link":"","photos":[],"count_time":{"symbolsCount":0,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}