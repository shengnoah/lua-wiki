{"title":"WebSockets with OpenResty","uid":"5dd63397e730372ad714df83ebd3c1b7","slug":"old_topic/2016-09-17-175","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.737Z","comments":true,"path":"api/articles/old_topic/2016-09-17-175.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<h3>WebSockets with OpenResty</h3> \n<h5>Lua WebSocket Implementation Installation</h5> \n\n<blockquote>This blog post is updated for OpenResty 1.4.2.9.</blockquote> \n\n<p>本文适用于OpenResty 1.4.2.9</p>\n<p>I have been following OpenResty development closely for a while now, but I did never got an inspiration to really try it out, until now. Yichun Zhang (@agentzh) of OpenResty-fame announced that he just released a preliminary WebSockets support for Lua Nginx module (lua-nginx-module). I have been waiting for this to happen.</p>\n<p>I managed to install, and test this on my Mac. Here is how I did it:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ brew install pcre</span><br><span class=\"line\">$ wget http://openresty.org/download/ngx_openresty-1.4.2.9.tar.gz</span><br><span class=\"line\">$ tar zxf ngx_openresty-1.4.2.9.tar.gz</span><br><span class=\"line\">$ cd ngx_openresty-1.4.2.9</span><br><span class=\"line\">$ ./configure \\</span><br><span class=\"line\">    --with-luajit \\</span><br><span class=\"line\">    --with-cc-opt=&quot;-I/usr/local/Cellar/pcre/8.33/include&quot; \\</span><br><span class=\"line\">    --with-ld-opt=&quot;-L/usr/local/Cellar/pcre/8.33/lib&quot;</span><br><span class=\"line\">$ make</span><br><span class=\"line\">$ make install</span><br></pre></td></tr></table></figure>\n\n<p>Now we should have OpenResty installed with Lua module that supports WebSockets at /usr/local/openresty.<br>Next we need to write the WebSockets server code (right now just a stupid echoing server). Again, edit nginx.conf, and add a new location after “location / { … }”:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location /s &#123;</span><br><span class=\"line\">  lua_socket_log_errors off;</span><br><span class=\"line\">  lua_check_client_abort on;</span><br><span class=\"line\">  content_by_lua &#x27;</span><br><span class=\"line\">    local server = require &quot;resty.websocket.server&quot;</span><br><span class=\"line\">    local wb, err = server:new&#123;</span><br><span class=\"line\">      timeout = 5000,</span><br><span class=\"line\">      max_payload_len = 65535</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    if not wb then</span><br><span class=\"line\">      ngx.log(ngx.ERR, &quot;failed to new websocket: &quot;, err)</span><br><span class=\"line\">      return ngx.exit(444)</span><br><span class=\"line\">    end</span><br><span class=\"line\">    while true do</span><br><span class=\"line\">      local data, typ, err = wb:recv_frame()</span><br><span class=\"line\">      if wb.fatal then</span><br><span class=\"line\">        ngx.log(ngx.ERR, &quot;failed to receive frame: &quot;, err)</span><br><span class=\"line\">        return ngx.exit(444)</span><br><span class=\"line\">      end</span><br><span class=\"line\">      if not data then</span><br><span class=\"line\">        local bytes, err = wb:send_ping()</span><br><span class=\"line\">        if not bytes then</span><br><span class=\"line\">          ngx.log(ngx.ERR, &quot;failed to send ping: &quot;, err)</span><br><span class=\"line\">          return ngx.exit(444)</span><br><span class=\"line\">        end</span><br><span class=\"line\">      elseif typ == &quot;close&quot; then break</span><br><span class=\"line\">      elseif typ == &quot;ping&quot; then</span><br><span class=\"line\">        local bytes, err = wb:send_pong()</span><br><span class=\"line\">        if not bytes then</span><br><span class=\"line\">          ngx.log(ngx.ERR, &quot;failed to send pong: &quot;, err)</span><br><span class=\"line\">          return ngx.exit(444)</span><br><span class=\"line\">        end</span><br><span class=\"line\">      elseif typ == &quot;pong&quot; then</span><br><span class=\"line\">        ngx.log(ngx.INFO, &quot;client ponged&quot;)</span><br><span class=\"line\">      elseif typ == &quot;text&quot; then</span><br><span class=\"line\">        local bytes, err = wb:send_text(data)</span><br><span class=\"line\">        if not bytes then</span><br><span class=\"line\">          ngx.log(ngx.ERR, &quot;failed to send text: &quot;, err)</span><br><span class=\"line\">          return ngx.exit(444)</span><br><span class=\"line\">        end</span><br><span class=\"line\">      end</span><br><span class=\"line\">    end</span><br><span class=\"line\">    wb:send_close()</span><br><span class=\"line\">  &#x27;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>Looks great. Now add websockets.html to /usr/local/openresty/nginx/html directory:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">var</span> ws = <span class=\"literal\">null</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">function</span> <span class=\"title function_\">connect</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">if</span> (ws !== <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> <span class=\"title function_\">log</span>(<span class=\"string\">&#x27;already connected&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  ws = <span class=\"keyword\">new</span> <span class=\"title class_\">WebSocket</span>(<span class=\"string\">&#x27;ws://127.0.0.1/s/&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  ws.<span class=\"property\">onopen</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">log</span>(<span class=\"string\">&#x27;connected&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  ws.<span class=\"property\">onerror</span> = <span class=\"keyword\">function</span> (<span class=\"params\">error</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">log</span>(error);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  ws.<span class=\"property\">onmessage</span> = <span class=\"keyword\">function</span> (<span class=\"params\">e</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">log</span>(<span class=\"string\">&#x27;recv: &#x27;</span> + e.<span class=\"property\">data</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  ws.<span class=\"property\">onclose</span> = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"title function_\">log</span>(<span class=\"string\">&#x27;disconnected&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    ws = <span class=\"literal\">null</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">function</span> <span class=\"title function_\">disconnect</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">if</span> (ws === <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> <span class=\"title function_\">log</span>(<span class=\"string\">&#x27;already disconnected&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  ws.<span class=\"title function_\">close</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">function</span> <span class=\"title function_\">send</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">if</span> (ws === <span class=\"literal\">null</span>) <span class=\"keyword\">return</span> <span class=\"title function_\">log</span>(<span class=\"string\">&#x27;please connect first&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">var</span> text = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;text&#x27;</span>).<span class=\"property\">value</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;text&#x27;</span>).<span class=\"property\">value</span> = <span class=\"string\">&quot;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"title function_\">log</span>(<span class=\"string\">&#x27;send: &#x27;</span> + text);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  ws.<span class=\"title function_\">send</span>(text);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">function</span> <span class=\"title function_\">log</span>(<span class=\"params\">text</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">var</span> li = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;li&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  li.<span class=\"title function_\">appendChild</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">createTextNode</span>(text));</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;log&#x27;</span>).<span class=\"title function_\">appendChild</span>(li);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">onsubmit</span>=<span class=\"string\">&quot;return send();&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;return connect();&quot;</span>&gt;</span></span><br><span class=\"line\">      Connect</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;button&quot;</span> <span class=\"attr\">onclick</span>=<span class=\"string\">&quot;return disconnect();&quot;</span>&gt;</span></span><br><span class=\"line\">      Disconnect</span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;submit&quot;</span>&gt;</span>Send<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ol</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;log&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">ol</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>And now start the nginx with:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo /usr/local/openresty/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>\n\n<p>Then open a browser that has WebSocket support enabled, and open following url:<br><a href=\"http://127.0.0.1/websockets.html\">http://127.0.0.1/websockets.html</a></p>\n<p>Lua Web Sockets in Action<br>To guard against half-open TCP connections, it is a good idea to enable TCP keepalive in your Nginx listen configuration directive:</p>\n<p>so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];</p>\n<p>for example:</p>\n<p>listen 80 so_keepalive=2s:2s:8;<br>(nginx documentation about so_keepalive)<br>You could also do this on system level, if you wish:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sysctl net.inet.tcp.always_keepalive</span><br></pre></td></tr></table></figure>\n\n<p>net.inet.tcp.always_keepalive: 0</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo sysctl -w net.inet.tcp.always_keepalive=1</span><br></pre></td></tr></table></figure>\n\n<p>net.inet.tcp.always_keepalive: 0 -&gt; 1<br>(for Linux, see: Using TCP keepalive under Linux)</p>\n<p>编辑：糖果<br>作者：Aapo Talvensaari</p>\n","text":"WebSockets with OpenResty Lua WebSocket Implementation Installation This blog post is updated for OpenResty 1.4.2.9. 本文适用于OpenResty 1.4.2.9 ...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">WebSockets with OpenResty</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\"><span class=\"toc-text\">Lua WebSocket Implementation Installation</span></a></li></ol></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"快讯","uid":"92d99ee2d13a8d36703ac725a2bba93f","slug":"old_topic/2016-09-17-171","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.737Z","comments":true,"path":"api/articles/old_topic/2016-09-17-171.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"2015/11/26 人民邮电出版社-异步社区-两本免费电子书 众妙之门——国际顶级Web设计师成功法则 众妙之门——移动Web设计精髓 过期Openresty 2015大会现场直播请点击进入观看： ","link":"","photos":[],"count_time":{"symbolsCount":104,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Vanilla框架静态的路由使用","uid":"1d32e6a3ca5529481390baf7789466f8","slug":"old_topic/2016-09-17-176","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.737Z","comments":true,"path":"api/articles/old_topic/2016-09-17-176.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 这次我们来看一下，如何在Vanilla下，追加新的路由。 在Vanilla中追加一个新的路由，需要添加两个文件即可完成。 我们进入工程根目录下的application目录，分别在controllers文件夹、views文件夹下肯创建两个文件。 1.创建controll...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}