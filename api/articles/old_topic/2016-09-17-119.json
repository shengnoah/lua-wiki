{"title":"Lua Lapis的模板系统etlua","uid":"e071224e90a59c391520b50afdda50c7","slug":"old_topic/2016-09-17-119","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.187Z","comments":true,"path":"api/articles/old_topic/2016-09-17-119.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>作者：糖果</p>\n<p>主流的WEB开发框架都有模板系统，或是支持第三方的模板插件。Lua Lapis也不例外，也有自己的模板系统，叫做etlua。</p>\n<p>说到模板系统，另外要提一下静态资源的问题，模板的话难免要使用css、js、image这种静态文件，为了扫除一部分障碍先说一下Openresty是如何设定静态目标的。（相对Django相对要简单很多。）</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">location &#x2F;static&#x2F; &#123;                                                                                                                                                           \n  alias static&#x2F;;                                                                                                                                                              \n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>在nginx.conf中加入这句话就可以了，在用lapis命令创建工程的时候就已经默认加入了。</p>\n<p>对比看一下django对static的配置。</p>\n<p>Django的静态文件设定，与Nginx的static设定方式存在差异，需要在对应应用的setting文件中进行配置，配置的内容如下：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">SITE_ROOT<span class=\"token operator\">=</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>abspath<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>dirname<span class=\"token punctuation\">(</span>__file__<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token string\">'..'</span><span class=\"token punctuation\">)</span>\n\nSTATIC_ROOT <span class=\"token operator\">=</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>SITE_ROOT<span class=\"token punctuation\">,</span><span class=\"token string\">'static'</span><span class=\"token punctuation\">)</span>\n\nSTATIC_URL<span class=\"token operator\">=</span><span class=\"token string\">'/static/'</span>\n\nSTATICFILES_DIRS <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n\n    <span class=\"token punctuation\">(</span><span class=\"token string\">\"css\"</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>STATIC_ROOT<span class=\"token punctuation\">,</span><span class=\"token string\">'css'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token punctuation\">(</span><span class=\"token string\">\"js\"</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>STATIC_ROOT<span class=\"token punctuation\">,</span><span class=\"token string\">'js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n   <span class=\"token punctuation\">(</span><span class=\"token string\">\"img\"</span><span class=\"token punctuation\">,</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>STATIC_ROOT<span class=\"token punctuation\">,</span><span class=\"token string\">'img'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在工程的Static目录下，只要添加一个新的静态目录，需追加定义到&quot;STATICFILES_DIRS&quot;中。</p>\n<p>下面就是Lapis使用模板的例子。</p>\n<p>1.创建工程。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkdir tangguo\ncd tangguo\nlapis new <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>创建一个新工程后，系统创建了三个文件。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">app.moon mime.types nginx.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>具体文件的内容功能不介绍了，之前一篇已经写过了。</p>\n<p>2.创建模板目录与模板文件。</p>\n<p>使用lapis模板，要在默认生成的目录构成的基础上，新创建一个目录：“views” 目录 。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mkdir views<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>之后所有的ETLUA模板文件，都会发到这个目录中。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">cd views<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>我们创建一个最简单的模板文件。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">touch index.etlua\necho &quot;say hi&quot; &gt; index.etlua<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">index.etlua\nsay hi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>3.创建后端LUA代码。</p>\n<p>让Lapis Lua代码支持模板，只要在原有的app.lua中加入一个“开关”和一段处理代码。</p>\n<p>a).  加入一行代码，打开etlua支持。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">app:enable(&quot;etlua&quot;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>b).加入对应的路入处理代码，此处的处理是什么都不做，只渲染一表模板网页。</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">app<span class=\"token punctuation\">:</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/index\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>                                                                                             \n       <span class=\"token comment\">--这就是LUA Web的风格，只需要一句，Lapis就会去views</span>\n       <span class=\"token comment\">--目录下找到index.etlua，然后进行渲染显示。</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">&#123;</span> render <span class=\"token operator\">=</span> <span class=\"token string\">\"index\"</span><span class=\"token punctuation\">&#125;</span>                                                                                             \n<span class=\"token keyword\">end</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>总结：</p>\n<p>以上基本上是最简单的Lapis模板创建流程了。</p>\n<p>回到tangguo目录下，运行lapis server。</p>\n<p>打开浏览器，输入<a href=\"http://127.0.0.1:8000\">http://127.0.0.1:8000</a>，就会在浏览器上显示文本“say hi”。</p>\n<p>PS:在用VIM编辑.etlua文件的时候，默认是不显示语法高亮的，打开高亮需要在第一行加入：</p>\n<!DOCTYPE html>\n<p>PS:转载到其它平台请注明作者姓名及原文链接，请勿用于商业用途。</p>\n","text":"作者：糖果 主流的WEB开发框架都有模板系统，或是支持第三方的模板插件。Lua Lapis也不例外，也有自己的模板系统，叫做etlua。 说到模板系统，另外要提一下静态资源的问题，模板的话难免要使用css、js、image这种静态文件，为了扫除一部分障碍先说一下Openresty...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"以“99”结尾，奇数价格定价的来由。","uid":"b03c3afe71339c53664b24cdf7511d2e","slug":"old_topic/2016-09-17-118","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.185Z","comments":true,"path":"api/articles/old_topic/2016-09-17-118.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"the answer to the origin of this strategy is unclear. [3] There are 3 different theories of its history: 这个答案的最开始渊源并已经不很清楚了。关于这个，有三种不同的历史说法。...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"DokuWiki系统介绍与部署安装","uid":"320b17a08211ddc564acc990b3ffd7ba","slug":"old_topic/2016-09-17-120","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.216Z","comments":true,"path":"api/articles/old_topic/2016-09-17-120.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 http://www.lua.ren DokuWiki 这个Wiki系统之前都没有用过，因为最近一个机会使用了DokuWiki，感觉Wiki系统也大有内容。XML-RPC, Atom协议，Wiki的进化越来越强大。DokuWiki是一个轻量级的 Wiki系统。对说需求...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}