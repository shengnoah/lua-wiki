{"title":"使用Openresty编写WAF插件","uid":"12c80aa2a75d231f673b151b589c54e9","slug":"old_topic/2016-09-17-387","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.180Z","comments":true,"path":"api/articles/old_topic/2016-09-17-387.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>对于有的站点来说，除了一些上传文件的场景，基本上都是GET操作比较多，针对一些GET请求中存在的异常数据，可以在pipeline写一个小的WAF插件来拦截。</p>\n<p>直接使用了X-WAF的规则文件：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">[\n&#123;&quot;Id&quot;:26,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;\\\\.\\\\.&#x2F;&quot;&#125;,\n&#123;&quot;Id&quot;:27,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;\\\\:\\\\$&quot;&#125;,\n&#123;&quot;Id&quot;:28,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;\\\\$\\\\&#123;&quot;&#125;,\n&#123;&quot;Id&quot;:29,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;select.+(from|limit)&quot;&#125;,\n&#123;&quot;Id&quot;:30,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;(?:(union(.*?)select))&quot;&#125;,\n&#123;&quot;Id&quot;:31,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;having|rongjitest&quot;&#125;,\n&#123;&quot;Id&quot;:32,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;sleep\\\\((\\\\s*)(\\\\d*)(\\\\s*)\\\\)&quot;&#125;,\n&#123;&quot;Id&quot;:33,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;benchmark\\\\((.*)\\\\,(.*)\\\\)&quot;&#125;,\n&#123;&quot;Id&quot;:34,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;base64_decode\\\\(&quot;&#125;,\n&#123;&quot;Id&quot;:35,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;(?:from\\\\W+information_schema\\\\W)&quot;&#125;,\n&#123;&quot;Id&quot;:36,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;(?:(?:current_)user|database|schema|connection_id)\\\\s*\\\\(&quot;&#125;,\n&#123;&quot;Id&quot;:37,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;(?:etc\\\\&#x2F;\\\\W*passwd)&quot;&#125;,\n&#123;&quot;Id&quot;:38,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;into(\\\\s+)+(?:dump|out)file\\\\s*&quot;&#125;,\n&#123;&quot;Id&quot;:39,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;group\\\\s+by.+\\\\(&quot;&#125;,\n&#123;&quot;Id&quot;:40,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;xwork.MethodAccessor&quot;&#125;,\n&#123;&quot;Id&quot;:41,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;(?:define|eval|file_get_contents|include|require|require_once|shell_exec|phpinfo|system|passthru|preg_\\\\w+|execute|echo|print|print_r|var_dump|(fp)open|alert|showmodaldialog)\\\\(&quot;&#125;,\n&#123;&quot;Id&quot;:42,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;xwork\\\\.MethodAccessor&quot;&#125;,\n&#123;&quot;Id&quot;:43,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;(gopher|doc|php|glob|file|phar|zlib|ftp|ldap|dict|ogg|data)\\\\:\\\\&#x2F;&quot;&#125;,\n&#123;&quot;Id&quot;:44,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;java\\\\.lang&quot;&#125;,\n&#123;&quot;Id&quot;:45,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;\\\\$_(GET|post|cookie|files|session|env|phplib|GLOBALS|SERVER)\\\\[&quot;&#125;\n]\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>代码如下：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> buffer <span class=\"token operator\">=</span> require <span class=\"token string\">\"buffer\"</span>\n<span class=\"token keyword\">local</span> bjson <span class=\"token operator\">=</span> require <span class=\"token string\">\"utils.bjson\"</span>\n\n<span class=\"token keyword\">local</span> waf_plugin <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">local</span> src <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n   args<span class=\"token operator\">=</span><span class=\"token string\">\"route args\"</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">local</span> sink <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    name <span class=\"token operator\">=</span> <span class=\"token string\">\"route_plugin\"</span><span class=\"token punctuation\">,</span>\n    ver <span class=\"token operator\">=</span> <span class=\"token string\">\"0.1\"</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> waf_plugin<span class=\"token punctuation\">.</span><span class=\"token function\">output</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> list<span class=\"token punctuation\">,</span> flg<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> flg <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">then</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">end</span>\n    <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>list<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span> <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span>\n\n\n<span class=\"token keyword\">function</span> waf_plugin<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> stream<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">.</span>metadata<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n        self<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>v\n    <span class=\"token keyword\">end</span> \n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">function</span> waf_plugin<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>source <span class=\"token operator\">=</span> src \n    self<span class=\"token punctuation\">.</span>sink <span class=\"token operator\">=</span> sink\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">function</span> waf_plugin<span class=\"token punctuation\">.</span><span class=\"token function\">action</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> stream<span class=\"token punctuation\">)</span> \n    <span class=\"token keyword\">local</span> rules <span class=\"token operator\">=</span> bjson<span class=\"token punctuation\">.</span><span class=\"token function\">loadf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./data/json/waf_plugin_rule.rule\"</span><span class=\"token punctuation\">,</span> env<span class=\"token punctuation\">)</span> \n    <span class=\"token keyword\">local</span> meta <span class=\"token operator\">=</span> bjson<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>rules<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>meta<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n        <span class=\"token keyword\">local</span> rulematch <span class=\"token operator\">=</span> ngx<span class=\"token punctuation\">.</span>re<span class=\"token punctuation\">.</span>find\n        <span class=\"token keyword\">if</span> <span class=\"token function\">rulematch</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token string\">'RuleItem'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"jo\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">then</span>\n            <span class=\"token keyword\">local</span> tpl <span class=\"token operator\">=</span> require <span class=\"token string\">\"render\"</span>\n            ngx<span class=\"token punctuation\">.</span>header<span class=\"token punctuation\">[</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'text/html; charset=UTF-8'</span>\n            ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>tpl<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./views/waf.html\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span>timestamp<span class=\"token operator\">=</span>ngx<span class=\"token punctuation\">.</span><span class=\"token function\">localtime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">end</span> \n    <span class=\"token keyword\">end</span> \n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">,</span>  self<span class=\"token punctuation\">.</span>sink  \n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">function</span> waf_plugin<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> param<span class=\"token punctuation\">)</span>\n    self<span class=\"token punctuation\">.</span>sink<span class=\"token punctuation\">[</span><span class=\"token string\">'found_flg'</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token keyword\">false</span>\n    <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n         self<span class=\"token punctuation\">.</span>sink<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> v\n    <span class=\"token keyword\">end</span>\n    self<span class=\"token punctuation\">:</span><span class=\"token function\">action</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>sink<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>source<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>sink\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">return</span> waf_plugin<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在pipeline上加入这个插件：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> pipeline <span class=\"token operator\">=</span> require <span class=\"token string\">\"wario.pipeline\"</span>\n<span class=\"token keyword\">local</span> status <span class=\"token operator\">=</span> pipeline<span class=\"token punctuation\">:</span><span class=\"token function\">new</span> <span class=\"token punctuation\">&#123;</span>\n    require<span class=\"token string\">\"wario.plugin.content.httpsrc_plugin\"</span><span class=\"token punctuation\">,</span>\n    require<span class=\"token string\">\"wario.plugin.content.blockip_plugin\"</span><span class=\"token punctuation\">,</span>\n    require<span class=\"token string\">\"wario.plugin.content.rewrite_plugin\"</span><span class=\"token punctuation\">,</span>\n    require<span class=\"token string\">\"wario.plugin.content.route_plugin\"</span><span class=\"token punctuation\">,</span>\n    require<span class=\"token string\">\"wario.plugin.content.waf_plugin\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">return</span> pipeline<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>作者：糖果</p>\n<p>PS:转载到其它平台请注明作者姓名及原文链接，请勿用于商业用途。</p>\n<p><a href=\"http://www.candylab.net\">糖果实验室</a></p>\n<p><a href=\"http://www.candylab.net\">http://www.candylab.net</a></p>\n","text":"对于有的站点来说，除了一些上传文件的场景，基本上都是GET操作比较多，针对一些GET请求中存在的异常数据，可以在pipeline写一个小的WAF插件来拦截。 直接使用了X-WAF的规则文件： [ &#123;&quot;Id&quot;:26,&quot;RuleType&quo...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"进程调试工具","uid":"3dbf10926df36a20b5bcd08982cc5ba0","slug":"old_topic/2016-09-17-388","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.186Z","comments":true,"path":"api/articles/old_topic/2016-09-17-388.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"查看TCP链接状态 netstat -n | awk '/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;' ps -A -o stat,ppid,pid,cmd | grep -e '^[Z...","link":"","photos":[],"count_time":{"symbolsCount":341,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"使用windump监控流量","uid":"2eb9778cfe15235d511c05b2278c1e5d","slug":"old_topic/2016-09-17-389","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.189Z","comments":true,"path":"api/articles/old_topic/2016-09-17-389.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"windump相关于linux和mac上的tcpdump，有些场景在windows平台上使用windump要比wireshark方便一些,wireshark是GUI形式的，还支持lua插件，有机会我们介绍wireshark的lua插件，windump是一个分析tcp/udp/ic...","link":"","photos":[],"count_time":{"symbolsCount":810,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}