{"title":"使用Openresty编写WAF插件","uid":"12c80aa2a75d231f673b151b589c54e9","slug":"old_topic/2016-09-17-387","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.180Z","comments":true,"path":"api/articles/old_topic/2016-09-17-387.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>对于有的站点来说，除了一些上传文件的场景，基本上都是GET操作比较多，针对一些GET请求中存在的异常数据，可以在pipeline写一个小的WAF插件来拦截。</p>\n<p>直接使用了X-WAF的规则文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">&#123;&quot;Id&quot;:26,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;\\\\.\\\\./&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:27,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;\\\\:\\\\$&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:28,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;\\\\$\\\\&#123;&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:29,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;select.+(from|limit)&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:30,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;(?:(union(.*?)select))&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:31,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;having|rongjitest&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:32,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;sleep\\\\((\\\\s*)(\\\\d*)(\\\\s*)\\\\)&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:33,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;benchmark\\\\((.*)\\\\,(.*)\\\\)&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:34,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;base64_decode\\\\(&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:35,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;(?:from\\\\W+information_schema\\\\W)&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:36,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;(?:(?:current_)user|database|schema|connection_id)\\\\s*\\\\(&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:37,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;(?:etc\\\\/\\\\W*passwd)&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:38,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;into(\\\\s+)+(?:dump|out)file\\\\s*&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:39,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;group\\\\s+by.+\\\\(&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:40,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;xwork.MethodAccessor&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:41,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;(?:define|eval|file_get_contents|include|require|require_once|shell_exec|phpinfo|system|passthru|preg_\\\\w+|execute|echo|print|print_r|var_dump|(fp)open|alert|showmodaldialog)\\\\(&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:42,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;xwork\\\\.MethodAccessor&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:43,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;(gopher|doc|php|glob|file|phar|zlib|ftp|ldap|dict|ogg|data)\\\\:\\\\/&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:44,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;java\\\\.lang&quot;&#125;,</span><br><span class=\"line\">&#123;&quot;Id&quot;:45,&quot;RuleType&quot;:&quot;cookie&quot;,&quot;RuleItem&quot;:&quot;\\\\$_(GET|post|cookie|files|session|env|phplib|GLOBALS|SERVER)\\\\[&quot;&#125;</span><br><span class=\"line\">]</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>代码如下：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> buffer = <span class=\"built_in\">require</span> <span class=\"string\">&quot;buffer&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> bjson = <span class=\"built_in\">require</span> <span class=\"string\">&quot;utils.bjson&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> waf_plugin = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> src = &#123;</span><br><span class=\"line\">   args=<span class=\"string\">&quot;route args&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">local</span> sink = &#123;</span><br><span class=\"line\">    name = <span class=\"string\">&quot;route_plugin&quot;</span>,</span><br><span class=\"line\">    ver = <span class=\"string\">&quot;0.1&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">waf_plugin.output</span><span class=\"params\">(self, list, flg)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> flg == <span class=\"number\">0</span> <span class=\"keyword\">then</span> <span class=\"keyword\">return</span> <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(list) <span class=\"keyword\">do</span> <span class=\"built_in\">print</span>(k,v) <span class=\"keyword\">end</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">waf_plugin.push</span><span class=\"params\">(self, stream)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(stream.metadata) <span class=\"keyword\">do</span></span><br><span class=\"line\">        <span class=\"built_in\">self</span>.source[k]=v</span><br><span class=\"line\">    <span class=\"keyword\">end</span> </span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">waf_plugin.init</span><span class=\"params\">(self)</span></span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>.source = src </span><br><span class=\"line\">    <span class=\"built_in\">self</span>.sink = sink</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">waf_plugin.action</span><span class=\"params\">(self, stream)</span></span> </span><br><span class=\"line\">    <span class=\"keyword\">local</span> rules = bjson.loadf(<span class=\"string\">&quot;./data/json/waf_plugin_rule.rule&quot;</span>, env) </span><br><span class=\"line\">    <span class=\"keyword\">local</span> meta = bjson.decode(rules)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(meta) <span class=\"keyword\">do</span></span><br><span class=\"line\">        <span class=\"keyword\">local</span> rulematch = ngx.re.<span class=\"built_in\">find</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> rulematch(stream.request.url, v[<span class=\"string\">&#x27;RuleItem&#x27;</span>], <span class=\"string\">&quot;jo&quot;</span>) <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"keyword\">local</span> tpl = <span class=\"built_in\">require</span> <span class=\"string\">&quot;render&quot;</span></span><br><span class=\"line\">            ngx.header[<span class=\"string\">&#x27;Content-Type&#x27;</span>] = <span class=\"string\">&#x27;text/html; charset=UTF-8&#x27;</span></span><br><span class=\"line\">            ngx.say(tpl.render(<span class=\"string\">&quot;./views/waf.html&quot;</span>, &#123;timestamp=ngx.localtime()&#125;))</span><br><span class=\"line\">        <span class=\"keyword\">end</span> </span><br><span class=\"line\">    <span class=\"keyword\">end</span> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">self</span>.source,  <span class=\"built_in\">self</span>.sink  </span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">waf_plugin.match</span><span class=\"params\">(self, param)</span></span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>.sink[<span class=\"string\">&#x27;found_flg&#x27;</span>]=<span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> k,v <span class=\"keyword\">in</span> <span class=\"built_in\">pairs</span>(<span class=\"built_in\">self</span>.source) <span class=\"keyword\">do</span></span><br><span class=\"line\">         <span class=\"built_in\">self</span>.sink[k] = v</span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"built_in\">self</span>:action(<span class=\"built_in\">self</span>.sink)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">self</span>.source, <span class=\"built_in\">self</span>.sink</span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> waf_plugin</span><br></pre></td></tr></table></figure>\n<p>在pipeline上加入这个插件：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">local</span> pipeline = <span class=\"built_in\">require</span> <span class=\"string\">&quot;wario.pipeline&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> <span class=\"built_in\">status</span> = pipeline:new &#123;</span><br><span class=\"line\">    <span class=\"built_in\">require</span><span class=\"string\">&quot;wario.plugin.content.httpsrc_plugin&quot;</span>,</span><br><span class=\"line\">    <span class=\"built_in\">require</span><span class=\"string\">&quot;wario.plugin.content.blockip_plugin&quot;</span>,</span><br><span class=\"line\">    <span class=\"built_in\">require</span><span class=\"string\">&quot;wario.plugin.content.rewrite_plugin&quot;</span>,</span><br><span class=\"line\">    <span class=\"built_in\">require</span><span class=\"string\">&quot;wario.plugin.content.route_plugin&quot;</span>,</span><br><span class=\"line\">    <span class=\"built_in\">require</span><span class=\"string\">&quot;wario.plugin.content.waf_plugin&quot;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> pipeline</span><br></pre></td></tr></table></figure>\n<p>作者：糖果</p>\n<p>PS:转载到其它平台请注明作者姓名及原文链接，请勿用于商业用途。</p>\n<p><a href=\"http://www.candylab.net\">糖果实验室</a></p>\n<p><a href=\"http://www.candylab.net\">http://www.candylab.net</a></p>\n","text":"对于有的站点来说，除了一些上传文件的场景，基本上都是GET操作比较多，针对一些GET请求中存在的异常数据，可以在pipeline写一个小的WAF插件来拦截。 直接使用了X-WAF的规则文件： 1234567891011121314151617181920212223[&#123;...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lua的table复制copy","uid":"d63383a09ac480bfeab8c376afa1f147","slug":"old_topic/2016-09-17-385","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.228Z","comments":true,"path":"api/articles/old_topic/2016-09-17-385.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"源代码实现，来至于RESTY-HTTP 代码如下： 1234567891011121314151617-- Returns a new table, recursively copied from the one given.---- @param table table to ...","link":"","photos":[],"count_time":{"symbolsCount":522,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"TMUX最常用操作命令","uid":"65ce57f5fdb9c6ca938fd44776fc3ed9","slug":"old_topic/2016-09-17-386","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.156Z","comments":true,"path":"api/articles/old_topic/2016-09-17-386.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 一般情况下，当你用SSH链接VPS，然后关掉terminal的操作窗口时，所有的当前操作都结束了。而如果用TMUX,当前正在运行的非后台操作会话还会存在，下面是TMUX最常用的操作了。 1.创建新会话 tmux new -s candylab 2.选择新会话 tmux...","link":"","photos":[],"count_time":{"symbolsCount":393,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}