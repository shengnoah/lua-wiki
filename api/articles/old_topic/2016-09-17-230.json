{"title":"如何在Lapis中响应POST,GET方法","uid":"2bf41dddbaf54ce129f68a67d1688ceb","slug":"old_topic/2016-09-17-230","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.171Z","comments":true,"path":"api/articles/old_topic/2016-09-17-230.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>by 糖果</p>\n<h3>How do I respond to GET, POST, DELETE or other HTTP verbs?</h3> \n如何响应GET,, POST, DELETE等动作。\n<blockquote>The respond_to action decorator function gives a basic framework for running different code depending on the HTTP method.</blockquote> \n<p>在同一个路由中响应类似get,post这种用户请求，关键是要使用respond_to这个装饰器。</p>\n<blockquote>try_to_login is a hypothetical functions, and not regularly globally available</blockquote> \n<p>try_to_login,只是一个假的，用说明可能会调用的驱动函数。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">local lapis &#x3D; require(&quot;lapis&quot;)\nlocal app &#x3D; lapis.Application()\nlocal respond_to &#x3D; require(&quot;lapis.application&quot;).respond_to\n\napp:match(&quot;&#x2F;&quot;, respond_to(&#123;\n  -- do common setup\n  before &#x3D; function(self)\n    if self.session.current_user then\n      self:write(&#123; redirect_to &#x3D; &quot;&#x2F;&quot; &#125;)\n    end\n  end,\n  -- render the view\n  GET &#x3D; function(self)\n    return &#123; render &#x3D; true &#125;\n  end,\n  -- handle the form submission\n  POST &#x3D; function(self)\n    self.session.current_user &#x3D;\n      try_to_login(self.params.username, self.params.password)\n\n    return &#123; redirect_to &#x3D; &quot;&#x2F;&quot; &#125;\n  end\n&#125;))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在一个函数里声明了三个闭包函数，before、GET、POST，其中的GET,POST函数就是用来响应不同的类型请求。</p>\n","text":"by 糖果 How do I respond to GET, POST, DELETE or other HTTP verbs? 如何响应GET,, POST, DELETE等动作。 The respond_to action decorator function gives a...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">How do I respond to GET, POST, DELETE or other HTTP verbs?</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua web framework Lapis(日文版)","uid":"4da29ce129daf83f615c694be3984fda","slug":"old_topic/2016-09-17-231","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.164Z","comments":true,"path":"api/articles/old_topic/2016-09-17-231.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"Lua web framework Lapis 前记： 这篇的原文，原文是一篇很老的文章，一直以来也没有翻译。原文其实是有配置的，下面只是其中的一小段。 正文： Lua web framework Lapis LuaのWeb Frameworkの需要はほとんどないと思いますが、L...","link":"","photos":[],"count_time":{"symbolsCount":879,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"ES（Elasticsearch）常用操作与Python客户端","uid":"e623d764e660785c48cbd0cf5044deb0","slug":"old_topic/2016-09-17-232","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.232Z","comments":true,"path":"api/articles/old_topic/2016-09-17-232.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"ES常用操作 之前老板本的ES使用的创建索引的指令已经失效了。 curl -X PUT &#39;http:&#x2F;&#x2F;127.0.0.1:9200&#x2F;testcase&#x2F;&#39; -d &#39; index: number_of_shards:3...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}