{"title":"Tenjin1.1.1(基于嵌入Python的快速全机能模版引擎)","uid":"a26e6182024b9cb41b1b957f9eda51b7","slug":"old_topic/2016-09-17-92","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.756Z","comments":true,"path":"api/articles/old_topic/2016-09-17-92.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>介绍<br>pyTenjin是一个非常快速的全机能模版引擎。可以嵌入到python模版文件中的语句和表达式里面。pyTenjin会把它转化成Python脚本并且评估它。</p>\n<p>！！友情提示！！<br>pyTenjin足够稳定 ，但是还是基于beta版本发布的。这就意味着未来API的式样在未来会修改。</p>\n<p><strong>机能特点</strong> </p>\n<h3>非常快速</h3> \n     比Django快10倍，比Cheetah快4倍，比Mako快2倍。\n     另外tenjin.py加载的很快轻量（对CGI程序很重要）\n\n<h3>全机能</h3> \n     可组装的布局模版\n     可拆分（局部变量）缓存\n     捕获\n     预处理\n\n<h3>学习简单</h3> \n     你不需要学习特别的模版语言。\n\n<h3>支持GAE</h3> \n     \n<p>用户手册和变更细节请看连接。</p>\n<p>安装</p>\n<p>1.使用easy_ install安装。</p>\n<p>$ sudo easy_install Tenjin</p>\n<p>2.用源代码安装。<br>$ tar xzf Tenjin-X.X.X.tar.gz<br>$ cd Tenjin-X.X.X<br>$ sudo python setup.py install</p>\n<p>更简单的办法是，直接将’lib/tenjin.py’和’bin/pytenjin’这两个文件复制到要使用的那个目录。</p>\n<p>（可选项目）安装PyYAML</p>\n<p>例子<br>example.pyhtml</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?py # -*- coding: utf-8 -*- ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?py #@ARGS items ?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?py cycle = new_cycle(&#x27;odd&#x27;, &#x27;even&#x27;) ?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?py for item in items: ?&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;#&#123;cycle()&#125;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>$&#123;item&#125;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?py #endfor ?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>example.py:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> tenjin</span><br><span class=\"line\"><span class=\"comment\">#tenjin.set_template_encoding(&#x27;utf-8&#x27;)  # optional (defualt &#x27;utf-8&#x27;)</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> tenjin.helpers <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> tenjin.html <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"comment\">#import tenjin.gae; tenjin.gae.init()   # for Google App Engine</span></span><br><span class=\"line\">engine = tenjin.Engine()</span><br><span class=\"line\">context = &#123; <span class=\"string\">&#x27;items&#x27;</span>: [<span class=\"string\">&#x27;&lt;AAA&gt;&#x27;</span>, <span class=\"string\">&#x27;B&amp;B&#x27;</span>, <span class=\"string\">&#x27;&quot;CCC&quot;&#x27;</span>] &#125;</span><br><span class=\"line\">html = engine.render(<span class=\"string\">&#x27;example.pyhtml&#x27;</span>, context)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(html)</span><br></pre></td></tr></table></figure>\n\n\n<p>Output:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ python example.py</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;odd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">AAA</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;even&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>B&amp;B<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">tr</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;odd&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span>&quot;CCC&quot;<span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br></pre></td></tr></table></figure>","text":"介绍pyTenjin是一个非常快速的全机能模版引擎。可以嵌入到python模版文件中的语句和表达式里面。pyTenjin会把它转化成Python脚本并且评估它。 ！！友情提示！！pyTenjin足够稳定 ，但是还是基于beta版本发布的。这就意味着未来API的式样在未来会修改。 ...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">非常快速</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">全机能</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">学习简单</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">支持GAE</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"立即调用函数表达式(IIFE)","uid":"f779aebeb656b0c73cae40e6a7b49f03","slug":"old_topic/2016-09-17-94","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.757Z","comments":true,"path":"api/articles/old_topic/2016-09-17-94.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"可能你没注意，对于一些术语我还是有点小固执。因此，会被之后听起来流行的东西误导。JavaScript术语“自运行匿名函数” ","link":"","photos":[],"count_time":{"symbolsCount":62,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"新版网站的PS效果图。","uid":"fe64fe43a5794c7d2cd2d7aeb68fd561","slug":"old_topic/2016-09-17-96","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.757Z","comments":true,"path":"api/articles/old_topic/2016-09-17-96.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"没有对细节渲染的太多，只想用纯的CSS,HTML进行网页布局，不在使用bootstrap的现成部件。 ","link":"","photos":[],"count_time":{"symbolsCount":51,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}