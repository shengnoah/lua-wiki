{"title":"Lapis框架的常用处理方法","uid":"193d30d1b1f932871a7703a692d3a8f9","slug":"old_topic/2016-09-17-351","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.152Z","comments":true,"path":"api/articles/old_topic/2016-09-17-351.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>作者：糖果</p>\n<h3 id=\"在lapis中处理get-post-put\"><a class=\"markdownIt-Anchor\" href=\"#在lapis中处理get-post-put\"></a> 在Lapis中处理GET、POST、PUT。</h3>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">import respond_to from require <span class=\"token string\">\"lapis.application\"</span>\nclass App extends lapis<span class=\"token punctuation\">.</span>Application\n  @enable <span class=\"token string\">\"etlua\"</span>\n  <span class=\"token string\">\"/login\"</span><span class=\"token punctuation\">:</span> <span class=\"token function\">respond_to</span> <span class=\"token punctuation\">&#123;</span>\n    GET<span class=\"token punctuation\">:</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">\"login get\"</span>\n    POST<span class=\"token punctuation\">:</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">\"login post\"</span>\n    PUT<span class=\"token punctuation\">:</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">\"login put\"</span>\n  <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>GET、POST、PUT的使用一目了然。</p>\n<h3 id=\"在另一个路由中调用graylogsdk访问自己的login方法用put方法\"><a class=\"markdownIt-Anchor\" href=\"#在另一个路由中调用graylogsdk访问自己的login方法用put方法\"></a> 在另一个路由中，调用GraylogSDK访问自己的/login方法，用PUT方法。</h3>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">\nheaders_info <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token string\">'Authorization'</span><span class=\"token punctuation\">:</span> auth<span class=\"token punctuation\">,</span> \n    <span class=\"token string\">'Accept'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'*/*'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">:</span><span class=\"token string\">'application/json'</span>\n<span class=\"token punctuation\">&#125;</span>\n\nclass RestyGraylog \n    @putRequest<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>req_url<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span>\n        http <span class=\"token operator\">=</span> require <span class=\"token string\">\"resty.http\"</span>\n        httpc <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        metadata <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n          method<span class=\"token punctuation\">:</span><span class=\"token string\">\"PUT\"</span><span class=\"token punctuation\">,</span>\n          body<span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">,</span>\n          headers<span class=\"token punctuation\">:</span> self<span class=\"token punctuation\">.</span>headers_info\n        <span class=\"token punctuation\">&#125;</span>\n\n        res<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> httpc\\<span class=\"token function\">request_uri</span><span class=\"token punctuation\">(</span>req_url<span class=\"token punctuation\">,</span> metadata<span class=\"token punctuation\">)</span>\n  \n        <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> res\n          ngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"failed to request: \"</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">return</span>\n          \n        ngx<span class=\"token punctuation\">.</span>status <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>status  \n        <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span>body<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在这个版本的Graylog for MoonScript ，没用使用internal proxy的方式，使用的是RESTY-HTTP<br />\n来完成这个工作，其达到的效果都是一样的。</p>\n<p>本文请不要用于商业目地，非商业转载请署名原作者与原文链接。<br />\n<a href=\"https://www.moonscript.cn/lapis%E6%A1%86%E6%9E%B6/lapis-put-method/\">https://www.moonscript.cn/lapis%E6%A1%86%E6%9E%B6/lapis-put-method/</a></p>\n","text":"作者：糖果 在Lapis中处理GET、POST、PUT。 import respond_to from require \"lapis.application\" class App extends lapis.Application @enable \"etlua\" \"/login\"...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%A8lapis%E4%B8%AD%E5%A4%84%E7%90%86get-post-put\"><span class=\"toc-text\"> 在Lapis中处理GET、POST、PUT。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E5%8F%A6%E4%B8%80%E4%B8%AA%E8%B7%AF%E7%94%B1%E4%B8%AD%E8%B0%83%E7%94%A8graylogsdk%E8%AE%BF%E9%97%AE%E8%87%AA%E5%B7%B1%E7%9A%84login%E6%96%B9%E6%B3%95%E7%94%A8put%E6%96%B9%E6%B3%95\"><span class=\"toc-text\"> 在另一个路由中，调用GraylogSDK访问自己的&#x2F;login方法，用PUT方法。</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"用RESTY-HTTP实现Graylog的Widget更新与查询","uid":"07e149df00baf09dc3d8d5e82a638745","slug":"old_topic/2016-09-17-350","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.177Z","comments":true,"path":"api/articles/old_topic/2016-09-17-350.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 MoonScript for GrayLog是之前写的一个基于Lapis与Simple HTTP的Graylog日志查询SDK， 支持Stream查询，最近为了做自动化分析，加入了新的接口中调用功能，加入了对Dashboard widgets和更新与查询，通过这个程序...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lapis框架的基本库模板","uid":"35d8b592c5b982bc1f18037d6c818306","slug":"old_topic/2016-09-17-352","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.223Z","comments":true,"path":"api/articles/old_topic/2016-09-17-352.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 MoonScript库模板代码： local * configs = &#123;&#125; config = (env, fn) -> print(env, fn) return 1 setmetatable &#123; :config &#125;, &#12...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}