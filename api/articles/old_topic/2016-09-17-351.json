{"title":"Lapis框架的常用处理方法","uid":"193d30d1b1f932871a7703a692d3a8f9","slug":"old_topic/2016-09-17-351","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.152Z","comments":true,"path":"api/articles/old_topic/2016-09-17-351.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>作者：糖果</p>\n<h3 id=\"在Lapis中处理GET、POST、PUT。\">在Lapis中处理GET、POST、PUT。</h3>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import respond_to from <span class=\"built_in\">require</span> <span class=\"string\">&quot;lapis.application&quot;</span></span><br><span class=\"line\">class App extends lapis.Application</span><br><span class=\"line\">  @enable <span class=\"string\">&quot;etlua&quot;</span></span><br><span class=\"line\">  <span class=\"string\">&quot;/login&quot;</span>: respond_to &#123;</span><br><span class=\"line\">    GET: =&gt;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;login get&quot;</span></span><br><span class=\"line\">    POST: =&gt;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;login post&quot;</span></span><br><span class=\"line\">    PUT: =&gt;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&quot;login put&quot;</span></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>GET、POST、PUT的使用一目了然。</p>\n<h3 id=\"在另一个路由中，调用GraylogSDK访问自己的-login方法，用PUT方法。\">在另一个路由中，调用GraylogSDK访问自己的/login方法，用PUT方法。</h3>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">headers_info = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;Authorization&#x27;</span>: auth, </span><br><span class=\"line\">    <span class=\"string\">&#x27;Accept&#x27;</span>: <span class=\"string\">&#x27;*/*&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;Content-Type&#x27;</span>:<span class=\"string\">&#x27;application/json&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">class RestyGraylog </span><br><span class=\"line\">    @putRequest:(req_url, data) =&gt;</span><br><span class=\"line\">        http = <span class=\"built_in\">require</span> <span class=\"string\">&quot;resty.http&quot;</span></span><br><span class=\"line\">        httpc = http.new()</span><br><span class=\"line\">        metadata = &#123;</span><br><span class=\"line\">          method:<span class=\"string\">&quot;PUT&quot;</span>,</span><br><span class=\"line\">          body: data,</span><br><span class=\"line\">          headers: <span class=\"built_in\">self</span>.headers_info</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        res, err = httpc\\request_uri(req_url, metadata)</span><br><span class=\"line\">  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> res</span><br><span class=\"line\">          ngx.say(<span class=\"string\">&quot;failed to request: &quot;</span>, err)</span><br><span class=\"line\">          <span class=\"keyword\">return</span></span><br><span class=\"line\">          </span><br><span class=\"line\">        ngx.<span class=\"built_in\">status</span> = res.<span class=\"built_in\">status</span>  </span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.body</span><br></pre></td></tr></table></figure>\n<p>在这个版本的Graylog for MoonScript ，没用使用internal proxy的方式，使用的是RESTY-HTTP<br>\n来完成这个工作，其达到的效果都是一样的。</p>\n<p>本文请不要用于商业目地，非商业转载请署名原作者与原文链接。<br>\n<a href=\"https://www.moonscript.cn/lapis%E6%A1%86%E6%9E%B6/lapis-put-method/\">https://www.moonscript.cn/lapis%E6%A1%86%E6%9E%B6/lapis-put-method/</a></p>\n","text":"作者：糖果 在Lapis中处理GET、POST、PUT。 1234567891011import respond_to from require &quot;lapis.application&quot;class App extends lapis.Application @e...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%A8Lapis%E4%B8%AD%E5%A4%84%E7%90%86GET%E3%80%81POST%E3%80%81PUT%E3%80%82\"><span class=\"toc-text\">在Lapis中处理GET、POST、PUT。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E5%8F%A6%E4%B8%80%E4%B8%AA%E8%B7%AF%E7%94%B1%E4%B8%AD%EF%BC%8C%E8%B0%83%E7%94%A8GraylogSDK%E8%AE%BF%E9%97%AE%E8%87%AA%E5%B7%B1%E7%9A%84-login%E6%96%B9%E6%B3%95%EF%BC%8C%E7%94%A8PUT%E6%96%B9%E6%B3%95%E3%80%82\"><span class=\"toc-text\">在另一个路由中，调用GraylogSDK访问自己的&#x2F;login方法，用PUT方法。</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lapis框架的基本库模板","uid":"35d8b592c5b982bc1f18037d6c818306","slug":"old_topic/2016-09-17-352","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.223Z","comments":true,"path":"api/articles/old_topic/2016-09-17-352.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 MoonScript库模板代码： 1234567891011121314local *configs = &#123;&#125;config = (env, fn) -&gt; print(env, fn) return 1setmetatable &#123; :...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"MoonScript实现选择排序","uid":"bde2d986b961652c5b4dbeefb6342f0a","slug":"old_topic/2016-09-17-354","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.167Z","comments":true,"path":"api/articles/old_topic/2016-09-17-354.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 LUA代码： 1234567891011121314list = &#123;1,5,3,2,9,3,6&#125;len=#listfor i=1,len max = list[i] for j=i+1, len do if list[j]&gt;max then ...","link":"","photos":[],"count_time":{"symbolsCount":638,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}