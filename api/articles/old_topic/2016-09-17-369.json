{"title":"MoonScript官方文档","uid":"99aa8520e0bab428f7fc88038d56c646","slug":"old_topic/2016-09-17-369","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.191Z","comments":true,"path":"api/articles/old_topic/2016-09-17-369.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>我本人写的中文版的MoonScript文档，直接看官方文档其实，还是会不得要领。后面的英文部分，就是官方的，前面是中文自己写的。</p>\n<p>国内用MoonScript的用户相对比较少，作者leafo创作了moonscript，另外还用moonscript创作的一个lua web框架：lapis。估计moonscript想在国内普及还需要一段路要走。</p>\n<p>Coffescript是一种中间的脚本，可以把这种脚本翻译成JavaScript。而MoonScript，是可以翻译成lua语言的中间脚本。<br />\n本文简单的介绍的：</p>\n<ol>\n<li class=\"lvl-3\">\n<p>如何在VIM中，实现MoonScript语法高亮。</p>\n</li>\n<li class=\"lvl-3\">\n<p>如何简单的编译MoonScript脚本。</p>\n</li>\n</ol>\n<h2 id=\"1安装moonscript\"><a class=\"markdownIt-Anchor\" href=\"#1安装moonscript\"></a> 1.安装MoonScript</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo luarocks install moonscript<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"2创建moon源文件-appmoon\"><a class=\"markdownIt-Anchor\" href=\"#2创建moon源文件-appmoon\"></a> 2.创建.moon源文件 # <strong>app.moon</strong></h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">lapis &#x3D; require &quot;lapis&quot;   \nclass extends lapis.Application   \n  &quot;&#x2F;&quot;: &#x3D;&gt; \n&quot;Welcome to Lapis #&#123;require &quot;lapis.version&quot;&#125;!&quot; <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"3安装moonscript语法高亮的插件-3-1下载vim的bundle插件管理程序\"><a class=\"markdownIt-Anchor\" href=\"#3安装moonscript语法高亮的插件-3-1下载vim的bundle插件管理程序\"></a> 3.安装MoonScript语法高亮的插件。 # **3-1.下载vim的bundle插件管理程序。</h1>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git clone VundleVim&#x2F;Vundle.vim ~&#x2F;.vim&#x2F;bundle&#x2F;vundle<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>3-2.创建.vimrc配置文件。</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">vim ~&#x2F;.vimrc<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>3-3. 编辑.vimrc文件内容。</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">set nocompatible                                                                                                                      \nfiletype off                                                                                                                          \nset rtp+&#x3D;~&#x2F;.vim&#x2F;bundle&#x2F;vundle&#x2F;                                                                                                        \ncall vundle#rc()                                                                                                                                      \nBundle &#39;leafo&#x2F;moonscript-vim&#39;                                                                                                         \nsyntax enable <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><strong>3-4.进入VIM，安装bundle插件。</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">vim +BundleInstall<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><strong>3-5.翻译成lua脚本,并运行。</strong></p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">moonc app.moon\nlua app.lua<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p><strong>按照如上步骤操作后:</strong></p>\n<ol>\n<li class=\"lvl-3\">\n<p>可以用moonc命令翻译.moon脚本到.lua脚步。</p>\n</li>\n<li class=\"lvl-3\">\n<p>vim支持moonscript的语法高亮检查。</p>\n</li>\n</ol>\n<p><strong>Moonscript与OO面向对象:</strong><br />\n讲MoonScript不能不提她对OO面向对像的支持，下面简单介绍一下MoonScirpt面像对像的 特性。对向函数与变量的封装，MoonScirpt的函数定义有其独特的地方是。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">foo &#x3D; -&gt;\n    print &quot;foo&quot;\nfoo()    --函数调用\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>上面是无参数函数调用，没有形参，下面是加入形参的函数声明：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">foo(x, y) &#x3D;&gt;\n   return x + y\nret &#x3D; foo 1,5<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>MoonScript的函数调用，可以不使用(),省着去括号。<br />\n接下来，用类封装函数和成员表量，用一个单根继承两类做说明。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">class CandyLab \n    @metadata: &quot;Candy Lab&quot;\nclass Candy extends CandyLab\n  @name: &quot;Candy&quot;\n  @value: &quot;From CandyLab&quot;\n  @func1: &#x3D;&gt;\n        print @name\n        print @value + 6\n        print &quot;func1&quot;\n  @func2: (x, y) &#x3D;&gt;\n        print x + y\n        return x + y\n  @func3: &#x3D;&gt;\n        print &quot;ok&quot;\n        print &quot;#&#123;@metadata&#125;&quot;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>MoonScirpt的对象变量和函数可能直接在外部调用：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Candy\\func1!\nret &#x3D; Candy\\func2 1,5 \nCandy\\func3!<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>在Candy类中的func3，直接引用的父类的变量metadata,另一个比较独特的地方是，用!表 示调用无参函数。MoonScript的类继承关键还是与Java接近extends。<br />\n下面是没有继承关系的两个类之间的函数调用与变量引用，而在引用的过程中有一个特别 一点的表量类型声明，就是Table类型。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">class CandyLab \n    endpoints: 1\n    tbl_url: &#123;\n             url_1:&quot;http:&#x2F;&#x2F;host.com&#x2F;1&quot;,\n             url_2:&quot;http:&#x2F;&#x2F;host.com&#x2F;2&quot;,\n             url_3:&quot;http:&#x2F;&#x2F;host.com&#x2F;3&quot;\n         &#125;\nclass Candy\n    @func1: &#x3D;&gt;\n        print(Common.endpoints)  \n        print(type(Common.tbl_url[&quot;ur1_1&quot;]))<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上面的操作是直接在Candy类中调用CandyLab的变量，其实就是没有权限访问。MoonScript 的OO特性比较常用如上，MoonScript这些特性，如果用来做Web开发，效率相对Lua来说还是 高的，而目前用MoonScript实现的最大的一个项目就是Lua框架Lapis，接下来可以看看Lapis 中是如何使用MoonScript的特性的。</p>\n<p><strong>作者：糖果</strong><br />\n<strong>PS:转载到其它平台请注明作者姓名及原文链接，请勿用于商业用途。</strong></p>\n<p>{<br />\ntarget: “reference/standard_lib”<br />\ntemplate: “reference”<br />\ntitle: “Standard Library”<br />\nshort_name: “stdlib”<br />\n}</p>\n<p>The MoonScript installation comes with a small kernel of functions that can be<br />\nused to perform various common things.</p>\n<p>The entire library is currently contained in a single object. We can bring this<br />\n<code>moon</code> object into scope by requiring <code>&quot;moon&quot;</code>.</p>\n<pre class=\"line-numbers language-moonscript\" data-language=\"moonscript\"><code class=\"language-moonscript\">moon <span class=\"token operator\">=</span> <span class=\"token function\">require</span> <span class=\"token string\">\"moon\"</span>\n<span class=\"token comment\">-- `moon.p` is the debug printer</span>\nmoon<span class=\"token punctuation\">.</span>p <span class=\"token punctuation\">&#123;</span> <span class=\"token property\">hello</span><span class=\"token operator\">:</span> <span class=\"token string\">\"world\"</span> <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>If you prefer to just inject all of the functions into the current scope, you<br />\ncan require <code>&quot;moon.all&quot;</code> instead. The following has the same effect as above:</p>\n<pre class=\"line-numbers language-moonscript\" data-language=\"moonscript\"><code class=\"language-moonscript\"><span class=\"token function\">require</span> <span class=\"token string\">\"moon.all\"</span>\np <span class=\"token punctuation\">&#123;</span> <span class=\"token property\">hello</span><span class=\"token operator\">:</span> <span class=\"token string\">\"world\"</span> <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>All of the functions are compatible with Lua in addition to MoonScript, but<br />\nsome of them only make sense in the context of MoonScript.</p>\n<h1 id=\"moonscript-standard-library\"><a class=\"markdownIt-Anchor\" href=\"#moonscript-standard-library\"></a> MoonScript Standard Library</h1>\n<p>This is an overview of all the included functions.<br />\nAll of the examples assume that the standard library has been included with<br />\n<code>require &quot;moon.all&quot;</code>.</p>\n<h2 id=\"printing-functions\"><a class=\"markdownIt-Anchor\" href=\"#printing-functions\"></a> Printing Functions</h2>\n<h3 id=\"parg\"><a class=\"markdownIt-Anchor\" href=\"#parg\"></a> <code>p(arg)</code></h3>\n<p>Prints a formatted version of an object. Excellent for inspecting the contents<br />\nof a table.</p>\n<h2 id=\"table-functions\"><a class=\"markdownIt-Anchor\" href=\"#table-functions\"></a> Table Functions</h2>\n<h3 id=\"run_with_scopefn-scope-args\"><a class=\"markdownIt-Anchor\" href=\"#run_with_scopefn-scope-args\"></a> <code>run_with_scope(fn, scope, [args...])</code></h3>\n<p>Mutates the environment of function <code>fn</code> and runs the function with any extra<br />\narguments in <code>args...</code>. Returns the result of the function.</p>\n<p>The environment of the function is set to a new table whose metatable will use<br />\n<code>scope</code> to look up values. <code>scope</code> must be a table. If <code>scope</code> does not have an<br />\nentry for a value, it will fall back on the original environment.</p>\n<pre class=\"line-numbers language-moonscript\" data-language=\"moonscript\"><code class=\"language-moonscript\">my_env <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token property\">secret_function</span><span class=\"token operator\">:</span> <span class=\"token operator\">-></span> <span class=\"token function\">print</span> <span class=\"token string\">\"shhh this is secret\"</span>\n  <span class=\"token property\">say_hi</span><span class=\"token operator\">:</span> <span class=\"token operator\">-></span> <span class=\"token function\">print</span> <span class=\"token string\">\"hi there!\"</span>\n<span class=\"token punctuation\">&#125;</span>\n\nsay_hi <span class=\"token operator\">=</span> <span class=\"token operator\">-></span> <span class=\"token function\">print</span> <span class=\"token string\">\"I am a closure\"</span>\n\nfn <span class=\"token operator\">=</span> <span class=\"token operator\">-></span>\n  secret_function<span class=\"token operator\">!</span>\n  say_hi<span class=\"token operator\">!</span>\n\nrun_with_scope fn<span class=\"token punctuation\">,</span> my_env<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>Note that any closure values will always take precedence against global name<br />\nlookups in the environment. In the example above, the <code>say_hi</code> in the<br />\nenvironment has been shadowed by the local variable <code>say_hi</code>.</p>\n<h3 id=\"defaultbltbl-fn\"><a class=\"markdownIt-Anchor\" href=\"#defaultbltbl-fn\"></a> <code>defaultbl([tbl,] fn)</code></h3>\n<p>Sets the <code>__index</code> of table <code>tbl</code> to use the function <code>fn</code> to generate table<br />\nvalues when a missing key is looked up.</p>\n<h3 id=\"extendarg1-arg2-rest\"><a class=\"markdownIt-Anchor\" href=\"#extendarg1-arg2-rest\"></a> <code>extend(arg1, arg2, [rest...])</code></h3>\n<p>Chains together a series of tables by their metatable’s <code>__index</code> property.<br />\nOverwrites the metatable of all objects except for the last with a new table<br />\nwhose <code>__index</code> is set to the next table.</p>\n<p>Returns the first argument.</p>\n<pre class=\"line-numbers language-moonscript\" data-language=\"moonscript\"><code class=\"language-moonscript\">a <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token property\">hello</span><span class=\"token operator\">:</span> <span class=\"token string\">\"world\"</span> <span class=\"token punctuation\">&#125;</span>\nb <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token property\">okay</span><span class=\"token operator\">:</span> <span class=\"token string\">\"sure\"</span> <span class=\"token punctuation\">&#125;</span>\n\nextend a<span class=\"token punctuation\">,</span> b\n\n<span class=\"token function\">print</span> a<span class=\"token punctuation\">.</span>okay<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"copytbl\"><a class=\"markdownIt-Anchor\" href=\"#copytbl\"></a> <code>copy(tbl)</code></h3>\n<p>Creates a shallow copy of a table, equivalent to:</p>\n<pre class=\"line-numbers language-moonscript\" data-language=\"moonscript\"><code class=\"language-moonscript\">copy <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>arg<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span> <span class=\"token keyword\">self</span><span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"classobject-functions\"><a class=\"markdownIt-Anchor\" href=\"#classobject-functions\"></a> Class/Object Functions</h2>\n<h3 id=\"is_objectvalue\"><a class=\"markdownIt-Anchor\" href=\"#is_objectvalue\"></a> <code>is_object(value)</code></h3>\n<p>Returns true if <code>value</code> is an instance of a MoonScript class, false otherwise.</p>\n<h3 id=\"typevalue\"><a class=\"markdownIt-Anchor\" href=\"#typevalue\"></a> <code>type(value)</code></h3>\n<p>If <code>value</code> is an instance of a MoonScript class, then return it’s class object.<br />\nOtherwise, return the result of calling Lua’s type method.</p>\n<pre class=\"line-numbers language-moonscript\" data-language=\"moonscript\"><code class=\"language-moonscript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span>\n  <span class=\"token keyword\">nil</span>\n\nx <span class=\"token operator\">=</span> <span class=\"token class-name\">MyClass</span><span class=\"token operator\">!</span>\n<span class=\"token function\">assert</span> <span class=\"token function\">type</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">MyClass</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"bind_methodsobj\"><a class=\"markdownIt-Anchor\" href=\"#bind_methodsobj\"></a> <code>bind_methods(obj)</code></h3>\n<p>Takes an instance of an object, returns a proxy to the object whose methods can<br />\nbe called without providing self as the first argument.</p>\n<pre class=\"line-numbers language-moonscript\" data-language=\"moonscript\"><code class=\"language-moonscript\">obj <span class=\"token operator\">=</span> <span class=\"token class-name\">SomeClass</span><span class=\"token operator\">!</span>\n\nbound_obj <span class=\"token operator\">=</span> bind_methods obj\n\n<span class=\"token comment\">-- following have the same effect</span>\nobj<span class=\"token punctuation\">\\</span>hello<span class=\"token operator\">!</span>\nbound_obj<span class=\"token punctuation\">.</span>hello<span class=\"token operator\">!</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>It lazily creates and stores in the proxy table the bound methods when they<br />\nare first called.</p>\n<h3 id=\"mixinobj-class-args\"><a class=\"markdownIt-Anchor\" href=\"#mixinobj-class-args\"></a> <code>mixin(obj, class, [args...])</code></h3>\n<p>Copies the methods of a class <code>cls</code> into the table <code>obj</code>, then calls the<br />\nconstructor of the class with the <code>obj</code> as the receiver.</p>\n<p>In this example we add the functionality of <code>First</code> to an instance of <code>Second</code><br />\nwithout ever instancing <code>First</code>.</p>\n<pre class=\"line-numbers language-moonscript\" data-language=\"moonscript\"><code class=\"language-moonscript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">First</span>\n  <span class=\"token property\">new</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">@var</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n  <span class=\"token property\">show_var</span><span class=\"token operator\">:</span> <span class=\"token operator\">=></span> <span class=\"token function\">print</span> <span class=\"token string\">\"var is:\"</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@var</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Second</span>\n  <span class=\"token property\">new</span><span class=\"token operator\">:</span> <span class=\"token operator\">=></span>\n    mixin <span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">First</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"hi\"</span>\n\na <span class=\"token operator\">=</span> <span class=\"token class-name\">Second</span><span class=\"token operator\">!</span>\na<span class=\"token punctuation\">\\</span>show_var<span class=\"token operator\">!</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>Be weary of name collisions when mixing in other classes, names will be<br />\noverwritten.</p>\n<h3 id=\"mixin_objectobj-other_obj-method_names\"><a class=\"markdownIt-Anchor\" href=\"#mixin_objectobj-other_obj-method_names\"></a> <code>mixin_object(obj, other_obj, method_names)</code></h3>\n<p>Inserts into <code>obj</code> methods from <code>other_obj</code> whose names are listed in<br />\n<code>method_names</code>. The inserted methods are bound methods that will run with<br />\n<code>other_obj</code> as the receiver.</p>\n<pre class=\"line-numbers language-moonscript\" data-language=\"moonscript\"><code class=\"language-moonscript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">List</span> \n  <span class=\"token property\">add</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">print</span> <span class=\"token string\">\"adding to\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">self</span>\n  <span class=\"token property\">remove</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">print</span> <span class=\"token string\">\"removing from\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">self</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Encapsulation</span>\n  <span class=\"token property\">new</span><span class=\"token operator\">:</span> <span class=\"token operator\">=></span>\n    <span class=\"token variable\">@list</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">List</span><span class=\"token operator\">!</span>\n    mixin_object <span class=\"token keyword\">self</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">@list</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"add\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"remove\"</span><span class=\"token punctuation\">&#125;</span>\n\ne <span class=\"token operator\">=</span> <span class=\"token class-name\">Encapsulation</span><span class=\"token operator\">!</span>\ne<span class=\"token punctuation\">.</span>add <span class=\"token string\">\"something\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"mixin_tablea-b-names\"><a class=\"markdownIt-Anchor\" href=\"#mixin_tablea-b-names\"></a> <code>mixin_table(a, b, [names])</code></h3>\n<p>Copies the elements of table <code>b</code> into table <code>a</code>. If names is provided, then<br />\nonly those names are copied.</p>\n<h2 id=\"misc-functions\"><a class=\"markdownIt-Anchor\" href=\"#misc-functions\"></a> Misc Functions</h2>\n<h3 id=\"folditems-fn\"><a class=\"markdownIt-Anchor\" href=\"#folditems-fn\"></a> <code>fold(items, fn)</code></h3>\n<p>Calls function <code>fn</code> repeatedly with the accumulated value and the current value<br />\nby iterating over <code>items</code>. The accumulated value is the result of the last call<br />\nto <code>fn</code>, or, in the base case, the first value. The current value is the value<br />\nbeing iterated over starting with the second item.</p>\n<p><code>items</code> is a normal array table.</p>\n<p>For example, to sum all numbers in a list:</p>\n<pre class=\"line-numbers language-moonscript\" data-language=\"moonscript\"><code class=\"language-moonscript\">numbers <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">&#125;</span>\nsum <span class=\"token operator\">=</span> fold numbers<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> a <span class=\"token operator\">+</span> b<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"debug-functions\"><a class=\"markdownIt-Anchor\" href=\"#debug-functions\"></a> Debug Functions</h2>\n<h3 id=\"debugupvaluefn-key-value\"><a class=\"markdownIt-Anchor\" href=\"#debugupvaluefn-key-value\"></a> <code>debug.upvalue(fn, key[, value])</code></h3>\n<p>Gets or sets the value of an upvalue for a function by name.</p>\n","text":"我本人写的中文版的MoonScript文档，直接看官方文档其实，还是会不得要领。后面的英文部分，就是官方的，前面是中文自己写的。 国内用MoonScript的用户相对比较少，作者leafo创作了moonscript，另外还用moonscript创作的一个lua web框架：lap...","link":"","photos":[],"count_time":{"symbolsCount":"8.1k","symbolsTime":"7 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%E5%AE%89%E8%A3%85moonscript\"><span class=\"toc-text\"> 1.安装MoonScript</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%E5%88%9B%E5%BB%BAmoon%E6%BA%90%E6%96%87%E4%BB%B6-appmoon\"><span class=\"toc-text\"> 2.创建.moon源文件 # app.moon</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3%E5%AE%89%E8%A3%85moonscript%E8%AF%AD%E6%B3%95%E9%AB%98%E4%BA%AE%E7%9A%84%E6%8F%92%E4%BB%B6-3-1%E4%B8%8B%E8%BD%BDvim%E7%9A%84bundle%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\"> 3.安装MoonScript语法高亮的插件。 # **3-1.下载vim的bundle插件管理程序。</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#moonscript-standard-library\"><span class=\"toc-text\"> MoonScript Standard Library</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#printing-functions\"><span class=\"toc-text\"> Printing Functions</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#parg\"><span class=\"toc-text\"> p(arg)</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#table-functions\"><span class=\"toc-text\"> Table Functions</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#run_with_scopefn-scope-args\"><span class=\"toc-text\"> run_with_scope(fn, scope, [args...])</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#defaultbltbl-fn\"><span class=\"toc-text\"> defaultbl([tbl,] fn)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#extendarg1-arg2-rest\"><span class=\"toc-text\"> extend(arg1, arg2, [rest...])</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#copytbl\"><span class=\"toc-text\"> copy(tbl)</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#classobject-functions\"><span class=\"toc-text\"> Class&#x2F;Object Functions</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#is_objectvalue\"><span class=\"toc-text\"> is_object(value)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#typevalue\"><span class=\"toc-text\"> type(value)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#bind_methodsobj\"><span class=\"toc-text\"> bind_methods(obj)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mixinobj-class-args\"><span class=\"toc-text\"> mixin(obj, class, [args...])</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mixin_objectobj-other_obj-method_names\"><span class=\"toc-text\"> mixin_object(obj, other_obj, method_names)</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mixin_tablea-b-names\"><span class=\"toc-text\"> mixin_table(a, b, [names])</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#misc-functions\"><span class=\"toc-text\"> Misc Functions</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#folditems-fn\"><span class=\"toc-text\"> fold(items, fn)</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#debug-functions\"><span class=\"toc-text\"> Debug Functions</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#debugupvaluefn-key-value\"><span class=\"toc-text\"> debug.upvalue(fn, key[, value])</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MoonScript for GrayLog","uid":"bace4a0f855ab931a94c6323590dcc00","slug":"old_topic/2016-09-17-368","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.203Z","comments":true,"path":"api/articles/old_topic/2016-09-17-368.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"GrayLog REST API Wrapper for Moonscript 此程序是Graylog REST对外提供的API的一个Moonscript的Wrapper封装，把REST接口提供的数据服务，变成通过函数调用的方式取得相应REST接口返回的数据。 下面是一个实际的基...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Django超级简单的MVC实例","uid":"b886d3e0a930ce8de7df46cdd311c487","slug":"old_topic/2016-09-17-37","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.193Z","comments":true,"path":"api/articles/old_topic/2016-09-17-37.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"【前言】 写一遍django的入门例子，基于MVC设计模式，本程序有输入，处理，输出。开始用django搬运互联网上的数据。简单介绍一下什么是MVC模式。MVC就是把程序成分3部分职责。 【MVC】 V(View)：系统的界面，django中就是网页。UI部分，用于接受用户的数据...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}