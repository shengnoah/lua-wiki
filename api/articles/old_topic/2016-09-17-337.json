{"title":"在Lapis上用moonscript渲染和接收json","uid":"bc2b21685789386351af0e07c572df47","slug":"old_topic/2016-09-17-337","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.750Z","comments":true,"path":"api/articles/old_topic/2016-09-17-337.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>编辑整理：糖果</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lapis = require &quot;lapis&quot;                                                                                                                                                   </span><br><span class=\"line\">import json_params from require &quot;lapis.application&quot;                                                                                                                       </span><br><span class=\"line\">                                                                                                                                                                          </span><br><span class=\"line\">class App extends lapis.Application                                                                                                                                       </span><br><span class=\"line\">  &quot;/&quot;: =&gt;                                                                                                                                                                 </span><br><span class=\"line\">    &#123;                                                                                                                                                                     </span><br><span class=\"line\">      json: &#123;                                                                                                                                                             </span><br><span class=\"line\">        success: true                                                                                                                                                     </span><br><span class=\"line\">        message: &quot;hello world&quot;                                                                                                                                            </span><br><span class=\"line\">      &#125;                                                                                                                                                                   </span><br><span class=\"line\">    &#125;                                                                                                                                                                     </span><br><span class=\"line\">  &quot;/json&quot;: json_params =&gt;                                                                                                                                                 </span><br><span class=\"line\">    @params.value    </span><br></pre></td></tr></table></figure>\n\n<p>用curl进行测试：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -H &quot;Content-type: application/json&quot;  -d &#x27;&#123;&quot;value&quot;: &quot;hello&quot;&#125;&#x27;  0.0.0.0:8080/json</span><br></pre></td></tr></table></figure>","text":"编辑整理：糖果 12345678910111213lapis = require &quot;lapis&quot; import json_params from require &quot;lapis.application&quot; class App extends l...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"运行openresty的docker容器","uid":"01173aa02c4077fa378e3b1fa24d186b","slug":"old_topic/2016-09-17-338","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.750Z","comments":true,"path":"api/articles/old_topic/2016-09-17-338.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"编辑作者：糖果 找了些资料，用了一下docker的openrsty的测试。 直接拉取1.9版的Openresty。 1docker pull openresty/openresty:1.9.15.1-trusty 将特理机的8080端口和docker的80端口映射。将不当前con...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"ENV的C语言实现","uid":"03eb1b6e42f3161910ec1f1a5c8f6a96","slug":"old_topic/2016-09-17-341","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.750Z","comments":true,"path":"api/articles/old_topic/2016-09-17-341.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"env的实现，就是下面一小段的C语言实现。 12345678910#include &lt;stdio.h&gt; extern char**environ; int main () &#123; char**var; char *str; for (var =environ;*...","link":"","photos":[],"count_time":{"symbolsCount":233,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}