{"title":"关于Linux环境变量命令ENV","uid":"074f77a9b17de10d6ce47d49abfb9adf","slug":"old_topic/2016-09-17-267","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.226Z","comments":true,"path":"api/articles/old_topic/2016-09-17-267.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>这个测试有几种入口，export，或是用户请求url，我们先从本地做测试，然后搭建一个bshell的CGI环境。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">export</span> <span class=\"token assign-left variable\">testcase</span><span class=\"token operator\">=</span>ls<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">;</span><span class=\"token function\">ls</span>\n<span class=\"token builtin class-name\">eval</span> <span class=\"token assign-left variable\">ret</span><span class=\"token operator\">=</span><span class=\"token variable\">$testcase</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>我们看一下C实现</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\n<span class=\"token keyword\">extern</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span>environ<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">*</span>var<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>var <span class=\"token operator\">=</span>environ<span class=\"token punctuation\">;</span><span class=\"token operator\">*</span>var <span class=\"token operator\">!=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token operator\">++</span>var<span class=\"token punctuation\">)</span>\n       <span class=\"token function\">printf</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"%s\\n\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>var<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token number\">1</span> \n   <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后分析一下C写的CGI和BShell写的CGI的区别。</p>\n","text":"这个测试有几种入口，export，或是用户请求url，我们先从本地做测试，然后搭建一个bshell的CGI环境。 export testcase=ls\\;ls eval ret=$testcase 我们看一下C实现 #include &lt;stdio.h> extern cha...","link":"","photos":[],"count_time":{"symbolsCount":305,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"地理位置信息库PyGeoIP","uid":"0c2b4d50783b3962d80c6ee9ac8f9c11","slug":"old_topic/2016-09-17-266","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.219Z","comments":true,"path":"api/articles/old_topic/2016-09-17-266.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"地理位置信息库PyGeoIP wget http:&#x2F;&#x2F;geolite.maxmind.com&#x2F;download&#x2F;geoip&#x2F;database&#x2F;GeoLiteCity.dat.gz &amp;&amp; gzip -d G...","link":"","photos":[],"count_time":{"symbolsCount":627,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Threading的Timer是否可以被wait和communicate阻塞","uid":"1f0e7f34ab02983eb011a2f068cfda64","slug":"old_topic/2016-09-17-268","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.193Z","comments":true,"path":"api/articles/old_topic/2016-09-17-268.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 测试的内容是将Timer的使用和Popen的使用混合在一起，测试当wait()和communicate()被调用时，是否会阻塞主进程的Timer。 找到Timer在Python2.7里的源码位置： # The timer class was contributed b...","link":"","photos":[],"count_time":{"symbolsCount":"19k","symbolsTime":"17 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}