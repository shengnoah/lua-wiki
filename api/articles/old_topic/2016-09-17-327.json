{"title":"跨平台的库选择","uid":"9292b5d7db49cf3a15a4dacf7bf55d0e","slug":"old_topic/2016-09-17-327","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.226Z","comments":true,"path":"api/articles/old_topic/2016-09-17-327.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h1 id=\"跨平台的库选择\"><a class=\"markdownIt-Anchor\" href=\"#跨平台的库选择\"></a> 跨平台的库选择</h1>\n<p>大家看过上面三个json的例子就发现，都是围绕cjson库的。原因也比较简单，就是cjson是默认绑定到openresty上的。很多开发喜欢 windows 系统，可以选择 dkjson（编解码效率没有cjson快，优势是纯Lua，完美跨任何平台）。</p>\n<p>并且我们的代码肯定不会因为 win、linux 的并存而写两套程序。那么我们就必须要把json处理部分封装一下，隐藏系统差异造成的差异化处理。</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> _M <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span> _VERSION <span class=\"token operator\">=</span> <span class=\"token string\">'1.0'</span> <span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">-- require(\"ffi\").os 获取系统类型</span>\n<span class=\"token keyword\">local</span> json <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ffi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>os <span class=\"token operator\">==</span> <span class=\"token string\">\"Windows\"</span> <span class=\"token keyword\">and</span> <span class=\"token string\">\"dkjson\"</span> <span class=\"token keyword\">or</span> <span class=\"token string\">\"cjson\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> _M<span class=\"token punctuation\">.</span><span class=\"token function\">json_decode</span><span class=\"token punctuation\">(</span> str <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token keyword\">function</span> _M<span class=\"token punctuation\">.</span><span class=\"token function\">json_encode</span><span class=\"token punctuation\">(</span> data <span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">encode</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n\n<span class=\"token keyword\">return</span> _M\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在我们的应用中，对于操作系统版本差异、操作系统位数差异、同时支持不同数据库使用等，几乎都是使用这个方法完成的，十分值得推荐。</p>\n<p>额外说个点，github上有个项目<a href=\"https://github.com/cloudflare/lua-resty-json\">cloudflare/lua-resty-json</a>，从官方资料上介绍decode的速度更快，我们也做了小范围应用。所以上面的json_decode对象来源，就可以改成这个库。</p>\n<p>外面总是有新鲜玩意，多抬头多发现，充实自己，站在巨人肩膀上，总是能够更容易够到高峰。</p>\n","text":" 跨平台的库选择 大家看过上面三个json的例子就发现，都是围绕cjson库的。原因也比较简单，就是cjson是默认绑定到openresty上的。很多开发喜欢 windows 系统，可以选择 dkjson（编解码效率没有cjson快，优势是纯Lua，完美跨任何平台）。 并且我们的...","link":"","photos":[],"count_time":{"symbolsCount":706,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%B7%A8%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%BA%93%E9%80%89%E6%8B%A9\"><span class=\"toc-text\"> 跨平台的库选择</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"json解析的异常捕获","uid":"759fac4aaf0afc50492499e7963a1c92","slug":"old_topic/2016-09-17-328","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.193Z","comments":true,"path":"api/articles/old_topic/2016-09-17-328.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" json解析的异常捕获 首先来看最最普通的一个json解析的例子（被解析的json字符串是错误的，缺少一个双引号）： -- http://www.kyne.com.au/~mark/software/lua-cjson.php -- version: 2.1 devel loc...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Crontab在SAE中的应用。","uid":"9c523cb4f2eea401eabec06d4f595a71","slug":"old_topic/2016-09-17-33","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.198Z","comments":true,"path":"api/articles/old_topic/2016-09-17-33.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"例行性工作（crontab) 【闲话】 现在是在用蓝牙和手机无限键盘在写这篇博客，测试一下，发现用系统默认的输入法比较痛苦，不知道为什么，光标焦点在手机屏幕上飞来飞去，根本就没有办法正常的进行编辑，换了一个输入法以后，此问题基本上不发生了。 ［问题］什么事crontab? 如果简...","link":"","photos":[],"count_time":{"symbolsCount":394,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}