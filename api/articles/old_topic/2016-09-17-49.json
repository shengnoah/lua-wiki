{"title":"二分查找","uid":"d843ced03f40ac612213952de4b63ad2","slug":"old_topic/2016-09-17-49","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.755Z","comments":true,"path":"api/articles/old_topic/2016-09-17-49.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">bseek</span><span class=\"params\">(<span class=\"type\">int</span> key)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"built_in\">array</span>[<span class=\"number\">10</span>] = &#123;<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>&#125;;</span><br><span class=\"line\">        <span class=\"type\">int</span> low = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> high = (<span class=\"keyword\">sizeof</span>(<span class=\"built_in\">array</span>) / <span class=\"number\">4</span>) - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> mid = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> ret = <span class=\"number\">-1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span>(low &lt;= high) &#123;</span><br><span class=\"line\">                mid = (low + high) / <span class=\"number\">2</span>;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (key == <span class=\"built_in\">array</span>[mid]) &#123;</span><br><span class=\"line\">                        ret = mid;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (key &lt; <span class=\"built_in\">array</span>[mid]) &#123;</span><br><span class=\"line\">                        high = mid - <span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (key &gt; <span class=\"built_in\">array</span>[mid]) &#123;</span><br><span class=\"line\">                        low = mid + <span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">char</span>* argv[])</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[0]:%d\\n&quot;</span>, bseek(<span class=\"number\">0</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[1]:%d\\n&quot;</span>, bseek(<span class=\"number\">1</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[2]:%d\\n&quot;</span>, bseek(<span class=\"number\">2</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[3]:%d\\n&quot;</span>, bseek(<span class=\"number\">3</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[4]:%d\\n&quot;</span>, bseek(<span class=\"number\">4</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[5]:%d\\n&quot;</span>, bseek(<span class=\"number\">5</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[6]:%d\\n&quot;</span>, bseek(<span class=\"number\">6</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[7]:%d\\n&quot;</span>, bseek(<span class=\"number\">7</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[8]:%d\\n&quot;</span>, bseek(<span class=\"number\">8</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[9]:%d\\n&quot;</span>, bseek(<span class=\"number\">9</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[10]:%d\\n&quot;</span>, bseek(<span class=\"number\">10</span>));</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;key[11]:%d\\n&quot;</span>, bseek(<span class=\"number\">11</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<pre><code class=\"lua\">list  = [1,2,3,4,5,6,7,8,9,10]\nlow = 0\nhigh = len(list) - 1\nidx = 0\n\ndef bseek(key):\n        global low\n        global high\n        global idx\n        while(low &lt;= high):\n                mid = (low + high) / 2\n                if (key == list[mid]):\n                        idx = mid\n                        break\n                elif(key &lt; list[mid]):\n                        high = mid - 1\n                elif(key &gt; list[mid]):\n                        low = mid + 1\n\nbseek(6)\nprint idx\n           \n</code></pre>\n","text":"12345678910111213141516171819202122232425262728293031323334353637383940#include&lt;stdio.h&gt;int bseek(int key) &#123; int array[10] = &#12...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"},{"name":"折半查找","slug":"折半查找","count":2,"path":"api/tags/折半查找.json"},{"name":"二分查找","slug":"二分查找","count":2,"path":"api/tags/二分查找.json"},{"name":"lua二分查找","slug":"lua二分查找","count":2,"path":"api/tags/lua二分查找.json"},{"name":"c","slug":"c","count":2,"path":"api/tags/c.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"比Table灵活的DIV标签。","uid":"58d2296c453074b589ed10ee2476f21a","slug":"old_topic/2016-09-17-93","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.757Z","comments":true,"path":"api/articles/old_topic/2016-09-17-93.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"网页制作的过程中，难免要对网页中的元素进行排版布局。最开始的时候，流行的方法是用Table标签进行网页布局。因为，众所周知的原因：“速度”。表格标签在嵌套过多的时候，网页在显示的时候会变慢。人们就开始使用Div标签进行布局。 表格是现实生活中最常见的二维表示形式，很好理解。从个人...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"div中嵌套div的网页布局","uid":"e383b4e22fb82668d69a82a24de61560","slug":"old_topic/2016-09-17-95","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.757Z","comments":true,"path":"api/articles/old_topic/2016-09-17-95.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 因为这个个人网站的前端，没有过于复杂的元素 ，所以，想使用纯Div+css+js的方式实现，这个可以对很细微的元素进行调整。 这次主要是说，网页中Div嵌套的布局处理方式。而应用的场合是，网站的登录框。下面，就分别给出了，网站元素的样式和Html标签代码。 CSS样式...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}