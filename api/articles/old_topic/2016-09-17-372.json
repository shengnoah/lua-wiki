{"title":"反扫描可视化","uid":"9a08798d6ed47e5066c21c10dcfbe72f","slug":"old_topic/2016-09-17-372","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.753Z","comments":true,"path":"api/articles/old_topic/2016-09-17-372.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"content":"<p>威胁情报可视化，一直以来对安全人员分析安全事件起着有益的作用， 可视化是对分析的结<br>果一种图形化的映射，是威胁行为的一种图形具象化。</p>\n<p>针对蜜罐日志分析的流程来讲，溯源和展示攻击行为本身也是很重要的。</p>\n<p>一般比较传统的日志分析方式是：</p>\n<ol>\n<li><p>蜜罐向类似mysql这种库中写入被访问的IP地址和Port，启动定时任<br>务读取数据库，取出数据库当条目总数，与之前本地保存的最大数进行比较 发现，数据库<br>中的日志记录变多了，就将这些数据取出，进行分析和报警。 </p>\n</li>\n<li><p>另一种方式是依赖ips,ids这种设备，对网段内的所有蜜罐的流量进行监控，发现有任何<br>触发蜜罐的访问就进行数据的报警分析，不好的地方是，除了要依赖这些设备 ，ids和ids<br>本身对蜜罐被访问策略控制比较单一,另外如果想进一步的想取得访问的payload也需要与ids<br>，ips再次交互取，不同产商的设备特点不统一。 </p>\n</li>\n</ol>\n<ol start=\"3\">\n<li>还有一种方案是，除了构建蜜网之外，再构建一个日志中心（ES集群+Openresty）<br>一方面可以通过在设备上加agent把数据传回日志中心,另一方面日志中心本身也是一个REST<br>网关，接受多种 形志的日志推送，这个方案是有构建成本的，但是一旦构建好，策略处理就<br>比较灵活，push和poll模式下都可以，接受push数据过来，进行实性分析和显示更直观。</li>\n</ol>\n<p><img src=\"https://www.openresty.com.cn/images/moonscript/unti-scan-sort.png\" alt=\"unti-scan-sort\"></p>\n<h3 id=\"图a-1\"><a href=\"#图a-1\" class=\"headerlink\" title=\"图a-1\"></a><center>图a-1</center></h3><p>一个典型的用例，poll模式下对日志中心的REST服务的使用，可以像最传统方式一样，起动<br>定时任务，按时间段范围，对当前指定时间内，所有（用户ID，或DeviceID，或IP）访问日<br>志数量大的访问（IP）进行降排（数据源可以来自蜜罐，或是其它设备），并对被访问IP的<br>PORT进行联合枚举分析，如果某个IP访问量大，访问PORT范围大，或是访问 非常规Port，<br>可以进入新的报警与分析阶段。 关于非常规的Port数据，可以对网内常规的PORT进行数据<br>汇聚，常规以外的就是不常规的，汇聚可在对机器进行扫描时，把网内IP的常开PORT进行序<br>列化，生成数据指纹，与之后 的蜜网数据进行联合分析。 </p>\n<p>上图a-1，既是对一次用户抄描形为的图形展现。</p>\n<p>供参考。</p>\n","text":"威胁情报可视化，一直以来对安全人员分析安全事件起着有益的作用， 可视化是对分析的结果一种图形化的映射，是威胁行为的一种图形具象化。 针对蜜罐日志分析的流程来讲，溯源和展示攻击行为本身也是很重要的。 一般比较传统的日志分析方式是： 蜜罐向类似mysql这种库中写入被访问的IP地址和...","link":"","photos":[],"count_time":{"symbolsCount":883,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%BEa-1\"><span class=\"toc-text\">图a-1</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Blues框架如何取得请求者的Rquest信息","uid":"5eeea6ebd87d9454a6342cbab6e0f1fc","slug":"old_topic/2016-09-17-378","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.754Z","comments":true,"path":"api/articles/old_topic/2016-09-17-378.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"Blues框架如何取得请求者的Rquest信息 在request.lua下引用nginx.lua这个lazytable库。 123456789101112131415161718192021local params = require &quot;nginx&quot;funct...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"如何读取request的body数据","uid":"805020bcfe4a2b05d104deeb78f27106","slug":"old_topic/2016-09-17-379","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.754Z","comments":true,"path":"api/articles/old_topic/2016-09-17-379.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 我们通过curl向openresty服务器端请求rest，采用GET请求方式，提交一个json,然后路由到对应的匿名函数，通过request.params.body直接取得json数据主体，解析成table变量，放回渲染。下面： 1curl -X GET http:/...","link":"","photos":[],"count_time":{"symbolsCount":824,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}