{"title":"MoonScript调用LUA-CJSON","uid":"76c3bd62c0bfebefa8d37c47bf8fd902","slug":"old_topic/2016-09-17-355","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.159Z","comments":true,"path":"api/articles/old_topic/2016-09-17-355.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>作者：糖果</p>\n<p>Lapis的util库有对cjson封装，而我们想更直接的调用CJSON的方法，而不想依赖的封装。</p>\n<p>我们首先实现一个MoonScript写文件的代码：</p>\n<h3 id=\"写文件\"><a class=\"markdownIt-Anchor\" href=\"#写文件\"></a> 写文件：</h3>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">\nwrite_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>var<span class=\"token punctuation\">,</span> rule<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span>\n    path <span class=\"token operator\">=</span> <span class=\"token string\">\"/home/xxx\"</span>  \n    file <span class=\"token operator\">=</span> io<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span><span class=\"token string\">\"aw\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> file<span class=\"token operator\">==</span><span class=\"token keyword\">nil</span> <span class=\"token keyword\">then</span>\n        <span class=\"token keyword\">return</span>\n\n    ret <span class=\"token operator\">=</span> file\\<span class=\"token function\">write</span><span class=\"token punctuation\">(</span>rule<span class=\"token punctuation\">)</span>\n    file\\<span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"访问接口\"><a class=\"markdownIt-Anchor\" href=\"#访问接口\"></a> 访问接口：</h3>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">restyhttp <span class=\"token operator\">=</span> require <span class=\"token string\">\"resty.http\"</span>\nhttpc <span class=\"token operator\">=</span> restyhttp<span class=\"token punctuation\">.</span><span class=\"token function\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nres<span class=\"token punctuation\">,</span> err <span class=\"token operator\">=</span> httpc\\<span class=\"token function\">request_uri</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://0.0.0.0/getjson\"</span><span class=\"token punctuation\">)</span>\njsonbody <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span>\n<span class=\"token keyword\">if</span> res<span class=\"token punctuation\">.</span>status <span class=\"token operator\">==</span> ngx<span class=\"token punctuation\">.</span>HTTP_OK \n  jsonbody <span class=\"token operator\">=</span> res<span class=\"token punctuation\">.</span>body\n<span class=\"token keyword\">else</span> \n  jsonbody <span class=\"token operator\">=</span> <span class=\"token keyword\">nil</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"对json数据decode\"><a class=\"markdownIt-Anchor\" href=\"#对json数据decode\"></a> 对JSON数据DECODE:</h3>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token function\">write_data</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> jsonbody<span class=\"token punctuation\">)</span>\nt <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>jsonbody<span class=\"token punctuation\">)</span>\ntjson <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span><span class=\"token function\">decode</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span><span class=\"token string\">'message'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nngx<span class=\"token punctuation\">.</span><span class=\"token function\">say</span><span class=\"token punctuation\">(</span>util<span class=\"token punctuation\">.</span><span class=\"token function\">serialise_value</span><span class=\"token punctuation\">(</span>tjson<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token string\">\"\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>","text":"作者：糖果 Lapis的util库有对cjson封装，而我们想更直接的调用CJSON的方法，而不想依赖的封装。 我们首先实现一个MoonScript写文件的代码： 写文件： write_data = (var, rule)-> path = \"/home/xxx\" file = ...","link":"","photos":[],"count_time":{"symbolsCount":615,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%99%E6%96%87%E4%BB%B6\"><span class=\"toc-text\"> 写文件：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AE%BF%E9%97%AE%E6%8E%A5%E5%8F%A3\"><span class=\"toc-text\"> 访问接口：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%B9json%E6%95%B0%E6%8D%AEdecode\"><span class=\"toc-text\"> 对JSON数据DECODE:</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"MoonScript实现选择排序","uid":"bde2d986b961652c5b4dbeefb6342f0a","slug":"old_topic/2016-09-17-354","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.167Z","comments":true,"path":"api/articles/old_topic/2016-09-17-354.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 LUA代码： list = &#123;1,5,3,2,9,3,6&#125; len=#list for i=1,len max = list[i] for j=i+1, len do if list[j]>max then tmp=list[j] list[j]=...","link":"","photos":[],"count_time":{"symbolsCount":611,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"MoonScript如何使用RESTY-HTTP","uid":"f1a8029c8728847e5961c7e694008279","slug":"old_topic/2016-09-17-356","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.229Z","comments":true,"path":"api/articles/old_topic/2016-09-17-356.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 在OpenResty中发起HTTP请求，一般情况下，有两种方式： 1.通过内部Proxy。 2.使用RESTY-HTTP库发起访问。 Lapis使用的是interal proxy,之前文章有提到，下面提到的是RESTY-HTTP的MoonScript调用 实现。 RE...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}