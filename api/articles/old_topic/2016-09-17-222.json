{"title":"vim 可视化模式（visual模式）","uid":"27034822c77be4d440dd0177169f41b5","slug":"old_topic/2016-09-17-222","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.741Z","comments":true,"path":"api/articles/old_topic/2016-09-17-222.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>为了便于选取文本，VIM 引入了可视(Visual)模式。 要选取一段文本，首先将光标移到段首，在普通模式下按 v 进入可视模式，然后把光标移到段末。 需要注意，光标所在字符是包含在选区中的 。</p>\n<p>v    进入字符可视化模式<br>V    进入行可视化模式<br>Ctrl+v    进入块可视化模式<br>块选择 Ctrl+v   </p>\n<p>在表格中删除指定列非常有用</p>\n<p>用 v 命令进入的字符可视化模式（Characterwise visual mode)。文本选择是以字符为单位的。<br>用 V 命令进入的行可视化模式（Linewise visual mode)。文本选择是以行为单位的。<br>用 ctrl-V 进入的块可视化模式（Blockwise visual mode）。可以选择一个矩形内的文本。<br>选择：</p>\n<p>选中{}中间的内容,不包括{}</p>\n<p>va{ 选中{}中间内容，包括{}</p>\n<p>选中()中间内容</p>\n<p>vi&lt; 选中&lt;&gt;中间内容</p>\n<p>vi[ 选中[]中间内容</p>\n<p>vit 选中中间的内容</p>\n<p>vi” 选中””中间内容</p>\n<p>vi’ 选中”中间的内容、</p>\n<p>vis 选中一个句子</p>\n<p>vib 选中一个block</p>\n<p>viw 选中一个单词</p>\n<p>vip 选中一个段落<br>G        从光标所在处选择到结尾</p>\n<p>操作：</p>\n<p>这时可以对所选的文本进行一些操作，</p>\n<p>常用的(可视模式)命令有：</p>\n<p>x或d     剪切(即删除，同时所选的文本进入剪贴板) </p>\n<p>y           复制 </p>\n<p>r字符     所有字符替换为新字符 </p>\n<p>u U ~     分别是所有字母变小写、变大写、反转大小写 </p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p> 和 &lt;  将选中字符右移或左移 shiftwidth位置</p></blockquote>\n<p>当输入了命令以后，VIM 将回到普通模式，这时可以按 p 或 P 进行粘贴。普通模式下有关复制和粘贴的命令：</p>\n<p>p或P    在当前位置粘贴剪贴板的内容，p 粘在光标所在字符后面，P 粘在前面。</p>\n<p>d   与 D 的区别</p>\n<p>d只删除选中的字符，而D删除选中字符所在行的所有字符， c 和 C ， y 和 Y 同理</p>\n<p>我们还可以利用可视化模式，来合并多行文本。 J 命令可以将高亮显示的文本内容合并为一行，同时以空格来分隔各行。如果不希望在行间插入空格，那么可以使用 gJ 命令。</p>\n<p>使用 g? 命令，可以使用rot 13算法来加密高亮显示的文本。针对同一个文本再次执行加密命令，就可以进行文本解密。</p>\n<p>在可视化模式下，按下 : 键就可以对选定范围进行操作。例如：我们先在可视化模式下选中文本，然后执行 :write block.txt 命令，就可以将文本块写入另一文件中。选择多行，然后执行 :sort 命令，则可以对选中的文本进行排序。</p>\n<p>查看Visual Mode下的命令  </p>\n<p>:help v_， 例如使用 :help v_d 命令，可以得到关于在可视模式下进行删除操作的帮助信息。</p>\n","text":"为了便于选取文本，VIM 引入了可视(Visual)模式。 要选取一段文本，首先将光标移到段首，在普通模式下按 v 进入可视模式，然后把光标移到段末。 需要注意，光标所在字符是包含在选区中的 。 v 进入字符可视化模式V 进入行可视化模式Ctrl+v 进入块可视化模式块选择 Ct...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lapis的数据库查询分页功能","uid":"4a3d58a7b2640de2406b2e1d53c042d1","slug":"old_topic/2016-09-17-224","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.741Z","comments":true,"path":"api/articles/old_topic/2016-09-17-224.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：leafo 翻译：糖果 Pagination分页 Using the paginated method on models we can easily paginate through a query that might otherwise return many res...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Openresty的Lua各阶段模块执行的顺序","uid":"c71d78db21b611560e342ecd25e79bf6","slug":"old_topic/2016-09-17-228","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.742Z","comments":true,"path":"api/articles/old_topic/2016-09-17-228.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"by 糖果收集 ","link":"","photos":[],"count_time":{"symbolsCount":8,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}