{"title":"Lua的MD5库","uid":"f8bbe799e3bbd9198fe4b47a5760cfc6","slug":"old_topic/2016-09-17-Lua的MD5库","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.757Z","comments":true,"path":"api/articles/old_topic/2016-09-17-Lua的MD5库.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>作者：糖果</p>\n<p>crypto.evp也支持md5,因环境问题，我们采用md5。</p>\n<p>第一：安装。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo luarocks install md5</span><br></pre></td></tr></table></figure>\n\n\n<p>第二：测试</p>\n<p>test.lua</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md5=<span class=\"built_in\">require</span><span class=\"string\">&quot;md5&quot;</span></span><br><span class=\"line\">val = md5.sumhexa(<span class=\"string\">&quot;test string&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(val)</span><br></pre></td></tr></table></figure>\n\n<p>目前来看，这个md5库比较稳定，可以优先选择。</p>\n<p>第三：注意的地方</p>\n<p>如何在解释器(在命令行中，直接输入lua)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">md5=require&quot;md5&quot;</span><br></pre></td></tr></table></figure>\n\n<p>在引用的时候，不要写成 local md5=require”md5”。</p>\n<p>因为lua local变量的作用域，生存周期的问题，这样声明，在下一 行 “&gt;print(md)”</p>\n<p>得到的结果是nil，显而易见的是，如果nil，后面的调用都没法进行了。</p>\n<p>没有local修饰 md5：md5=require”md5”</p>\n<p>md5打印出来，才是一个table类型的值，之后的sumhexa才可成功调用。</p>\n<p>底层调用的如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/lib/lua/5.1/md5/core.so</span><br></pre></td></tr></table></figure>\n\n<p>在centos上，安装core.so、des56.so的位置是</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/lib/lua/5.1/md5</span><br></pre></td></tr></table></figure>\n\n<p>md5.lua</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/usr/local/share/lua/5.1</span><br></pre></td></tr></table></figure>\n\n<p>centos比较麻烦，推荐使用ubuntu</p>\n<p>最后如果遇到复杂的环境问题，就将md5.lua des56.so core.so 复制到当前目录（luarocks install md5产生，也有可能luarocks安装后不生md5.lua，这种就luarocks在centos上的bug,因为.lua是源主件，直接从别的机器制过来…）</p>\n<p>PS:转载到其它平台请注明作者姓名及原文链接，请勿用于商业用途。</p>\n","text":"作者：糖果 crypto.evp也支持md5,因环境问题，我们采用md5。 第一：安装。 1sudo luarocks install md5 第二：测试 test.lua 123md5=require&quot;md5&quot;val = md5.sumhexa(&quot;...","link":"","photos":[],"count_time":{"symbolsCount":788,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Nginx+Lua返回JSON类型数据","uid":"054f428f76705613481e9cfa45f6bed2","slug":"old_topic/2016-09-17-Nginx+Lua返回JSON类型数据","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.757Z","comments":true,"path":"api/articles/old_topic/2016-09-17-Nginx+Lua返回JSON类型数据.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 Nginx返回JSON数据，一种是直接在配置文件里设置，一种是通过Lua代码封装完成，讲Nginx中执行Lua返回JSON的关键，一个用API函数ngx.say，同时配合json.encode对JSON格式的字符串进行编码，然后设定响应头信息的类型。 Nginx Co...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua判断空表的正确姿势","uid":"713e977b7d1b8fcae8cb4a255a6ea756","slug":"old_topic/2016-09-17-Lua判断空表的正确姿势","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.757Z","comments":true,"path":"api/articles/old_topic/2016-09-17-Lua判断空表的正确姿势.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者:ms2008 编辑:糖果 1if t == &#123;&#125; then 这样的结果就是 t == {} 永远返回 false，是一个逻辑错误。因为这里比较的是 table t 和一个匿名 table 的内存地址。 1if table.maxn(t) == 0 the...","link":"","photos":[],"count_time":{"symbolsCount":396,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}