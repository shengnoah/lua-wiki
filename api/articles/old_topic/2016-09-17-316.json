{"title":"简单API Server框架","uid":"00e0afc1c0a95123fda2364773b4d3e8","slug":"old_topic/2016-09-17-316","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.748Z","comments":true,"path":"api/articles/old_topic/2016-09-17-316.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<h1 id=\"简单API-Server框架\"><a href=\"#简单API-Server框架\" class=\"headerlink\" title=\"简单API Server框架\"></a>简单API Server框架</h1><p>实现一个最最简单的数学计算：加、减、乘、除，给大家演示如何搭建简单的 API Server。</p>\n<p>按照前面几章的写法，先来看看加法、减法示例代码：</p>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">worker_processes</span>  <span class=\"number\">1</span>;        <span class=\"comment\">#nginx worker 数量</span></span><br><span class=\"line\"><span class=\"attribute\">error_log</span> logs/<span class=\"literal\">error</span>.log;   <span class=\"comment\">#指定错误日志文件路径</span></span><br><span class=\"line\"><span class=\"section\">events</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">worker_connections</span> <span class=\"number\">1024</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 加法</span></span><br><span class=\"line\">        <span class=\"section\">location</span> /addition &#123;</span><br><span class=\"line\">           <span class=\"section\">content_by_lua_block</span> &#123;</span><br><span class=\"line\">                <span class=\"attribute\">local</span> args = ngx.req.get_uri_args()</span><br><span class=\"line\">                ngx.say(args.a + args.b)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 减法</span></span><br><span class=\"line\">        location /subtraction &#123;</span><br><span class=\"line\">            <span class=\"section\">content_by_lua_block</span> &#123;</span><br><span class=\"line\">                <span class=\"attribute\">local</span> args = ngx.req.get_uri_args()</span><br><span class=\"line\">                ngx.say(args.a - args.b)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 乘法</span></span><br><span class=\"line\">        location /multiplication &#123;</span><br><span class=\"line\">            <span class=\"section\">content_by_lua_block</span> &#123;</span><br><span class=\"line\">                <span class=\"attribute\">local</span> args = ngx.req.get_uri_args()</span><br><span class=\"line\">                ngx.say(args.a * args.b)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 除法</span></span><br><span class=\"line\">        location /division &#123;</span><br><span class=\"line\">            <span class=\"section\">content_by_lua_block</span> &#123;</span><br><span class=\"line\">                <span class=\"attribute\">local</span> args = ngx.req.get_uri_args()</span><br><span class=\"line\">                ngx.say(args.a / args.b)</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>代码写多了一眼就可以看出来，这么简单的加减乘除，居然写了这么长，而且还要对每个 API 都写一个 location ，作为有追求的人士，怎能容忍这种代码风格？</p>\n<ul>\n<li>首先是需要把这些 location 合并；</li>\n<li>其次是这些接口的实现放到独立文件中，保持 nginx 配置文件的简洁；</li>\n</ul>\n<p>基于这两点要求，可以改成下面的版本，看上去有那么几分模样的样子：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>nginx.conf 内容：</p></blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">worker_processes</span>  <span class=\"number\">1</span>;        <span class=\"comment\">#nginx worker 数量</span></span><br><span class=\"line\"><span class=\"attribute\">error_log</span> logs/<span class=\"literal\">error</span>.log;   <span class=\"comment\">#指定错误日志文件路径</span></span><br><span class=\"line\"><span class=\"section\">events</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">worker_connections</span> <span class=\"number\">1024</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\"># 设置默认 lua 搜索路径，添加 lua 路径</span></span><br><span class=\"line\">    <span class=\"comment\"># 此处写相对路径时，对启动 nginx 的路径有要求，必须在 nginx 目录下启动，require 找不到</span></span><br><span class=\"line\">    <span class=\"comment\"># comm.param 绝对路径当然也没问题，但是不可移植，因此应使用变量 $prefix 或 </span></span><br><span class=\"line\">    <span class=\"comment\"># $&#123;prefix&#125;，OR 会替换为 nginx 的 prefix path。</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\"># lua_package_path &#x27;lua/?.lua;/blah/?.lua;;&#x27;;</span></span><br><span class=\"line\">    <span class=\"attribute\">lua_package_path</span> <span class=\"string\">&#x27;<span class=\"variable\">$prefix</span>/lua/?.lua;/blah/?.lua;;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 对于开发研究，可以对代码 cache 进行关闭，这样不必每次都重新加载 nginx。</span></span><br><span class=\"line\">    lua_code_cache <span class=\"literal\">off</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 在代码路径中使用nginx变量</span></span><br><span class=\"line\">        <span class=\"comment\"># 注意： nginx var 的变量一定要谨慎，否则将会带来非常大的风险</span></span><br><span class=\"line\">        <span class=\"section\">location</span> <span class=\"regexp\">~ ^/api/([-_a-zA-Z0-9/]+)</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\"># 准入阶段完成参数验证</span></span><br><span class=\"line\">            <span class=\"attribute\">access_by_lua_file</span>  lua/access_check.lua;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">#内容生成阶段</span></span><br><span class=\"line\">            <span class=\"attribute\">content_by_lua_file</span> lua/<span class=\"variable\">$1</span>.lua;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>其他文件内容：</p></blockquote>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--========== &#123;$prefix&#125;/lua/addition.lua</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> args = ngx.req.get_uri_args()</span><br><span class=\"line\">ngx.say(args.a + args.b)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--========== &#123;$prefix&#125;/lua/subtraction.lua</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> args = ngx.req.get_uri_args()</span><br><span class=\"line\">ngx.say(args.a - args.b)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--========== &#123;$prefix&#125;/lua/multiplication.lua</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> args = ngx.req.get_uri_args()</span><br><span class=\"line\">ngx.say(args.a * args.b)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--========== &#123;$prefix&#125;/lua/division.lua</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> args = ngx.req.get_uri_args()</span><br><span class=\"line\">ngx.say(args.a / args.b)</span><br></pre></td></tr></table></figure>\n\n<p>既然对外提供的是 API Server，作为一个服务端程序员，怎么可以容忍输入参数不检查呢？万一对方送过来的不是数字或者为空，这些都要过滤掉嘛。参数检查过滤的方法是统一，在这几个 API 中如何共享这个方法呢？这时候就需要 Lua 模块来完成了。</p>\n<ul>\n<li>使用统一的公共模块，完成参数验证；</li>\n<li>验证入口最好也统一，不要分散在不同地方；</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>nginx.conf 内容：</p></blockquote>\n<figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">worker_processes</span>  <span class=\"number\">1</span>;        <span class=\"comment\">#nginx worker 数量</span></span><br><span class=\"line\"><span class=\"attribute\">error_log</span> logs/<span class=\"literal\">error</span>.log;   <span class=\"comment\">#指定错误日志文件路径</span></span><br><span class=\"line\"><span class=\"section\">events</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">worker_connections</span> <span class=\"number\">1024</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"section\">http</span> &#123;</span><br><span class=\"line\">    <span class=\"section\">server</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 在代码路径中使用nginx变量</span></span><br><span class=\"line\">        <span class=\"comment\"># 注意： nginx var 的变量一定要谨慎，否则将会带来非常大的风险</span></span><br><span class=\"line\">        <span class=\"section\">location</span> <span class=\"regexp\">~ ^/api/([-_a-zA-Z0-9/]+)</span> &#123;</span><br><span class=\"line\">            <span class=\"attribute\">access_by_lua_file</span>  lua/access_check.lua;</span><br><span class=\"line\">            <span class=\"attribute\">content_by_lua_file</span> lua/<span class=\"variable\">$1</span>.lua;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>新增文件内容：</p></blockquote>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--========== &#123;$prefix&#125;/lua/comm/param.lua</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> _M = &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 对输入参数逐个进行校验，只要有一个不是数字类型，则返回 false</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_M.is_number</span><span class=\"params\">(...)</span></span></span><br><span class=\"line\">    <span class=\"keyword\">local</span> <span class=\"built_in\">arg</span> = &#123;...&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">local</span> num</span><br><span class=\"line\">    <span class=\"keyword\">for</span> _,v <span class=\"keyword\">in</span> <span class=\"built_in\">ipairs</span>(<span class=\"built_in\">arg</span>) <span class=\"keyword\">do</span></span><br><span class=\"line\">        num = <span class=\"built_in\">tonumber</span>(v)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"literal\">nil</span> == num <span class=\"keyword\">then</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">        <span class=\"keyword\">end</span></span><br><span class=\"line\">    <span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> _M</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">--========== &#123;$prefix&#125;/lua/access_check.lua</span></span><br><span class=\"line\"><span class=\"keyword\">local</span> param= <span class=\"built_in\">require</span>(<span class=\"string\">&quot;comm.param&quot;</span>)</span><br><span class=\"line\"><span class=\"keyword\">local</span> args = ngx.req.get_uri_args()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> param.is_number(args.a, args.b) <span class=\"keyword\">then</span></span><br><span class=\"line\">    ngx.<span class=\"built_in\">exit</span>(ngx.HTTP_BAD_REQUEST)</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\"><span class=\"keyword\">end</span></span><br></pre></td></tr></table></figure>\n\n<p>看看curl测试结果吧：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\"> nginx  curl <span class=\"string\">&#x27;127.0.0.1:80/api/addition?a=1&#x27;</span></span></span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;&lt;title&gt;400 Bad Request&lt;/title&gt;&lt;/head&gt;</span><br><span class=\"line\">&lt;body bgcolor=&quot;white&quot;&gt;</span><br><span class=\"line\">&lt;center&gt;&lt;h1&gt;400 Bad Request&lt;/h1&gt;&lt;/center&gt;</span><br><span class=\"line\">&lt;hr&gt;&lt;center&gt;openresty/1.9.3.1&lt;/center&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\"> nginx  curl <span class=\"string\">&#x27;127.0.0.1:80/api/addition?a=1&amp;b=3&#x27;</span></span></span><br><span class=\"line\">4</span><br></pre></td></tr></table></figure>\n\n<p>基本是按照预期执行的。参数不全、错误时，会提示400错误。正常处理，可以返回预期结果。</p>\n<p>来整体看一下目前的目录关系：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── conf</span><br><span class=\"line\">│   ├── nginx.conf</span><br><span class=\"line\">├── logs</span><br><span class=\"line\">│   ├── error.log</span><br><span class=\"line\">│   └── nginx.pid</span><br><span class=\"line\">├── lua</span><br><span class=\"line\">│   ├── access_check.lua</span><br><span class=\"line\">│   ├── addition.lua</span><br><span class=\"line\">│   ├── subtraction.lua</span><br><span class=\"line\">│   ├── multiplication.lua</span><br><span class=\"line\">│   ├── division.lua</span><br><span class=\"line\">│   └── comm</span><br><span class=\"line\">│       └── param.lua</span><br><span class=\"line\">└── sbin</span><br><span class=\"line\">    └── nginx</span><br></pre></td></tr></table></figure>\n\n<p>怎么样，有点 magic 的味道不？其实你的接口越是规范，有固定规律可寻，那么 OpenResty 就总是很容易能找到适合你的位置。当然这里你也可以把 <code>access_check.lua</code> 内容分别复制到加、减、乘、除实现的四个 Lua 文件中，肯定也是能用的。这里只是为了给大家提供更多的玩法，需要的时候可以有更多的选择。</p>\n<p>本章目的是搭建一个简单API Server，记住这绝对不是终极版本。这里面还有很多需要进一步去考虑的地方，但是作为最基本的框架已经有了。</p>\n","text":"简单API Server框架实现一个最最简单的数学计算：加、减、乘、除，给大家演示如何搭建简单的 API Server。 按照前面几章的写法，先来看看加法、减法示例代码： 123456789101112131415161718192021222324252627282930313...","link":"","photos":[],"count_time":{"symbolsCount":"5k","symbolsTime":"5 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%AE%80%E5%8D%95API-Server%E6%A1%86%E6%9E%B6\"><span class=\"toc-text\">简单API Server框架</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"子查询","uid":"880333deb35be82c4d3989968275351e","slug":"old_topic/2016-09-17-309","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.748Z","comments":true,"path":"api/articles/old_topic/2016-09-17-309.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"子查询Nginx 子请求是一种非常强有力的方式，它可以发起非阻塞的内部请求访问目标 location。目标 location 可以是配置文件中其他文件目录，或 任何 其他 nginx C 模块，包括 ngx_proxy、ngx_fastcgi、ngx_memc、ngx_postg...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"获取 uri 参数","uid":"d5ff1ed8ad9b9d2c1a73f4d27ebd5027","slug":"old_topic/2016-09-17-318","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T06:15:59.748Z","comments":true,"path":"api/articles/old_topic/2016-09-17-318.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"获取 uri 参数上一章节，主要介绍了一下如何使用不同 location 进行协作，对 location 进行糅合，往往都是要需要参数的二次调整。如何正确获取传递参数、设置参数，就是你的必修课了。本章目的是给出在 OpenResty 的世界中，我们如何正确获取、设置 uri 参数...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}