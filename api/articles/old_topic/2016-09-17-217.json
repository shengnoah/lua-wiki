{"title":"使用Pages服务创建静态博客(下)---部署Jekyll静态站","uid":"708c3ab643b3760bed43ade6e846877c","slug":"old_topic/2016-09-17-217","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.206Z","comments":true,"path":"api/articles/old_topic/2016-09-17-217.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>作者：糖果</p>\n<p>上一篇我们在Coding.net上部署了Pages服务，但是展示的页面比较单一，这次我们使用Jekyll工程生成一个相对完整的静态网站。</p>\n<h3>概要步骤如下：</h3> \n<ul>\n1.安装较新的Ruby开发环境。</ul>\n<ul>\n2.安装Jekyll。</ul>\n<ul>\n3.创建工程。</ul>\n<ul>\n4.上传代码。</ul>\n<ul>\n5.确认站点。</ul>\n<ul>\n</ul>\n<h3>1.安装较新的Ruby开发环境。</h3> \n因为Jekyll是依赖Ruby开发环境的，所以首先要装的是Ruby开发环境。\n<h4>1.1 本地安装Ruby。</h4> \n在Ubuntu15上，简单的两部就可以安装完成。\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt-get install ruby<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这样默认装的是Ruby2.2</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">ruby -v<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>安装ruby2.2-dev,有了这个包可见ruby.h等后继需要的文件。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt-get install ruby2.2-dev<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h4>1.2 VPS上安装。</h4> \n在阿里这种VPS上安装Ruby，推荐使用RVM安装方式。\n<h5>1.2.1 安装curl，下载RVM。</h5> \n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo apt-get curl\ncurl -L https:&#x2F;&#x2F;get.rvm.io | bash -s stable\nsource ~&#x2F;.rvm&#x2F;scripts&#x2F;rvm<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h5>1.2.2 安装RVM依赖</h5> \n<pre class=\"line-numbers language-none\"><code class=\"language-none\">rvm requirements<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h5>1.2.3 安装Ruby</h5> \n<pre class=\"line-numbers language-none\"><code class=\"language-none\">rvm install ruby\nrvm use ruby --default<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h3>2.安装Jekyll。</h3> \n安装Jekyll之前，记得要把gem的安装源换成淘宝的，你懂。\n<h4>2.1更新gem源。</h4> \n<pre class=\"line-numbers language-none\"><code class=\"language-none\">gem sources --remove http:&#x2F;&#x2F;rubygems.org&#x2F;\ngem sources --add https:&#x2F;&#x2F;ruby.taobao.org&#x2F;\ngem sources -l<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4>2.2安装Jekyll</h4> \n<pre class=\"line-numbers language-none\"><code class=\"language-none\">gem install jekyll<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3>3.创建工程。</h3> \n创建一个Jekyll的静态站，自动生成。\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">jekyll new moonscript<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3>4.上传代码。</h3> \n把新生成的所有代码文件和文件夹，全部移动到Pages服务部署文件所在有分支文件夹。\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">git add *\ngit commit -m&quot;将自动生成的文件全部上传到coding-pages分支上&quot;\ngit push origin coding-pages<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h3>5.确认站点。</h3> \n<p><a href=\"http://moonscript.cn\" target=\"_blank\">moonscript.cn</a></p>\n<p>图片：moonscript.png<br />\n<img src=\"http://orchina-blog.stor.sinaapp.com/1455544078.png\" alt=\"moonscript.png\" /></p>\n<p>在更新coding.net的jekyll文章时，有一个关键的文件要更新，就是feed.xml这个文件。</p>\n<p>原文来至糖果实验室</p>\n<p>作者：糖果<br />\nPS:转载到其它平台请注明作者姓名及原文链接，请勿用于商业用途。<br />\nLUA.REN<br />\n<a href=\"http://www.lua.ren\">http://www.lua.ren</a></p>\n","text":"作者：糖果 上一篇我们在Coding.net上部署了Pages服务，但是展示的页面比较单一，这次我们使用Jekyll工程生成一个相对完整的静态网站。 概要步骤如下： 1.安装较新的Ruby开发环境。 2.安装Jekyll。 3.创建工程。 4.上传代码。 5.确认站点。 1.安装...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">概要步骤如下：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">1.安装较新的Ruby开发环境。</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">1.1 本地安装Ruby。</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">1.2 VPS上安装。</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\"><span class=\"toc-text\">1.2.1 安装curl，下载RVM。</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\"><span class=\"toc-text\">1.2.2 安装RVM依赖</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\"><span class=\"toc-text\">1.2.3 安装Ruby</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">2.安装Jekyll。</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">2.1更新gem源。</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\"><span class=\"toc-text\">2.2安装Jekyll</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">3.创建工程。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">4.上传代码。</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\"><span class=\"toc-text\">5.确认站点。</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"LOR框架设计草图","uid":"ad959d61ae3ba0f4919be1ad782c86c1","slug":"old_topic/2016-09-17-216","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.229Z","comments":true,"path":"api/articles/old_topic/2016-09-17-216.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"下面图是LOR的框架的设计草图，是作者饭总当时为实现LOR画的，提供给大家参考： 想把route,router,layer那部分的設計畫清楚一些，饭總提供了一下現這個在線畫圖的工具： https://www.processon.com/ 图片：1.jpg 图片：2.jpg 图片：...","link":"","photos":[],"count_time":{"symbolsCount":177,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"使用Pages服务创建静态博客(上)","uid":"a8389061bbd1e9023a83242f7e76acdb","slug":"old_topic/2016-09-17-215","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.159Z","comments":true,"path":"api/articles/old_topic/2016-09-17-215.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 Coding.net同样提供了类似github的pages的功能， 这样就可以使用pages服务创建静态博客。 创建步骤： 配置本地git环境。 本地创建目录结构和静态文件。 初始化本地目录为git工程，创建本地分支，并上传文件。 启动配置coding上的pages，...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}