{"title":"安装zsh及其常用插件","uid":"d0886af109289466091152072b994710","slug":"old_topic/2016-09-17-255","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.174Z","comments":true,"path":"api/articles/old_topic/2016-09-17-255.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>zsh可以被视为是对Bourne shell的一种扩展，完全兼容bash。它强大的自动补全功能对我还是非常有吸引力的。</p>\n<p>总体来说，zsh的功能主要包括：</p>\n<ol>\n<li class=\"lvl-3\">\n<p>开箱即用、可编程的命令行补全功能可以帮助用户输入各种参数以及选项。</p>\n</li>\n<li class=\"lvl-3\">\n<p>在用户启动的所有shell中共享命令历史。</p>\n</li>\n<li class=\"lvl-3\">\n<p>通过扩展的文件通配符，可以不利用外部命令达到find命令一般展开文件名。</p>\n</li>\n<li class=\"lvl-3\">\n<p>改进的变量与数组处理。</p>\n</li>\n<li class=\"lvl-3\">\n<p>在缓冲区中编辑多行命令。</p>\n</li>\n<li class=\"lvl-3\">\n<p>多种兼容模式，例如使用/bin/sh运行时可以伪装成Bourne shell。</p>\n</li>\n<li class=\"lvl-3\">\n<p>可以定制呈现形式的提示符；包括在屏幕右端显示信息，并在键入长命令时自动隐藏。</p>\n</li>\n<li class=\"lvl-3\">\n<p>可加载的模块，提供其他各种支持：完整的TCP与Unix域套接字控制，FTP. 客户端与扩充过的数学函数。</p>\n</li>\n<li class=\"lvl-3\">\n<p>完全可定制化。</p>\n</li>\n</ol>\n<p>安装zsh</p>\n<p>在Linux中，我们可以：</p>\n<pre><code># 如果你用的是yum包管理器，将下面的apt-get替换成yum即可。\nsudo apt-get install zsh\n# 安装完成后，我们要讲默认的shell替换成zsh\nchsh -s /bin/zsh\n</code></pre>\n<p>在cygwin中，我们可以用cygwin安装器来安装zsh： install zsh</p>\n<p>安装完成后，我们只需在~/.bash_profile文件的末尾添加一行exec zsh。然后重启终端即可。</p>\n<p>安装oh-my-zsh<br>\noh-my-zsh的源码是托管于github上的。所以，我们要先克隆该版本库中的代码：</p>\n<pre><code>git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh\n</code></pre>\n<p>然后，为谨慎起见，我们在安装之前应该先备份一下现有的zsh配置：</p>\n<pre><code>cp ~/.zshrc ~/.zshrc.orig\n</code></pre>\n<p>现在，我们创建一个新的zsh配置文件：</p>\n<pre><code>cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\n</code></pre>\n<p>如果你看到如下界面，说明安装完成。 cygwin_oh_my_zsh</p>\n<p>安装zsh-syntax-highlighting插件同样地，我们要先下载它的源码，但在这里，我们可以利用一下oh-my-zsh的插件管理功能：</p>\n<pre><code>cd ~/.oh-my-zsh/custom/plugins\ngit clone git://github.com/zsh-users/zsh-syntax-highlighting.git\n</code></pre>\n<p>然后，我们打开~/.zshrc文件，找到以下段落；</p>\n<pre><code># Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)\n# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/\n# Example format: plugins=(rails git textmate ruby lighthouse)\n# Add wisely, as too many plugins slow down shell startup.\nplugins=(git)\n</code></pre>\n<p>按照注释中的提示改成plugins=(git zsh-syntax-highlighting)即可。</p>\n<p>安装autojump插件。同样地，我们需要先下载源码：</p>\n<pre><code>git clone git://github.com/joelthelion/autojump.git\n</code></pre>\n<p>然后安装该程序：</p>\n<pre><code>cd autojump\n./install.py\n</code></pre>\n<p>最后，我们只需在~/.zshrc文件中加入以下代码即可。</p>\n<pre><code># install autojump\n[[ -s ~/.autojump/etc/profile.d/autojump.sh ]] &amp;&amp; . ~/.autojump/etc/profile.d/autojump.sh\n</code></pre>\n<p>安装Powerline-Shell插件其过程与autojump的安装基本相同，先下载源码：</p>\n<pre><code>git clone https://github.com/milkbikis/powerline-shell\n</code></pre>\n<p>再安装：</p>\n<pre><code>cd powerline-shell\n./install.py\nln -s &lt;path/to/powerline-shell.py&gt; ~/powerline-shell.py\n</code></pre>\n<p>最后再配置~/.zshrc文件，在其末尾加入如下代码：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\">install powerline-shell</span></span><br><span class=\"line\">function powerline_precmd() &#123;</span><br><span class=\"line\">  export PS1=&quot;$(~/powerline-shell.py  --cwd-max-depth 1 --cwd-only $? --shell zsh 2&gt; /dev/null )&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function install_powerline_precmd() &#123;</span><br><span class=\"line\">  for s in &quot;$&#123;precmd_functions[@]&#125;&quot;; do</span><br><span class=\"line\">    if [ &quot;$s&quot; = &quot;powerline_precmd&quot; ]; then</span><br><span class=\"line\">      return</span><br><span class=\"line\">    fi</span><br><span class=\"line\">  done</span><br><span class=\"line\">  precmd_functions+=(powerline_precmd)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">install_powerline_precmd</span><br></pre></td></tr></table></figure>\n<p>然后在cygwin中，我们就看到如下最终效果： my_zsh</p>\n<p>作者：凌杰</p>\n<p><a href=\"http://www.epubit.com.cn/article/582\">原文连接:</a></p>\n","text":"zsh可以被视为是对Bourne shell的一种扩展，完全兼容bash。它强大的自动补全功能对我还是非常有吸引力的。 总体来说，zsh的功能主要包括： 开箱即用、可编程的命令行补全功能可以帮助用户输入各种参数以及选项。 在用户启动的所有shell中共享命令历史。 通过扩展的文件...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Octopress的Figcaption的CSS样式差异","uid":"d97242e82975d5be79f8c9c982dae804","slug":"old_topic/2016-09-17-254","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.166Z","comments":true,"path":"api/articles/old_topic/2016-09-17-254.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者、编辑：糖果 新版的Octopress与旧版的的Figcaption的CSS样式差异，以下的CSS是被格式化之后的： 旧版的 12345678910111213141516171819202122232425262728293031.code-title,html .gist...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Sitegen的模板问题","uid":"27f5dd10d15b97af4bd3b63c97316dd6","slug":"old_topic/2016-09-17-256","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.213Z","comments":true,"path":"api/articles/old_topic/2016-09-17-256.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"作者：糖果 Sitegen的模板是用MoonScript定义， 但是leafo老版的代码，貌似和VPS的环境结合的不是很好，是不是纯环境原因造成的不深究了，直接把模板代码改成需要的样式。 1234div class: &quot;post&quot;, -&gt; div cla...","link":"","photos":[],"count_time":{"symbolsCount":352,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}