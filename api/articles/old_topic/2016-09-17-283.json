{"title":"Python的命令行解析工具OptParse","uid":"3d930fa3cf2f5987b2f125f1dac087cf","slug":"old_topic/2016-09-17-283","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.162Z","comments":true,"path":"api/articles/old_topic/2016-09-17-283.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>作者：糖果</p>\n<p>无论是用C语言，还是用Java，有时都会写一些命令行的工具，解析用户在命令输入的参数，而Python有自己特色的命令行参数解析库，就是optparse。hpfeed-cli的源码就是用optparse来解析命令行参数的，hpfeed是给威胁地图发送威胁数据的，使用的是hpfeed协议，hpfeed-cli是一个在terminal中直接运行的命令行程序，有着非常复杂的参数输入。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> sys\n<span class=\"token keyword\">import</span> optparse\n<span class=\"token keyword\">import</span> datetime\n<span class=\"token keyword\">import</span> logging\n<span class=\"token keyword\">import</span> string\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>opts<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">,</span> pubdata<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    outfd <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n    <span class=\"token keyword\">print</span> action\n    <span class=\"token keyword\">print</span> data\n    <span class=\"token keyword\">print</span> options\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">opts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    usage <span class=\"token operator\">=</span> <span class=\"token string\">\"usage: %prog -i ident -s secret --host host -p port -c channel1 [-c channel2, ...] &lt;action> [&lt;data>]\"</span>\n    parser <span class=\"token operator\">=</span> optparse<span class=\"token punctuation\">.</span>OptionParser<span class=\"token punctuation\">(</span>usage<span class=\"token operator\">=</span>usage<span class=\"token punctuation\">)</span>\n\n    parser<span class=\"token punctuation\">.</span>add_option<span class=\"token punctuation\">(</span><span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"--chan\"</span><span class=\"token punctuation\">,</span>\n    action<span class=\"token operator\">=</span><span class=\"token string\">\"append\"</span><span class=\"token punctuation\">,</span> dest<span class=\"token operator\">=</span><span class=\"token string\">'channels'</span><span class=\"token punctuation\">,</span> nargs<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token operator\">=</span><span class=\"token string\">'string'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"channel (can be used multiple times)\"</span><span class=\"token punctuation\">)</span>\n\n\n    parser<span class=\"token punctuation\">.</span>add_option<span class=\"token punctuation\">(</span><span class=\"token string\">\"--debug\"</span><span class=\"token punctuation\">,</span>\n    action<span class=\"token operator\">=</span><span class=\"token string\">\"store_const\"</span><span class=\"token punctuation\">,</span> dest<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token builtin\">help</span><span class=\"token operator\">=</span><span class=\"token string\">\"enable debug log output\"</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> const<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n\n    options<span class=\"token punctuation\">,</span> args <span class=\"token operator\">=</span> parser<span class=\"token punctuation\">.</span>parse_args<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n        parser<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">'You need to give \"subscribe\" or \"publish\" as &lt;action>.'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'subscribe'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'publish'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sendfile'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n        parser<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">(</span><span class=\"token string\">'You need to give \"subscribe\" or \"publish\" as &lt;action>.'</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> options<span class=\"token punctuation\">.</span>debug<span class=\"token punctuation\">:</span>\n        logging<span class=\"token punctuation\">.</span>basicConfig<span class=\"token punctuation\">(</span>level<span class=\"token operator\">=</span>logging<span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        logging<span class=\"token punctuation\">.</span>basicConfig<span class=\"token punctuation\">(</span>level<span class=\"token operator\">=</span>logging<span class=\"token punctuation\">.</span>CRITICAL<span class=\"token punctuation\">)</span>\n\n\n    action <span class=\"token operator\">=</span> args<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n    data <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n    <span class=\"token keyword\">if</span> action <span class=\"token operator\">==</span> <span class=\"token string\">'publish'</span><span class=\"token punctuation\">:</span>\n        data <span class=\"token operator\">=</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> action <span class=\"token operator\">==</span> <span class=\"token string\">'sendfile'</span><span class=\"token punctuation\">:</span>\n        data <span class=\"token operator\">=</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">return</span> options<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">,</span> data\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n        options<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">,</span> data <span class=\"token operator\">=</span> opts<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n                sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">,</span> pubdata<span class=\"token operator\">=</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> KeyboardInterrupt<span class=\"token punctuation\">:</span>\n                sys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>从命令行输入的数据来看， 把数据归为三类：</p>\n<h5 id=\"1action动作\"><a class=\"markdownIt-Anchor\" href=\"#1action动作\"></a> 1.action(动作)</h5>\n<h5 id=\"2data动作对应的数据\"><a class=\"markdownIt-Anchor\" href=\"#2data动作对应的数据\"></a> 2.data(动作对应的数据)</h5>\n<h5 id=\"3options动作具体的选项\"><a class=\"markdownIt-Anchor\" href=\"#3options动作具体的选项\"></a> 3.options（动作具体的选项）</h5>\n<p>以上的action其实是命令行定义的动作，简单说就是执行那种类型的命令，这个命令是命令行的子命令，理论上可以很多，而data就是执行action命令时需要的数据，这数据可以是一个列表。options也可以设置很多个，和option来设置命令执行的方式和区别。</p>\n<p>我们根据以上程序的设定来执行一下这个程序，在命令行输入：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">python blog-client.py sendfile data_element1 data_element2 data_element3 <span class=\"token parameter variable\">-c</span> channel <span class=\"token parameter variable\">--debug</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后，分别看一个 ，action，data，options的值。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sendfile\ndata_element1 data_element2 data_element3\n&#123;&#39;channels&#39;: [&#39;channel&#39;], &#39;debug&#39;: True&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"action是字符串sendfile\"><a class=\"markdownIt-Anchor\" href=\"#action是字符串sendfile\"></a> action是字符串：sendfile</h5>\n<h5 id=\"data是列表data_element1-data_element2-data_element3\"><a class=\"markdownIt-Anchor\" href=\"#data是列表data_element1-data_element2-data_element3\"></a> data是列表：data_element1 data_element2 data_element3</h5>\n<h5 id=\"options是map列表channels-channel-debug-true\"><a class=\"markdownIt-Anchor\" href=\"#options是map列表channels-channel-debug-true\"></a> options是map列表：{‘channels’: [‘channel’], ‘debug’: True}</h5>\n<p>这样我们就将用户命令行输入的参数都解析到适当的数据结构中了，接着要做的就是根据参数定义，执行我们业务逻辑代码。<br />\n关于这个库的使用的API，几个：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">optparse.OptionParser(usage&#x3D;usage)\nparser.add_option\nparser.parse_args\nparser.error<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这个可以结合代码，领会一下意思吧!</p>\n","text":"作者：糖果 无论是用C语言，还是用Java，有时都会写一些命令行的工具，解析用户在命令输入的参数，而Python有自己特色的命令行参数解析库，就是optparse。hpfeed-cli的源码就是用optparse来解析命令行参数的，hpfeed是给威胁地图发送威胁数据的，使用的是...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#1action%E5%8A%A8%E4%BD%9C\"><span class=\"toc-text\"> 1.action(动作)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#2data%E5%8A%A8%E4%BD%9C%E5%AF%B9%E5%BA%94%E7%9A%84%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\"> 2.data(动作对应的数据)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#3options%E5%8A%A8%E4%BD%9C%E5%85%B7%E4%BD%93%E7%9A%84%E9%80%89%E9%A1%B9\"><span class=\"toc-text\"> 3.options（动作具体的选项）</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#action%E6%98%AF%E5%AD%97%E7%AC%A6%E4%B8%B2sendfile\"><span class=\"toc-text\"> action是字符串：sendfile</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#data%E6%98%AF%E5%88%97%E8%A1%A8data_element1-data_element2-data_element3\"><span class=\"toc-text\"> data是列表：data_element1 data_element2 data_element3</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#options%E6%98%AFmap%E5%88%97%E8%A1%A8channels-channel-debug-true\"><span class=\"toc-text\"> options是map列表：{‘channels’: [‘channel’], ‘debug’: True}</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"OpenResty China的登陆处理与发贴限制","uid":"25b1e87350d6efc1b47c2b7e104bcc7d","slug":"old_topic/2016-09-17-282","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.170Z","comments":true,"path":"api/articles/old_topic/2016-09-17-282.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者：糖果 Openresty China是饭总之前创建，现在由我来维护一个线上的版本。最开始的时候，对于orchina.org的用户来说的，是有三天内不能发贴的限制的，但之后我们想用一个用户激活的标志来控制是否允许用户发帖，从路由和视图几角度来看，如下： 1.Login登陆模块...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua判断空表的正确姿势","uid":"713e977b7d1b8fcae8cb4a255a6ea756","slug":"old_topic/2016-09-17-284","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.221Z","comments":true,"path":"api/articles/old_topic/2016-09-17-284.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"作者:ms2008 编辑:糖果 if t == &#123;&#125; then 这样的结果就是 t == {} 永远返回 false，是一个逻辑错误。因为这里比较的是 table t 和一个匿名 table 的内存地址。 if table.maxn(t) == 0 then ...","link":"","photos":[],"count_time":{"symbolsCount":385,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}