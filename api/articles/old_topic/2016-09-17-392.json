{"title":"libpcap监听网络端口数据","uid":"1da6405cfff3883466e411939e823d07","slug":"old_topic/2016-09-17-392","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.162Z","comments":true,"path":"api/articles/old_topic/2016-09-17-392.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>下面的代码是监听本机源80地址流出的数据， 并以字符的形式打印出来。</p>\n<p>代码：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;pcap.h></span>  </span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;time.h></span>  </span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdlib.h></span>  </span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span>  </span>\n  \n<span class=\"token keyword\">void</span> <span class=\"token function\">getPacket</span><span class=\"token punctuation\">(</span>u_char <span class=\"token operator\">*</span> arg<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">pcap_pkthdr</span> <span class=\"token operator\">*</span> pkthdr<span class=\"token punctuation\">,</span> <span class=\"token keyword\">const</span> u_char <span class=\"token operator\">*</span> packet<span class=\"token punctuation\">)</span>  \n<span class=\"token punctuation\">&#123;</span>  \n  <span class=\"token keyword\">int</span> <span class=\"token operator\">*</span> id <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span>arg<span class=\"token punctuation\">;</span>  \n    \n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id: %d\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">++</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Packet length: %d\\n\"</span><span class=\"token punctuation\">,</span> pkthdr<span class=\"token operator\">-></span>len<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Number of bytes: %d\\n\"</span><span class=\"token punctuation\">,</span> pkthdr<span class=\"token operator\">-></span>caplen<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Recieved time: %s\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">ctime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> <span class=\"token class-name\">time_t</span> <span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>pkthdr<span class=\"token operator\">-></span>ts<span class=\"token punctuation\">.</span>tv_sec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \n    \n  <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">;</span>  \n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span>pkthdr<span class=\"token operator\">-></span>len<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>  \n  <span class=\"token punctuation\">&#123;</span>   \n    <span class=\"token comment\">//printf(\" %02x\", packet[i]);  </span>\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\" %c\"</span><span class=\"token punctuation\">,</span> packet<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">16</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">)</span>   \n    <span class=\"token punctuation\">&#123;</span>   \n        <span class=\"token comment\">//printf(\"\\n\");  </span>\n    <span class=\"token punctuation\">&#125;</span>   \n  <span class=\"token punctuation\">&#125;</span>   \n  \n  <span class=\"token comment\">//printf(\"%s\\n\", packet);</span>\n\n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span>  \n\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  \n<span class=\"token punctuation\">&#123;</span>  \n  <span class=\"token keyword\">char</span> errBuf<span class=\"token punctuation\">[</span>PCAP_ERRBUF_SIZE<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> devStr<span class=\"token punctuation\">;</span>  \n    \n  <span class=\"token comment\">/* get a device */</span>  \n  <span class=\"token comment\">//devStr = pcap_lookupdev(errBuf);  </span>\n  devStr <span class=\"token operator\">=</span> <span class=\"token string\">\"eth1\"</span><span class=\"token punctuation\">;</span>\n    \n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>devStr<span class=\"token punctuation\">)</span>  \n  <span class=\"token punctuation\">&#123;</span>   \n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"success: device: %s\\n\"</span><span class=\"token punctuation\">,</span> devStr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  <span class=\"token punctuation\">&#125;</span>   \n  <span class=\"token keyword\">else</span>  \n  <span class=\"token punctuation\">&#123;</span>   \n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error: %s\\n\"</span><span class=\"token punctuation\">,</span> errBuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  <span class=\"token punctuation\">&#125;</span>   \n    \n  <span class=\"token comment\">/* open a device, wait until a packet arrives */</span>  \n  <span class=\"token class-name\">pcap_t</span> <span class=\"token operator\">*</span> device <span class=\"token operator\">=</span> <span class=\"token function\">pcap_open_live</span><span class=\"token punctuation\">(</span>devStr<span class=\"token punctuation\">,</span> <span class=\"token number\">65535</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> errBuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    \n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>device<span class=\"token punctuation\">)</span>  \n  <span class=\"token punctuation\">&#123;</span>   \n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"error: pcap_open_live(): %s\\n\"</span><span class=\"token punctuation\">,</span> errBuf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token function\">exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  <span class=\"token punctuation\">&#125;</span>   \n    \n  <span class=\"token comment\">/* construct a filter */</span>  \n  <span class=\"token keyword\">struct</span> <span class=\"token class-name\">bpf_program</span> filter<span class=\"token punctuation\">;</span>  \n  <span class=\"token function\">pcap_compile</span><span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>filter<span class=\"token punctuation\">,</span> <span class=\"token string\">\"src port 80\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  <span class=\"token comment\">//pcap_compile(device, &amp;filter, \"dst port 80\", 1, 0);  </span>\n  <span class=\"token function\">pcap_setfilter</span><span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>filter<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/* wait loop forever */</span>\n  <span class=\"token keyword\">int</span> id <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">pcap_loop</span><span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> getPacket<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>u_char<span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">pcap_close</span><span class=\"token punctuation\">(</span>device<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>编译：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">gcc test.c -o test -lpcap<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>","text":"下面的代码是监听本机源80地址流出的数据， 并以字符的形式打印出来。 代码： #include &lt;pcap.h> #include &lt;time.h> #include &lt;stdlib.h> #include &lt;stdio.h> void getPacket...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"快速安装MySQL与为Lapis修改mysql字符集","uid":"bf9123379f1a4de9653db6fc2b33716c","slug":"old_topic/2016-09-17-39-mysql-install","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.202Z","comments":true,"path":"api/articles/old_topic/2016-09-17-39-mysql-install.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 快速安装MySQL 下载安装Yum源 wget -i -c http:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;mysql57-community-release-el7-10.noarch.rpm 安装的MySQL与服务器端 yum -y...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"},{"name":"mysql","slug":"topic/mysql","count":1,"path":"api/categories/topic/mysql.json"}],"tags":[{"name":"lapis","slug":"lapis","count":3,"path":"api/tags/lapis.json"},{"name":"mysql","slug":"mysql","count":1,"path":"api/tags/mysql.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"windump与graylog","uid":"a97a619732554d0e595f9f947fc0b0aa","slug":"old_topic/2016-09-17-391","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.230Z","comments":true,"path":"api/articles/old_topic/2016-09-17-391.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"抓取流量最流行的工具就是Wireshark,在Windows上Wireshark的GUI界面很酷，但对于在linux和mac用惯了tcpdump用户来说，用命令行的tcpdump更直接便捷。Windows上有没有类似tcpdump的抓包工具呢？答案是有的，就是windump，底层...","link":"","photos":[],"count_time":{"symbolsCount":805,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}