{"title":"LUA调用C语言实现的SO库","uid":"41a2ce410f87ba443188f31dccca5c41","slug":"old_topic/2016-09-17-156","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.180Z","comments":true,"path":"api/articles/old_topic/2016-09-17-156.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>作者：糖果</p>\n<p>这篇文章归纳lua5.1的C语言模库so的“标准”写法，代码都是编译通过的，可直接参考使用！</p>\n<p>tangguo.h</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> __tangguo_h__</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> __tangguo_h__</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;lauxlib.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;lua.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;lualib.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;lauxlib.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"type\">int</span> <span class=\"title function_\">add</span><span class=\"params\">(lua_State* L)</span>;</span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"type\">int</span> <span class=\"title function_\">sub</span><span class=\"params\">(lua_State* L)</span>;</span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"type\">int</span> <span class=\"title function_\">luaopen_libtangguo</span><span class=\"params\">(lua_State* L)</span>;</span><br><span class=\"line\"><span class=\"type\">static</span> luaL_Reg libtangguo[] = &#123;</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;add&quot;</span>, add&#125;,</span><br><span class=\"line\">        &#123;<span class=\"string\">&quot;sub&quot;</span>, sub&#125;,</span><br><span class=\"line\">        &#123;<span class=\"literal\">NULL</span>, <span class=\"literal\">NULL</span>&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>tangguo.c</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;tangguo.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">sub</span><span class=\"params\">(lua_State* L)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">double</span> op1 = luaL_checknumber(L, <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"type\">double</span> op2 = luaL_checknumber(L, <span class=\"number\">2</span>);</span><br><span class=\"line\">    lua_pushnumber(L, op1 - op2);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">add</span><span class=\"params\">(lua_State* L)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">double</span> op1 = luaL_checknumber(L, <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"type\">double</span> op2 = luaL_checknumber(L, <span class=\"number\">2</span>);</span><br><span class=\"line\">    lua_pushnumber(L, op1 + op2);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">luaopen_libtangguo</span><span class=\"params\">(lua_State* L)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    luaL_openlibs(L);</span><br><span class=\"line\">    <span class=\"type\">const</span> <span class=\"type\">char</span>* libName = <span class=\"string\">&quot;libtangguo&quot;</span>;</span><br><span class=\"line\">    luaL_register(L, libName, libtangguo);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>Makefile</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#LUALIB=-I/usr/include/lua5.1 -L/usr/local/lib -llua -ldl -lm</span><br><span class=\"line\">LUALIB=-I/usr/include/lua5.1 -L/usr/local/lib -ldl -lm</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">.PHONY: all win linux</span><br><span class=\"line\"></span><br><span class=\"line\">all:</span><br><span class=\"line\">        @echo Please do \\&#x27;make PLATFORM\\&#x27; where PLATFORM is one of these:</span><br><span class=\"line\">        @echo win linux</span><br><span class=\"line\"></span><br><span class=\"line\">win:</span><br><span class=\"line\"></span><br><span class=\"line\">linux: libtangguo.so</span><br><span class=\"line\"></span><br><span class=\"line\">libtangguo.so : tangguo.c</span><br><span class=\"line\">        #gcc --shared -Wall -fPIC -O2 $^ -o$@</span><br><span class=\"line\">        gcc --shared -Wall -fPIC -O2 $^ -o$@</span><br><span class=\"line\"></span><br><span class=\"line\">clean:</span><br><span class=\"line\">        rm -f libtangguo.so</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>2016.6.7日的时候，重新看了一下这篇文章，发现gcc的一个有开关没加，lib库又多加了一个。追加了$(LUALIB), 去掉了 -llua 编译选项。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/*</span><br><span class=\"line\">** Try to find a load function for module &#x27;modname&#x27; at file &#x27;filename&#x27;.</span><br><span class=\"line\">** First, change &#x27;.&#x27; to &#x27;_&#x27; in &#x27;modname&#x27;; then, if &#x27;modname&#x27; has</span><br><span class=\"line\">** the form X-Y (that is, it has an &quot;ignore mark&quot;), build a function</span><br><span class=\"line\">** name &quot;luaopen_X&quot; and look for it. (For compatibility, if that</span><br><span class=\"line\">** fails, it also tries &quot;luaopen_Y&quot;.) If there is no ignore mark,</span><br><span class=\"line\">** look for a function named &quot;luaopen_modname&quot;.</span><br><span class=\"line\">*/</span><br><span class=\"line\">static int loadfunc (lua_State *L, const char *filename, const char *modname) &#123;</span><br><span class=\"line\">  const char *openfunc;</span><br><span class=\"line\">  const char *mark;</span><br><span class=\"line\">  modname = luaL_gsub(L, modname, &quot;.&quot;, LUA_OFSEP);</span><br><span class=\"line\">  mark = strchr(modname, *LUA_IGMARK);</span><br><span class=\"line\">  if (mark) &#123;</span><br><span class=\"line\">    int stat;</span><br><span class=\"line\">    openfunc = lua_pushlstring(L, modname, mark - modname);</span><br><span class=\"line\">    openfunc = lua_pushfstring(L, LUA_POF&quot;%s&quot;, openfunc);</span><br><span class=\"line\">    stat = lookforfunc(L, filename, openfunc);</span><br><span class=\"line\">    if (stat != ERRFUNC) return stat;</span><br><span class=\"line\">    modname = mark + 1;  /* else go ahead and try old-style name */</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  openfunc = lua_pushfstring(L, LUA_POF&quot;%s&quot;, modname);</span><br><span class=\"line\">  return lookforfunc(L, filename, openfunc);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">static int ll_loadlib (lua_State *L) &#123;</span><br><span class=\"line\">  const char *path = luaL_checkstring(L, 1);</span><br><span class=\"line\">  const char *init = luaL_checkstring(L, 2);</span><br><span class=\"line\">  int stat = lookforfunc(L, path, init);</span><br><span class=\"line\">  if (stat == 0)  /* no errors? */</span><br><span class=\"line\">    return 1;  /* return the loaded function */</span><br><span class=\"line\">  else &#123;  /* error; error message is on stack top */</span><br><span class=\"line\">    lua_pushnil(L);</span><br><span class=\"line\">    lua_insert(L, -2);</span><br><span class=\"line\">    lua_pushstring(L, (stat == ERRLIB) ?  LIB_FAIL : &quot;init&quot;);</span><br><span class=\"line\">    return 3;  /* return nil, error message, and where */</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p><a href=\"https://github.com/lua/lua/blob/e354c6355e7f48e087678ec49e340ca0696725b1/loadlib.c\">https://github.com/lua/lua/blob/e354c6355e7f48e087678ec49e340ca0696725b1/loadlib.c</a></p>\n<p>作者：糖果<br>\nPS:转载到其它平台请注明作者姓名及原文链接，请勿用于商业用途。</p>\n<p><a href=\"http://www.lua.ren/topic/133/lua-faq\" target=\"_blank\">点击查看Lua FAQ</a></p>\n","text":"作者：糖果 这篇文章归纳lua5.1的C语言模库so的“标准”写法，代码都是编译通过的，可直接参考使用！ tangguo.h 123456789101112131415161718#ifndef __tangguo_h__#define __tangguo_h__#include...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"LUA书","uid":"a4dc51fe6b804bd703cc11ff53f294af","slug":"old_topic/2016-09-17-157","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.156Z","comments":true,"path":"api/articles/old_topic/2016-09-17-157.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"var jd_union_pid=\"936552349\";var jd_union_euid=\"\"; var jd_union_pid=\"936550394\";var jd_union_euid=\"\"; var jd_union_pid=\"936535377\";var jd_un...","link":"","photos":[],"count_time":{"symbolsCount":893,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua快速入门书","uid":"f3e99e9ea7d7d80df722bfdd4f318e9e","slug":"old_topic/2016-09-17-163","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.154Z","comments":true,"path":"api/articles/old_topic/2016-09-17-163.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"这是一本lua的入门书籍。 ","link":"","photos":[],"count_time":{"symbolsCount":14,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":308,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}