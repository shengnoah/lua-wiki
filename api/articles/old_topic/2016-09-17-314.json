{"title":"helloworld","uid":"7feb1bc48352a2bd04c7a6d1cf8eb726","slug":"old_topic/2016-09-17-314","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.165Z","comments":true,"path":"api/articles/old_topic/2016-09-17-314.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h1 id=\"helloworld\"><a class=\"markdownIt-Anchor\" href=\"#helloworld\"></a> HelloWorld</h1>\n<p><code>HelloWorld</code> 是我们亘古不变的第一个入门程序。但是 <code>OpenResty</code> 不是一门编程语言，跟其他编程语言的 <code>HelloWorld</code> 不一样，让我们看看都有哪些不一样吧。</p>\n<h4 id=\"创建工作目录\"><a class=\"markdownIt-Anchor\" href=\"#创建工作目录\"></a> 创建工作目录</h4>\n<p>OpenResty 安装之后就有配置文件及相关的目录的，为了工作目录与安装目录互不干扰，并顺便学下简单的配置文件编写，我们另外创建一个 OpenResty 的工作目录来练习，并且另写一个配置文件。我选择在当前用户目录下创建 openresty-test 目录，并在该目录下创建 logs 和 conf 子目录分别用于存放日志和配置文件。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">mkdir</span> ~/openresty-test ~/openresty-test/logs/ ~/openresty-test/conf/\n$\n$ tree ~/openresty-test\n/Users/yuansheng/openresty-test\n├── conf\n└── logs\n\n<span class=\"token number\">2</span> directories, <span class=\"token number\">0</span> files<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"创建配置文件\"><a class=\"markdownIt-Anchor\" href=\"#创建配置文件\"></a> 创建配置文件</h4>\n<p>在 conf 目录下创建一个文本文件作为配置文件，命名为 nginx.conf，文件内容如下:</p>\n<pre class=\"line-numbers language-nginx\" data-language=\"nginx\"><code class=\"language-nginx\"><span class=\"token directive\"><span class=\"token keyword\">worker_processes</span>  <span class=\"token number\">1</span></span><span class=\"token punctuation\">;</span>        <span class=\"token comment\">#nginx worker 数量</span>\n<span class=\"token directive\"><span class=\"token keyword\">error_log</span> logs/error.log</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">#指定错误日志文件路径</span>\n<span class=\"token directive\"><span class=\"token keyword\">events</span></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">worker_connections</span> <span class=\"token number\">1024</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token directive\"><span class=\"token keyword\">http</span></span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token directive\"><span class=\"token keyword\">server</span></span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">#监听端口，若你的6699端口已经被占用，则需要修改</span>\n        <span class=\"token directive\"><span class=\"token keyword\">listen</span> <span class=\"token number\">6699</span></span><span class=\"token punctuation\">;</span>\n        <span class=\"token directive\"><span class=\"token keyword\">location</span> /</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token directive\"><span class=\"token keyword\">default_type</span> text/html</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token directive\"><span class=\"token keyword\">content_by_lua_block</span></span> <span class=\"token punctuation\">&#123;</span>\n                ngx.say(\"HelloWorld\")\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>提示：openresty 1.9.3.1 及以下版本，请使用 content_by_lua 命令；在 openresty 1.9.3.2 以上，content_by_lua 改成了 content_by_lua_block。可使用 nginx -V 命令查看版本号。</p>\n<h4 id=\"万事俱备只欠东风\"><a class=\"markdownIt-Anchor\" href=\"#万事俱备只欠东风\"></a> 万事俱备只欠东风</h4>\n<p>我们启动 nginx 即可，输入命令形式为：<code>nginx -p ~/openresty-test</code>，如果没有提示错误。如果提示 nginx 不存在，则需要在环境变量中加入安装路径，可以根据你的操作平台，参考前面的安装章节（一般需要重启生效）。</p>\n<p>启动成功后，我们可以查看 nginx 进程是否存在，并通过访问 HTTP 页面查看应答内容。操作提示如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">➜  ~ nginx <span class=\"token parameter variable\">-p</span> ~/openresty-test\n➜  ~ <span class=\"token function\">ps</span> <span class=\"token parameter variable\">-ef</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> nginx\n  <span class=\"token number\">501</span> <span class=\"token number\">88620</span>     <span class=\"token number\">1</span>   <span class=\"token number\">0</span> <span class=\"token number\">10</span>:58AM ?? <span class=\"token number\">0</span>:00.00 nginx: master process nginx <span class=\"token parameter variable\">-p</span>\n                                    /Users/yuansheng/openresty-test\n  <span class=\"token number\">501</span> <span class=\"token number\">88622</span> <span class=\"token number\">88620</span>   <span class=\"token number\">0</span> <span class=\"token number\">10</span>:58AM ?? <span class=\"token number\">0</span>:00.00 nginx: worker process\n➜  ~ <span class=\"token function\">curl</span> http://localhost:6699 <span class=\"token parameter variable\">-i</span>\nHTTP/1.1 <span class=\"token number\">200</span> OK\nServer: openresty/1.9.7.3\nDate: Sun, <span class=\"token number\">20</span> Mar <span class=\"token number\">2016</span> 03:01:35 GMT\nContent-Type: text/html\nTransfer-Encoding: chunked\nConnection: keep-alive\n\nHelloWorld<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>在浏览器中完成同样的访问：</p>\n<p><img src=\"../images/first_helloworld.png\" alt=\"\" /></p>\n","text":" HelloWorld HelloWorld 是我们亘古不变的第一个入门程序。但是 OpenResty 不是一门编程语言，跟其他编程语言的 HelloWorld 不一样，让我们看看都有哪些不一样吧。 创建工作目录 OpenResty 安装之后就有配置文件及相关的目录的，为了工作目...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#helloworld\"><span class=\"toc-text\"> HelloWorld</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E5%B7%A5%E4%BD%9C%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\"> 创建工作目录</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6\"><span class=\"toc-text\"> 创建配置文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%87%E4%BA%8B%E4%BF%B1%E5%A4%87%E5%8F%AA%E6%AC%A0%E4%B8%9C%E9%A3%8E\"><span class=\"toc-text\"> 万事俱备只欠东风</span></a></li></ol></li></ol></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"获取请求 body","uid":"61064bea0a023b51846839ff3c2e6c07","slug":"old_topic/2016-09-17-317","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.234Z","comments":true,"path":"api/articles/old_topic/2016-09-17-317.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 获取请求 body 在 Nginx 的典型应用场景中，几乎都是只读取 HTTP 头即可，例如负载均衡、正反向代理等场景。但是对于 API Server 或者 Web Application ，对 body 可以说就比较敏感了。由于 OpenResty 基于 Nginx ，所以天...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"获取 uri 参数","uid":"d5ff1ed8ad9b9d2c1a73f4d27ebd5027","slug":"old_topic/2016-09-17-318","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.197Z","comments":true,"path":"api/articles/old_topic/2016-09-17-318.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 获取 uri 参数 上一章节，主要介绍了一下如何使用不同 location 进行协作，对 location 进行糅合，往往都是要需要参数的二次调整。如何正确获取传递参数、设置参数，就是你的必修课了。本章目的是给出在 OpenResty 的世界中，我们如何正确获取、设置 uri ...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}