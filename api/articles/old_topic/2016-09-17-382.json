{"title":"Lua的Table的成员函数声明中的形参self","uid":"68ecc63ec79c9905410118253d04884f","slug":"old_topic/2016-09-17-382","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.163Z","comments":true,"path":"api/articles/old_topic/2016-09-17-382.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>作者：糖果</p>\n<p>Lua函数声明中的形参self</p>\n<p>Lua中有两种对Table结构的成员函数声明方式：“:“和”.”。<br />\n而对table的函数成员表量的调用也是这两种方试。</p>\n<p>允许的：<br />\n第一种:用&quot;.“声明函数，用”:&quot;调用用函数。函数调用时lua会把table变量本身做为第一个参数，传给这个被调用的函数。</p>\n<p>第二种:用&quot;.“声明函数，用”.“调用用函数。再用”.&quot;执行table的函数，函数默认不会为这个函数，第一个实参传入self参数。 这里的self不一定要叫self,可以声明为任何的变量名。</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> tbl <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>a<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> tbl<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tbl.test\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span> \n<span class=\"token keyword\">end</span>\n\ntbl<span class=\"token punctuation\">:</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> tbl<span class=\"token punctuation\">.</span><span class=\"token function\">test1</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tbl.test1\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token keyword\">do</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span> \n<span class=\"token keyword\">end</span>\n\ntbl<span class=\"token punctuation\">:</span><span class=\"token function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n```    \n上面的代码说明了这个问题：\n\n\n```lua\n<span class=\"token keyword\">local</span> tbl <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>a<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">function</span> tbl<span class=\"token punctuation\">.</span><span class=\"token function\">test1</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tbl.test1\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token keyword\">do</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span> \n<span class=\"token keyword\">end</span>\n\ntbl<span class=\"token punctuation\">.</span><span class=\"token function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>上面这段代码，如何用&quot;.“声明，”.&quot;调用，在函数内部遍历params参数时，就会出错，提示params为空。</p>\n<p>第三种:用&quot;:“声明函数，用”:“和”.&quot; 两种方式调用函数。 这种情况，无论如何lua也不会把table表量本身作为&quot;self&quot;量传入。</p>\n<p>所以，什么时候有&quot;self&quot;存在呢？就是在用&quot;.“声明，再后用”:&quot;调用。</p>\n<p>下面是一个显示程序,总体说明上面提到的问题：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> tbl <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>a<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> tbl<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tbl.test\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span> \n<span class=\"token keyword\">end</span>\n\ntbl<span class=\"token punctuation\">:</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> tbl<span class=\"token punctuation\">.</span><span class=\"token function\">test1</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tbl.test1\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token keyword\">do</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span> \n<span class=\"token keyword\">end</span>\n\ntbl<span class=\"token punctuation\">:</span><span class=\"token function\">test1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">--tbl.test()</span>\n\n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"======================\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>tbl<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"======================\"</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">local</span> values <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>b<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">function</span> values<span class=\"token punctuation\">:</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value:test\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n\nvalues<span class=\"token punctuation\">:</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nvalues<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"======================\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>values<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"======================\"</span><span class=\"token punctuation\">)</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>self这个参数是隐式传入的，参考下面的代码:</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">local</span> tbl <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>a<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token keyword\">function</span> tbl<span class=\"token punctuation\">.</span><span class=\"token function\">testMultiParams</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------------------------\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tbl.testMultiParams\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"------------------------\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span><span class=\"token keyword\">do</span>\n        <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">end</span> \n<span class=\"token keyword\">end</span>\n\ntbl<span class=\"token punctuation\">:</span><span class=\"token function\">testMultiParams</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tstKey\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"======================\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> k<span class=\"token punctuation\">,</span>v <span class=\"token keyword\">in</span> <span class=\"token function\">pairs</span><span class=\"token punctuation\">(</span>tbl<span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span>\n    <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"======================\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这就是典型的&quot;.“声明,”:&quot;调用。</p>\n<p>PS:转载到其它平台请注明作者姓名及原文链接，请勿用于商业用途。</p>\n<p><a href=\"http://www.candylab.net\">糖果实验室</a></p>\n<p><a href=\"http://www.candylab.net\">http://www.candylab.net</a></p>\n","text":"作者：糖果 Lua函数声明中的形参self Lua中有两种对Table结构的成员函数声明方式：“:“和”.”。 而对table的函数成员表量的调用也是这两种方试。 允许的： 第一种:用&quot;.“声明函数，用”:&quot;调用用函数。函数调用时lua会把table变量本身做...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"函数返回的结果是函数的返回的结果不是函数","uid":"3e4806ea54f2e91c20a1148ca6b83f31","slug":"old_topic/2016-09-17-381","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.232Z","comments":true,"path":"api/articles/old_topic/2016-09-17-381.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"函数返回的结果是函数的返回的结果不是函数 function read(self) print(\"key:\"..self.key) end enable = function(func) self = &#123;key='value'&#125; local fn = func ...","link":"","photos":[],"count_time":{"symbolsCount":809,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"lua的table复制copy","uid":"d63383a09ac480bfeab8c376afa1f147","slug":"old_topic/2016-09-17-385","date":"2016-09-17T14:50:18.000Z","updated":"2024-03-14T07:45:09.228Z","comments":true,"path":"api/articles/old_topic/2016-09-17-385.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"源代码实现，来至于RESTY-HTTP 代码如下： -- Returns a new table, recursively copied from the one given. -- -- @param table table to be copied -- @return ta...","link":"","photos":[],"count_time":{"symbolsCount":503,"symbolsTime":"1 mins."},"categories":[{"name":"topic","slug":"topic","count":1441,"path":"api/categories/topic.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}