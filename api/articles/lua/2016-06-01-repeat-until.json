{"title":"repeat...until 循环","uid":"17f717e08ff041fef49c1fa8a71c5669","slug":"lua/2016-06-01-repeat-until","date":"2024-03-14T07:45:09.088Z","updated":"2024-03-27T04:05:41.060Z","comments":true,"path":"api/articles/lua/2016-06-01-repeat-until.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h1 id=\"repeatuntil-循环\"><a class=\"markdownIt-Anchor\" href=\"#repeatuntil-循环\"></a> repeat…until 循环</h1>\n<p>与 for 和 while 循环中先检测条件再决定是否执行循环不同，repeat…until 先执行循环再检测条件判断是否再次执行。<br />\n除了 repeat…until 循环一定会执行一次之外，repeat…until 与 while 循环很相似。</p>\n<h2 id=\"语法\"><a class=\"markdownIt-Anchor\" href=\"#语法\"></a> 语法</h2>\n<p>Lua 语言中 repeat…until 循环的语法如下：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">repeat</span>\n   <span class=\"token function\">statement</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">until</span><span class=\"token punctuation\">(</span> condition <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>请注意，条件表达式出现在循环的结束处，所以在检查条件之前，循环体中语句 statement(s) 已经执行了一次。<br />\n如果条件为假，则控制回到循环开始再次执行循环体。这个过程一直重复到条件为真时结束。</p>\n<h2 id=\"流程图\"><a class=\"markdownIt-Anchor\" href=\"#流程图\"></a> 流程图</h2>\n<p><img src=\"images/repeat_until_loop.jpg\" alt=\"\" /></p>\n<h2 id=\"示例\"><a class=\"markdownIt-Anchor\" href=\"#示例\"></a> 示例</h2>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token comment\">--[ 局部变量定义 --]</span>\n<span class=\"token keyword\">local</span> a <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\n<span class=\"token comment\">--[ 重复循环执行 --]</span>\n<span class=\"token keyword\">repeat</span>\n   <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value of a:\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span>\n   a <span class=\"token operator\">=</span> a <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">until</span><span class=\"token punctuation\">(</span> a <span class=\"token operator\">></span> <span class=\"token number\">15</span> <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行上面的代码，将会得到如下的结果：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">value of a:\t<span class=\"token number\">10</span>\nvalue of a:\t<span class=\"token number\">11</span>\nvalue of a:\t<span class=\"token number\">12</span>\nvalue of a:\t<span class=\"token number\">13</span>\nvalue of a:\t<span class=\"token number\">14</span>\nvalue of a:\t<span class=\"token number\">15</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","text":" repeat…until 循环 与 for 和 while 循环中先检测条件再决定是否执行循环不同，repeat…until 先执行循环再检测条件判断是否再次执行。 除了 repeat…until 循环一定会执行一次之外，repeat…until 与 while 循环很相似。 ...","link":"","photos":[],"count_time":{"symbolsCount":541,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#repeatuntil-%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\"> repeat…until 循环</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\"> 语法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B5%81%E7%A8%8B%E5%9B%BE\"><span class=\"toc-text\"> 流程图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\"> 示例</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua模块","uid":"795dd91f8815508a13e65b7151fdf68c","slug":"lua/2016-06-01-modules","date":"2024-03-14T07:45:09.088Z","updated":"2024-03-27T03:20:50.401Z","comments":true,"path":"api/articles/lua/2016-06-01-modules.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Lua 模块 什么是模块？ Lua 中的模块与库的概念相似，每个模块都有一个全局唯一名字，并且每个模块都包含一个表。使用一个模块时，可以使用 require 加载模块。模块中可以包括函数和变量，所有这些函数和变量被表存储于模块的表中。模块中的表的功能类似于命名空间，用于隔离不同...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua的while循环","uid":"7132dce4b61373adb37dd9650b6cc624","slug":"lua/2016-06-01-while","date":"2024-03-14T07:45:09.088Z","updated":"2024-03-27T04:06:57.462Z","comments":true,"path":"api/articles/lua/2016-06-01-while.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Lua while 循环 在 Lua 语言中，只要 while 循环条件为真，while 语句就会一直执行，直到 while 循环条件为假为止。 语法 Lua 语言中 while 循环的语法如下所示： while(condition) do statement(s) end 其...","link":"","photos":[],"count_time":{"symbolsCount":562,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"},{"name":"LUA教程","slug":"lua-guide/LUA教程","count":2,"path":"api/categories/lua-guide/LUA教程.json"}],"tags":[{"name":"LUA教程","slug":"LUA教程","count":4,"path":"api/tags/LUA教程.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}