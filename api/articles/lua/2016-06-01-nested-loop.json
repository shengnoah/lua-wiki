{"title":"Lua循环嵌套","uid":"cce4b5e763b43300a4fad206fcb6b9e4","slug":"lua/2016-06-01-nested-loop","date":"2024-03-14T07:45:09.084Z","updated":"2024-03-27T03:22:46.541Z","comments":true,"path":"api/articles/lua/2016-06-01-nested-loop.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<p>#Lua 循环嵌套</p>\n<p>Lua 编程语言允许使用循环嵌套。接下来这一节中将用例子来说嵌套循环的使用方法：</p>\n<h2 id=\"语法\"><a class=\"markdownIt-Anchor\" href=\"#语法\"></a> 语法</h2>\n<p>for 循环嵌套的语法如下：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">for</span> init<span class=\"token punctuation\">,</span>max<span class=\"token operator\">/</span>min value<span class=\"token punctuation\">,</span> increment\n<span class=\"token keyword\">do</span>\n   <span class=\"token keyword\">for</span> init<span class=\"token punctuation\">,</span>max<span class=\"token operator\">/</span>min value<span class=\"token punctuation\">,</span> increment\n   <span class=\"token keyword\">do</span>\n      <span class=\"token function\">statement</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">end</span>\n   <span class=\"token function\">statement</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>while 循环嵌套的语法如下：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">do</span>\n   <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">do</span>\n      <span class=\"token function\">statement</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">end</span>\n   <span class=\"token function\">statement</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>repeat…until  循环嵌套的语法如下：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">repeat</span>\n   <span class=\"token function\">statement</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">repeat</span>\n      <span class=\"token function\">statement</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">until</span><span class=\"token punctuation\">(</span> condition <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">until</span><span class=\"token punctuation\">(</span> condition <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>需要注意的是，在任何外层循环类型内可以使用任何内层循环类型。</p>\n<h2 id=\"示例\"><a class=\"markdownIt-Anchor\" href=\"#示例\"></a> 示例</h2>\n<p>下面的例子中使用了嵌套循环：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">j <span class=\"token operator\">=</span><span class=\"token number\">2</span>\n<span class=\"token keyword\">for</span> i<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span> <span class=\"token keyword\">do</span>\n   <span class=\"token keyword\">for</span> j<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">/</span>j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">2</span> <span class=\"token keyword\">do</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">not</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">%</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> \n      <span class=\"token keyword\">then</span>\n         <span class=\"token keyword\">break</span> \n      <span class=\"token keyword\">end</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>j <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">/</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">then</span>\n         <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Value of i is\"</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">end</span>\n   <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>运行上面的代码，可以得到如下的输出结果：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">Value of i is\t<span class=\"token number\">8</span>\nValue of i is\t<span class=\"token number\">9</span>\nValue of i is\t<span class=\"token number\">10</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n","text":"#Lua 循环嵌套 Lua 编程语言允许使用循环嵌套。接下来这一节中将用例子来说嵌套循环的使用方法： 语法 for 循环嵌套的语法如下： for init,max/min value, increment do for init,max/min value, increment ...","link":"","photos":[],"count_time":{"symbolsCount":722,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\"> 语法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\"> 示例</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua垃圾回收机制","uid":"a34942b7e84e08a52441ea25cc5475d6","slug":"lua/2016-06-01-garbage-collection","date":"2024-03-14T07:45:09.084Z","updated":"2024-03-27T03:37:48.800Z","comments":true,"path":"api/articles/lua/2016-06-01-garbage-collection.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Lua 垃圾回收机制 Lua 通过特定算法的垃圾回收机制实现自动内存管理。由于自动内存管理机制的存在，作为程序开发人员： 不需要关心对象的内存分配问题。 不再使用对象时，除了将引用它的变量设为 nil，不需要主动释放对象。 Lua 的垃圾回收器会不断运行去收集不再被 Lua 程...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua面向对象","uid":"a1b21463fc87d45dd3b0b4f9d1ff1b21","slug":"lua/2016-06-01-object-oriented","date":"2024-03-14T07:45:09.084Z","updated":"2024-03-27T04:22:36.877Z","comments":true,"path":"api/articles/lua/2016-06-01-object-oriented.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Lua 面向对象 面向对象概述 面向对象编程技术是目前最常用的编程技术之一。目前大量的编程语言都支持面向对象的特性： C++ Java Objective-C Smalltalk C# Ruby 面向对象的特征 类（class）：类是可以创建对象，并为状态（成员变量）提供初值及...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}