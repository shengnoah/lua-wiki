{"title":"Lua基本语法","uid":"9b97fd5c58ceb41de2e73474e4dfb1f8","slug":"lua/2016-06-01-basic-syntax","date":"2024-03-14T06:15:59.723Z","updated":"2024-03-14T06:15:59.723Z","comments":true,"path":"api/articles/lua/2016-06-01-basic-syntax.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<h1 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h1><p>Lua 学起来非常简单。现在，让我们开始创建我们的第一个 Lua 程序吧！  </p>\n<h2 id=\"第一个-Lua-程序\"><a href=\"#第一个-Lua-程序\" class=\"headerlink\" title=\"第一个 Lua 程序\"></a>第一个 Lua 程序</h2><p>Lua 提供交互式编程模式。在这个模式下，你可以一条一条地输入命令，然后立即就可以得到结果。你可以在 shell 中使用 lua -i 或者 lua 命令启动。输入命令后，按下回车键，就启动了交互模式，显示如下：  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ lua -i </span><br><span class=\"line\">$ Lua 5.1.4  Copyright (C) 1994-2008 Lua.org, PUC-Rio</span><br><span class=\"line\">quit to end; cd, dir and edit also available</span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\">你可以使用如下命令打印输出：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>$&gt; print(“test”)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">按下回车键后，你会得到如下输出结果：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>‘test’</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">## 默认模式编辑  </span><br><span class=\"line\"></span><br><span class=\"line\">使用 Lua 文件做为解释器的参数启动解释器,然后开始执行文件直到文件结束。当脚本执行结束后，解释器就不在活跃了。 </span><br><span class=\"line\"> </span><br><span class=\"line\">让我们写一个简单的 Lua 程序。所有的 Lua　文件都扩展名都是`.lua`。因此，将下面的源代码放到 test.lua 文件中。  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>print(“test”)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">假如你已经设置好 Lua 程序的环境，用下面的命令运行程序：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>$ lua test.lua</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">我们会得到如下的输出结果：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>test</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">让我们尝试使用另外的方式运行 Lua 程序。下面是修改后的 test.lua 文件：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>#!/usr/local/bin/lua<br>print(“test”)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">这里，我们假设你的 Lua 解释器程序在 /usr/local/bin/lua 目录下。test.lua 文件中第一行由于以 # 开始而被解释器忽略，运行这个程序可以得到如下的结果：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>$ chmod a+rx test.lua<br>$./test.lua</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">我们会得到如下的的输出结果：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>test</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">接下来让我们看一下 Lua 程序的基本结构。这样，你可以更容易理解 Lua 编程语言的基本结构单元。  </span><br><span class=\"line\"></span><br><span class=\"line\">## Lua 中的符号  </span><br><span class=\"line\"></span><br><span class=\"line\">Lua 程序是由大量的符号组成的。这些符号可以分为关键字、标识符、常量、字符串常量几类。例如，下面的 Lua 语句中包含三个符号：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>io.write(“Hello world, from “,_VERSION,”!\\n”)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">这三个符号分别是:  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>io.write<br>(<br>“Hello world, from “,_VERSION,”!\\n”<br>)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 注释  </span><br><span class=\"line\"></span><br><span class=\"line\">注释就是 Lua 程序中的帮助文档，Lua 解释器会自动忽略它们。所有注释都以 --[[ 开始，并以 --]]结束。如下所示：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>–[[ my first program in Lua –]]</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 标识符  </span><br><span class=\"line\"></span><br><span class=\"line\">Lua 中标识符是识别变量、函数或者其它用户自定义项的名字。标符识总是以字母或者下划线开始，其后可以是零个或多个字母、下划线或数字。  </span><br><span class=\"line\">Lua 标识符中不允许出现任何标点符号，比如，@，$ 或者 %。Lua 是大小写敏感的语言，因此 Manpower 和 manpower 是 Lua 中两个不同的标识符。下面所列的是一些合法标识符的例子。  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>mohd         zara      abc     move_name    a_123<br>myname50     _temp     j       a23b9        retVal</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">### 关键字  </span><br><span class=\"line\"></span><br><span class=\"line\">下面列表中所示的是 Lua 中一小部分保留字。这些保留字不能用作常量、变量以及任何标识符的名字。  </span><br><span class=\"line\"></span><br><span class=\"line\">&lt;table&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t&lt;td&gt;and&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;break&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;do&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;else&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t&lt;td&gt;elseif&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;end&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;false&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;for&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t&lt;td&gt;function&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;if&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;in&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;local&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t&lt;td&gt;nil&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;not&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;or&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;repeat&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t&lt;td&gt;return&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;then&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;true&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;until&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">\t&lt;tr&gt;</span><br><span class=\"line\">\t&lt;td&gt;while&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;&lt;/td&gt;</span><br><span class=\"line\">\t&lt;td&gt;&lt;/td&gt;</span><br><span class=\"line\">\t&lt;/tr&gt;</span><br><span class=\"line\">&lt;/table&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">### Lua 中的空白符  </span><br><span class=\"line\"></span><br><span class=\"line\">如果 Lua 程序中某一行只包含空格或者注释，那么这样的一行被称之为空行。 Lua 解释器将完全忽略这一行。  </span><br><span class=\"line\">在 Lua 中，空白是用来描述空格、制表符、换行符和注释的术语。空白符用于将语句中的一部分与其它部分区分开，使得解释器可以语句中的一个元素，比如 int，何处结束，以及另一个元素从何处开始。因此，在下面的语句中：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>local age</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">在 local 与 age 之间至少有一个空白符（通常是空格）,这个空白符使得解释器可以将 local 与 age 区分开。另一方面，在下面的语句中：  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>fruit = apples + oranges   –get the total fruit</p>\n<p>```  </p>\n<p>fruit 与 = 之间以及 = 与 apples 之间的空白符都是可以没有的。但是为了程序的可读性目的，建议你在它们之间使用空白符。</p>\n","text":"基本语法Lua 学起来非常简单。现在，让我们开始创建我们的第一个 Lua 程序吧！ 第一个 Lua 程序Lua 提供交互式编程模式。在这个模式下，你可以一条一条地输入命令，然后立即就可以得到结果。你可以在 shell 中使用 lua -i 或者 lua 命令启动。输入命令后，按下...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">基本语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E4%B8%AA-Lua-%E7%A8%8B%E5%BA%8F\"><span class=\"toc-text\">第一个 Lua 程序</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Break语句","uid":"1e07952645adeb0063307933aff99e35","slug":"lua/2016-06-01-break","date":"2024-03-14T06:15:59.723Z","updated":"2024-03-14T06:15:59.723Z","comments":true,"path":"api/articles/lua/2016-06-01-break.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"#break 语句 程序在解释执行过程中，在循环内遇到 break 语句时，循环将立即结束。程序将循环语句的下一条语句开始执行。如果你是在嵌套循环（即，一个循环内还有一个循环语句）内使用 break 语句，break 只结束内层循环，并从该代码块后的第一条语句处开始执行。 语法b...","link":"","photos":[],"count_time":{"symbolsCount":594,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua协程","uid":"bce3027296f15638c976f1ebef15c96b","slug":"lua/2016-06-01-coroutines","date":"2024-03-14T06:15:59.723Z","updated":"2024-03-14T06:15:59.724Z","comments":true,"path":"api/articles/lua/2016-06-01-coroutines.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"Lua 协程概述协程具有协同的性质，它允许两个或多个方法以某种可控的方式协同工作。在任何一个时刻，都只有一个协程在运行，只有当正在运行的协程主动挂起时它的执行才会被挂起（暂停）。 上面的定义可能看上去比较模糊。接下来让我讲得很清楚一点，假设我们有两个方法，一个是主程序方法，另一个...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}