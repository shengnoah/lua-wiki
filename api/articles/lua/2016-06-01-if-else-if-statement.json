{"title":"Lua中的 if...else 语句","uid":"90762206aba1aa8a729d07e471d48c2c","slug":"lua/2016-06-01-if-else-if-statement","date":"2024-03-14T07:45:09.085Z","updated":"2024-03-27T03:40:10.911Z","comments":true,"path":"api/articles/lua/2016-06-01-if-else-if-statement.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h1 id=\"lua-中的-ifelse-语句\"><a class=\"markdownIt-Anchor\" href=\"#lua-中的-ifelse-语句\"></a> Lua 中的 if…else 语句</h1>\n<p>如果 if 语句后面跟上 else 语句，那么条件为假时就执行 else 语句的代码。</p>\n<h2 id=\"语法\"><a class=\"markdownIt-Anchor\" href=\"#语法\"></a> 语法</h2>\n<p>Lua 语言中 if…else 语句的语法如下所示：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>boolean_expression<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">then</span>\n   <span class=\"token comment\">--[ 如何条件为真，则执行此处代码。 --]</span>\n<span class=\"token keyword\">else</span>\n   <span class=\"token comment\">--[ 如何条件为假，则执行此处代码。 --]</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>当布尔表达式为真时，执行 if 语句的代码块；如果条件为假时，则执行 else 语句的代码块。<br />\nLua 语言中所有布尔真与非 nil 的组合的结果被当作真，而布尔假与 nil 组合被当作假。值得注意的是，Lua 中零被当作真，这一点与其它大部分语言不一样。</p>\n<h2 id=\"流程图\"><a class=\"markdownIt-Anchor\" href=\"#流程图\"></a> 流程图</h2>\n<p><img src=\"http://www.tutorialspoint.com/lua/images/if_else_statement.jpg\" alt=\"\" /></p>\n<h2 id=\"示例\"><a class=\"markdownIt-Anchor\" href=\"#示例\"></a> 示例</h2>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token comment\">--[ 定义局部变量 --]</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">--[ 检查条件 --]</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> a <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">then</span>\n   <span class=\"token comment\">--[ 如果条件为真，则输出如下内容 --]</span>\n   <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a is less than 20\"</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span>\n   <span class=\"token comment\">--[ 如果条件为假，则输出如下内容 --]</span>\n   <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a is not less than 20\"</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value of a is :\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行上面的代码则可以得到如下的输出结果：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">a is <span class=\"token keyword\">not</span> less than <span class=\"token number\">20</span>\nvalue of a is <span class=\"token punctuation\">:</span>\t<span class=\"token number\">100</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h2 id=\"ifelse-ifelse-语句\"><a class=\"markdownIt-Anchor\" href=\"#ifelse-ifelse-语句\"></a> if…else if…else 语句</h2>\n<p>if 语句后可以选择跟上 else if…else 语句。该语句对于检测多个条件时非常有用。<br />\n使用 if，else if 以及 else 时，请注意以下三点：</p>\n<ul>\n\t<li>if 语句后面至多可以有一个 else 语句。如果有　else if,则此 else 语句必须在 else if 语句之后。</li>\n\t<li>if 语句之后可以有多零个或多个 else if，但是这些 else if 必须在　else 语句之前。</li>\n\t<li>如果一个 if 语句的条件为真时，其后的所有剩余的 else 和 else if 的都不会再执行，也不会测试它们的条件真假。</li>\n</ul>  \n<h2 id=\"语法-2\"><a class=\"markdownIt-Anchor\" href=\"#语法-2\"></a> 语法</h2>\n<p>Lua 中 if…else if…else 语句的语法规则如下：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>boolean_expression <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">then</span>\n   <span class=\"token comment\">--[ 如果布尔表达式 1 为真时，则执行此处代码。--]</span>\n\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> boolean_expression <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n   <span class=\"token comment\">--[ 如果布尔表达式 2 为真时，则执行此处代码。 --]</span>\n\n<span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> boolean_expression <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n   <span class=\"token comment\">--[ 如果布尔表达式 3为真时，则执行此处代码。 --]</span>\n<span class=\"token keyword\">else</span> \n   <span class=\"token comment\">--[ 当上面所有布尔表达式条件都为假时执行此处代码。--]</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"示例-2\"><a class=\"markdownIt-Anchor\" href=\"#示例-2\"></a> 示例</h2>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token comment\">--[ 定义局部变量 --]</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n<span class=\"token comment\">--[ 检查布尔条件 --]</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span> a <span class=\"token operator\">==</span> <span class=\"token number\">10</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">then</span>\n   <span class=\"token comment\">--[ 条件为真时输出如下内容 --]</span>\n   <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Value of a is 10\"</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span> a <span class=\"token operator\">==</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">then</span>   \n   <span class=\"token comment\">--[ if else if 条件为真时 --]</span>\n   <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Value of a is 20\"</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">elseif</span><span class=\"token punctuation\">(</span> a <span class=\"token operator\">==</span> <span class=\"token number\">30</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">then</span>\n   <span class=\"token comment\">--[ if else if 条件为真时 --]</span>\n   <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Value of a is 30\"</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span>\n   <span class=\"token comment\">--[ 如果上述条件全部为假时 --]</span>\n   <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"None of the values is matching\"</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Exact value of a is: \"</span><span class=\"token punctuation\">,</span> a <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行上面的代码将得到如下的输出结果：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">None of the values is matching\nExact value of a is<span class=\"token punctuation\">:</span>\t<span class=\"token number\">100</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n","text":" Lua 中的 if…else 语句 如果 if 语句后面跟上 else 语句，那么条件为假时就执行 else 语句的代码。 语法 Lua 语言中 if…else 语句的语法如下所示： if(boolean_expression) then --[ 如何条件为真，则执行此处代码。...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#lua-%E4%B8%AD%E7%9A%84-ifelse-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\"> Lua 中的 if…else 语句</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\"> 语法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B5%81%E7%A8%8B%E5%9B%BE\"><span class=\"toc-text\"> 流程图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\"> 示例</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ifelse-ifelse-%E8%AF%AD%E5%8F%A5\"><span class=\"toc-text\"> if…else if…else 语句</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95-2\"><span class=\"toc-text\"> 语法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B-2\"><span class=\"toc-text\"> 示例</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua错误处理","uid":"8fa5391aad4ba0aa8b3b2333eb0ffb7d","slug":"lua/2016-06-01-error-handling","date":"2024-03-14T07:45:09.085Z","updated":"2024-03-27T04:17:06.148Z","comments":true,"path":"api/articles/lua/2016-06-01-error-handling.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Lua 错误处理 为什么需要错误处理机制 在真实的系统中程序往往非常复杂，它们经常涉及到文件操作、数据库事务操作或网络服务调用等，这个时候错误处理就显得非常重要。不关注错误处理可能在处理诸如涉密或金融交易这些业务时造成重大的损失。 无论什么时候，程序开发都要求小心地做好错误处理...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua操作系统工具库","uid":"690a2272c904046df2d9d8b8e3328a46","slug":"lua/2016-06-01-operating-system-facilities","date":"2024-03-14T07:45:09.085Z","updated":"2024-03-27T04:17:53.267Z","comments":true,"path":"api/articles/lua/2016-06-01-operating-system-facilities.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Lua 操作系统工具库 在很多应用中，我们都需要访问到操作系统级别的函数，操作系统库就给我们提供了这样的工具。下面的列表给出操作系统工具包提供的方法： S.N. 函数与功能 1 os.clock()：以秒为单位返回程序运行所用 CPU 时间的近似值。 2 os.date([fo...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}