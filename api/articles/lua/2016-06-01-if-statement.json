{"title":"Lua中的if语句","uid":"15a63bcbcc45ec73313b8b26fa940570","slug":"lua/2016-06-01-if-statement","date":"2024-03-14T07:45:09.087Z","updated":"2024-03-14T07:45:09.087Z","comments":true,"path":"api/articles/lua/2016-06-01-if-statement.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>#Lua 中的 if 语句</p>\n<p>if　语句包括一个布尔表达式和一个或多个语句。</p>\n<p>##语法</p>\n<p>Lua 语言 if 语句的语法如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(boolean_expression)</span><br><span class=\"line\">then</span><br><span class=\"line\">   --[如果布尔表达式为真，statement(s) 执行。--]</span><br><span class=\"line\">end</span><br><span class=\"line\">```  </span><br><span class=\"line\"></span><br><span class=\"line\">如果布尔表达式计算结果为真，则 if 语句内的代码块执行；如果布尔表达式计算结果为假，跳过 if 语句中的代码直接执行 if 语句后面的代码。  </span><br><span class=\"line\">Lua 语言中所有布尔真与非 nil 的组合的结果被当作真，而布尔假与 nil 组合被当作假。值得注意的是，Lua 中零被当作真，这一点与其它大部分语言不一样：  </span><br><span class=\"line\"></span><br><span class=\"line\">##流程图  </span><br><span class=\"line\"></span><br><span class=\"line\">![](http://www.tutorialspoint.com/lua/images/if_statement.jpg)</span><br><span class=\"line\"></span><br><span class=\"line\">##示例  </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>–[ 局部变量定义 --]<br>\na = 10;<br>\n–[ 检查 if　语句使用的布尔条件 --]<br>\nif( a &lt; 20 )<br>\nthen<br>\n–[ 如果条件为真则输出如下内容　--]<br>\nprint(“a is less than 20” );<br>\nend<br>\nprint(“value of a is :”, a);</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">执行上面的代码可以得到如下的结果：　　</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>a is less than 20<br>\nvalue of a is : 10</p>\n<pre><code></code></pre>\n","text":"#Lua 中的 if 语句 if 语句包括一个布尔表达式和一个或多个语句。 ##语法 Lua 语言 if 语句的语法如下： 123456789101112131415if(boolean_expression)then --[如果布尔表达式为真，statement(s) 执行。-...","link":"","photos":[],"count_time":{"symbolsCount":593,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua迭代器","uid":"eacf32e453764fca08d4d96ce1e78183","slug":"lua/2016-06-01-iterators","date":"2024-03-14T07:45:09.087Z","updated":"2024-03-14T07:45:09.087Z","comments":true,"path":"api/articles/lua/2016-06-01-iterators.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"Lua 迭代器 迭代器是用于遍历集合或容器中元素的一种结构。在 Lua 语言中，集合往往指的是可以用来创建各种数据结构的表。比如，数组就是用表来创建的。 通用迭代器 通用迭代器可以访问集合中的键值对。下面是通用迭代器的一个简单例子： 12345678910array = &#12...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"LUA的Loop循环","uid":"50b76913de0a7e15924d6b0f0dac6bf2","slug":"lua/2016-06-01-loop","date":"2024-03-14T07:45:09.087Z","updated":"2024-03-14T07:45:09.088Z","comments":true,"path":"api/articles/lua/2016-06-01-loop.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"循环 虽然一般情况下，语句都是顺序执行的：函数内的第一条语句先执行，然后是第二条，依次类推。 但是还是可能存在需要执行一段代码多次的情况。 为此编程语言提供各式各样的控制结构实现复杂的程序执行路径。 其中，循环语句可以让我们可以执行一条或一组语句多次。下图中所描述的是大多数语言中...","link":"","photos":[],"count_time":{"symbolsCount":735,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"LUA教程","slug":"LUA教程","count":4,"path":"api/tags/LUA教程.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}