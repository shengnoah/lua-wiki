{"title":"Lua中的for循环","uid":"26bfa2ece82537ab5f6962e2d31968f1","slug":"lua/2016-06-11-for","date":"2024-03-14T07:45:09.087Z","updated":"2024-03-27T04:08:32.674Z","comments":true,"path":"api/articles/lua/2016-06-11-for.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h1 id=\"lua-中的-for-循环\"><a class=\"markdownIt-Anchor\" href=\"#lua-中的-for-循环\"></a> Lua 中的 for 循环</h1>\n<p>for 循环控制结构可以让你高效地写出需要执行特定次数的循环代码。</p>\n<h2 id=\"语法\"><a class=\"markdownIt-Anchor\" href=\"#语法\"></a> 语法</h2>\n<p>Lua 语言中 for 循环的语法如下：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">for</span> init<span class=\"token punctuation\">,</span>max<span class=\"token operator\">/</span>min value<span class=\"token punctuation\">,</span> increment\n<span class=\"token keyword\">do</span>\n   <span class=\"token function\">statement</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>下面是 for 循环执行的流程：</p>\n<ol>\n\t<li>init 首先执行并且只执行一次。在这一步骤中，你需要声明并初始化循环控制变量。\n\t</li>\n\t<li>接下来，max/min 是循环结束的条件。程序中将 init 与 最大值或最小值进行比较，条件为真则继续执行循环，否则结束循环。\n\t</li>\n\t<li>循环体执行后，程序跳转至递增或递减语句( increment/descrement )。此语句中，我们可以更新我们的控制变量。\n\t</li>\n\t<li>再次检查条件。如果条件为真，则执行循环并重复过程（执行循环体，递增运算，再检查条件）。当条件为假时，结束循环。\n\t</li>\n</ol>\n<h2 id=\"流程图\"><a class=\"markdownIt-Anchor\" href=\"#流程图\"></a> 流程图</h2>\n<p><img src=\"images/for_loop.jpg\" alt=\"\" /></p>\n<h2 id=\"示例\"><a class=\"markdownIt-Anchor\" href=\"#示例\"></a> 示例</h2>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">for</span> i<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span> \n<span class=\"token keyword\">do</span> \n   <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行上面的代码后，将得到如下的输出结果：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token number\">10</span>\n<span class=\"token number\">9</span>\n<span class=\"token number\">8</span>\n<span class=\"token number\">7</span>\n<span class=\"token number\">6</span>\n<span class=\"token number\">5</span>\n<span class=\"token number\">4</span>\n<span class=\"token number\">3</span>\n<span class=\"token number\">2</span>\n<span class=\"token number\">1</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","text":" Lua 中的 for 循环 for 循环控制结构可以让你高效地写出需要执行特定次数的循环代码。 语法 Lua 语言中 for 循环的语法如下： for init,max/min value, increment do statement(s) end 下面是 for 循环执行的...","link":"","photos":[],"count_time":{"symbolsCount":476,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"},{"name":"lua教程","slug":"lua-guide/lua教程","count":2,"path":"api/categories/lua-guide/lua教程.json"}],"tags":[{"name":"LUA","slug":"LUA","count":1,"path":"api/tags/LUA.json"},{"name":"abc","slug":"abc","count":1,"path":"api/tags/abc.json"},{"name":"basic","slug":"basic","count":1,"path":"api/tags/basic.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#lua-%E4%B8%AD%E7%9A%84-for-%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\"> Lua 中的 for 循环</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\"> 语法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B5%81%E7%A8%8B%E5%9B%BE\"><span class=\"toc-text\"> 流程图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\"> 示例</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"LUA的Loop循环","uid":"50b76913de0a7e15924d6b0f0dac6bf2","slug":"lua/2016-06-01-loop","date":"2024-03-14T07:45:09.087Z","updated":"2024-03-27T04:04:39.900Z","comments":true,"path":"api/articles/lua/2016-06-01-loop.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 循环 虽然一般情况下，语句都是顺序执行的：函数内的第一条语句先执行，然后是第二条，依次类推。 但是还是可能存在需要执行一段代码多次的情况。 为此编程语言提供各式各样的控制结构实现复杂的程序执行路径。 其中，循环语句可以让我们可以执行一条或一组语句多次。下图中所描述的是大多数语言...","link":"","photos":[],"count_time":{"symbolsCount":727,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"LUA教程","slug":"LUA教程","count":4,"path":"api/tags/LUA教程.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua元表","uid":"0498ed7eca93166bac9cec9951eb31df","slug":"lua/2016-06-01-metatables","date":"2024-03-14T07:45:09.086Z","updated":"2024-03-27T04:13:10.462Z","comments":true,"path":"api/articles/lua/2016-06-01-metatables.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" Lua 元表 正如其名，元表也是表。不过，将元表与表相关联后，我们就可以通过设置元表的键和相关方法来改变表的行为。元方法的功能十分强大，使用元方法可以实现很多的功能，比如： 修改表的操作符功能或为操作符添加新功能（译注：如果您学过 C++ 之类的面向对象的语言，应该比较好理解，...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"LUA教程","slug":"LUA教程","count":4,"path":"api/tags/LUA教程.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}