{"title":"Lua游戏开发","uid":"0574a789cafc1558adcaaf40b641bfb0","slug":"lua/2016-06-01-game-programming","date":"2024-03-14T06:15:59.724Z","updated":"2024-03-14T06:15:59.724Z","comments":true,"path":"api/articles/lua/2016-06-01-game-programming.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<h1 id=\"Lua-游戏开发\"><a href=\"#Lua-游戏开发\" class=\"headerlink\" title=\"Lua 游戏开发\"></a>Lua 游戏开发</h1><p>Lua 语言因其结构和语法的简洁性而在各类游戏引擎中被广泛使用。游戏对图形画面要求非常苛刻，这无疑需消耗大量的内存空间，而这些内存空间的管理是非常棘手的问题。Lua 语言有自动的垃圾回收机制，这种自动化的内存管理机制也使得 Lua 受到游戏引擎开发者的青睐。著名的 Lua 游戏引擎主要包括：  </p>\n<ul>\n    <li>Cornoa SDK</li>\n    <li>Gideros Mobile</li>\n    <li>ShiVa3D</li>\n    <li>Moai SDK</li>\n    <li>LOVE</li>\n    <li>CryEngine</li>\n</ul>\n\n<p>上面每一个游戏引擎都是基于 Lua 的，并且每一个都提供了丰富的 API。我们下面看一下每一款游戏引擎的特点。  </p>\n<h2 id=\"Corna-SDK\"><a href=\"#Corna-SDK\" class=\"headerlink\" title=\"Corna SDK\"></a>Corna SDK</h2><p>这是一款支持 iPhone，iPad，Android 平台的移动设备游戏引擎。它提供了一个免费版本的 SDK, 不过该免费版本的功能也受到限制。你可以在需要的时候升级到其它版本。</p>\n<p>Gorona SDK 提供了如下的特征：  </p>\n<ul>\n    <li>物理与冲突处理接口</li>\n    <li>Web 和网络接口</li>\n    <li>游戏网络接口</li>\n    <li>广告接口</li>\n    <li>数据分析接口</li>\n    <li>数据库和文件处理接口</li>\n    <li>加密和数学计算接口</li>\n    <li>音频和多媒体接口</li>\n</ul>\n\n<p>相比于使用 iOS 或 Android 系统原生 API， 使用上面的接口可以让我们的开发效率更高。  </p>\n<h2 id=\"Gideros-Mobile\"><a href=\"#Gideros-Mobile\" class=\"headerlink\" title=\"Gideros Mobile\"></a>Gideros Mobile</h2><p>Gideros 提供 iOS 和 Android 跨平台的软件开发工具包（SDK）。它是一个免费的游戏引擎，其主要的优点包括：  </p>\n<ul>\n    <li>集成开发环境：它提供一套集成开发环境，使用应用开发变得容易许多。</li>\n    <li>即时测试：在游戏开发过程中，通过 wifi 在 1 秒之内就可以在真实设备上测试应用。为开发者省去了导出和部署应用的时间。</li>\n    <li>插件：支持使用插件的方式扩展。导入的代码（C, C++, Java，Obje-C），Lua　可以直接解释执行。目前网络上已有了大量的开源插件可供使用。</li>\n    <li>面向对象编程：Gideros 提供了自己的类系统，支持 OOP 标准，开发可以开发干净的 OOP 代码。</li>\n    <li>原生速度：基于 C/C++ 和 openGL,应用可以以原生的运行，完全利用 CPU 和 GPU 的处理能力。</li>\n</ul>\n\n<h2 id=\"ShiVa3D\"><a href=\"#ShiVa3D\" class=\"headerlink\" title=\"ShiVa3D\"></a>ShiVa3D</h2><p>这一款 3D 的游戏引擎，它提供了图形化的编辑器，可以为 Web、终端、移动设备开发应用或游戏。它支持多个平台，包括：Windows，Mac，Linux，iOS，Android，BlackBerry，Palm OS，Wii，WebOS。</p>\n<p>它主要的特点包括：  </p>\n<ul>\n    <li>标准插件</li>\n    <li>网格修改接口</li>\n    <li>集成开发环境</li>\n    <li>内置 Terrain，Ocean 与 动画编辑器</li>\n    <li>支持 ODE 物理引擎</li>\n    <li>完全的光线映射控制</li>\n    <li>实时预览</li>\n    <li>Collada 交换格式的支持</li>\n</ul>\n\n<p>ShiVa3D 的 Web 版本是免费的，但其它的版本是收费版本。  </p>\n<h2 id=\"Moai-SDK\"><a href=\"#Moai-SDK\" class=\"headerlink\" title=\"Moai SDK\"></a>Moai SDK</h2><p>Moai SDK 是跨平台的移动游戏开发引擎，它支持 iPhone，iPad 以及 Android 系统。Moai　平台包括　Moai SDK，开源的引擎，以及 Moai 云。 Moai 云是一个 SaaS 平台，提供游戏部署的服务。不过，Moai 云平台已经关闭，现在只有游戏引擎是可用的。  </p>\n<h2 id=\"LOVE\"><a href=\"#LOVE\" class=\"headerlink\" title=\"LOVE\"></a>LOVE</h2><p>LOVE 是一个开源的 2D 游戏的开始框架，它支持 Windows，Mac OS X 以及 Linux 多个平台。</p>\n<p>它主要提供以下的开发接口：  </p>\n<ul>\n    <li>音频接口</li>\n    <li>文件系统接口</li>\n    <li>键盘和操纵杆接口</li>\n    <li>数据计算 API</li>\n    <li>窗口和鼠标接口</li>\n    <li>物理接口</li>\n    <li>系统和定时器接口</li>\n</ul>\n\n<h2 id=\"CryEngine\"><a href=\"#CryEngine\" class=\"headerlink\" title=\"CryEngine\"></a>CryEngine</h2><p>CryEngine 是由德国的游戏引擎开发商 Cryteck 开发的游戏引擎。到目前为止，它已由第一代引擎发展到了第四代，是一个高级的游戏开发解决方案。它目前支持 PC，Xbox 360，PlayStation3，以及 WiiU。</p>\n<p>它主有以下的优点：  </p>\n<ul>\n    <li>视觉效果就像自然光线，态柔和阴影，实时动态全局光照，光传输容量控制，颗粒底纹，镶嵌等。</li>\n    <li>角色动画系统与人物个性化系统。</li>\n    <li>参数骨骼动画和独特的专用人脸动画编辑器。</li>\n    <li>人工智能系统如多层导航网格战术角度系统。还提供了设计师友好的 AI 编辑系统。</li>\n    <li>游戏混合及分析，数据驱动的音响系统的动态声音和互动音乐等。</li>\n</ul>  \n\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><p>每个款游戏引擎都有着自己的优势以及不足之处。正确的选择游戏引擎会让你的开发变得容易和有趣得多。所以，在选择之前，请先仔细斟酌你的需求，分析哪一款游戏引擎真正的适合你，然后再决定使用它。</p>\n","text":"Lua 游戏开发Lua 语言因其结构和语法的简洁性而在各类游戏引擎中被广泛使用。游戏对图形画面要求非常苛刻，这无疑需消耗大量的内存空间，而这些内存空间的管理是非常棘手的问题。Lua 语言有自动的垃圾回收机制，这种自动化的内存管理机制也使得 Lua 受到游戏引擎开发者的青睐。著名的...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Lua-%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">Lua 游戏开发</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Corna-SDK\"><span class=\"toc-text\">Corna SDK</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Gideros-Mobile\"><span class=\"toc-text\">Gideros Mobile</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ShiVa3D\"><span class=\"toc-text\">ShiVa3D</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Moai-SDK\"><span class=\"toc-text\">Moai SDK</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#LOVE\"><span class=\"toc-text\">LOVE</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CryEngine\"><span class=\"toc-text\">CryEngine</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9D%9F%E8%AF%AD\"><span class=\"toc-text\">结束语</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Lua垃圾回收机制","uid":"a34942b7e84e08a52441ea25cc5475d6","slug":"lua/2016-06-01-garbage-collection","date":"2024-03-14T06:15:59.724Z","updated":"2024-03-14T06:15:59.725Z","comments":true,"path":"api/articles/lua/2016-06-01-garbage-collection.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"Lua 垃圾回收机制Lua 通过特定算法的垃圾回收机制实现自动内存管理。由于自动内存管理机制的存在，作为程序开发人员： 不需要关心对象的内存分配问题。 不再使用对象时，除了将引用它的变量设为 nil，不需要主动释放对象。 Lua 的垃圾回收器会不断运行去收集不再被 Lua 程序访...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua文件I/O","uid":"7cdf9755b9d268215aaceca81f7a3596","slug":"lua/2016-06-01-file-io","date":"2024-03-14T06:15:59.724Z","updated":"2024-03-14T06:15:59.724Z","comments":true,"path":"api/articles/lua/2016-06-01-file-io.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"Lua 文件 I/OLua 的 IO 库用于读取或操作文件。Lua IO 库提供两类文件操作，它们分别是隐式文件描述符(implict file descriptors)和显式文件描述符(explicit file descriptors)。 在接下来的例子的，我们会用到一个示例...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":68,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":153,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}