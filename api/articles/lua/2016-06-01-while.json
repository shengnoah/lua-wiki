{"title":"Lua的while循环","uid":"7132dce4b61373adb37dd9650b6cc624","slug":"lua/2016-06-01-while","date":"2024-03-14T07:45:09.088Z","updated":"2024-03-27T04:06:57.462Z","comments":true,"path":"api/articles/lua/2016-06-01-while.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h1 id=\"lua-while-循环\"><a class=\"markdownIt-Anchor\" href=\"#lua-while-循环\"></a> Lua while 循环</h1>\n<p>在 Lua 语言中，只要 while 循环条件为真，while 语句就会一直执行，直到 while 循环条件为假为止。</p>\n<h1 id=\"语法\"><a class=\"markdownIt-Anchor\" href=\"#语法\"></a> 语法</h1>\n<p>Lua 语言中 while 循环的语法如下所示：</p>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\"><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>condition<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">do</span>\n   <span class=\"token function\">statement</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p>其中，statement(s) 可能只是一条语句也可能是一个语句块。条件可以是任何表达式，若表达式结果为真，则循环继续。<br />\n循环为假时，程序结束 while 循环，执行 while 后面的代码。</p>\n<h2 id=\"流程图\"><a class=\"markdownIt-Anchor\" href=\"#流程图\"></a> 流程图</h2>\n<p><img src=\"images/while_loop.jpg\" alt=\"\" /></p>\n<p>请注意，while 循环的关键点在于循环可能根本不会执行。当检测条件为假是，程序会跳过 while 循环体而直接执行 while 后的第一条语句。</p>\n<h2 id=\"示例\"><a class=\"markdownIt-Anchor\" href=\"#示例\"></a> 示例</h2>\n<pre class=\"line-numbers language-lua\" data-language=\"lua\"><code class=\"language-lua\">a<span class=\"token operator\">=</span><span class=\"token number\">10</span>\n<span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span> a <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">do</span>\n   <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value of a:\"</span><span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">)</span>\n   a <span class=\"token operator\">=</span> a<span class=\"token operator\">+</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">end</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>执行上面的代码，将会得到如下的结果：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">value of a:\t<span class=\"token number\">10</span>\nvalue of a:\t<span class=\"token number\">11</span>\nvalue of a:\t<span class=\"token number\">12</span>\nvalue of a:\t<span class=\"token number\">13</span>\nvalue of a:\t<span class=\"token number\">14</span>\nvalue of a:\t<span class=\"token number\">15</span>\nvalue of a:\t<span class=\"token number\">16</span>\nvalue of a:\t<span class=\"token number\">17</span>\nvalue of a:\t<span class=\"token number\">18</span>\nvalue of a:\t<span class=\"token number\">19</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","text":" Lua while 循环 在 Lua 语言中，只要 while 循环条件为真，while 语句就会一直执行，直到 while 循环条件为假为止。 语法 Lua 语言中 while 循环的语法如下所示： while(condition) do statement(s) end 其...","link":"","photos":[],"count_time":{"symbolsCount":562,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"},{"name":"LUA教程","slug":"lua-guide/LUA教程","count":2,"path":"api/categories/lua-guide/LUA教程.json"}],"tags":[{"name":"LUA教程","slug":"LUA教程","count":4,"path":"api/tags/LUA教程.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#lua-while-%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\"> Lua while 循环</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\"> 语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B5%81%E7%A8%8B%E5%9B%BE\"><span class=\"toc-text\"> 流程图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\"> 示例</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"repeat...until 循环","uid":"17f717e08ff041fef49c1fa8a71c5669","slug":"lua/2016-06-01-repeat-until","date":"2024-03-14T07:45:09.088Z","updated":"2024-03-27T04:05:41.060Z","comments":true,"path":"api/articles/lua/2016-06-01-repeat-until.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" repeat…until 循环 与 for 和 while 循环中先检测条件再决定是否执行循环不同，repeat…until 先执行循环再检测条件判断是否再次执行。 除了 repeat…until 循环一定会执行一次之外，repeat…until 与 while 循环很相似。 ...","link":"","photos":[],"count_time":{"symbolsCount":541,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Lua判断","uid":"d6286a3606fee451e0f5f2e41e7f6205","slug":"lua/2016-06-01-decision-making","date":"2024-03-14T07:45:09.087Z","updated":"2024-03-14T07:45:09.087Z","comments":true,"path":"api/articles/lua/2016-06-01-decision-making.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 决策 决策结构要求程序开发人员设置一个或多测试或计算条件。如果条件计算结果为真，则执行一个或多个语句；如果条件为假，则执行另外的语句。 下面是大多数程序语言中的决策结构的一般形式： Lua 语言中所有布尔真和非 nil 值都当作真；把所有的布尔假和 nil 作为假。请注意，Lu...","link":"","photos":[],"count_time":{"symbolsCount":376,"symbolsTime":"1 mins."},"categories":[{"name":"lua_guide","slug":"lua-guide","count":34,"path":"api/categories/lua-guide.json"}],"tags":[{"name":"lua","slug":"lua","count":124,"path":"api/tags/lua.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}