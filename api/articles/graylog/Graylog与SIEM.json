{"title":"Graylog与SIEM","uid":"f611f95293b22b624bb6c6df16af76ea","slug":"graylog/Graylog与SIEM","date":"2024-03-14T11:24:05.274Z","updated":"2024-03-27T03:51:25.167Z","comments":true,"path":"api/articles/graylog/Graylog与SIEM.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h1 id=\"graylog与siem\"><a class=\"markdownIt-Anchor\" href=\"#graylog与siem\"></a> Graylog与SIEM</h1>\n<p>Graylog是一个开源的SIEM系统，在国外有一定的群众基础， 国内也有很多人用。但是关于Graylog的中文资料一直很少，搜索引擎的找出来的结果，要么是过时的，要么涉及的知识应用点不是太深入，所以想在小专栏开一个帖子专门写这个。</p>\n<p>和以前一样，这个文章就是在线编辑，写那是那，尽量和网上的文章有差异化， 太多重复的东西，就是一笔代过，官方网有的也一笔代过。</p>\n<p>Graylog对Input的操作，是整个Graylog使用过程中，最常的一种操作，所以，以下的技能十分有必要掌握：</p>\n<p>1.使用NC向 Input端口发送UDP包数据。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">echo -n &#39;&#123; &quot;version&quot;: &quot;1.1&quot;, &quot;host&quot;: &quot;example.org&quot;, &quot;short_message&quot;: &quot;A short message&quot;, &quot;level&quot;: 5, &quot;_some_info&quot;: &quot;foo&quot; &#125;&#39; | nc -w1 -u 0.0.0.0 10000<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>2.使用NC向 Input端口发送TCP包数据。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">echo -n -e &#39;&#123; &quot;version&quot;: &quot;1.1&quot;, &quot;host&quot;: &quot;example.org&quot;, &quot;short_message&quot;: &quot;A short message&quot;, &quot;level&quot;: 5, &quot;_some_info&quot;: &quot;foo&quot; &#125;&#39;&quot;\\0&quot; | nc -w0 0.0.0.0 10000<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>3.使用CURL向 Input端口发送HTTP请求。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl -X POST -H &#39;Content-Type: application&#x2F;json&#39; -d &#39;&#123; &quot;version&quot;: &quot;1.1&quot;, &quot;host&quot;: &quot;example.org&quot;, &quot;short_message&quot;: &quot;A short message&quot;, &quot;level&quot;: 5, &quot;_some_info&quot;: &quot;foo&quot; &#125;&#39; &#39;http:&#x2F;&#x2F;0.0.0.0:10000&#x2F;gelf&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这种基于HTTP的GELF格式的Input创建方式，对于快速创建HTTP REST接口，接受数据就非常的方便了。<br />\n这个curl中的json数据是标注json，但要保证服务器收到数据，有一个字段是不能没有的， 如果没有，数据不会被Graylog接收，就是message这个字段， 如果你传的时候传的是short_mesage，其实graylog也会把名字转成message这个名，然后再存。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl -XPOST 0.0.0.0:10001&#x2F;gelf -p0 -d &#39;&#123;&quot;short_message&quot;:&quot;Hello there&quot;, &quot;host&quot;:&quot;example.org&quot;, &quot;facility&quot;:&quot;test&quot;, &quot;_foo&quot;:&quot;bar&quot;&#125;&#39;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>发送数以外，我们还要判断数据日志，是否被正常的接受，需要监听对应的端口。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">sudo tcpdump  -i eth0  dst port 510    -l -s 0 -w -  | strings<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>在Graylog里账号密码不是明语言的，需要加密转换， 用下面的命令就可以完成。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">echo -n &quot;Enter Password: &quot; &amp;&amp; head -1 &lt;&#x2F;dev&#x2F;stdin | tr -d &#39;\\n&#39; | sha256sum | cut -d&quot; &quot; -f1<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>这样把加密会的密码添加到server.conf里对应密码的位置就可以。</p>\n<p>sudo tcpdump -i enp2s0f1 dst port 16017 -l -s 0 -w - | strings</p>\n<p>用户账号密码管理</p>\n<p>pwgen -N 1 -s 96<br />\necho -n 123456 | sha256sum</p>\n<p>mongoDB数据备份</p>\n<p>一个MongoDB集群需要三个结点，要对单点数据进行备份：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">mongodump --db databasename --out file directory\nmongorestore -u superuser -p 123456 --port 27017 --authenticationDatabase databasename -d databasename &#x2F;backup&#x2F;mongodb&#x2F;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>创建mongoDB数据库用户</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>use tdp</p>\n</li>\n<li class=\"lvl-2\">\n<p>db</p>\n</li>\n<li class=\"lvl-2\">\n<p>db.tdp.insert({“key”:“value”})</p>\n</li>\n<li class=\"lvl-2\">\n<p>db.createUser({</p>\n</li>\n<li class=\"lvl-2\">\n<p>user:‘username’,</p>\n</li>\n<li class=\"lvl-2\">\n<p>pwd:‘userpasswd’,</p>\n</li>\n<li class=\"lvl-2\">\n<p>roles:[</p>\n</li>\n<li class=\"lvl-2\">\n<p>{role:‘readWrite’,db:‘admin’}</p>\n</li>\n<li class=\"lvl-2\">\n<p>]</p>\n</li>\n<li class=\"lvl-2\">\n<p>})</p>\n</li>\n</ul>\n","text":" Graylog与SIEM Graylog是一个开源的SIEM系统，在国外有一定的群众基础， 国内也有很多人用。但是关于Graylog的中文资料一直很少，搜索引擎的找出来的结果，要么是过时的，要么涉及的知识应用点不是太深入，所以想在小专栏开一个帖子专门写这个。 和以前一样，这个文...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"安全","slug":"安全","count":38,"path":"api/categories/安全.json"}],"tags":[{"name":"Graylog","slug":"Graylog","count":4,"path":"api/tags/Graylog.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#graylog%E4%B8%8Esiem\"><span class=\"toc-text\"> Graylog与SIEM</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"NPM安装不验证证书","uid":"89f86e30c3a6d6a03387078f75f0b28a","slug":"hexo/NPM安装不验证证书","date":"2024-03-14T11:44:30.588Z","updated":"2024-03-14T11:45:54.984Z","comments":true,"path":"api/articles/hexo/NPM安装不验证证书.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" NPM安装不验证证书 npm config set registry https://registry.npmjs.org/\\n npm config list npm cache clean --force\\n npm config set strict-ssl false\\...","link":"","photos":[],"count_time":{"symbolsCount":264,"symbolsTime":"1 mins."},"categories":[{"name":"安全","slug":"安全","count":38,"path":"api/categories/安全.json"}],"tags":[{"name":"NPM","slug":"NPM","count":1,"path":"api/tags/NPM.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"DreamTalk When Expressive Talking Head Generation Meets Diffusion Probabilistic Models","uid":"cb22f82fe732b75010786dbf6cdb1be9","slug":"huaggingface/DreamTalk When Expressive Talking Head Generation Meets Diffusion Probabilistic Models","date":"2024-03-14T07:45:09.235Z","updated":"2024-03-14T07:45:09.235Z","comments":true,"path":"api/articles/huaggingface/DreamTalk When Expressive Talking Head Generation Meets Diffusion Probabilistic Models.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" DreamTalk When Expressive Talking Head Generation Meets Diffusion Probabilistic Models 阿里巴巴 DreamTalk 能用人脸带表情说话 DreamTalk: When Expressive ...","link":"","photos":[],"count_time":{"symbolsCount":296,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":117,"path":"api/categories/AIGC.json"},{"name":"huaggingface","slug":"AIGC/huaggingface","count":1,"path":"api/categories/AIGC/huaggingface.json"}],"tags":[{"name":"huaggingface","slug":"huaggingface","count":1,"path":"api/tags/huaggingface.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}