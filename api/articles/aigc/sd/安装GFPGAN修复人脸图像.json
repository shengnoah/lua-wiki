{"title":"安装GFPGAN修复人脸图像","uid":"aa6f0cb3af6190b915086c9ddb3c891c","slug":"aigc/sd/安装GFPGAN修复人脸图像","date":"2024-03-14T07:45:09.020Z","updated":"2024-03-14T07:45:09.020Z","comments":true,"path":"api/articles/aigc/sd/安装GFPGAN修复人脸图像.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"content":"<h1>安装GFPGAN修复人脸图像</h1>\n<p>老照片修复利器GFPGAN，该模型为腾讯2021年开源的一个用于图片人脸复原修复的<strong>GAN模型</strong>；我们都有很多老照片，很多很久以前用<strong>两三百万像素</strong>拍的照片或原文件丢失了，只剩下压缩文件或<strong>QQ空间</strong>里面的老照片，现在一些App也支持老照片修复但往往效果不太理想或都需要收费；这时可以使用GFPGAN对相片进行修复复原；<br>\n  对GFPGAN模型进行微调或许很多人没有相应的条件进行，可使用GFPGAN提供的预训练模型，该预训练模型参数输出的修复效果对比原图还算是基本可用；</p>\n<h2 id=\"安装GFPGAN\">安装GFPGAN</h2>\n<p>由于安装GFPGAN与使用GFPGAN时会下载对应的预训练模型参数等文件比较大等最好设置相应的代理上网;<br>\n  可在cmd命令行设置代理，此代理为临时的，也可设置git代理：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set https_proxy=http:&lt;span class=&quot;hljs-comment&quot;&gt;//127.0.0.1:10809&lt;/span&gt;</span><br></pre></td></tr></table></figure>\n<p>GFPGAN可直接下载GFPGAN压缩包或通过git clone下载，然后进入GFPGAN的安装目录下，如：D:\\software\\dev\\github\\GFPGAN，并将下载的GFPGAN项目放到D:\\software\\dev\\github\\GFPGAN\\venv\\Scripts\\目录中；</p>\n<p>在命令行执行如下指令安装GFPGAN依赖：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install basicsr facexlib </span><br><span class=\"line\">pip install -r requirements.txt  </span><br><span class=\"line\">python setup.py develop 完成GFPGAN的安装； </span><br><span class=\"line\">如需对背景进行优化增强需安装Real-ESRGAN </span><br><span class=\"line\">pip install realesrgan</span><br></pre></td></tr></table></figure>\n<p><img src=\"https://gitee.com/shengnoah/picture/raw/master/20240112170813.png\" alt=\"image.png\"></p>\n<p>可以看到运行GFPGAN除了下载自身的GFPGANv1.3预训练模型外还下载了残差神经网络模型、ParseNet模型；</p>\n<h2 id=\"GFPGAN使用\">GFPGAN使用</h2>\n<p>进入GFPGAN目录执行如下命令即可：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python inference_gfpgan.py -i inputs/whole_imgs -o results -v <span class=\"number\">1.3</span> -s <span class=\"number\">2</span> </span><br></pre></td></tr></table></figure>\n<p>参数： -i 图片或目录的路径 -s 最终图片上采样比例 -o 图片输出路径</p>\n<p>执行完后GFPGAN将 inputs/whole_imgs目录中的图片修复并输出到results目录中；</p>\n<p>图片的对比如下： <strong>效果还是相对可以除了处理面部外还对头发进行的修复；</strong></p>\n<p>修复前图：<br>\n<img src=\"https://img2023.cnblogs.com/blog/84976/202307/84976-20230730165544353-1089298529.png\" alt=\"2.png\"></p>\n<p>修复后图：<br>\n<img src=\"https://img2023.cnblogs.com/blog/84976/202307/84976-20230730165544363-1102390756.png\" alt=\"3.png\"></p>\n<p>该模型作者提出了精密设计的GFPGAN模型，模型在一个单向前向传播过程能够实现真实性和保真性的平衡。GFPGAN由一个退化移除模块（U-Net）和一个预训练的GAN模块（StyleGAN2）。通道分离空间特征转换层（Channel-Split Spatial Feature Transform，CS-SFT）以由粗到细的方式将两个模块的隐向量结合。具体论文如下：</p>\n","text":"安装GFPGAN修复人脸图像 老照片修复利器GFPGAN，该模型为腾讯2021年开源的一个用于图片人脸复原修复的GAN模型；我们都有很多老照片，很多很久以前用两三百万像素拍的照片或原文件丢失了，只剩下压缩文件或QQ空间里面的老照片，现在一些App也支持老照片修复但往往效果不太理想...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"gfpgan","slug":"AIGC/gfpgan","count":2,"path":"api/categories/AIGC/gfpgan.json"}],"tags":[{"name":"gfpgan","slug":"gfpgan","count":2,"path":"api/tags/gfpgan.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">安装GFPGAN修复人脸图像</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85GFPGAN\"><span class=\"toc-text\">安装GFPGAN</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#GFPGAN%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">GFPGAN使用</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"如何用 gfpgan进行图像的人脸修复","uid":"02714eaa9a3a0c3a59b53d39d32c1d22","slug":"aigc/sd/如何用 gfpgan进行图像的人脸修复","date":"2024-03-14T07:45:09.020Z","updated":"2024-03-14T07:45:09.021Z","comments":true,"path":"api/articles/aigc/sd/如何用 gfpgan进行图像的人脸修复.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"如何用 gfpgan进行图像的人脸修复 如何用 gfpgan进行图像的人脸修复 要使用gfpgan进行图像的人脸修复，可以按照以下步骤进行： 安装gfpgan：首先，你需要安装gfpgan模型。你可以在gfpgan的GitHub页面上找到模型和代码并按照说明进行安装。 准备输入图...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"gfpgan","slug":"AIGC/gfpgan","count":2,"path":"api/categories/AIGC/gfpgan.json"}],"tags":[{"name":"gfpgan","slug":"gfpgan","count":2,"path":"api/tags/gfpgan.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"PhotoMaker老照片风格AI","uid":"ed477efabbdcc1e4972b40b8c2d2acc6","slug":"aigc/sd/PhotoMaker老照片风格AI","date":"2024-03-14T07:45:09.019Z","updated":"2024-03-14T07:45:09.019Z","comments":true,"path":"api/articles/aigc/sd/PhotoMaker老照片风格AI.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"PhotoMaker老照片风格AI 腾讯和南开推出的这个PhotoMaker有意思！ 功能 根据文本提示制作照片 生成带艺术品/老照片风格的照片 风格化照片（比如油画或者拉通风格） 改变年龄或者性别 混合多个人的特征生成新照片 PhotoMaker: Customizing Re...","link":"","photos":[],"count_time":{"symbolsCount":768,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"github","slug":"AIGC/github","count":3,"path":"api/categories/AIGC/github.json"}],"tags":[{"name":"github","slug":"github","count":6,"path":"api/tags/github.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}