{"title":"如何用 gfpgan进行图像的人脸修复","uid":"02714eaa9a3a0c3a59b53d39d32c1d22","slug":"aigc/sd/如何用 gfpgan进行图像的人脸修复","date":"2024-03-14T07:45:09.020Z","updated":"2024-03-14T07:45:09.021Z","comments":true,"path":"api/articles/aigc/sd/如何用 gfpgan进行图像的人脸修复.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<h1>如何用 gfpgan进行图像的人脸修复</h1>\n<p>如何用 gfpgan进行图像的人脸修复</p>\n<p>要使用gfpgan进行图像的人脸修复，可以按照以下步骤进行：</p>\n<ol>\n<li class=\"lvl-3\">\n<p>安装gfpgan：首先，你需要安装gfpgan模型。你可以在gfpgan的GitHub页面上找到模型和代码并按照说明进行安装。</p>\n</li>\n<li class=\"lvl-3\">\n<p>准备输入图像：准备一张需要修复的人脸图像。确保图像的尺寸适合模型的要求（通常为256x256像素）。</p>\n</li>\n<li class=\"lvl-3\">\n<p>运行修复脚本：使用gfpgan提供的修复脚本运行修复过程。你可以在gfpgan的GitHub页面上找到示例代码和说明。将输入图像作为参数传递给修复脚本，并指定输出文件夹。</p>\n</li>\n<li class=\"lvl-3\">\n<p>等待修复完成：等待修复过程完成。这可能需要一些时间，具体取决于你的计算机性能以及输入图像的大小和复杂度。</p>\n</li>\n<li class=\"lvl-3\">\n<p>查看修复结果：一旦修复完成，你可以在输出文件夹中找到修复后的图像。使用任何图像查看器或编辑器打开它，并检查结果是否符合预期。</p>\n</li>\n</ol>\n<p>请注意，gfpgan只能对已经存在的人脸进行修复，不能从其他地方恢复缺失的人脸部分。此外，虽然gfpgan可能会产生令人印象深刻的结果，但并不能保证每个输入图像都会得到完美的修复。因此，在使用gfpgan进行人脸修复时，理解和管理预期结果非常重要。</p>\n<p>gfpgan进行图像人脸修复的命令是什么？</p>\n<p>gfpgan进行图像人脸修复的命令是：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python demo.py --input_dir &lt;input_directory&gt; --gpu <span class=\"number\">0</span></span><br></pre></td></tr></table></figure>\n<p>其中，<code>&lt;input_directory&gt;</code>是包含待修复图像的文件夹路径，<code>--gpu 0</code>表示使用GPU进行加速。</p>\n<p>如何在Python中调用gfpgan</p>\n<p>要在Python中调用gfpgan，需要按照以下步骤进行操作：</p>\n<ol>\n<li class=\"lvl-3\">\n<p>首先，确保已经安装了Python和PyTorch。可以使用以下命令检查是否已安装PyTorch：</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -c &quot;import torch; print(torch.__version__)&quot;</span><br></pre></td></tr></table></figure>\n<p>如果显示了PyTorch的版本号，则表示已经成功安装。</p>\n<ol start=\"2\">\n<li class=\"lvl-3\">\n<p>下载gfpgan的代码库。可以从其GitHub页面上找到代码库的链接，并使用git clone命令将其克隆到本地。</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/TencentARC/GFPGAN.git</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li class=\"lvl-3\">\n<p>进入GFPGAN目录，并安装所需的Python依赖项。可以使用以下命令来完成此操作。</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd GFPGAN</span><br><span class=\"line\">pip install -r requirements.txt</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li class=\"lvl-3\">\n<p>下载预训练的权重文件。gfpgan提供了多个预训练模型，可以从其GitHub页面上下载相应的权重文件。将下载的权重文件放入GFPGAN目录中。</p>\n</li>\n<li class=\"lvl-3\">\n<p>在Python脚本中导入gfpgan并使用它进行图像增强。可以使用以下代码片段作为示例：</p>\n</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"><span class=\"keyword\">from</span> gfpgan <span class=\"keyword\">import</span> GFPGAN</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加载预训练模型和权重</span></span><br><span class=\"line\">model = GFPGAN(config=<span class=\"string\">&#x27;path/to/config.yaml&#x27;</span>, checkpoint=<span class=\"string\">&#x27;path/to/checkpoint.pth&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 读取输入图像并进行图像增强</span></span><br><span class=\"line\">input_image = Image.<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;path/to/input_image.jpg&#x27;</span>)</span><br><span class=\"line\">enhanced_image = model.enhance(input_image)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 保存增强后的图像</span></span><br><span class=\"line\">enhanced_image.save(<span class=\"string\">&#x27;path/to/enhanced_image.jpg&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>注意：需要将’path/to/config.yaml’和’path/to/checkpoint.pth’替换为实际的配置文件和权重文件的路径。</p>\n<p>通过上述步骤，就可以在Python中成功调用gfpgan，并使用它进行图像增强。</p>\n<p>一定要用阿里的源安装 tb-nightly</p>\n<p>python -m pip install tb-nightly -i <a href=\"https://mirrors.aliyun.com/pypi/simple\">https://mirrors.aliyun.com/pypi/simple</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m pip config <span class=\"built_in\">set</span> global.index-url https://mirrors.aliyun.com/pypi/simp</span><br></pre></td></tr></table></figure>\n<p>python -m pip config list</p>\n<h1>global.index-url=‘<a href=\"https://mirrors.aliyun.com/pypi/simple\">https://mirrors.aliyun.com/pypi/simple</a>’</h1>\n","text":"如何用 gfpgan进行图像的人脸修复 如何用 gfpgan进行图像的人脸修复 要使用gfpgan进行图像的人脸修复，可以按照以下步骤进行： 安装gfpgan：首先，你需要安装gfpgan模型。你可以在gfpgan的GitHub页面上找到模型和代码并按照说明进行安装。 准备输入图...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"gfpgan","slug":"AIGC/gfpgan","count":2,"path":"api/categories/AIGC/gfpgan.json"}],"tags":[{"name":"gfpgan","slug":"gfpgan","count":2,"path":"api/tags/gfpgan.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">如何用 gfpgan进行图像的人脸修复</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">global.index-url&#x3D;‘https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple’</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"StableDiffusion运行多显卡上","uid":"788fc4b111d85045ae1a3809496f77e4","slug":"aigc/sd/StableDiffusion运行多显卡上","date":"2024-03-14T07:45:09.020Z","updated":"2024-03-14T07:45:09.020Z","comments":true,"path":"api/articles/aigc/sd/StableDiffusion运行多显卡上.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"StableDiffusion运行多显卡上 相当于SD的 CUDA_VISIBLE_DEVICES。 webui-user.sh中加入export参数。 export CUDA_VISIBLE_DEVICES=0,1,2,3 ./stable-diffusion-webui/we...","link":"","photos":[],"count_time":{"symbolsCount":424,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"stablediffusion","slug":"AIGC/stablediffusion","count":4,"path":"api/categories/AIGC/stablediffusion.json"}],"tags":[{"name":"stablediffusion","slug":"stablediffusion","count":4,"path":"api/tags/stablediffusion.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"安装GFPGAN修复人脸图像","uid":"aa6f0cb3af6190b915086c9ddb3c891c","slug":"aigc/sd/安装GFPGAN修复人脸图像","date":"2024-03-14T07:45:09.020Z","updated":"2024-03-14T07:45:09.020Z","comments":true,"path":"api/articles/aigc/sd/安装GFPGAN修复人脸图像.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"安装GFPGAN修复人脸图像 老照片修复利器GFPGAN，该模型为腾讯2021年开源的一个用于图片人脸复原修复的GAN模型；我们都有很多老照片，很多很久以前用两三百万像素拍的照片或原文件丢失了，只剩下压缩文件或QQ空间里面的老照片，现在一些App也支持老照片修复但往往效果不太理想...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"gfpgan","slug":"AIGC/gfpgan","count":2,"path":"api/categories/AIGC/gfpgan.json"}],"tags":[{"name":"gfpgan","slug":"gfpgan","count":2,"path":"api/tags/gfpgan.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}