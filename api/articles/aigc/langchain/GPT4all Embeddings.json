{"title":"gpt4all","uid":"bc3e68a199458a681f2c7fe3b421bbd6","slug":"aigc/langchain/GPT4all Embeddings","date":"2024-03-14T06:15:59.708Z","updated":"2024-03-14T06:15:59.709Z","comments":true,"path":"api/articles/aigc/langchain/GPT4all Embeddings.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<h1 id=\"gpt4all\"><a href=\"#gpt4all\" class=\"headerlink\" title=\"gpt4all\"></a>gpt4all</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install gpt4all</span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"Embeddings\"><a href=\"#Embeddings\" class=\"headerlink\" title=\"Embeddings\"></a>Embeddings</h3><p>翻译成中文为“嵌入”，是指将一个数据集或模型的特征值映射到一个更小的向量空间内的过程。在计算机自然语言处理领域中，Embeddings 通常被用来表示文本、图像或其他数据类型的特征，并使得模型能够更好地理解这些特征。️Embeddings翻译成中文，翻译成计算机自言语言处理的专业词汇️</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> gpt4all <span class=\"keyword\">import</span> GPT4All, Embed4All</span><br><span class=\"line\">text = <span class=\"string\">&#x27;The quick brown fox jumps over the lazy dog&#x27;</span></span><br><span class=\"line\">embedder = Embed4All()</span><br><span class=\"line\">output = embedder.embed(text)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(output)</span><br></pre></td></tr></table></figure>\n\n\n<p><a href=\"https://docs.gpt4all.io/gpt4all_python_embedding.html#gpt4all.gpt4all.Embed4All.__init\">https://docs.gpt4all.io/gpt4all_python_embedding.html#gpt4all.gpt4all.Embed4All.__init</a>__</p>\n<p>~/.username/.cache/gpt4all/ggml-all-MiniLM-L6-v2-f16.bin</p>\n<p>git clone <a href=\"https://github.com/nomic-ai/gpt4all\">https://github.com/nomic-ai/gpt4all</a></p>\n<p><a href=\"https://s3.amazonaws.com/static.nomic.ai/gpt4all/2023_GPT4All_Technical_Report.pdf\">https://s3.amazonaws.com/static.nomic.ai/gpt4all/2023_GPT4All_Technical_Report.pdf</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install -U langchain</span><br><span class=\"line\"></span><br><span class=\"line\">pip install gpt4all</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> langchain.embeddings <span class=\"keyword\">import</span> GPT4AllEmbeddings</span><br><span class=\"line\"></span><br><span class=\"line\"> gpt4all_embd = GPT4AllEmbeddings()</span><br><span class=\"line\"> query_result = gpt4all_embd.embed_query(<span class=\"string\">&quot;This is test doc&quot;</span>)</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(query_result)</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install langchain sentence_transformers</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> langchain.embeddings <span class=\"keyword\">import</span> HuggingFaceEmbeddings</span><br><span class=\"line\"></span><br><span class=\"line\">embeddings = HuggingFaceEmbeddings()</span><br><span class=\"line\">text = <span class=\"string\">&quot;This is a test document.&quot;</span></span><br><span class=\"line\">query_result = embeddings.embed_query(text)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(query_result [:<span class=\"number\">3</span>])</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">embeddings = HuggingFaceEmbeddings(model_name=<span class=\"string\">&quot;sentence-transformers/all-MiniLM-L6-v2&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n<p>sentence-transformers/all-MiniLM-L6-v2</p>\n<p>sentence_bert_config.json</p>\n<p>modules.json: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 349/349 [00:00&lt;00:00, 836kB/s]<br>config_sentence_transformers.json: 100%|████████████████████████████████████████████████████████████████████████████████████████████████████████| 116/116 [00:00&lt;00:00, 254kB/s]<br>README.md: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 10.6k/10.6k [00:00&lt;00:00, 12.6MB/s]<br>sentence_bert_config.json: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████| 53.0/53.0 [00:00&lt;00:00, 130kB/s]<br>config.json: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 571/571 [00:00&lt;00:00, 703kB/s]<br>pytorch_model.bin: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 438M/438M [06:21&lt;00:00, 1.15MB/s]<br>/home/parallels/miniconda3/envs/rag/lib/python3.11/site-packages/torch/_utils.py:831: UserWarning: TypedStorage is deprecated. It will be removed in the future and UntypedStorage will be the only storage class. This should only matter to you if you are using storages directly.  To access UntypedStorage directly, use tensor.untyped_storage() instead of tensor.storage()</p>\n<p>#<a href=\"https://abetlen.github.io/llama-cpp-python/\">https://abetlen.github.io/llama-cpp-python/</a></p>\n<p>#%pip uninstall -y llama-cpp-python<br>#%pip install –upgrade llama-cpp-python</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> langchain.embeddings <span class=\"keyword\">import</span> LlamaCppEmbeddings</span><br><span class=\"line\">llama = LlamaCppEmbeddings(model_path=GPT4ALL_MODEL_PATH)</span><br><span class=\"line\"></span><br><span class=\"line\">%%time</span><br><span class=\"line\">text = <span class=\"string\">&quot;This is a test document.&quot;</span>​</span><br><span class=\"line\">query_result = llama.embed_query(text)</span><br><span class=\"line\">CPU times: user <span class=\"number\">12.9</span> s, sys: <span class=\"number\">1.57</span> s, total: <span class=\"number\">14.5</span> s</span><br><span class=\"line\">Wall time: <span class=\"number\">2.13</span> s</span><br><span class=\"line\">%%time</span><br><span class=\"line\">doc_result = llama.embed_documents([text])</span><br><span class=\"line\">CPU times: user <span class=\"number\">10.4</span> s, sys: <span class=\"number\">59.7</span> ms, total: <span class=\"number\">10.4</span> s</span><br><span class=\"line\">Wall time: <span class=\"number\">1.47</span> s</span><br></pre></td></tr></table></figure>\n\n\n\n<p>nc监听端口，如何可以指定IP</p>\n<p>要指定IP地址来监听端口，可以使用以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -l &lt;IP地址&gt; &lt;端口号&gt;</span><br></pre></td></tr></table></figure>\n\n<p>例如，要在IP地址为192.168.1.100上监听端口8888，可以运行以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -l 192.168.1.100 8888</span><br></pre></td></tr></table></figure>\n\n<p>这将使nc程序在指定的IP地址和端口上启动监听。</p>\n","text":"gpt4all1pip install gpt4all Embeddings翻译成中文为“嵌入”，是指将一个数据集或模型的特征值映射到一个更小的向量空间内的过程。在计算机自然语言处理领域中，Embeddings 通常被用来表示文本、图像或其他数据类型的特征，并使得模型能够更好地理...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"gpt4all","slug":"gpt4all","count":1,"path":"api/categories/gpt4all.json"}],"tags":[{"name":"gpt4all","slug":"gpt4all","count":1,"path":"api/tags/gpt4all.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#gpt4all\"><span class=\"toc-text\">gpt4all</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Embeddings\"><span class=\"toc-text\">Embeddings</span></a></li></ol></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"AI按理说应该最擅长理工，为啥先冲击文艺行业？","uid":"86c416bb6fe0d33b8f210e37684d77c0","slug":"aigc/AI按理说应该最擅长理工，为啥先冲击文艺行业？","date":"2024-03-14T06:15:59.708Z","updated":"2024-03-14T06:15:59.708Z","comments":true,"path":"api/articles/aigc/AI按理说应该最擅长理工，为啥先冲击文艺行业？.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"AI按理说应该最擅长理工，为啥先冲击文艺行业？这个问题的可能答案会是什么呢？文艺行业确实是首先被波及的行业，这是因为AI应用已经在这个行业达到及格线，而且“AI容错率”高并且“人力AI成本差”大导致的。目前阶段，这样的行业就是非常利于AI应用的行业。 AI应用及格线我们先谈下AI...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"ChaGLM3在多显卡上运行","uid":"c8a161f78cff976f698872281578706e","slug":"aigc/ChatGLM/ChatGLM3在多显卡上运行","date":"2024-03-14T06:15:59.708Z","updated":"2024-03-14T06:15:59.708Z","comments":true,"path":"api/articles/aigc/ChatGLM/ChatGLM3在多显卡上运行.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"ChaGLM3在多显卡上运行在明确是16位量化的时候，用ChatGLM项目中的utils文件的load_model_on_gpus方法，进行对model的配置， num_gpus=4,意思是说在4块显卡上运行。from utils import load_model_on_gpu...","link":"","photos":[],"count_time":{"symbolsCount":937,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"chatglm3","slug":"AIGC/chatglm3","count":1,"path":"api/categories/AIGC/chatglm3.json"}],"tags":[{"name":"chatglm3","slug":"chatglm3","count":1,"path":"api/tags/chatglm3.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}