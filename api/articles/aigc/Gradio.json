{"title":"Gradio","uid":"45cf7b3c88a23623be0195c6597a4bdf","slug":"aigc/Gradio","date":"2024-03-14T07:45:09.026Z","updated":"2024-03-14T07:45:09.026Z","comments":true,"path":"api/articles/aigc/Gradio.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://s2.loli.net/2024/02/07/Li7MZXHjcuvCSO4.png","content":"<p>用Gradio实现一个调用一个REST API，访问的的API地址是<a href=\"http://10.211.6.6:8081/gelf%EF%BC%8C%E5%8F%82%E6%95%B0a=1,b=2%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%AD%97%E6%AE%B5%E6%9C%893%E4%B8%AAfield1\">http://10.211.6.6:8081/gelf，参数a=1,b=2，返回字段有3个field1</a>, field2, field3, 三个字符的类型都是字符串类型，返回3条数据,结构如下：</p>\n<p>filed1, filed2,field3<br />\na,b,c,<br />\nd,e,f<br />\nh,i,j</p>\n<p>用Gradio交结果分页显出来，用二维表格的形式显示， 给同具体体Gradio实现的Python代码</p>\n<p>下面是使用Gradio实现的Python代码：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> gradio <span class=\"token keyword\">as</span> gr\n<span class=\"token keyword\">import</span> requests\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">rest_api_call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    url <span class=\"token operator\">=</span> <span class=\"token string\">\"http://10.211.6.6:8081/gelf\"</span>\n    params <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span>\n    response <span class=\"token operator\">=</span> requests<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">,</span> params<span class=\"token operator\">=</span>params<span class=\"token punctuation\">)</span>\n    data <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>json<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> data\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">display_results</span><span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> rest_api_call<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    start_index <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>page <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">3</span>\n    end_index <span class=\"token operator\">=</span> page <span class=\"token operator\">*</span> <span class=\"token number\">3</span>\n    results <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>start_index<span class=\"token punctuation\">:</span>end_index<span class=\"token punctuation\">]</span>\n    \n    table_data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"field1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"field2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"field3\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> result <span class=\"token keyword\">in</span> results<span class=\"token punctuation\">:</span>\n        table_data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>result<span class=\"token punctuation\">[</span><span class=\"token string\">\"field1\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">[</span><span class=\"token string\">\"field2\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">[</span><span class=\"token string\">\"field3\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">return</span> table_data\n\ninputs <span class=\"token operator\">=</span> gr<span class=\"token punctuation\">.</span>inputs<span class=\"token punctuation\">.</span>Number<span class=\"token punctuation\">(</span>label<span class=\"token operator\">=</span><span class=\"token string\">\"Page\"</span><span class=\"token punctuation\">,</span> default<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> minimum<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> maximum<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\noutputs <span class=\"token operator\">=</span> gr<span class=\"token punctuation\">.</span>outputs<span class=\"token punctuation\">.</span>Table<span class=\"token punctuation\">(</span>header<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"field1\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"field2\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"field3\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\ninterface <span class=\"token operator\">=</span> gr<span class=\"token punctuation\">.</span>Interface<span class=\"token punctuation\">(</span>fn<span class=\"token operator\">=</span>display_results<span class=\"token punctuation\">,</span> inputs<span class=\"token operator\">=</span>inputs<span class=\"token punctuation\">,</span> outputs<span class=\"token operator\">=</span>outputs<span class=\"token punctuation\">)</span>\n\ninterface<span class=\"token punctuation\">.</span>launch<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>运行这段代码后，将会在浏览器中打开一个页面，可以输入页码来查看对应的数据。默认显示第一页的结果，可以在输入框中修改页码，然后点击&quot;Submit&quot;按钮获取对应页码的数据。数据以二维表格的形式显示在页面上。</p>\n","text":"用Gradio实现一个调用一个REST API，访问的的API地址是http://10.211.6.6:8081/gelf，参数a=1,b=2，返回字段有3个field1, field2, field3, 三个字符的类型都是字符串类型，返回3条数据,结构如下： filed1, f...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":117,"path":"api/categories/AIGC.json"},{"name":"Gradio","slug":"AIGC/Gradio","count":1,"path":"api/categories/AIGC/Gradio.json"}],"tags":[{"name":"Gradio","slug":"Gradio","count":1,"path":"api/tags/Gradio.json"}],"toc":"","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"高级增加检索LlamaIndex","uid":"a431978375ccc7ec0d62892221bc874e","slug":"aigc/rag/高级增加检索LlamaIndex","date":"2024-03-14T07:45:09.027Z","updated":"2024-03-14T07:45:09.028Z","comments":true,"path":"api/articles/aigc/rag/高级增加检索LlamaIndex.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 高级增加检索LlamaIndex 高级检索增强生成（RAG）技术解决了原始RAG管道的局限性。 最近一项关于RAG的调查将先进的RAG技术分为检索前、检索和检索后优化。 最新文章概述了先进的RAG技术： 🦙 预检索包括滑动窗口、增强数据粒度、添加元数据或优化索引结构等技术，如句...","link":"","photos":[],"count_time":{"symbolsCount":464,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":117,"path":"api/categories/AIGC.json"},{"name":"RAG","slug":"AIGC/RAG","count":1,"path":"api/categories/AIGC/RAG.json"}],"tags":[{"name":"RAG","slug":"RAG","count":2,"path":"api/tags/RAG.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"AI按理说应该最擅长理工，为啥先冲击文艺行业？","uid":"86c416bb6fe0d33b8f210e37684d77c0","slug":"aigc/AI按理说应该最擅长理工，为啥先冲击文艺行业？","date":"2024-03-14T07:45:09.026Z","updated":"2024-03-14T07:45:09.026Z","comments":true,"path":"api/articles/aigc/AI按理说应该最擅长理工，为啥先冲击文艺行业？.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" AI按理说应该最擅长理工，为啥先冲击文艺行业？ 这个问题的可能答案会是什么呢？文艺行业确实是首先被波及的行业，这是因为AI应用已经在这个行业达到及格线，而且“AI容错率”高并且“人力AI成本差”大导致的。目前阶段，这样的行业就是非常利于AI应用的行业。 AI应用及格线 我们先谈...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":117,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}