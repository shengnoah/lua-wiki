{"title":"ChaGLM3在多显卡上运行","uid":"c8a161f78cff976f698872281578706e","slug":"aigc/ChatGLM/ChatGLM3在多显卡上运行","date":"2024-03-14T07:45:09.021Z","updated":"2024-03-14T07:45:09.021Z","comments":true,"path":"api/articles/aigc/ChatGLM/ChatGLM3在多显卡上运行.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<h1>ChaGLM3在多显卡上运行</h1>\n<p>在明确是16位量化的时候，用ChatGLM项目中的utils文件的load_model_on_gpus方法，进行对model的配置， num_gpus=4,意思是说在4块显卡上运行。<br>\nfrom utils import load_model_on_gpus</p>\n<p>model = load_model_on_gpus(model_name, num_gpus=4)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> quantize == <span class=\"number\">16</span>:</span><br><span class=\"line\">model = load_model_on_gpus(model_name, num_gpus=<span class=\"number\">4</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">model = AutoModel.from_pretrained(model_name, device_map=<span class=\"string\">&quot;auto&quot;</span>,trust_remote_code=<span class=\"literal\">True</span>).half().quantize(quantize).cuda()</span><br></pre></td></tr></table></figure>\n<p>运行的时候，用命令参数 -d，指定所在运行的显卡。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">parser.add_argument(<span class=\"string\">&#x27;--device&#x27;</span>, <span class=\"string\">&#x27;-d&#x27;</span>, <span class=\"built_in\">help</span>=<span class=\"string\">&#x27;device， -1 means cpu, other means gpu ids&#x27;</span>, default=<span class=\"string\">&#x27;0&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python fastapiGPU.py -d 0,1,2,3</span><br></pre></td></tr></table></figure>\n<p>相当于SD的 CUDA_VISIBLE_DEVICES。</p>\n<p>webui-user.sh中加入export参数。</p>\n<p>export CUDA_VISIBLE_DEVICES=0,1,2,3</p>\n<p>./stable-diffusion-webui/webui.sh --listen --device-id 1<br>\n这样运行，SD可以同时使用显卡0和显卡1.</p>\n<p>CUDA_VISIBLE_DEVICES=0,1,2,3 python <a href=\"http://launch.py\">launch.py</a>  --share</p>\n<p>CUDA_VISIBLE_DEVICES=1 python <a href=\"http://launch.py\">launch.py</a>  --share</p>\n<p>cmd_args.py    --device-id</p>\n<p>device-id参数是在cmd_args.py文件中出现的。</p>\n","text":"ChaGLM3在多显卡上运行 在明确是16位量化的时候，用ChatGLM项目中的utils文件的load_model_on_gpus方法，进行对model的配置， num_gpus=4,意思是说在4块显卡上运行。 from utils import load_model_on_g...","link":"","photos":[],"count_time":{"symbolsCount":937,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"chatglm3","slug":"AIGC/chatglm3","count":1,"path":"api/categories/AIGC/chatglm3.json"}],"tags":[{"name":"chatglm3","slug":"chatglm3","count":1,"path":"api/tags/chatglm3.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">ChaGLM3在多显卡上运行</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"矢量数据库","uid":"0214cb41e71f0a070ee24d319de60be5","slug":"aigc/矢量数据库","date":"2024-03-14T07:45:09.021Z","updated":"2024-03-14T07:45:09.021Z","comments":true,"path":"api/articles/aigc/矢量数据库.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":"什么是𝗩𝗲𝗰𝘁𝗼𝗿 𝗗𝗮𝘁𝗮𝗯𝗮𝘀𝗲? 什么是𝗩𝗲𝗰𝘁𝗼𝗿 𝗗𝗮𝘁𝗮𝗯𝗮𝘀𝗲? 随着基础模型的兴起，矢量数据库迅速流行起来。事实上，矢量数据库在大型语言模型上下文之外也很有用。 当谈到机器学习时，我们经常处理向量嵌入。矢量数据库的创建是为了在使用它们时表现特别好： ➡️ 存储。 ➡️...","link":"","photos":[],"count_time":{"symbolsCount":962,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"DDColor老相片上色","uid":"5ffd5ba2715e0bed5ed2f623a352bd78","slug":"aigc/sd/DDColor老相片上色","date":"2024-03-14T07:45:09.020Z","updated":"2024-03-14T07:45:09.020Z","comments":true,"path":"api/articles/aigc/sd/DDColor老相片上色.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"DDColor老相片上色 GitHub 上一款可实现照片级真实感的图像着色工具：DDColor。 它不仅可以为历史黑白老旧照片提供生动自然的着色，还可以对动漫游戏中的风景进行着色或重新着色，变为逼真的现实生活风格！ GitHub：github.com/piddnad/DDColo...","link":"","photos":[],"count_time":{"symbolsCount":177,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}