{"title":"Conda设置参数设置","uid":"c8f9ef0ce429539720d45bd27158e7b0","slug":"python/codna/Conda设置参数设置","date":"2024-03-14T06:15:59.761Z","updated":"2024-03-14T06:15:59.761Z","comments":true,"path":"api/articles/python/codna/Conda设置参数设置.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<h1 id=\"Conda设置参数设置\"><a href=\"#Conda设置参数设置\" class=\"headerlink\" title=\"Conda设置参数设置\"></a>Conda设置参数设置</h1><p> 在conda中如何设置.cache文件夹位置为/data0</p>\n<p>要将conda中的.cache文件夹位置设置为/data0，可以按照以下步骤操作：</p>\n<ol>\n<li><p>打开终端或命令提示符。</p>\n</li>\n<li><p>输入以下命令，将当前用户的~/.condarc文件复制到主目录下（如果该文件不存在则跳过此步骤）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp ~/.condarc ~</span><br></pre></td></tr></table></figure></li>\n<li><p>使用文本编辑器打开~/.condarc文件，例如使用vim编辑器：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.condarc</span><br></pre></td></tr></table></figure></li>\n<li><p>在打开的.condarc文件中，添加或修改以下行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">envs_dirs:</span><br><span class=\"line\">  - /data0/conda/envs</span><br><span class=\"line\">  - /opt/anaconda3/envs</span><br><span class=\"line\">  - /home/user_name/.conda/envs</span><br><span class=\"line\">pkgs_dirs:</span><br><span class=\"line\">  - /data0/conda/pkgs</span><br><span class=\"line\">  - /opt/anaconda3/pkgs</span><br><span class=\"line\">  - /home/user_name/.conda/pkgs</span><br></pre></td></tr></table></figure></li>\n<li><p>保存并关闭.condarc文件。</p>\n</li>\n</ol>\n<p>现在，你已经成功将conda中的.cache文件夹位置设置为/data0。请注意替换指定路径中的”user_name”为你的用户名。</p>\n<p>如何配置.condarc文件，里面有那些参数设置。</p>\n<p>如果查看CUDA的具体版本号</p>\n<p>可以通过以下步骤查看CUDA的具体版本号：</p>\n<ol>\n<li>打开终端或命令提示符窗口。</li>\n<li>运行以下命令：<code>nvcc --version</code>。</li>\n<li>终端或命令提示符会显示CUDA的版本号信息。</li>\n</ol>\n<p>另外，如果你是在Windows操作系统上使用CUDA，你还可以通过以下步骤查看CUDA的版本号：</p>\n<ol>\n<li>打开开始菜单，并搜索“NVIDIA Corporation”文件夹。</li>\n<li>在该文件夹中，找到并打开“NVIDIA Control Panel”应用程序。</li>\n<li>在NVIDIA Control Panel窗口左侧的面板中，选择“帮助”&gt; “关于NVIDIA Control Panel”。</li>\n<li>在弹出的对话框中，你将看到CUDA驱动程序的版本号。</li>\n</ol>\n<p>无论在哪种操作系统上使用CUDA，以上方法都可以帮助你查看具体的CUDA版本号。</p>\n<p>apt install 如何不考虑依赖， 强行安装一个软件</p>\n<p>要在Linux系统中强行安装一个软件而不考虑依赖关系，可以使用以下命令：</p>\n<p>sudo apt-get –no-install-recommends install &lt;软件包名称&gt;</p>\n<p>请注意，强行安装软件可能会导致系统不稳定或产生其他问题。确保你了解可能的后果并谨慎操作。</p>\n<p>apt  install 一个软件，不考虑过程中的警告</p>\n<p>要在终端中安装软件并忽略警告，可以使用以下命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install &lt;软件名称&gt; -y</span><br></pre></td></tr></table></figure>\n<p>这将自动回答任何确认提示，以便安装过程不会被暂停等待用户输入。请注意，忽略警告可能会导致潜在的问题，因此请谨慎使用。</p>\n<p>如何用Tar解压zip文件</p>\n<p>要使用tar解压缩zip文件，首先需要将zip文件转换为tar文件，然后再使用tar命令解压缩。</p>\n<p>以下是使用tar解压缩zip文件的步骤：</p>\n<ol>\n<li><p>首先，确保系统上已安装tar命令。如果没有安装，请先安装tar命令。</p>\n</li>\n<li><p>打开终端或命令提示符。</p>\n</li>\n<li><p>使用以下命令将zip文件转换为tar文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ unzip filename.zip -d dirname</span><br></pre></td></tr></table></figure>\n\n<p>其中，filename.zip是要解压缩的zip文件的名称，dirname是要创建的目标目录的名称。该命令将在当前目录下创建一个名为dirname的目录，并将zip文件解压缩到该目录中。</p>\n</li>\n<li><p>然后，进入目标目录：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ cd dirname</span><br></pre></td></tr></table></figure></li>\n<li><p>最后，使用以下命令使用tar解压缩tar文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ tar -xvf filename.tar</span><br></pre></td></tr></table></figure>\n\n<p>其中，filename.tar是要解压缩的tar文件的名称。该命令会将tar文件中的内容提取到当前目录中。</p>\n</li>\n</ol>\n<p>完成后，您可以在当前目录中查看已解压缩的文件和文件夹。</p>\n<p>注意：在某些情况下，您可能需要提供完整路径来执行上述操作。</p>\n<p>下面的问题， 是什么原因造成的，有什么好的方法吗<br>Preparing to unpack …/nvidia-kernel-common-535_535.129.03-0ubuntu1_amd64.deb …</p>\n<p>Unpacking nvidia-kernel-common-535 (535.129.03-0ubuntu1) over (535.104.12-0ubuntu1) …</p>\n<p>dpkg: error processing archive /var/cache/apt/archives/nvidia-kernel-common-535_535.129.03-0ubuntu1_amd64.deb (–unpack):</p>\n<p>trying to overwrite ‘/lib/firmware/nvidia/535.129.03/gsp_ga10x.bin’, which is also in package nvidia-firmware-535-535.129.03 535.129.03-0ubuntu0.22.04.1</p>\n<p>dpkg-deb: error: paste subprocess was killed by signal (Broken pipe)</p>\n<p>Errors were encountered while processing:</p>\n<p>/var/cache/apt/archives/nvidia-kernel-common-535_535.129.03-0ubuntu1_amd64.deb</p>\n<p>needrestart is being skipped since dpkg has failed</p>\n<p>这个错误是由于在安装nvidia-kernel-common-535时，发生了文件冲突导致的。具体来说，系统中已经安装了nvidia-firmware-535-535.129.03包，并且它包含了与nvidia-kernel-common-535相同的文件’/lib/firmware/nvidia/535.129.03/gsp_ga10x.bin’。</p>\n<p>解决这个问题的一个好方法是执行以下步骤：</p>\n<ol>\n<li><p>打开终端并输入以下命令以删除已安装的nvidia-firmware-535-535.129.03包：<br>sudo apt-get remove nvidia-firmware-535-535.129.03</p>\n</li>\n<li><p>输入以下命令以清除未完成的安装：<br>sudo dpkg –configure -a</p>\n</li>\n<li><p>接下来，再次尝试安装nvidia-kernel-common-535：<br>sudo apt-get install nvidia-kernel-common-535</p>\n</li>\n</ol>\n<p>这样应该可以解决文件冲突并成功完成安装。</p>\n<p>下面这句话的含义和作用是什么<br>sudo update-initramfs -u</p>\n<p>这句命令的含义是使用sudo权限更新initramfs（initial RAM file system）并重新生成引导文件。<br>作用是在Linux系统中更新初始化内存文件系统，以确保系统能够正确引导。通过此命令，可以更新内核镜像和相关配置文件，以便在启动时加载正确的驱动程序和模块。</p>\n<p>nouveau是什么？他的作用是什么？</p>\n<p>nouveau是一个开源的图形驱动程序，用于Linux操作系统中的图形处理单元（GPU）。</p>\n<p>nouveau的作用是提供对NVIDIA显卡的支持，使得用户能够在Linux系统中使用NVIDIA显卡进行图形渲染和计算任务。它提供了与NVIDIA官方闭源驱动类似的功能，包括3D加速、视频解码、双显示器支持等。</p>\n<p>与闭源驱动相比，nouveau具有一些优势和不同之处。首先，它是开源的，可以由任何人进行修改和改进，并且可以与Linux内核及其其他组件进行集成。其次，nouveau提供了一些实验性的功能和调试选项，使得开发人员能够更好地理解和调试显卡硬件。此外，nouveau还致力于改善电源管理和性能优化等方面。</p>\n<p>总体而言，nouveau为Linux用户提供了一个免费、开放和可定制的选择来使用NVIDIA显卡，并在Linux环境下获得高质量的图形性能。</p>\n<p>安装Nivida驱动的时候为什么要禁用nouveau</p>\n<p>在安装Nvidia驱动程序时，需要禁用nouveau驱动程序是因为nouveau是一个开源的图形驱动程序，它可以与Nvidia显卡进行通信并提供基本的图形功能。然而，当安装官方的Nvidia专有驱动程序时，它与nouveau驱动程序可能会发生冲突，导致系统稳定性问题或无法正常启动。</p>\n<p>禁用nouveau驱动程序可以确保系统只使用官方的Nvidia驱动程序，以获得更好的图形性能和兼容性。这样做可以防止冲突，并确保正确加载和使用专有驱动程序所需的所有功能和优化。</p>\n<p>禁用nouveau驱动程序有多种方法，例如修改Linux内核参数、编辑GRUB引导配置文件或使用命令行选项。具体步骤可能因操作系统版本和配置而有所不同，请根据您的操作系统和需求选择适当的方法。</p>\n<p>如何查看torch的版本</p>\n<p>要查看torch的版本，可以使用以下代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> torch</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(torch.__version__)</span><br></pre></td></tr></table></figure>\n\n<p>运行这段代码将打印出当前安装的torch版本。</p>\n<p>NVIDIA-SMI 535.129.03 Driver Version: 535.129.03 CUDA Version: 12.2</p>\n<p>翻译下面这句英文<br>Depends: nvidia-kernel-common-535 (= 535.129.03-0ubuntu1) but 535.104.12-0ubuntu1 is to be installed</p>\n<p>依赖于nvidia-kernel-common-535（= 535.129.03-0ubuntu1），但要安装的是535.104.12-0ubuntu1。</p>\n<p>  如何查看本机看装了nvidia的那些驱动</p>\n<p>要查看本机是否安装了NVIDIA驱动程序，可以按照以下步骤进行操作：</p>\n<ol>\n<li>打开终端或命令提示符窗口。</li>\n<li>输入以下命令并按Enter键执行：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nvidia-smi</span><br></pre></td></tr></table></figure>\n如果安装了NVIDIA驱动程序，将显示与GPU相关的信息，包括驱动程序版本和GPU使用情况。</li>\n</ol>\n<p>另外，你还可以通过以下方法之一来检查本机是否安装了NVIDIA驱动程序：</p>\n<ul>\n<li>在Windows操作系统中，你可以打开“设备管理器”，然后展开“显示适配器”类别，查看是否存在NVIDIA的显卡驱动。</li>\n<li>在Linux操作系统中，你可以使用<code>lsmod | grep nvidia</code>命令来检查是否加载了NVIDIA内核模块。</li>\n<li>在Mac操作系统中，你可以打开“关于本机”菜单，并选择“系统报告”，然后在左侧面板中选择“图形/显示”类别，在右侧窗口中查看显卡信息。</li>\n</ul>\n","text":"Conda设置参数设置 在conda中如何设置.cache文件夹位置为/data0 要将conda中的.cache文件夹位置设置为/data0，可以按照以下步骤操作： 打开终端或命令提示符。 输入以下命令，将当前用户的~/.condarc文件复制到主目录下（如果该文件不存在则跳过...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"conda","slug":"AIGC/conda","count":2,"path":"api/categories/AIGC/conda.json"}],"tags":[{"name":"conda","slug":"conda","count":3,"path":"api/tags/conda.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Conda%E8%AE%BE%E7%BD%AE%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE\"><span class=\"toc-text\">Conda设置参数设置</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"SD安装失败的总结","uid":"05b362c6dec32eeac664da3321842b99","slug":"python/SD安装失败的总结","date":"2024-03-14T06:15:59.761Z","updated":"2024-03-14T06:15:59.761Z","comments":true,"path":"api/articles/python/SD安装失败的总结.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"SD安装失败的总结sd 安装过程 1.下载webuigit clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git 2.安装包下载太慢,可以指定清华源 -i http://pypi.tuna.tsingh...","link":"","photos":[],"count_time":{"symbolsCount":895,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"conda init bash指令的作用","uid":"e610e4d512d51105e5370a7afc95aadf","slug":"python/codna/conda init bash指令的作用","date":"2024-03-14T06:15:59.761Z","updated":"2024-03-14T06:15:59.762Z","comments":true,"path":"api/articles/python/codna/conda init bash指令的作用.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"conda init bash指令的作用conda init bash这条指令的作用是什么，conda init bash，对那些文件做了处理了变化，有没有对.bashrc文件添加了什么内容？ “conda init bash”命令的作用是将conda命令添加到bash shel...","link":"","photos":[],"count_time":{"symbolsCount":977,"symbolsTime":"1 mins."},"categories":[{"name":"python","slug":"python","count":2,"path":"api/categories/python.json"},{"name":"conda","slug":"python/conda","count":1,"path":"api/categories/python/conda.json"}],"tags":[{"name":"conda","slug":"conda","count":3,"path":"api/tags/conda.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}