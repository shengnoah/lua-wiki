{"title":"Obsidian Jupyter Book插件","uid":"00a4faf1190304140b94f0b8788c00f3","slug":"python/jupyterbook/Obsidian Jupyter Book插件","date":"2024-03-14T06:15:59.762Z","updated":"2024-03-14T06:15:59.762Z","comments":true,"path":"api/articles/python/jupyterbook/Obsidian Jupyter Book插件.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<h1 id=\"Obsidian-Jupyter-Book插件\"><a href=\"#Obsidian-Jupyter-Book插件\" class=\"headerlink\" title=\"Obsidian Jupyter Book插件\"></a>Obsidian Jupyter Book插件</h1><p>在Obsidian中，如何用Jupyter Book插件，运行Python代码？</p>\n<p>在Obsidian中，你可以通过以下步骤使用Jupyter Book插件来运行Python代码：</p>\n<ol>\n<li><p>首先，确保已经安装了Jupyter Book插件。可以通过在Obsidian的插件设置中搜索并安装该插件。</p>\n</li>\n<li><p>创建一个新的Markdown笔记，并将其保存为<code>.ipynb</code>文件格式。例如，你可以命名为<code>example.ipynb</code>。</p>\n</li>\n<li><p>在笔记中按照Jupyter Notebook的语法编写Python代码块。例如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Hello, world!&quot;</span>)</span><br></pre></td></tr></table></figure></li>\n</ol>\n<ol start=\"4\">\n<li><p>保存并关闭笔记。</p>\n</li>\n<li><p>在Obsidian的编辑区域，右键点击笔记，并选择“Open with Jupyter Book”选项。</p>\n</li>\n<li><p>这将会在Obsidian中打开一个新的预览窗口，其中包含了运行Python代码块的结果。</p>\n</li>\n</ol>\n<p>注意：在使用Jupyter Book插件之前，请确保已经正确安装了Python和相关依赖包。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;test&quot;)</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np  </span><br><span class=\"line\">from matplotlib import pyplot as plt</span><br><span class=\"line\">  </span><br><span class=\"line\">x = np.linspace(0, 1)  </span><br><span class=\"line\">y = np.exp(-x) * np.sin(4 * np.pi * x)  </span><br><span class=\"line\">plt.plot(x, y)  </span><br><span class=\"line\">pass</span><br></pre></td></tr></table></figure>\n\n\n<p>关键点是代码种类，不是选Python，而是选jupyter，才会出现运行标记。</p>\n<p>用Python画一个一元二次方程y=x^2的图像。</p>\n<p>可以使用Python的matplotlib库来画一个一元二次方程y=x^2的图像。以下是一个示例代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import numpy as np</span><br><span class=\"line\">import matplotlib.pyplot as plt</span><br><span class=\"line\"></span><br><span class=\"line\"># 生成x的取值范围</span><br><span class=\"line\">x = np.linspace(-10, 10, 100)</span><br><span class=\"line\"></span><br><span class=\"line\"># 计算对应的y值</span><br><span class=\"line\">y = x**2</span><br><span class=\"line\"></span><br><span class=\"line\"># 绘制图像</span><br><span class=\"line\">plt.plot(x, y)</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置坐标轴标签</span><br><span class=\"line\">plt.xlabel(&#x27;x&#x27;)</span><br><span class=\"line\">plt.ylabel(&#x27;y&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置标题</span><br><span class=\"line\">plt.title(&#x27;Graph of y=x^2&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示图像</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n<p>运行这段代码，就会得到一元二次方程y=x^2的图像。</p>\n<p>如何在Obsidian中，用符号给示y等于x的二次方。</p>\n<p>在Obsidian中，你可以使用Markdown语法来表示y等于x的二次方。以下是一种方法：</p>\n<ol>\n<li>使用符号<code>^</code>表示上标，即表示指数。</li>\n<li>将<code>x^2</code>放在y的后面，表示y等于x的二次方。</li>\n</ol>\n<p>示例： <code>y = x^2</code></p>\n<p>这样就能正确地表示y等于x的二次方。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">y = x^2</span><br></pre></td></tr></table></figure>\n\n<p> x的二次方，在Obsidian中，用数学符号怎么表示。</p>\n<p>y=x²的这个方程式，用Python画出这个函数他在第一象限的图像怎么实现？</p>\n<p>要在第一象限绘制函数y = x²的图像，可以使用Python的matplotlib库来实现。以下是一个示例代码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">import matplotlib.pyplot as plt</span><br><span class=\"line\">import numpy as np</span><br><span class=\"line\"></span><br><span class=\"line\"># 生成x的取值范围</span><br><span class=\"line\">x = np.linspace(0, 10, 100)</span><br><span class=\"line\"></span><br><span class=\"line\"># 计算相应的y值</span><br><span class=\"line\">y = x**2</span><br><span class=\"line\"></span><br><span class=\"line\"># 绘制图像</span><br><span class=\"line\">plt.plot(x, y)</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置坐标轴标签和标题</span><br><span class=\"line\">plt.xlabel(&#x27;x&#x27;)</span><br><span class=\"line\">plt.ylabel(&#x27;y&#x27;)</span><br><span class=\"line\">plt.title(&#x27;Graph of y = x²&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 显示图像</span><br><span class=\"line\">plt.show()</span><br></pre></td></tr></table></figure>\n\n<p>运行这段代码后，将会在新的窗口中显示出函数y = x²在第一象限内的图像。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;hello world!&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n\n\n<p>/Users/shengyang1/opt/anaconda3/envs/jupyter3.10/bin/python</p>\n<p>/Users/shengyang1/opt/anaconda3/envs/jupyter3.10/bin/python<br>/Users/shengyang1/opt/anaconda3/envs/jupyter3.10/bin/python</p>\n<p>C:\\Users\\Admin.conda\\envs\\llm\\</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(123)</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;hello world&quot;)</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(123)</span><br><span class=\"line\">a = input(&quot;输入：&quot;)</span><br><span class=\"line\">print(a)</span><br></pre></td></tr></table></figure>\n\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import pyaudio</span><br><span class=\"line\">import wave</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">print(&quot;test&quot;)</span><br></pre></td></tr></table></figure>\n\n","text":"Obsidian Jupyter Book插件在Obsidian中，如何用Jupyter Book插件，运行Python代码？ 在Obsidian中，你可以通过以下步骤使用Jupyter Book插件来运行Python代码： 首先，确保已经安装了Jupyter Book插件。可以...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"obsidian","slug":"obsidian","count":8,"path":"api/categories/obsidian.json"}],"tags":[{"name":"jupyter","slug":"jupyter","count":1,"path":"api/tags/jupyter.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Obsidian-Jupyter-Book%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">Obsidian Jupyter Book插件</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"cuDNN","uid":"95e90514163f2adead82ccfd062b2e72","slug":"python/codna/cuDNN","date":"2024-03-14T06:15:59.762Z","updated":"2024-03-14T06:15:59.762Z","comments":true,"path":"api/articles/python/codna/cuDNN.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"cuDNNcuDNN（CUDA Deep Neural Network library）是一个用于加速深度神经网络计算的GPU加速库。它提供了高效的实现和优化，可以显著加快深度学习模型训练和推理的速度。 使用cuDNN，可以进行以下操作： 卷积神经网络（CNN）：cuDNN提供了...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"cuDNN","slug":"AIGC/cuDNN","count":1,"path":"api/categories/AIGC/cuDNN.json"}],"tags":[{"name":"cuDNN","slug":"cuDNN","count":1,"path":"api/tags/cuDNN.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"iCloud的文件夹的位置","uid":"e564ce5c4856dfbed477325743829e87","slug":"other/iCloud的文件夹的位置","date":"2024-03-14T06:15:59.761Z","updated":"2024-03-14T06:15:59.761Z","comments":true,"path":"api/articles/other/iCloud的文件夹的位置.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"iCloud的文件夹的位置PC的iCloud的位置。cd /Library/Mobile\\ Documents/comapple~CloudDocs 手机上Obsidian文件夹的位置。cd /Library/Mobile\\ Documents/iCloud\\md~obsidia...","link":"","photos":[],"count_time":{"symbolsCount":199,"symbolsTime":"1 mins."},"categories":[{"name":"文章","slug":"文章","count":22,"path":"api/categories/文章.json"}],"tags":[{"name":"Ruby","slug":"Ruby","count":5,"path":"api/tags/Ruby.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}