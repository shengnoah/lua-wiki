{"title":"Obsidian Jupyter Book插件","uid":"00a4faf1190304140b94f0b8788c00f3","slug":"python/jupyterbook/Obsidian Jupyter Book插件","date":"2024-03-14T07:45:09.043Z","updated":"2024-03-14T07:45:09.043Z","comments":true,"path":"api/articles/python/jupyterbook/Obsidian Jupyter Book插件.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","content":"<h1 id=\"obsidian-jupyter-book插件\"><a class=\"markdownIt-Anchor\" href=\"#obsidian-jupyter-book插件\"></a> Obsidian Jupyter Book插件</h1>\n<p>在Obsidian中，如何用Jupyter Book插件，运行Python代码？</p>\n<p>在Obsidian中，你可以通过以下步骤使用Jupyter Book插件来运行Python代码：</p>\n<ol>\n<li class=\"lvl-3\">\n<p>首先，确保已经安装了Jupyter Book插件。可以通过在Obsidian的插件设置中搜索并安装该插件。</p>\n</li>\n<li class=\"lvl-3\">\n<p>创建一个新的Markdown笔记，并将其保存为<code>.ipynb</code>文件格式。例如，你可以命名为<code>example.ipynb</code>。</p>\n</li>\n<li class=\"lvl-3\">\n<p>在笔记中按照Jupyter Notebook的语法编写Python代码块。例如：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, world!\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li class=\"lvl-3\">\n<p>保存并关闭笔记。</p>\n</li>\n<li class=\"lvl-3\">\n<p>在Obsidian的编辑区域，右键点击笔记，并选择“Open with Jupyter Book”选项。</p>\n</li>\n<li class=\"lvl-3\">\n<p>这将会在Obsidian中打开一个新的预览窗口，其中包含了运行Python代码块的结果。</p>\n</li>\n</ol>\n<p>注意：在使用Jupyter Book插件之前，请确保已经正确安装了Python和相关依赖包。</p>\n<pre class=\"line-numbers language-jupyter\" data-language=\"jupyter\"><code class=\"language-jupyter\">print(&quot;test&quot;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-jupyter\" data-language=\"jupyter\"><code class=\"language-jupyter\">import numpy as np  \nfrom matplotlib import pyplot as plt\n  \nx &#x3D; np.linspace(0, 1)  \ny &#x3D; np.exp(-x) * np.sin(4 * np.pi * x)  \nplt.plot(x, y)  \npass<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>关键点是代码种类，不是选Python，而是选jupyter，才会出现运行标记。</p>\n<p>用Python画一个一元二次方程y=x^2的图像。</p>\n<p>可以使用Python的matplotlib库来画一个一元二次方程y=x^2的图像。以下是一个示例代码：</p>\n<pre class=\"line-numbers language-jupyter\" data-language=\"jupyter\"><code class=\"language-jupyter\">import numpy as np\nimport matplotlib.pyplot as plt\n\n# 生成x的取值范围\nx &#x3D; np.linspace(-10, 10, 100)\n\n# 计算对应的y值\ny &#x3D; x**2\n\n# 绘制图像\nplt.plot(x, y)\n\n# 设置坐标轴标签\nplt.xlabel(&#39;x&#39;)\nplt.ylabel(&#39;y&#39;)\n\n# 设置标题\nplt.title(&#39;Graph of y&#x3D;x^2&#39;)\n\n# 显示图像\nplt.show()<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>运行这段代码，就会得到一元二次方程y=x^2的图像。</p>\n<p>如何在Obsidian中，用符号给示y等于x的二次方。</p>\n<p>在Obsidian中，你可以使用Markdown语法来表示y等于x的二次方。以下是一种方法：</p>\n<ol>\n<li class=\"lvl-3\">\n<p>使用符号<code>^</code>表示上标，即表示指数。</p>\n</li>\n<li class=\"lvl-3\">\n<p>将<code>x^2</code>放在y的后面，表示y等于x的二次方。</p>\n</li>\n</ol>\n<p>示例： <code>y = x^2</code></p>\n<p>这样就能正确地表示y等于x的二次方。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">y &#x3D; x^2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>x的二次方，在Obsidian中，用数学符号怎么表示。</p>\n<p>y=x²的这个方程式，用Python画出这个函数他在第一象限的图像怎么实现？</p>\n<p>要在第一象限绘制函数y = x²的图像，可以使用Python的matplotlib库来实现。以下是一个示例代码：</p>\n<pre class=\"line-numbers language-jupyter\" data-language=\"jupyter\"><code class=\"language-jupyter\">\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# 生成x的取值范围\nx &#x3D; np.linspace(0, 10, 100)\n\n# 计算相应的y值\ny &#x3D; x**2\n\n# 绘制图像\nplt.plot(x, y)\n\n# 设置坐标轴标签和标题\nplt.xlabel(&#39;x&#39;)\nplt.ylabel(&#39;y&#39;)\nplt.title(&#39;Graph of y &#x3D; x²&#39;)\n\n# 显示图像\nplt.show()<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>运行这段代码后，将会在新的窗口中显示出函数y = x²在第一象限内的图像。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world!\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>/Users/shengyang1/opt/anaconda3/envs/jupyter3.10/bin/python</p>\n<p>/Users/shengyang1/opt/anaconda3/envs/jupyter3.10/bin/python<br />\n/Users/shengyang1/opt/anaconda3/envs/jupyter3.10/bin/python</p>\n<p>C:\\Users\\Admin.conda\\envs\\llm\\</p>\n<pre class=\"line-numbers language-jupyter\" data-language=\"jupyter\"><code class=\"language-jupyter\">print(123)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-jupyter\" data-language=\"jupyter\"><code class=\"language-jupyter\">print(&quot;hello world&quot;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-jupyter\" data-language=\"jupyter\"><code class=\"language-jupyter\">print(123)\na &#x3D; input(&quot;输入：&quot;)\nprint(a)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-jupyter\" data-language=\"jupyter\"><code class=\"language-jupyter\">import pyaudio\nimport wave\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<pre class=\"line-numbers language-jupyter\" data-language=\"jupyter\"><code class=\"language-jupyter\">print(&quot;test&quot;)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n","text":" Obsidian Jupyter Book插件 在Obsidian中，如何用Jupyter Book插件，运行Python代码？ 在Obsidian中，你可以通过以下步骤使用Jupyter Book插件来运行Python代码： 首先，确保已经安装了Jupyter Book插件。...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"obsidian","slug":"obsidian","count":8,"path":"api/categories/obsidian.json"}],"tags":[{"name":"jupyter","slug":"jupyter","count":1,"path":"api/tags/jupyter.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#obsidian-jupyter-book%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\"> Obsidian Jupyter Book插件</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"SD安装失败的总结","uid":"05b362c6dec32eeac664da3321842b99","slug":"python/SD安装失败的总结","date":"2024-03-14T07:45:09.045Z","updated":"2024-03-14T07:45:09.045Z","comments":true,"path":"api/articles/python/SD安装失败的总结.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" SD安装失败的总结 sd 安装过程 1.下载webui git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git 2.安装包下载太慢,可以指定清华源 -i http://pypi.tuna.tsi...","link":"","photos":[],"count_time":{"symbolsCount":897,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":117,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"哈佛大学的课程：“Python 数据科学简介”","uid":"519ee70fb3f13a4f693153edd0ae568d","slug":"python/哈佛大学的课程：“Python 数据科学简介”","date":"2024-03-14T07:45:09.042Z","updated":"2024-03-14T07:45:09.042Z","comments":true,"path":"api/articles/python/哈佛大学的课程：“Python 数据科学简介”.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":"https://i.loli.net/2020/05/01/gkihqEjXxJ5UZ1C.jpg","text":" 哈佛大学的课程：“Python 数据科学简介” 哈佛大学的课程：“Python 数据科学简介” 免费，但需要先熟悉 Python 才能学习本课程。 该课程适合初学者。它适合那些想要对机器学习和人工智能有基本了解的人。 该课程将涵盖其中一些主题： • 泛化和过度拟合 • 模型构建...","link":"","photos":[],"count_time":{"symbolsCount":323,"symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":117,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}