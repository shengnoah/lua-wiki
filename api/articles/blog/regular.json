{"title":"Graylog几种数据格式规范方法","uid":"b81e5d0679173671c6afd090f05d79cb","slug":"blog/regular","date":"2024-03-14T07:45:09.095Z","updated":"2024-03-14T07:45:09.095Z","comments":true,"path":"api/articles/blog/regular.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<p>Graylog对数据格式规范有很几种手段，其中最实用的三种:Split、GROK、Regular。</p>\n<h1>分割符号(Split)</h1>\n<p>Split：这个不用多介绍，就是利用分隔符切字段，最好理解。</p>\n<h1>JSON</h1>\n<p>JSON: JSON格式也是最简单，几乎不用配置，设备发过来JSON格式，直接按JSON格式解开就行了。</p>\n<h1>GROK模式</h1>\n<p>GROK：属于模块化，分装了一些现成的正则表达式，相当于给固定模式正则表达式起了别名。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%&#123;IPV4:SrcIP&#125;</span><br></pre></td></tr></table></figure>\n<p>通过这个GROK，获取某个字符串当中的IP。</p>\n<p>原则字符串，如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10.10.10.01:5678(test)-&gt;10.10.01.05:1235(test),</span><br></pre></td></tr></table></figure>\n<p>结果，如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SrcIP</span><br><span class=\"line\">    10.10.10.01</span><br></pre></td></tr></table></figure>\n<p>这其中的IPV4，用的就是GROK。</p>\n<h1>正则表达式（Regular）</h1>\n<p>GROK和Split的方法，都有自己的局限，而正则表达式，正弥补这两个方式的解决不了一些细节问题，或者能解决，但是比较麻烦。</p>\n<p>举例，在告警的IOC信息里，找到CVE号。</p>\n<p>原始数据,如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">XXXXXXXXXXXXXXXXXXXXXXX(CVE-2011-5007)XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX</span><br></pre></td></tr></table></figure>\n<p>接下来要做的，就是在这个长字符串中，找到：CVE-2011-5007，用如下的正侧表达式实现。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(?i)(cve-\\d&#123;4&#125;-\\d&#123;4,7&#125;)</span><br></pre></td></tr></table></figure>\n<p>结果：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CVE-2011-5007</span><br></pre></td></tr></table></figure>\n<p>以上就是几种，比较常见的数所规范化的手段。</p>\n<h2 id=\"取得-：-之间的数据。\">取得[：]之间的数据。</h2>\n<p>由我们自己创建的一些安全策略规则， 在发出的告警日志中，自定义输出的内容格式，比如我们假定要发送部门相关的信息：[DEP:IS]<br>\n像这种加了标签的数据，也可以用正则表达式进行定位这部分信息字段，[DEP:IS]对应的正则表达式，如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DEP:(.+?)]</span><br></pre></td></tr></table></figure>\n<p>这样就要以提取[DEP:IS]中的内容’IS’。</p>\n<p>如果想输出另外一个标签，比如[DB:MySQL]一样的模式就可以了。  想取出数据库类型，修改一下上面的正则表达式就行了。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DB:(.+?)]</span><br></pre></td></tr></table></figure>\n<p>规则很明显 ， 想加什么标签，在[:]中的:前面加标签名，在:符号加标签属性就行了。</p>\n<p>创建一条访问域名的suricata规则， 对于访问abc.com域名进行告警。</p>\n<p>下面的代码片段可以帮助你在 <a href=\"https://suricata-ids.org/\">Suricata</a> 上创建一条告警规则，用于监测 <code>abc.com</code> 域名的访问并报警：</p>\n<p>alert tcp any any -&gt; $HOME_NET any (msg:“Traffic from <a href=\"http://abc.com\">abc.com</a>”; content:“<a href=\"http://abc.com\">abc.com</a>”; http_host; sid:1000001; rev:1;)</p>\n<p>其中，</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-4\">\n<p><code>$HOME_NET</code> 部分表示监测内网中的访问行为。</p>\n</li>\n<li class=\"lvl-4\">\n<p><code>content:&quot;abc.com&quot;</code> 是用于匹配访问 <code>abc.com</code> 的 HTTP 请求 / 响应头中的域名内容。</p>\n</li>\n<li class=\"lvl-4\">\n<p><code>http_host</code> 表示只检查 HTTP 请求/响应中的 <code>host</code> 头部。</p>\n</li>\n<li class=\"lvl-4\">\n<p><code>sid</code>(规则 ID) 是一个辨识符，用于标识每条规则，便于日后查看这项规则的细节及更新。</p>\n</li>\n<li class=\"lvl-4\">\n<p><code>rev</code>表示规则的版本号，在发生了规则调整时将其 +1 即可。</p>\n</li>\n</ul>\n<p>如果你想要对所有访问 <code>abc.com</code> 的端口进行检测，可以将第一个协议 (‘TCP’) 改为 ‘Any’：</p>\n<p>alert any any any -&gt; $HOME_NET any (msg:“Traffic from <a href=\"http://abc.com\">abc.com</a>”; content:“<a href=\"http://abc.com\">abc.com</a>”; http_host; sid:1000001; rev:1;)</p>\n","text":"Graylog对数据格式规范有很几种手段，其中最实用的三种:Split、GROK、Regular。 分割符号(Split) Split：这个不用多介绍，就是利用分隔符切字段，最好理解。 JSON JSON: JSON格式也是最简单，几乎不用配置，设备发过来JSON格式，直接按JS...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"文章","slug":"文章","count":22,"path":"api/categories/文章.json"}],"tags":[{"name":"Graylog","slug":"Graylog","count":4,"path":"api/tags/Graylog.json"},{"name":"正则表达式","slug":"正则表达式","count":1,"path":"api/tags/正则表达式.json"},{"name":"GROK","slug":"GROK","count":1,"path":"api/tags/GROK.json"},{"name":"JSON","slug":"JSON","count":1,"path":"api/tags/JSON.json"},{"name":"Split","slug":"Split","count":1,"path":"api/tags/Split.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">分割符号(Split)</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">JSON</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">GROK模式</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">正则表达式（Regular）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%96%E5%BE%97-%EF%BC%9A-%E4%B9%8B%E9%97%B4%E7%9A%84%E6%95%B0%E6%8D%AE%E3%80%82\"><span class=\"toc-text\">取得[：]之间的数据。</span></a></li></ol></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"手机代理软件","uid":"00bd71ac36adab9def7848f7249016dc","slug":"blog/proxyman","date":"2024-03-14T07:45:09.095Z","updated":"2024-03-14T07:45:09.095Z","comments":true,"path":"api/articles/blog/proxyman.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"向网友们询问手机代理软件，大家推荐的： proxyman、charless。 ","link":"","photos":[],"count_time":{"symbolsCount":39,"symbolsTime":"1 mins."},"categories":[{"name":"文章","slug":"文章","count":22,"path":"api/categories/文章.json"}],"tags":[{"name":"大数据安全","slug":"大数据安全","count":2,"path":"api/tags/大数据安全.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"白帽子讲Web安全","uid":"32b9ddc7db8ff85b8d7bba8c3123eba0","slug":"blog/baimaozijianganquan","date":"2024-03-14T07:45:09.094Z","updated":"2024-03-14T07:45:09.094Z","comments":true,"path":"api/articles/blog/baimaozijianganquan.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"购买链接： 点击购买 作者： 吴翰清 内容简介： 在互联网时代，数据安全与个人隐私受到了前所未有的挑战，各种新奇的攻击技术层出不穷。如何才能更好地保护我们的数据？《白帽子讲Web安全》将带你走进web安全的世界，让你了解Web安全的方方面面。黑客不再变得神秘，攻击技术原来我也可以...","link":"","photos":[],"count_time":{"symbolsCount":398,"symbolsTime":"1 mins."},"categories":[{"name":"书籍","slug":"书籍","count":2,"path":"api/categories/书籍.json"}],"tags":[{"name":"Web安全","slug":"Web安全","count":2,"path":"api/tags/Web安全.json"},{"name":"电子工业出版社","slug":"电子工业出版社","count":1,"path":"api/tags/电子工业出版社.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}