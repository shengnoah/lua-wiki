{"title":"为什么Github返回304","uid":"3d4b7cd7c2f10275b6614520cd37bdce","slug":"blog/为什么Github返回304","date":"2024-03-14T06:15:59.713Z","updated":"2024-03-14T06:15:59.713Z","comments":true,"path":"api/articles/blog/为什么Github返回304.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"content":"<h1 id=\"为什么Github返回304\"><a href=\"#为什么Github返回304\" class=\"headerlink\" title=\"为什么Github返回304\"></a>为什么Github返回304</h1><p>为什么Github的Git Page服务总是返回304状态码</p>\n<p>当客户端向GitHub服务器发出请求时，服务器会检查请求中的条件，如果满足以下条件之一，则会返回304状态码：</p>\n<ol>\n<li>客户端发送的请求是一个GET请求。</li>\n<li>请求中包含了一个有效的If-None-Match或If-Modified-Since头字段。</li>\n<li>服务器上的资源自上次请求以来没有发生变化。</li>\n</ol>\n<p>返回304状态码表示资源未修改，服务器不会返回实际的资源内容。相反，它将在响应头中包含一个空的响应体，并告诉客户端使用其缓存副本。</p>\n<p>这样做有几个好处：</p>\n<ul>\n<li>减少了网络流量：如果资源没有更改，客户端无需下载整个响应体，从而减少了数据传输量。</li>\n<li>提高性能：客户端可以直接使用缓存副本而无需进行额外的网络请求。</li>\n<li>减轻服务器负载：不必每次都生成和传输完整的响应体。</li>\n</ul>\n<p>总之，返回304状态码是为了优化性能和提高效率。04</p>\n<p>为什么Github的Git Page服务总是返回304状态码</p>\n<p>GitHub的Git Page服务返回304状态码是因为它采用了缓存机制。当用户访问一个网页时，GitHub会检查该网页是否已经缓存，并通过比较请求中的If-Modified-Since头部字段和服务器上文件的最后修改时间来确定是否需要返回新的内容。</p>\n<p>如果服务器上的文件没有发生变化，则会返回304状态码，表示客户端可以使用本地缓存。这样可以减少带宽和服务器负载，并提高页面加载速度。</p>\n<p>只有当服务器上的文件发生了变化，或者用户明确要求刷新页面时，GitHub才会返回新的内容和200状态码。</p>\n<p>Github的 pages服务，为什么返回的页面是空白页面，上面什么也没有显示？</p>\n<p>有几个可能的原因导致Github Pages返回空白页面：</p>\n<ol>\n<li><p>没有正确配置Github Pages：在项目仓库的设置中，需要确保已启用Github Pages，并选择正确的分支和文件夹作为源代码和发布目录。</p>\n</li>\n<li><p>没有正确设置主页文件：默认情况下，Github Pages会寻找一个名为index.html的文件作为主页。确保你的仓库中有一个正确命名的主页文件，并且其内容是有效的HTML代码。</p>\n</li>\n<li><p>仓库没有发布任何内容：如果你的项目仓库中没有任何文件或代码，或者你还没有执行推送操作将本地更改推送到远程仓库，则Github Pages将返回空白页面。</p>\n</li>\n<li><p>页面存在错误或缺失资源：检查你的主页文件以及它所引用的任何资源（例如CSS、JavaScript文件）是否存在错误或缺失。可以在浏览器的开发者工具中查看控制台日志以获取更多信息。</p>\n</li>\n<li><p>缓存问题：在对项目进行更改后，可能需要等待一段时间才能看到更新后的页面。尝试清除浏览器缓存并重新加载页面。</p>\n</li>\n</ol>\n<p>如果以上方法都无法解决问题，请检查Github Pages服务状态以确定是否存在服务器方面的问题。</p>\n","text":"为什么Github返回304为什么Github的Git Page服务总是返回304状态码 当客户端向GitHub服务器发出请求时，服务器会检查请求中的条件，如果满足以下条件之一，则会返回304状态码： 客户端发送的请求是一个GET请求。 请求中包含了一个有效的If-None-Ma...","link":"","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"AIGC","slug":"AIGC","count":119,"path":"api/categories/AIGC.json"},{"name":"weibo","slug":"AIGC/weibo","count":59,"path":"api/categories/AIGC/weibo.json"}],"tags":[{"name":"weibo","slug":"weibo","count":62,"path":"api/tags/weibo.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88Github%E8%BF%94%E5%9B%9E304\"><span class=\"toc-text\">为什么Github返回304</span></a></li></ol>","author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"安全运营项目的工作方法","uid":"402564c39cfb4dc9fb7de384d537a2bc","slug":"blog/sec-operation","date":"2024-03-14T06:15:59.713Z","updated":"2024-03-14T06:15:59.713Z","comments":true,"path":"api/articles/blog/sec-operation.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":[],"text":"作者：李瑞 本文信息量巨大，阅读大约需要二十分钟左右，建议加关注收藏后阅读。 日常工作中对接研发同学的一次漏洞答疑，写代码优化敏感数据的识别统计指标，处理应急响应，安全BP发起弱口令治理，日常的补丁管理，组织大型的国家级“HVV”专项，都属于典型的安全运营类的项目范畴。 安全运营...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"文章","slug":"文章","count":22,"path":"api/categories/文章.json"}],"tags":[{"name":"安全运营","slug":"安全运营","count":4,"path":"api/tags/安全运营.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"AIGC与SOC安全运营","uid":"970462af9140406189e4ed4cf7e0e5fd","slug":"candylab/AIGC与SOC安全运营","date":"2024-03-14T06:15:59.713Z","updated":"2024-03-14T06:15:59.713Z","comments":true,"path":"api/articles/candylab/AIGC与SOC安全运营.json","keywords":"AIGC,LLM,糖果AIGC实验室","cover":null,"text":"1print(&quot;Hello World!&quot;) 安全SOC的是什么意思？ 安全SOC是指安全运营中心（Security Operations Center）的缩写，也被称为安全运维中心。它是一个专门负责监控、检测和应对网络安全威胁的组织机构或团队。安全SOC通过...","link":"","photos":[],"count_time":{"symbolsCount":637,"symbolsTime":"1 mins."},"categories":[{"name":"Sec","slug":"Sec","count":5,"path":"api/categories/Sec.json"},{"name":"AIGC","slug":"Sec/AIGC","count":1,"path":"api/categories/Sec/AIGC.json"}],"tags":[{"name":"AIGC","slug":"AIGC","count":6,"path":"api/tags/AIGC.json"}],"author":{"name":"安全书","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"《墨守之道-Web服务安全架构与实践》","socials":{"github":"https://github.com/shengnoah","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/3732639263","zhihu":"https://www.zhihu.com/people/openresty","csdn":"","juejin":"","customs":{}}}}}